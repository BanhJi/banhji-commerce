import { DefineComponent } from '../../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ToolbarItemState {
}
/**
 * @hidden
 */
export interface ToolbarItemComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ToolbarItemMethods {
    [key: string]: any;
    element: () => HTMLSpanElement | null;
}
/**
 * @hidden
 */
export interface ToolbarItemData {
}
/**
 * @hidden
 */
export interface ToolbarItemAll extends Vue, ToolbarItemMethods, ToolbarItemData, ToolbarItemComputed, ToolbarItemState {
}
declare let ToolbarItem: ComponentOptions<ToolbarItemAll, DefaultData<ToolbarItemData>, DefaultMethods<ToolbarItemAll>, ToolbarItemComputed, RecordPropsDefinition<{}>>;
declare const ToolbarItemVue3: DefineComponent<{}, any, ToolbarItemData, ToolbarItemComputed, ToolbarItemMethods, {}, {}, {}, string, {}, {}, {}>;
export { ToolbarItem, ToolbarItemVue3 };
