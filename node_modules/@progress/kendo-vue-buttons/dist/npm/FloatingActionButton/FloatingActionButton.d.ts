import { DefineComponent } from '../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { FloatingActionButtonProps } from './interfaces/FloatingActionButtonProps';
/**
 * @hidden
 */
export interface FloatingActionButtonMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FloatingActionButtonState {
    v3: boolean;
    target: any;
    currentRtl: boolean;
}
/**
 * @hidden
 */
export interface FloatingActionButtonData {
    currentOpened: boolean;
    currentFocused: boolean;
    focusedIndex: number;
}
/**
 * @hidden
 */
export interface FloatingActionButtonComputed {
    [key: string]: any;
    computedOpened: boolean;
}
/**
 * @hidden
 */
export interface FloatingActionButtonAll extends FloatingActionButtonMethods, FloatingActionButtonState, FloatingActionButtonData, FloatingActionButtonComputed, Vue {
}
/**
 * @hidden
 */
/**
 * Represents the default `FloatingActionButton` component.
 */
declare let FloatingActionButton: ComponentOptions<Vue, DefaultData<FloatingActionButtonData>, DefaultMethods<FloatingActionButtonAll>, FloatingActionButtonComputed, RecordPropsDefinition<FloatingActionButtonProps>>;
declare const FloatingActionButtonVue3: DefineComponent<FloatingActionButtonProps, any, FloatingActionButtonData, FloatingActionButtonComputed, FloatingActionButtonMethods, {}, {}, {}, string, FloatingActionButtonProps, FloatingActionButtonProps, {}>;
export { FloatingActionButton, FloatingActionButtonVue3 };
