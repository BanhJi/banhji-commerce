'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

var _DropDownTreeProps = require('./DropDownTreeProps');

var _DropDownTreeProps2 = _interopRequireDefault(_DropDownTreeProps);

var _Animation = require('./Animation');

var _Animation2 = _interopRequireDefault(_Animation);

var _Checkboxes = require('./Checkboxes');

var _Checkboxes2 = _interopRequireDefault(_Checkboxes);

var _Messages = require('./Messages');

var _Messages2 = _interopRequireDefault(_Messages);

var _Popup = require('./Popup');

var _Popup2 = _interopRequireDefault(_Popup);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    emits: {
        'update:modelValue': null,
        'kendowidgetready': null
    },
    props: _DropDownTreeProps2.default,
    model: {
        event: 'changemodel'
    },
    mixins: [_kendoBaseComponentsVueWrapper.KendoBaseComponent, _kendoBaseComponentsVueWrapper.KendoBaseDatasourceComponent, _Animation2.default, _Checkboxes2.default, _Messages2.default, _Popup2.default],
    mounted() {
        var that = this;

        kendo.jQuery(this.$el).kendoDropDownTree(that.widgetOptions);

        if (this.v3) {
            this.ready();
            this.$emit('kendowidgetready', this.kendoWidget());
        } else {
            this.$emit('kendowidgetready', this.kendoWidget());
        }

        that.kendoWidget().bind('change', function () {
            if (that.v3) {
                that.$emit('update:modelValue', that.kendoWidget().value());
            } else {
                that.$emit('changemodel', that.kendoWidget().value());
            }
        });
    },
    methods: {
        kendoWidget() {
            return kendo.jQuery(this.$el).getKendoDropDownTree();
        }
    }
};