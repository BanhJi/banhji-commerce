var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
}; // @ts-ignore


import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
import { DatePicker } from '@progress/kendo-vue-dateinputs'; // tslint:enable:max-line-length

var DateFilter = {
  name: 'KendoDateFilter',
  props: {
    filter: {
      type: Object,
      required: true
    }
  },
  // @ts-ignore
  setup: !gh ? undefined : function () {
    var v3 = !!gh;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var filter = this.$props.filter;
    return (// @ts-ignore
      h(DatePicker, {
        value: filter.value || null,
        attrs: this.v3 ? undefined : {
          value: filter.value || null
        },
        onChange: this.onChange,
        on: this.v3 ? undefined : {
          "change": this.onChange
        }
      })
    );
  },
  methods: {
    onChange: function onChange(event) {
      this.$emit('filterchange', {
        nextFilter: __assign(__assign({}, this.$props.filter), {
          value: event.value
        })
      });
    }
  }
};
var DateFilterVue3 = DateFilter;
export { DateFilter, DateFilterVue3 };