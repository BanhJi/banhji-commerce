import { DefineComponent } from '../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
declare type DefaultData<V> = object | ((this: V) => TableKeyboardNavigationProviderData);
/**
 * @hidden
 */
export interface TableKeyboardNavigationProviderMethods {
    [key: string]: any;
    getKeyboardNavigationAttributes: (id: string) => any;
    onComponentDidMount: (options: any) => void;
    onGetSnapshotBeforeUpdate: (options: any) => void;
    onComponentDidUpdate: (options: any) => void;
    onFocus: (event: any, options: any) => void;
    onKeyDown: (event: any, options: any) => void;
    generateMatrix: (options: any) => void;
    getLeafDataItems: () => any;
}
/**
 * @hidden
 */
export interface TableKeyboardNavigationProviderData {
    kbContext?: any;
    navigation?: any;
    scope?: any;
}
export interface TableKeyboardNavigationProviderAll extends Vue, TableKeyboardNavigationProviderMethods, TableKeyboardNavigationProviderData {
}
/**
 * A Vue component which provides a localization service.
 * Expects a language string as a property of the component.
 */
declare let TableKeyboardNavigationProvider: ComponentOptions<TableKeyboardNavigationProviderAll, DefaultData<TableKeyboardNavigationProviderData>, DefaultMethods<TableKeyboardNavigationProviderAll>, {}, RecordPropsDefinition<{}>>;
declare const TableKeyboardNavigationProviderVue3: DefineComponent<{}, any, TableKeyboardNavigationProviderData, {}, TableKeyboardNavigationProviderMethods, {}, {}, {}, string, {}, {}, {}>;
export { TableKeyboardNavigationProvider, TableKeyboardNavigationProviderVue3 };
