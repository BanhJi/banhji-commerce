import { DefineComponent } from '../../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TextFilterProps } from './TextFilter';
/**
 * The props of the EnumFilter component.
 */
export interface EnumFilterProps extends TextFilterProps {
    /**
     * A collection of text-value pairs passed to the EnumFilter DropDownList.
     */
    dataItems?: Array<{
        text: string;
        value: any;
    }>;
    /**
     * The defaultItem passed to the EnumFilter DropDownList.
     */
    defaultItem?: any;
}
/**
 * @hidden
 */
export interface EnumFilterState {
}
/**
 * @hidden
 */
export interface EnumFilterComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface EnumFilterMethods {
    [key: string]: any;
    onChange: (event: any) => void;
}
/**
 * @hidden
 */
export interface EnumFilterData {
}
/**
 * @hidden
 */
export interface EnumFilterAll extends Vue, EnumFilterMethods, EnumFilterData, EnumFilterComputed, EnumFilterState {
}
declare let EnumFilter: ComponentOptions<EnumFilterAll, DefaultData<EnumFilterData>, DefaultMethods<EnumFilterAll>, EnumFilterComputed, RecordPropsDefinition<EnumFilterProps>>;
declare const EnumFilterVue3: DefineComponent<EnumFilterProps, any, EnumFilterData, EnumFilterComputed, EnumFilterMethods, {}, {}, {}, string, EnumFilterProps, EnumFilterProps, {}>;
export { EnumFilter, EnumFilterVue3 };
