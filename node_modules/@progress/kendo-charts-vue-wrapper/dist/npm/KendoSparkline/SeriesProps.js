'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    props: {
        type: {
            type: String,
            default: undefined
        },
        dashType: {
            type: String,
            default: undefined
        },
        data: {
            type: Array,
            default: undefined
        },
        explodeField: {
            type: String,
            default: undefined
        },
        currentField: {
            type: String,
            default: undefined
        },
        targetField: {
            type: String,
            default: undefined
        },
        field: {
            type: String,
            default: undefined
        },
        name: {
            type: String,
            default: undefined
        },
        highlightBorderWidth: {
            type: Number,
            default: undefined,
            kComposite: 'highlight.border.width'
        },
        highlightBorderColor: {
            type: String,
            default: undefined,
            kComposite: 'highlight.border.color'
        },
        highlightBorderOpacity: {
            type: Number,
            default: undefined,
            kComposite: 'highlight.border.opacity'
        },
        highlightColor: {
            type: String,
            default: undefined,
            kComposite: 'highlight.color'
        },
        highlightOpacity: {
            type: Number,
            default: undefined,
            kComposite: 'highlight.opacity'
        },
        highlightVisible: {
            type: Boolean,
            default: undefined,
            kComposite: 'highlight.visible'
        },
        aggregate: [String, Function],
        axis: String,
        borderColor: { type: [String, Function], default: undefined,
            kComposite: 'border.color' },
        borderDashType: { type: [String, Function], default: undefined,
            kComposite: 'border.dashType' },
        borderOpacity: { type: [Number, Function], default: undefined,
            kComposite: 'border.opacity' },
        borderWidth: { type: [Number, Function], default: undefined,
            kComposite: 'border.width' },
        categoryField: String,
        color: [String, Function],
        colorField: String,
        connectorsColor: { type: String, default: undefined,
            kComposite: 'connectors.color' },
        connectorsPadding: { type: Number, default: undefined,
            kComposite: 'connectors.padding' },
        connectorsWidth: { type: Number, default: undefined,
            kComposite: 'connectors.width' },
        gap: Number,
        labelsAlign: { type: String, default: undefined,
            kComposite: 'labels.align' },
        labelsBackground: { type: [String, Function], default: undefined,
            kComposite: 'labels.background' },
        labelsBorderColor: { type: [String, Function], default: undefined,
            kComposite: 'labels.border.color' },
        labelsBorderDashType: { type: [String, Function], default: undefined,
            kComposite: 'labels.border.dashType' },
        labelsBorderWidth: { type: [Number, Function], default: undefined,
            kComposite: 'labels.border.width' },
        labelsColor: { type: [String, Function], default: undefined,
            kComposite: 'labels.color' },
        labelsDistance: { type: Number, default: undefined,
            kComposite: 'labels.distance' },
        labelsFont: { type: [String, Function], default: undefined,
            kComposite: 'labels.font' },
        labelsFormat: { type: [String, Function], default: undefined,
            kComposite: 'labels.format' },
        labelsMargin: { type: [Number, Object], default: undefined,
            kComposite: 'labels.margin' },
        labelsPadding: { type: [Number, Object], default: undefined,
            kComposite: 'labels.padding' },
        labelsPosition: { type: [String, Function], default: undefined,
            kComposite: 'labels.position' },
        labelsTemplate: { type: [String, Function], default: undefined,
            kComposite: 'labels.template' },
        labelsVisible: { type: [Boolean, Function], default: undefined,
            kComposite: 'labels.visible' },
        line: String,
        lineColor: { type: String, default: undefined,
            kComposite: 'line.color' },
        lineOpacity: { type: Number, default: undefined,
            kComposite: 'line.opacity' },
        lineWidth: { type: String, default: undefined,
            kComposite: 'line.width' },
        lineStyle: { type: String, default: undefined,
            kComposite: 'line.style' },
        markersBackground: { type: [String, Function], default: undefined,
            kComposite: 'markers.background' },
        markersBorder: { type: Function, default: undefined,
            kComposite: 'markers.border' },
        markersBorderColor: { type: [String, Function], default: undefined,
            kComposite: 'markers.border.color' },
        markersBorderWidth: { type: [Number, Function], default: undefined,
            kComposite: 'markers.border.width' },
        markersSize: { type: [Number, Function], default: undefined,
            kComposite: 'markers.size' },
        markersType: { type: [String, Function], default: undefined,
            kComposite: 'markers.type' },
        markersVisible: { type: [Boolean, Function], default: undefined,
            kComposite: 'markers.visible' },
        markersRotation: { type: [Number, Function], default: undefined,
            kComposite: 'markers.rotation' },
        missingValues: String,
        kStyle: String,
        negativeColor: String,
        opacity: Number,
        overlayGradient: { type: String, default: undefined,
            kComposite: 'overlay.gradient' },
        padding: Number,
        size: Number,
        startAngle: Number,
        spacing: Number,
        stack: [Boolean, String],
        stackType: { type: String, default: undefined,
            kComposite: 'stack.type' },
        stackGroup: { type: String, default: undefined,
            kComposite: 'stack.group' },
        tooltipBackground: { type: String, default: undefined,
            kComposite: 'tooltip.background' },
        tooltipBorderColor: { type: String, default: undefined,
            kComposite: 'tooltip.border.color' },
        tooltipBorderWidth: { type: Number, default: undefined,
            kComposite: 'tooltip.border.width' },
        tooltipColor: { type: String, default: undefined,
            kComposite: 'tooltip.color' },
        tooltipFont: { type: String, default: undefined,
            kComposite: 'tooltip.font' },
        tooltipFormat: { type: String, default: undefined,
            kComposite: 'tooltip.format' },
        tooltipPadding: { type: [Number, Object], default: undefined,
            kComposite: 'tooltip.padding' },
        tooltipTemplate: { type: [String, Function], default: undefined,
            kComposite: 'tooltip.template' },
        tooltipVisible: { type: Boolean, default: undefined,
            kComposite: 'tooltip.visible' },
        width: Number,
        targetLineWidth: { type: [Object, Function], default: undefined,
            kComposite: 'target.line.width' },
        targetColor: { type: [String, Function], default: undefined,
            kComposite: 'target.color' },
        targetBorder: { type: Function, default: undefined,
            kComposite: 'target.border' },
        targetBorderColor: { type: [String, Function], default: undefined,
            kComposite: 'target.border.color' },
        targetBorderDashType: { type: [String, Function], default: undefined,
            kComposite: 'target.border.dashType' },
        targetBorderWidth: { type: Number, default: undefined,
            kComposite: 'target.border.width' },
        notesPosition: { type: String, default: undefined,
            kComposite: 'notes.position' },
        notesIconBackground: { type: String, default: undefined,
            kComposite: 'notes.icon.background' },
        notesIconBorderColor: { type: String, default: undefined,
            kComposite: 'notes.icon.border.color' },
        notesIconBorderWidth: { type: Number, default: undefined,
            kComposite: 'notes.icon.border.width' },
        notesIconSize: { type: Number, default: undefined,
            kComposite: 'notes.icon.size' },
        notesIconType: { type: String, default: undefined,
            kComposite: 'notes.icon.type' },
        notesIconVisible: { type: Boolean, default: undefined,
            kComposite: 'notes.icon.visible' },
        notesLabelBackground: { type: String, default: undefined,
            kComposite: 'notes.label.background' },
        notesLabelBorderColor: { type: String, default: undefined,
            kComposite: 'notes.label.border.color' },
        notesLabelBorderDashType: { type: String, default: undefined,
            kComposite: 'notes.label.border.dashType' },
        notesLabelBorderWidth: { type: Number, default: undefined,
            kComposite: 'notes.label.border.width' },
        notesLabelColor: { type: String, default: undefined,
            kComposite: 'notes.label.color' },
        notesLabelFont: { type: String, default: undefined,
            kComposite: 'notes.label.font' },
        notesLabelTemplate: { type: [String, Function], default: undefined,
            kComposite: 'notes.label.template' },
        notesLabelVisible: { type: Boolean, default: undefined,
            kComposite: 'notes.label.visible' },
        notesLabelRotation: { type: Number, default: undefined,
            kComposite: 'notes.label.rotation' },
        notesLabelFormat: { type: String, default: undefined,
            kComposite: 'notes.label.format' },
        notesLabelPosition: { type: String, default: undefined,
            kComposite: 'notes.label.position' },
        notesLineWidth: { type: Number, default: undefined,
            kComposite: 'notes.line.width' },
        notesLineColor: { type: String, default: undefined,
            kComposite: 'notes.line.color' },
        notesLineLength: { type: Number, default: undefined,
            kComposite: 'notes.line.length' },
        zIndex: Number
    }
};