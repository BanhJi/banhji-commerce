'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _kendoBaseComponentsVueWrapper = require('@progress/kendo-base-components-vue-wrapper');

var _EditorProps = require('./EditorProps');

var _EditorProps2 = _interopRequireDefault(_EditorProps);

var _KendoEditorTool = require('../KendoEditorTool');

var _KendoEditorTool2 = _interopRequireDefault(_KendoEditorTool);

var _Deserialization = require('./Deserialization');

var _Deserialization2 = _interopRequireDefault(_Deserialization);

var _FileBrowser = require('./FileBrowser');

var _FileBrowser2 = _interopRequireDefault(_FileBrowser);

var _ImageBrowser = require('./ImageBrowser');

var _ImageBrowser2 = _interopRequireDefault(_ImageBrowser);

var _Immutables = require('./Immutables');

var _Immutables2 = _interopRequireDefault(_Immutables);

var _Messages = require('./Messages');

var _Messages2 = _interopRequireDefault(_Messages);

var _PasteCleanup = require('./PasteCleanup');

var _PasteCleanup2 = _interopRequireDefault(_PasteCleanup);

var _Pdf = require('./Pdf');

var _Pdf2 = _interopRequireDefault(_Pdf);

var _Resizable = require('./Resizable');

var _Resizable2 = _interopRequireDefault(_Resizable);

var _Serialization = require('./Serialization');

var _Serialization2 = _interopRequireDefault(_Serialization);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    emits: {
        'update:modelValue': null,
        'kendowidgetready': null
    },
    props: _EditorProps2.default,
    mixins: [_kendoBaseComponentsVueWrapper.KendoBaseComponent, _Deserialization2.default, _FileBrowser2.default, _ImageBrowser2.default, _Immutables2.default, _Messages2.default, _PasteCleanup2.default, _Pdf2.default, _Resizable2.default, _Serialization2.default],
    mounted: function mounted() {
        var that = this;

        that._resolveChildren();

        kendo.jQuery(that.$el).kendoEditor(that.widgetOptions);

        if (this.v3) {
            this.ready();
            this.$emit('kendowidgetready', this.kendoWidget());
        } else {
            this.$emit('kendowidgetready', this.kendoWidget());
        }

        that.kendoWidget().bind('change', function () {
            if (that.v3) {
                that.$emit('update:modelValue', that.kendoWidget().value());
            } else {
                that.$emit('changemodel', that.kendoWidget().value());
            }
        });
    },

    methods: {
        kendoWidget: function kendoWidget() {
            return kendo.jQuery(this.$el).getKendoEditor();
        },
        _resolveChildren: function _resolveChildren() {
            this.resolveChildren('tools', _KendoEditorTool2.default.name);
        }
    },
    model: {
        event: 'changemodel'
    }
};