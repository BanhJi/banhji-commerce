{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Confirm.vue","mtime":1641438291872},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Confirm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\">\n            <p class=\"font_16\">{{$t('please_make_another_review')}}</p>\n             <v-simple-table>\n                <template v-slot:default>\n                    <tbody>\n                    <tr>\n                        <td class=\"text-bold text-uppercase\">{{$t('financial_institutions')}}</td>\n                        <td>:</td>\n                        <td>{{ bank.bankName ? bank.bankName: ''}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"text-bold text-uppercase\">{{$t('account_number')}}</td>\n                        <td>:</td>\n                        <td>{{ bankAccountNumber.account || ''}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"text-bold text-uppercase\">{{$t('number_of_employees')}}</td>\n                        <td>:</td>\n                        <td>{{batchPayment.totalBatch}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"green text-uppercase white--text text-bold\">{{$t('total_amount')}}</td>\n                        <td class=\"green\">:</td>\n                        <td class=\"green white--text text-right text-bold\">{{format(batchPayment.batchAmount)}}</td>\n                    </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"false\"\n                type=\"loading\"\n                :myLoading=\"true\"/>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from '@/components/Loading'\nimport kendo from \"@progress/kendo-ui\"\nimport Helper from \"@/helper.js\";\nimport {JournalModel,\n    JournalEntryModel,\n    AccountModel,\n\tCurrencyModel,} from \"@/scripts/model/AppModels\";\nconst { EntityType, } = require(\"@/scripts/default_setup/Collections\");\nconst payrollHandler    = require(\"@/scripts/payrollHandler\")\nconst settingsHandler   = require(\"@/scripts/settingsHandler\")\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default({\n    props:['batch'],\n    data() {\n        return {\n            showLoading:    true,\n            batchPayment:   [],\n            bank:           {} ,\n            bankAccount:    {},\n            bankAccountNumber: {},\n            suffix:         '',\n            batchs:         [],\n            resultJournals: [],\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            prefix_format: ''\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n    },\n    methods:{\n        format(val){\n            return kendo.toString(val,'c2')\n        },\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        loadBatchSingle(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    payrollHandler.getBatchSingle(this.$route.params.id).then(res => {\n                        if (res.statusCode === 200) {\n                            let result = res.data\n                            this.batchPayment = result[0]\n                            this.bank = this.batchPayment.bank\n                            this.bankAccount = this.batchPayment.bankAccount\n                            if(this.bankAccount){\n                                this.bankAccountNumber  = this.bankAccount.account\n                            }\n                            this.loadBatchItem(this.batchPayment)\n                        }\n                    })\n                }, 300)\n            })\n        },\n        loadBatchItem(result){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            let result = res.data\n                            this.batchs  = result\n                            this.generateNumber()\n                            this.loadJournal()\n                        }\n                    })\n                }, 300)\n            })\n        },\n        calculateJournal(){\n            let batchs          = this.batchs\n            let segmentAR = []\n            batchs.forEach(o=>{\n                window.console.log(o,'o')\n                const segment           = o.segment\n                // const benefitAccount    = o.benefitAccount\n                segment.forEach(n=> {\n                    n['currency']               = o.currency,\n                    n['netPay']                 = o.netPay,\n                    n['amountPay']              = o.amountPay,\n                    n['taxBenefit']             = o.taxBenefit,\n                    n['taxSalaryUS']            = o.taxSalaryUS,\n                    n['totalBenefit']           = o.totalBenefit,\n                    n['payrollLiabilitie']      = o.payrollLiabilitie,\n                    n['benefitAccount']         = o.benefitAccount\n                    segmentAR.push(n)\n                })\n                \n            })\n            let helper = {}\n            let resultSegment   = segmentAR.reduce(function(r, o){\n                let key = o.component.id + '-' + o.component.name;\n                if(!helper[key]) {\n                    helper[key] = Object.assign({}, o); // create a copy of o\n                    r.push(helper[key]);\n                } else {\n                    helper[key].percentage          += parseFloat(o.percentage);\n                    helper[key].salary              += parseFloat(o.salary);\n                    helper[key].netPay              += parseFloat(o.netPay);\n                    helper[key].amountPay           += parseFloat(o.amountPay);\n                    helper[key].taxBenefit          += parseFloat(o.taxBenefit);\n                    helper[key].taxSalary           += parseFloat(o.taxSalary);\n                    helper[key].totalBenefit        += parseFloat(o.totalBenefit);\n                }\n                return r;\n            },[]);\n            let journals        =[];\n            let bankAccount     = this.bankAccount\n            // window.console.log('this.bankAccount',this.bankAccount)\n            resultSegment.forEach(function(p){\n                // window.console.log(p,'payrollLiabilitie')\n                journals.push(\n                    new JournalEntryModel({\n                        description:          p.payrollLiabilitie.name,\n                        account:              new AccountModel(p.payrollLiabilitie),\n                        exchange_rate:        1,\n                        currency:             new CurrencyModel(p.currency),\n                        amount:               p.amountPay, // Dr\n                        class_1_uuid:         p.component.id\n                    }),\n                    new JournalEntryModel({\n                        description:          bankAccount.bankName,\n                        account:              new AccountModel(bankAccount.account.chartAcount),\n                        exchange_rate:        1,\n                        currency:             new CurrencyModel(p.currency),\n                        amount:               p.amountPay * -1, // Cr\n                        class_1_uuid:         p.component.id\n                    }),\n                )\n            })\n            this.payrollAccount = resultSegment\n            this.journalLine = journals\n            if(this.payrollAccount && this.journalLine){\n                this.journal()\n            }\n        },\n        journal(){\n            let payrollAcc =  this.payrollAccount\n            let journals = this.journalLine\n            let batchPayment = this.batchPayment\n            let journal_ = []\n            let prefix_format = this.prefix_format\n            payrollAcc.forEach(function(pa){\n                let line = journals.filter(r => r.class_1_uuid === pa.component.id ) \n                journal_.push(new JournalModel({\n                    description:                  pa.payrollLiabilitie.name || 'Payroll & Employee Benefit Liabilities',\n                    number:                       batchPayment.referenceNumber,\n                    journal_date:                 Helper.toISODate(new Date()),\n                    month_of:                     Helper.toISODate(new Date(batchPayment.monthOf).toISOString().substr(0, 7)),//'2021-02-01',   \n                    journal_type:                 EntityType.AUTO_JOURNAL,\n                    transaction_type:             'Payroll Payment',\n                    referral_transaction_uuid:    batchPayment.id,\n                    journal_entries:              line,\n                    segment_uuid:                 pa.component.id || '',\n                    prefix_format:                prefix_format || '',\n                    base_currency:                pa.currency\n                }))\n            })\n\n            let result_journal = []\n            if(this.resultJournals.length > 0){\n                let jNal = this.resultJournals\n                journal_.forEach(res =>{\n                    let journalAR =  jNal.filter(n => n.segment_uuid = res.segment_uuid)\n                    let journalUuid = journalAR[0].uuid\n                    // window.console.log(4,journalUuid)\n                    let created_date = journalAR[0].created_date\n                    result_journal.push(new JournalModel( {\n                        uuid:                         journalUuid,\n                        number:                       res.number,\n                        created_date:                 created_date,\n                        journal_date:                 res.journal_date,\n                        month_of:                     res.month_of,\n                        journal_type:                 res.journal_type,\n                        transaction_type:             res.transaction_type,\n                        segment_uuid:                 res.segment_uuid,\n                        journal_entries:              res.journal_entries,\n                        prefix_format:                res.prefix_format,\n                        base_currency:                res.base_currency,\n                    }))\n                })\n                this.journal_data = result_journal\n                window.console.log(5,this.journal_data)\n            }else{\n                this.journal_data = journal_\n            }\n        },\n        saveSpets(){\n            if(this.journal_data.length > 0){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            id:                 this.$route.params.id ? this.$route.params.id : '',\n                            monthOf:            this.batchPayment.monthOf,\n                            created:            this.batchPayment.created,\n                            bank:               this.batchPayment.bank,\n                            bankAccount:        this.batchPayment.bankAccount,\n                            balanceInBanhJi:    this.batchPayment.balanceInBanhJi,\n                            batchItem:          this.batchs,\n                            date:               this.batchPayment.date,\n                            batchAmount:        this.batchPayment.batchAmount,\n                            totalBatch:         this.batchPayment.totalBatch,\n                            amountInWord:       this.batchPayment.amountInWord,\n                            referencePayroll:   this.batchPayment.referencePayroll,\n                            confirm:            'done',\n                            suffix:             this.suffix,\n                            payNumber:          this.payNumber,\n                            abbr:               this.payNumber.abbr,\n                            lastNumber:         this.lastNumber,\n                            step:               3,\n                            status:             1,\n                            raw_journal:        this.journal_data,\n                            loggedUser:         this.loggedUser\n                        }\n                        window.console.log('data', data)\n                        payrollHandler.createBatchPayment(data).then(response => {\n                            if (response.data.statusCode === 201) {\n                                this.$snotify.success('Success')\n                                this.loadSuccess(response.data.statusCode)\n                                this.close()\n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }, 300);\n                })\n            }else{\n                this.$snotify.error('Something went wrong')\n            }\n        },\n        close(){\n            window.history.go(-2)\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        loadPrefixes() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getPrefixes().then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.prefixList = result.filter(p => p.type =='payroll_payment')\n                            this.prefix = this.prefixList[0]\n                            this.payNumber = this.prefix\n                            const lastNumber = this.zeroPad(parseInt(0), this.prefix.format)\n                            this.prefix_format = (this.prefix.abbr + this.prefix.numberSeparator + this.prefix.structure + this.prefix.numberSeparator + lastNumber + '@' + this.prefix.sequcencing)\n                        }\n                    })\n                }, 300)\n            })\n        },\n        generateNumber() {\n            let sequcencing = ''\n            if(this.payNumber.sequcencing ==\"Year\"){\n                sequcencing = new Date().toISOString().substr(0, 4)\n            }else if(this.payNumber.sequcencing ==\"Month\"){\n                sequcencing = new Date().toISOString().substr(0, 7)\n            }else{\n                sequcencing = ''\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let data = {\n                        abbr:           this.payNumber.abbr,\n                        structure:      this.payNumber.structure,\n                        date:           new Date(),\n                        type:           'payroll_payment',\n                        pkId:           'ppm-',\n                        sequcencing:    sequcencing\n                    }\n                    payrollHandler.getPrefixNumber(data).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            this.showLoading = false;\n                            const result = res.data.data\n                            const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                            this.suffix = result.suffix\n                            this.lastNumber = lastNumber\n                        }\n                    })\n                }, 300);\n            })\n        },\n        goBack(){\n            window.history.go(-1)\n        },\n        async loadJournal(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getPayrollJournal(this.$route.params.id).then(res => {\n                        if (res.statusCode === 200) {\n                            this.resultJournals = res.data\n                        }\n                        this.calculateJournal()\n                    })\n                }, 300)\n            })\n        }\n    },\n    async mounted(){\n        await this.loadBatchSingle()\n        await this.loadPrefixes()\n        await this.loadJournal()\n    },\n    watch:{\n        batch(){\n           if(this.batch !== undefined){\n                this.loadBatchSingle()\n                this.loadJournal()\n            }\n        }\n    }\n})\n</script>\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: #f44336 !important;\n    }\n\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n        border-top: thin solid #ddd;\n        border-bottom: thin solid #ddd;\n        border-radius: 0 !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n</style>\n"],"sourceRoot":"src/views/payroll/payment/bank_payment"}]}