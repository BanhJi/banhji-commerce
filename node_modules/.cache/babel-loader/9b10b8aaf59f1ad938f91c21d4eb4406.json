{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/ProductCategoryDropDownList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/ProductCategoryDropDownList.vue","mtime":1638931253145},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ProductCategoryDropDownList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <input :id=\"id\" style=\"width: 100%; margin-top: 4px\"/>\n    </div>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport CategoryModel from \"@/scripts/model/Categories\";\n\nconst apiUrl = require('@/api/product');\n\nexport default {\n    name: 'CategoryDropDownList',\n    components: {},\n    props: {\n        initCategory: {\n            type: Object,\n        },\n        initModel: {\n            type: Object\n        }\n    },\n    data() {\n        return {\n            category: new CategoryModel({}),\n            selectValue: {},\n            categoryList: [],\n            type: '',\n            url: apiUrl.category_get,\n            id: 'ddlProduct_' + Math.floor(Math.random() * 1000)\n        }\n    },\n    // computed: mapState({\n    //     segments: state => state.segments.all\n    // }),\n    methods: {\n        async onChange(ev) {\n            if (ev) {\n                const selectedIndex = ev.sender.select();\n                const selectedItem = ev.sender.dataItem(selectedIndex).toJSON();\n                this.category = new CategoryModel(selectedItem);\n                this.$emit('onChange', this.category);\n                // await this.selectItem(this.initModel)\n            }\n        },\n        bindData(url) {\n            kendo.jQuery('#' + this.id).kendoDropDownList({\n                dataTextField: \"name\",\n                dataValueField: \"id\",\n                dataSource: new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                        },\n                        dataType: \"json\",\n                    },\n                    schema: {\n                        model: {\n                            id: \"id\"\n                        },\n                        data: (response) => {\n                            // const res = response.data.filter(row => row.type.name === \"Product\")\n                            // if (res.length > 0) {\n                            //     const row = res[0]\n                            //     // this.category = row\n                            //     // const dropId = kendo.jQuery('#' + this.id).data(\"kendoDropDownList\");\n                            //     // dropId.value(row);\n                            //\n                            //     this.selectItem(row)\n                            //     // window.console.log(' this.category = row', this.category)\n                            // }\n                            this.selectItem()\n                            return response.data.filter(row => row.type.name === \"Product\")\n                        },\n                    },\n                    // group: {}//{field: 'type.name'}\n                }),\n                // dataBound: this.onDataBound,\n                change: this.onChange,\n                filter: 'contains',\n                optionLabel: '-- Select --'\n            });\n            // this.selectItem()\n        },\n        async selectItem() {\n            // do stuff\n            window.console.log('selectItem', this.initModel)\n            if (this.initModel) {\n                const id = this.initModel.id || ''\n                if (id !== '') {\n                    const dropId = kendo.jQuery('#' + this.id).data(\"kendoDropDownList\")\n                    dropId.value(id)\n                    // dropId.trigger(\"change\")\n                }\n            }\n        },\n        async onDataBound() {\n            // // do stuff\n            // window.console.log('onDataBound', this.initModel)\n            // if (this.initModel) {\n            //     const id = this.initModel.id || ''\n            //     if (id !== '') {\n            //         const dropId = kendo.jQuery('#' + this.id).data(\"kendoDropDownList\")\n            //         dropId.value(id)\n            //         dropId.trigger(\"change\")\n            //     }\n            // }\n        }\n    },\n    watch: {\n        initCategory() {\n            this.category = this.initCategory;\n        },\n        initModel() {\n            if (this.selectValue) {\n                this.selectValue = this.initModel;\n                this.selectItem()\n            }\n        },\n    },\n    async created() {\n        // this.loadData(this.url);\n    },\n    async mounted() {\n        /* Initial obj */\n        this.bindData(this.url);\n        this.category = this.initCategory;\n        this.selectValue = this.initModel;\n        // this.type = this.initType;\n        // this.$emit('onChange', this.pmOption);\n        // create DropDownList from input HTML element\n        // await this.loadData('', this.supBaseUrl);\n    }\n}\n</script>"],"sourceRoot":"src/components/dropdownlist"}]}