{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/Analysis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/Analysis.vue","mtime":1640595536782},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWFjY291bnRpbmctd2ViLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBrZW5kbyBmcm9tICJAcHJvZ3Jlc3Mva2VuZG8tdWkiOwppbXBvcnQgeyBpMThuIH0gZnJvbSAiQC9pMThuIjsgLy8gaW1wb3J0IEhlbHBlciBmcm9tICJAL2hlbHBlci5qcyI7CgppbXBvcnQgQmFsYW5jZVNoZWV0QW5hbHlzaXNNb2RlbCBmcm9tICJAL3NjcmlwdHMvbW9kZWwvYWNjb3VudGluZy9CYWxhbmNlU2hlZXRBbmFseXNpcyI7CmltcG9ydCB7IGRhdGFTdG9yZSB9IGZyb20gIkAvb2JzZXJ2YWJsZS9zdG9yZSI7Cgp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCJAL3NjcmlwdHMvQXBwSGFuZGxlcnMiKSwKICAgIGluY29tZVN0YXRlbWVudEhhbmRsZXIgPSBfcmVxdWlyZS5pbmNvbWVTdGF0ZW1lbnRIYW5kbGVyOwoKdmFyIE9yZGVyTnVtYmVyUEwgPSByZXF1aXJlKCJAL3NjcmlwdHMvZGVmYXVsdF9zZXR1cC9PcmRlck51bWJlclBMLmpzIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTG9hZGluZ01lOiBmdW5jdGlvbiBMb2FkaW5nTWUoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoIkAvY29tcG9uZW50cy9Mb2FkaW5nIik7CiAgICB9LAogICAgImFwcC1tb250aC1waWNrZXIiOiBmdW5jdGlvbiBhcHBNb250aFBpY2tlcigpIHsKICAgICAgcmV0dXJuIGltcG9ydCgiQC9jb21wb25lbnRzL2N1c3RvbV90ZW1wbGF0ZXMvTW9udGhQaWNrZXIiKTsKICAgIH0sCiAgICAiYXBwLXJlcG9ydGluZy1sYW5ndWFnZSI6IGZ1bmN0aW9uIGFwcFJlcG9ydGluZ0xhbmd1YWdlKCkgewogICAgICByZXR1cm4gaW1wb3J0KCJAL2NvbXBvbmVudHMva2VuZG9fdGVtcGxhdGVzL1JlcG9ydGluZ0xhbmd1YWdlRHJvcERvd25MaXN0Iik7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYmFzZU1vbnRoOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDcpLAogICAgICBjb21wYXJlTW9udGg6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgNyksCiAgICAgIHN0YXRlbWVudExpc3Q6IFtdLAogICAgICAvLyBSZXBvcnRpbmcgTGFuZ3VhZ2UKICAgICAgcmVwb3J0aW5nTGFuZ3VhZ2U6ICJlbmdsaXNoIiwKICAgICAgZmllbGROYW1lOiAibmFtZSIsCiAgICAgIGZpZWxkVHlwZTogInR5cGUiLAogICAgICAvLyBMb2RpbmdNZQogICAgICBzaG93TG9hZGluZzogZmFsc2UsCgogICAgICAvKiBLRU5ETyAqLwogICAgICBjb2x1bW5zOiBbXSwKICAgICAgc29ydERlZmluaXRpb246IHsKICAgICAgICBmaWVsZDogIm51bWJlciIsCiAgICAgICAgZGlyOiAiYXNjIgogICAgICB9LAogICAgICBncm91cERlZmluaXRpb246IFtdLAogICAgICBhZ2dyZWdhdGVEZWZpbml0aW9uOiBbewogICAgICAgIGZpZWxkOiAiYmFzZUFtb3VudCIsCiAgICAgICAgYWdncmVnYXRlOiAic3VtIgogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJjb21wYXJlQW1vdW50IiwKICAgICAgICBhZ2dyZWdhdGU6ICJzdW0iCiAgICAgIH1dLAogICAgICBzY2hlbWFEZWZpbml0aW9uOiB7CiAgICAgICAgbW9kZWw6IHsKICAgICAgICAgIGlkOiAiYWNjb3VudFVVSUQiCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8gU2VhcmNoIGpvdXJuYWxzCiAgICBzZWFyY2g6IGZ1bmN0aW9uIHNlYXJjaCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRzLCBibSwgY20sIGJtTGFzdERheSwgY21MYXN0RGF5LCBiYXNlTW9udGhJUywgY29tcGFyZU1vbnRoSVMsIGcsIHRvdGFsUmV2ZW51ZSwgazsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBFbXB0eSBkYXRhU291cmNlCiAgICAgICAgICAgICAgICBkcyA9IF90aGlzLiRyZWZzLnN0YXRlbWVudERTLmtlbmRvV2lkZ2V0KCk7CiAgICAgICAgICAgICAgICBkcy5kYXRhKFtdKTsKICAgICAgICAgICAgICAgIGJtID0gbmV3IERhdGUoX3RoaXMuYmFzZU1vbnRoKSwgY20gPSBuZXcgRGF0ZShfdGhpcy5jb21wYXJlTW9udGgpOwogICAgICAgICAgICAgICAgLyogU2V0IHRvIGRheSAxICovCgogICAgICAgICAgICAgICAgYm0uc2V0RGF0ZSgxKTsKICAgICAgICAgICAgICAgIGNtLnNldERhdGUoMSk7CiAgICAgICAgICAgICAgICAvKiBMYXN0IGRheSBvZiB0aGUgbW9udGggKi8KCiAgICAgICAgICAgICAgICBibUxhc3REYXkgPSBuZXcgRGF0ZShibS5nZXRGdWxsWWVhcigpLCBibS5nZXRNb250aCgpICsgMSwgMCksIGNtTGFzdERheSA9IG5ldyBEYXRlKGNtLmdldEZ1bGxZZWFyKCksIGNtLmdldE1vbnRoKCkgKyAxLCAwKTsgLy8gUXVlcnkKCiAgICAgICAgICAgICAgICBfdGhpcy5zaG93TG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBpbmNvbWVTdGF0ZW1lbnRIYW5kbGVyLmdldEluY29tZVN0YXRlbWVudCh7CiAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIHN0YXJ0X2RhdGU6IGtlbmRvLnRvU3RyaW5nKGJtLCAieXl5eS1NTS1kZCIpICsgIlQwMDowMDowMC4wMDBaIiwKICAgICAgICAgICAgICAgICAgICBlbmRfZGF0ZToga2VuZG8udG9TdHJpbmcoYm1MYXN0RGF5LCAieXl5eS1NTS1kZCIpICsgIlQyMzo1OTo1OS45OTlaIiwKICAgICAgICAgICAgICAgICAgICBncm91cF9ieTogIjEiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBiYXNlTW9udGhJUyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICByZXR1cm4gaW5jb21lU3RhdGVtZW50SGFuZGxlci5nZXRJbmNvbWVTdGF0ZW1lbnQoewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBzdGFydF9kYXRlOiBrZW5kby50b1N0cmluZyhjbSwgInl5eXktTU0tZGQiKSArICJUMDA6MDA6MDAuMDAwWiIsCiAgICAgICAgICAgICAgICAgICAgZW5kX2RhdGU6IGtlbmRvLnRvU3RyaW5nKGNtTGFzdERheSwgInl5eXktTU0tZGQiKSArICJUMjM6NTk6NTkuOTk5WiIsCiAgICAgICAgICAgICAgICAgICAgZ3JvdXBfYnk6ICIxIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgIGNvbXBhcmVNb250aElTID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICAvKiBHcm91cGluZyAqLwogICAgICAgICAgICAgICAgZyA9IHt9LCB0b3RhbFJldmVudWUgPSAwOwogICAgICAgICAgICAgICAgLyogQmFzZSBNb250aCBEYXRhICovCgogICAgICAgICAgICAgICAgYmFzZU1vbnRoSVMuZGF0YS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICB2YXIgZW50cnkgPSBfdGhpcy5hcHBseUluY29tZVN0YXRlbWVudFJ1bGUodmFsdWUpOwoKICAgICAgICAgICAgICAgICAgZW50cnkuYmFzZUFtb3VudCA9IHZhbHVlLmJhbGFuY2U7CiAgICAgICAgICAgICAgICAgIC8qIFN1bSBSZXZlbnVlICovCgogICAgICAgICAgICAgICAgICBpZiAoZW50cnkuZ3JvdXBOYXR1cmUudG9Mb3dlckNhc2UoKSA9PT0gInJldmVudWUiKSB7CiAgICAgICAgICAgICAgICAgICAgdG90YWxSZXZlbnVlICs9IGVudHJ5LmJhbGFuY2U7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHZhciBnbmFtZSA9IFN0cmluZyhlbnRyeS5hY2NvdW50VVVJRCkgKyBTdHJpbmcoZW50cnkuYWNjb3VudF90eXBlX251bWJlcik7CiAgICAgICAgICAgICAgICAgIGdbZ25hbWVdID0gZW50cnk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIC8qIENvbXBhcmUgTW9udGggRGF0YSAqLwoKICAgICAgICAgICAgICAgIGNvbXBhcmVNb250aElTLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gX3RoaXMuYXBwbHlJbmNvbWVTdGF0ZW1lbnRSdWxlKHZhbHVlKTsKICAgICAgICAgICAgICAgICAgLyogR3JvdXBpbmcgKi8KCgogICAgICAgICAgICAgICAgICB2YXIgZ25hbWUgPSBTdHJpbmcoZW50cnkuYWNjb3VudFVVSUQpICsgU3RyaW5nKGVudHJ5LmFjY291bnRfdHlwZV9udW1iZXIpOwoKICAgICAgICAgICAgICAgICAgaWYgKGdbZ25hbWVdKSB7CiAgICAgICAgICAgICAgICAgICAgZ1tnbmFtZV1bImNvbXBhcmVBbW91bnQiXSA9IGVudHJ5LmJhbGFuY2U7CiAgICAgICAgICAgICAgICAgICAgZ1tnbmFtZV1bImNoYW5nZVBlcmNlbnRhZ2UiXSA9IF90aGlzLmZpbmRDaGFuZ2VQZXJjZW50YWdlKGdbZ25hbWVdWyJiYXNlQW1vdW50Il0sIGVudHJ5LmJhbGFuY2UpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGVudHJ5LmNvbXBhcmVBbW91bnQgPSBlbnRyeS5iYWxhbmNlOwogICAgICAgICAgICAgICAgICAgIGVudHJ5LmNoYW5nZVBlcmNlbnRhZ2UgPSBfdGhpcy5maW5kQ2hhbmdlUGVyY2VudGFnZShlbnRyeS5iYXNlQW1vdW50LCBlbnRyeS5iYWxhbmNlKTsKICAgICAgICAgICAgICAgICAgICBnW2duYW1lXSA9IGVudHJ5OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIC8qIENhbGN1bGF0ZSBDb21tb24gU2l6ZSAqLwoKICAgICAgICAgICAgICAgIGZvciAoayBpbiBnKSB7CiAgICAgICAgICAgICAgICAgIGdba11bImNvbW1vblNpemUiXSA9IF90aGlzLmZpbmRDb21tb25TaXplUGVyY2VudGFnZShnW2tdWyJiYXNlQW1vdW50Il0sIHRvdGFsUmV2ZW51ZSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMuc3RhdGVtZW50TGlzdCA9IE9iamVjdC52YWx1ZXMoZyk7CgogICAgICAgICAgICAgICAgX3RoaXMuZ2VuZXJhdGVDb2x1bW4oKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5zaG93TG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGFwcGx5SW5jb21lU3RhdGVtZW50UnVsZTogZnVuY3Rpb24gYXBwbHlJbmNvbWVTdGF0ZW1lbnRSdWxlKHZhbHVlKSB7CiAgICAgIHZhciBlbnRyeSA9IG5ldyBCYWxhbmNlU2hlZXRBbmFseXNpc01vZGVsKHZhbHVlKTsgLy8gT3JkZXIKCiAgICAgIGlmICh2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyID09IE9yZGVyTnVtYmVyUEwuR3Jvc3NQcm9maXQubnVtYmVyKSB7CiAgICAgICAgLy8gR3Jvc3MgUHJvZml0CiAgICAgICAgZW50cnkub3JkZXIgPSBPcmRlck51bWJlclBMLkdyb3NzUHJvZml0Lm9yZGVyOwogICAgICB9IGVsc2UgaWYgKHZhbHVlLmFjY291bnRfdHlwZV9udW1iZXIgPT0gT3JkZXJOdW1iZXJQTC5PdGhlclJldmVudWUubnVtYmVyKSB7CiAgICAgICAgLy8gT3RoZXIgUmV2ZW51ZQogICAgICAgIGVudHJ5Lm9yZGVyID0gT3JkZXJOdW1iZXJQTC5PdGhlclJldmVudWUub3JkZXI7CiAgICAgIH0gZWxzZSBpZiAodmFsdWUuYWNjb3VudF90eXBlX251bWJlciA9PSBPcmRlck51bWJlclBMLk9wZXJhdGluZ0V4cGVuc2UubnVtYmVyKSB7CiAgICAgICAgLy8gT3BlcmF0aW5nIEV4cGVuc2UKICAgICAgICBlbnRyeS5vcmRlciA9IE9yZGVyTnVtYmVyUEwuT3BlcmF0aW5nRXhwZW5zZS5vcmRlcjsKICAgICAgfSBlbHNlIGlmICh2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyID09IE9yZGVyTnVtYmVyUEwuT3BlcmF0aW5nSW5jb21lRUJJVERBLm51bWJlcikgewogICAgICAgIC8vIE9wZXJhdGluZyBJbmNvbWUgKEVCSVREQSkKICAgICAgICBlbnRyeS5vcmRlciA9IE9yZGVyTnVtYmVyUEwuT3BlcmF0aW5nSW5jb21lRUJJVERBLm9yZGVyOwogICAgICB9IGVsc2UgaWYgKHZhbHVlLmFjY291bnRfdHlwZV9udW1iZXIgPT0gT3JkZXJOdW1iZXJQTC5FYXJuaW5nQmVmb3JlSW50ZXJlc3RBbmRUYXhFQklULm51bWJlcikgewogICAgICAgIC8vIEVhcm5pbmcgQmVmb3JlIEludGVyZXN0IEFuZCBUYXgoRUJJVCkKICAgICAgICBlbnRyeS5vcmRlciA9IE9yZGVyTnVtYmVyUEwuRWFybmluZ0JlZm9yZUludGVyZXN0QW5kVGF4RUJJVC5vcmRlcjsKICAgICAgfSBlbHNlIGlmICh2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyID09IE9yZGVyTnVtYmVyUEwuUHJvZml0QmVmb3JlVGF4Lm51bWJlcikgewogICAgICAgIC8vIFByb2ZpdCBCZWZvcmUgVGF4CiAgICAgICAgZW50cnkub3JkZXIgPSBPcmRlck51bWJlclBMLlByb2ZpdEJlZm9yZVRheC5vcmRlcjsKICAgICAgfSBlbHNlIGlmICh2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyID09IE9yZGVyTnVtYmVyUEwuUHJvZml0Rm9yVGhlUGVyaW9kLm51bWJlcikgewogICAgICAgIC8vIFByb2ZpdCBGb3IgVGhlIFBlcmlvZAogICAgICAgIGVudHJ5Lm9yZGVyID0gT3JkZXJOdW1iZXJQTC5Qcm9maXRGb3JUaGVQZXJpb2Qub3JkZXI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZW50cnkub3JkZXIgPSB2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyOwogICAgICB9CgogICAgICByZXR1cm4gZW50cnk7CiAgICB9LAogICAgLy8gUm93IFRlbXBsYXRlCiAgICBhY2NvdW50VG1wbDogZnVuY3Rpb24gYWNjb3VudFRtcGwoZGF0YUl0ZW0pIHsKICAgICAgdmFyIG5hbWUgPSBkYXRhSXRlbS5udW1iZXI7CgogICAgICBpZiAodGhpcy5yZXBvcnRpbmdMYW5ndWFnZSA9PT0gImxvY2FsIikgewogICAgICAgIG5hbWUgKz0gIiAtICIgKyBkYXRhSXRlbS5sb2NhbF9uYW1lOwogICAgICB9IGVsc2UgewogICAgICAgIG5hbWUgKz0gIiAtICIgKyBkYXRhSXRlbS5uYW1lOwogICAgICB9CgogICAgICByZXR1cm4gbmFtZTsKICAgIH0sCiAgICB0eXBlR3JvdXBIZWFkZXJUbXBsOiBmdW5jdGlvbiB0eXBlR3JvdXBIZWFkZXJUbXBsKGRhdGFJdGVtKSB7CiAgICAgIHZhciBuYW1lID0gZGF0YUl0ZW0uaXRlbXNbMF0udHlwZTsKCiAgICAgIGlmICh0aGlzLnJlcG9ydGluZ0xhbmd1YWdlID09PSAibG9jYWwiKSB7CiAgICAgICAgbmFtZSA9IGRhdGFJdGVtLml0ZW1zWzBdLnR5cGVfbG9jYWxfbmFtZTsKICAgICAgfQoKICAgICAgcmV0dXJuIG5hbWU7CiAgICB9LAoKICAgIC8qIERhdGFib3VuZCAqLwogICAgZGF0YUJvdW5kOiBmdW5jdGlvbiBkYXRhQm91bmQoZSkgewogICAgICB2YXIgZ3JpZCA9IGUuc2VuZGVyOwogICAgICBncmlkLmRhdGFTb3VyY2UuZGF0YSgpLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgaWYgKHZhbHVlLmFjY291bnRfdHlwZV9udW1iZXIgPj0gMTAwKSB7CiAgICAgICAgICB2YXIgcm93ID0gZ3JpZC50Ym9keS5maW5kKCJ0cltkYXRhLXVpZD0nIiArIHZhbHVlLnVpZCArICInXSIpLnByZXYoIi5rLWdyb3VwaW5nLXJvdyIpOwogICAgICAgICAgZ3JpZC5jb2xsYXBzZUdyb3VwKHJvdyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICAvLyBHZW5lcmF0ZSBDb2x1bW5zCiAgICBnZW5lcmF0ZUNvbHVtbjogZnVuY3Rpb24gZ2VuZXJhdGVDb2x1bW4oKSB7CiAgICAgIHZhciBoZWFkZXJBdHRyaWJ1dGVzID0gewogICAgICAgIGNsYXNzOiAidGFibGUtaGVhZGVyLWNlbGwiLAogICAgICAgIHN0eWxlOiAidGV4dC1hbGlnbjogcmlnaHQ7cGFkZGluZy1yaWdodDogMzVweDsgZm9udC1zaXplOiAxNHB4IgogICAgICB9LAogICAgICAgICAgYXR0cmlidXRlcyA9IHsKICAgICAgICBjbGFzczogInRhYmxlLWNlbGwiLAogICAgICAgIHN0eWxlOiAidGV4dC1hbGlnbjogcmlnaHQ7IGZvbnQtc2l6ZTogMTRweCIKICAgICAgfTsKICAgICAgdGhpcy5jb2x1bW5zID0gW3sKICAgICAgICBmaWVsZDogdGhpcy5maWVsZE5hbWUsCiAgICAgICAgdGl0bGU6IGkxOG4udCgiYWNjb3VudCIpLAogICAgICAgIHRlbXBsYXRlOiB0aGlzLmFjY291bnRUbXBsLAogICAgICAgIGxvY2tlZDogdHJ1ZSwKICAgICAgICB3aWR0aDogNDAwCiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogdGhpcy5maWVsZFR5cGUsCiAgICAgICAgdGl0bGU6IGkxOG4udCgidHlwZSIpLAogICAgICAgIGhpZGRlbjogdHJ1ZSwKICAgICAgICBncm91cEhlYWRlclRlbXBsYXRlOiB0aGlzLnR5cGVHcm91cEhlYWRlclRtcGwsCiAgICAgICAgd2lkdGg6IDMwMAogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJzdGF0ZW1lbnRHcm91cCIsCiAgICAgICAgdGl0bGU6IGkxOG4udCgic3RhdGVtZW50X2dyb3VwIiksCiAgICAgICAgaGlkZGVuOiB0cnVlLAogICAgICAgIGdyb3VwSGVhZGVyVGVtcGxhdGU6ICIjPXZhbHVlIyIsCiAgICAgICAgd2lkdGg6IDMwMAogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJncm91cE5hdHVyZSIsCiAgICAgICAgdGl0bGU6IGkxOG4udCgibmF0dXJlIiksCiAgICAgICAgaGlkZGVuOiB0cnVlLAogICAgICAgIGdyb3VwSGVhZGVyVGVtcGxhdGU6ICIjPXZhbHVlIyIsCiAgICAgICAgd2lkdGg6IDMwMAogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJiYXNlQW1vdW50IiwKICAgICAgICB0aXRsZTogdGhpcy5iYXNlTW9udGgsCiAgICAgICAgZm9ybWF0OiAiezA6IywjIzAuIyM7KCMsIyMwLiMjKX0iLAogICAgICAgIHdpZHRoOiAxNTAsCiAgICAgICAgYWdncmVnYXRlczogIlsnc3VtJ10iLAogICAgICAgIGdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGU6ICI8ZGl2IGNsYXNzPSd0ZXh0LXJpZ2h0IHRleHQtYm9sZCB0ZXh0LWJsYWNrJz4jPWtlbmRvLnRvU3RyaW5nKHN1bSwgJ24nKSM8L2Rpdj4iLAogICAgICAgIGhlYWRlckF0dHJpYnV0ZXM6IGhlYWRlckF0dHJpYnV0ZXMsCiAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcwogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJjb21wYXJlQW1vdW50IiwKICAgICAgICB0aXRsZTogdGhpcy5jb21wYXJlTW9udGgsCiAgICAgICAgZm9ybWF0OiAiezA6IywjIzAuIyM7KCMsIyMwLiMjKX0iLAogICAgICAgIHdpZHRoOiAxNTAsCiAgICAgICAgYWdncmVnYXRlczogIlsnc3VtJ10iLAogICAgICAgIGdyb3VwSGVhZGVyQ29sdW1uVGVtcGxhdGU6ICI8ZGl2IGNsYXNzPSd0ZXh0LXJpZ2h0IHRleHQtYm9sZCB0ZXh0LWJsYWNrJz4jPWtlbmRvLnRvU3RyaW5nKHN1bSwgJ24nKSM8L2Rpdj4iLAogICAgICAgIGhlYWRlckF0dHJpYnV0ZXM6IGhlYWRlckF0dHJpYnV0ZXMsCiAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcwogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJjaGFuZ2VQZXJjZW50YWdlIiwKICAgICAgICB0aXRsZTogaTE4bi50KCJjaGFuZ2VfJSIpLAogICAgICAgIGZvcm1hdDogInswOnB9IiwKICAgICAgICB3aWR0aDogMTAwLAogICAgICAgIGhlYWRlckF0dHJpYnV0ZXM6IGhlYWRlckF0dHJpYnV0ZXMsCiAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcwogICAgICB9LCB7CiAgICAgICAgZmllbGQ6ICJjb21tb25TaXplIiwKICAgICAgICB0aXRsZTogaTE4bi50KCJjb21tb25fc2l6ZSIpLAogICAgICAgIGZvcm1hdDogInswOnB9IiwKICAgICAgICB3aWR0aDogMTAwLAogICAgICAgIGhlYWRlckF0dHJpYnV0ZXM6IGhlYWRlckF0dHJpYnV0ZXMsCiAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcwogICAgICB9XTsKICAgIH0sCiAgICAvLyBPbiBSZXBvcmludCBMYW5ndWFnZSBDaGFuZ2VzCiAgICBvblJlcG9ydGluZ0xhbmd1YWdlQ2hhbmdlczogZnVuY3Rpb24gb25SZXBvcnRpbmdMYW5ndWFnZUNoYW5nZXMoKSB7CiAgICAgIHRoaXMuZmllbGROYW1lID0gIm5hbWUiOwogICAgICB0aGlzLmZpZWxkVHlwZSA9ICJ0eXBlIjsKCiAgICAgIGlmICh0aGlzLnJlcG9ydGluZ0xhbmd1YWdlID09PSAibG9jYWwiKSB7CiAgICAgICAgdGhpcy5maWVsZE5hbWUgPSAibG9jYWxfbmFtZSI7CiAgICAgICAgdGhpcy5maWVsZFR5cGUgPSAidHlwZV9sb2NhbF9uYW1lIjsKICAgICAgfSAvLyBHZW5lcmF0ZSBHcm91cCBCeQoKCiAgICAgIHRoaXMuZ2VuZXJhdGVHcm91cEJ5KCk7IC8vIEdlbmVyYXRlIGNvbHVtbiB3aXRoIG5ldyBsYW5ndWFnZQoKICAgICAgdGhpcy5nZW5lcmF0ZUNvbHVtbigpOwogICAgfSwKICAgIC8vIEdlbmVyYXRlIEdyb3VwIEJ5CiAgICBnZW5lcmF0ZUdyb3VwQnk6IGZ1bmN0aW9uIGdlbmVyYXRlR3JvdXBCeSgpIHsKICAgICAgdGhpcy5ncm91cERlZmluaXRpb24gPSB7CiAgICAgICAgZmllbGQ6IHRoaXMuZmllbGRUeXBlLAogICAgICAgIGFnZ3JlZ2F0ZXM6IHRoaXMuYWdncmVnYXRlRGVmaW5pdGlvbiwKICAgICAgICBjb21wYXJlOiBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHsKICAgICAgICAgIGlmIChhLml0ZW1zWzBdLm9yZGVyID09PSBiLml0ZW1zWzBdLm9yZGVyKSB7CiAgICAgICAgICAgIHJldHVybiAwOwogICAgICAgICAgfSBlbHNlIGlmIChhLml0ZW1zWzBdLm9yZGVyID4gYi5pdGVtc1swXS5vcmRlcikgewogICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICB9LAogICAgZmluZENoYW5nZVBlcmNlbnRhZ2U6IGZ1bmN0aW9uIGZpbmRDaGFuZ2VQZXJjZW50YWdlKG51bTEsIG51bTIpIHsKICAgICAgdmFyIHJlc3VsdCA9IDA7CgogICAgICBpZiAobnVtMiAhPT0gMCkgewogICAgICAgIHJlc3VsdCA9IChudW0xIC0gbnVtMikgLyBudW0yOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIGZpbmRDb21tb25TaXplUGVyY2VudGFnZTogZnVuY3Rpb24gZmluZENvbW1vblNpemVQZXJjZW50YWdlKG51bTEsIG51bTIpIHsKICAgICAgdmFyIHJlc3VsdCA9IDA7CgogICAgICBpZiAobnVtMiAhPT0gMCkgewogICAgICAgIHJlc3VsdCA9IG51bTEgLyBudW0yOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHJlcG9ydGluZ0xhbmd1YWdlOiBmdW5jdGlvbiByZXBvcnRpbmdMYW5ndWFnZSgpIHsKICAgICAgdGhpcy5vblJlcG9ydGluZ0xhbmd1YWdlQ2hhbmdlcygpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFwcFR5cGU6IGZ1bmN0aW9uIGFwcFR5cGUoKSB7CiAgICAgIHJldHVybiBkYXRhU3RvcmUucHJvZHVjdFR5cGU7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLy8gR2VuZXJhdGUgR3JvdXAgQnkKICAgIHRoaXMuZ2VuZXJhdGVHcm91cEJ5KCk7IC8vIEluaXRpYWwgR3JpZCBDb2x1bW5zCgogICAgdGhpcy5nZW5lcmF0ZUNvbHVtbigpOwogIH0KfTs="},{"version":3,"sources":["Analysis.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<v-row>\n\t\t\t\t\t\t\t<v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<label class=\"label pt-5\">{{ $t(\"base_month\") }}</label>\n\t\t\t\t\t\t\t\t<app-month-picker\n\t\t\t\t\t\t\t\t\t:initialMonth=\"baseMonth\"\n\t\t\t\t\t\t\t\t\t@emitMonth=\"baseMonth = $event\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<label class=\"label pt-5\">{{ $t(\"compare_month\") }}</label>\n\t\t\t\t\t\t\t\t<app-month-picker\n\t\t\t\t\t\t\t\t\t:initialMonth=\"compareMonth\"\n\t\t\t\t\t\t\t\t\t@emitMonth=\"compareMonth = $event\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col sm=\"2\" cols=\"12\" class=\"pt-6\">\n\t\t\t\t\t\t\t\t<v-btn class=\"white--text\" color=\"primary\" @click=\"search\">\n\t\t\t\t\t\t\t\t\t{{ $t(\"run_report\") }}\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<div class=\"report_export\">\n\t\t\t\t\t\t\t<label class=\"mb-1\">{{ $t(\"reporting_language\") }}:</label>\n\t\t\t\t\t\t\t<app-reporting-language\n\t\t\t\t\t\t\t\t:initLanguage=\"reportingLanguage\"\n\t\t\t\t\t\t\t\t@emitLanguage=\"reportingLanguage = $event\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"custom_expansion pt-0\">\n\t\t\t\t\t\t<kendo-datasource\n\t\t\t\t\t\t\tref=\"statementDS\"\n\t\t\t\t\t\t\t:data=\"statementList\"\n\t\t\t\t\t\t\t:schema=\"schemaDefinition\"\n\t\t\t\t\t\t\t:sort=\"sortDefinition\"\n\t\t\t\t\t\t\t:group=\"groupDefinition\"\n\t\t\t\t\t\t\t:aggregate=\"aggregateDefinition\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<kendo-grid\n\t\t\t\t\t\t\tid=\"statementGrid\"\n\t\t\t\t\t\t\tclass=\"custom_grid\"\n\t\t\t\t\t\t\t:data-source-ref=\"'statementDS'\"\n\t\t\t\t\t\t\t:dataBound=\"dataBound\"\n\t\t\t\t\t\t\t:selectable=\"true\"\n\t\t\t\t\t\t\t:persistSelection=\"true\"\n\t\t\t\t\t\t\t:sortable=\"true\"\n\t\t\t\t\t\t\t:column-menu=\"true\"\n\t\t\t\t\t\t\t:reorderable=\"true\"\n\t\t\t\t\t\t\t:resizable=\"true\"\n\t\t\t\t\t\t\t:noRecords=\"true\"\n\t\t\t\t\t\t\t:toolbar=\"['excel']\"\n\t\t\t\t\t\t\t:excel-file-name=\"'incomeStatement.xlsx'\"\n\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t:columns=\"columns\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<LoadingMe\n\t\t\t\t\t:isLoading=\"showLoading\"\n\t\t\t\t\t:fullPage=\"false\"\n\t\t\t\t\t:myLoading=\"true\"\n\t\t\t\t/>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\n// import Helper from \"@/helper.js\";\nimport BalanceSheetAnalysisModel from \"@/scripts/model/accounting/BalanceSheetAnalysis\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n\nexport default {\n\tcomponents: {\n\t\tLoadingMe: () => import(\"@/components/Loading\"),\n\t\t\"app-month-picker\": () =>\n\t\t\timport(\"@/components/custom_templates/MonthPicker\"),\n\t\t\"app-reporting-language\": () =>\n\t\t\timport(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n\t},\n\tdata: () => ({\n\t\tbaseMonth: new Date().toISOString().substr(0, 7),\n\t\tcompareMonth: new Date().toISOString().substr(0, 7),\n\t\tstatementList: [],\n\t\t// Reporting Language\n\t\treportingLanguage: \"english\",\n\t\tfieldName: \"name\",\n\t\tfieldType: \"type\",\n\t\t// LodingMe\n\t\tshowLoading: false,\n\t\t/* KENDO */\n\t\tcolumns: [],\n\t\tsortDefinition: { field: \"number\", dir: \"asc\" },\n\t\tgroupDefinition: [],\n\t\taggregateDefinition: [\n\t\t\t{ field: \"baseAmount\", aggregate: \"sum\" },\n\t\t\t{ field: \"compareAmount\", aggregate: \"sum\" }\n\t\t],\n\t\tschemaDefinition: {\n\t\t\tmodel: { id: \"accountUUID\" },\n\t\t},\n\t}),\n\tmethods: {\n\t\t// Search journals\n\t\tasync search() {\n\t\t\t// Empty dataSource\n\t\t\tlet ds = this.$refs.statementDS.kendoWidget();\n\t\t\tds.data([]);\n\n\t\t\tlet bm = new Date(this.baseMonth),\n\t\t\t\tcm = new Date(this.compareMonth);\n\n\t\t\t/* Set to day 1 */\n\t\t\tbm.setDate(1);\n\t\t\tcm.setDate(1);\n\n\t\t\t/* Last day of the month */\n\t\t\tlet bmLastDay = new Date(bm.getFullYear(), bm.getMonth()+1, 0),\n\t\t\t\tcmLastDay = new Date(cm.getFullYear(), cm.getMonth()+1, 0);\n\n\t\t\t// Query\n\t\t\tthis.showLoading = true;\n\t\t\tlet baseMonthIS = await incomeStatementHandler\n\t\t\t\t.getIncomeStatement({\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart_date: kendo.toString(bm, \"yyyy-MM-dd\") + \"T00:00:00.000Z\",\n\t\t\t\t\t\tend_date: kendo.toString(bmLastDay, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\tgroup_by: \"1\",\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\tlet compareMonthIS = await incomeStatementHandler\n\t\t\t\t.getIncomeStatement({\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart_date: kendo.toString(cm, \"yyyy-MM-dd\") + \"T00:00:00.000Z\",\n\t\t\t\t\t\tend_date: kendo.toString(cmLastDay, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\tgroup_by: \"1\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t\n\t\t\t/* Grouping */\n\t\t\tlet g = {},\n\t\t\t\ttotalRevenue = 0;\n\n\t\t\t/* Base Month Data */\n\t\t\tbaseMonthIS.data.forEach((value) => {\n\t\t\t\tlet entry = this.applyIncomeStatementRule(value);\n\t\t\t\tentry.baseAmount = value.balance;\n\t\t\t\t\n\t\t\t\t/* Sum Revenue */\n\t\t\t\tif (entry.groupNature.toLowerCase() === \"revenue\") {\n\t\t\t\t\ttotalRevenue += entry.balance;\n\t\t\t\t}\n\n\t\t\t\tlet gname = String(entry.accountUUID) + String(entry.account_type_number);\n\t\t\t\tg[gname] = entry;\n\t\t\t});\n\n\t\t\t/* Compare Month Data */\n\t\t\tcompareMonthIS.data.forEach((value) => {\n\t\t\t\tlet entry = this.applyIncomeStatementRule(value);\n\n\t\t\t\t/* Grouping */\n\t\t\t\tlet gname = String(entry.accountUUID) + String(entry.account_type_number);\n\n\t\t\t\tif(g[gname]){\n\t\t\t\t\tg[gname][\"compareAmount\"] = entry.balance;\n\t\t\t\t\tg[gname][\"changePercentage\"] = this.findChangePercentage(g[gname][\"baseAmount\"], entry.balance);\n\t\t\t\t}else{\n\t\t\t\t\tentry.compareAmount = entry.balance;\n\t\t\t\t\tentry.changePercentage = this.findChangePercentage(entry.baseAmount, entry.balance);\n\n\t\t\t\t\tg[gname] = entry;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* Calculate Common Size */\n\t\t\tfor (let k in g)\n\t\t\tg[k][\"commonSize\"] = this.findCommonSizePercentage(g[k][\"baseAmount\"], totalRevenue);\n\n\t\t\tthis.statementList = Object.values(g);\n\t\t\tthis.generateColumn();\n\t\t\t\n\t\t\tthis.showLoading = false;\n\t\t},\n\t\tapplyIncomeStatementRule(value){\n\t\t\tlet entry = new BalanceSheetAnalysisModel(value);\n\n\t\t\t// Order\n\t\t\tif (\n\t\t\t\tvalue.account_type_number == OrderNumberPL.GrossProfit.number\n\t\t\t) {\n\t\t\t\t// Gross Profit\n\t\t\t\tentry.order = OrderNumberPL.GrossProfit.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number == OrderNumberPL.OtherRevenue.number\n\t\t\t) {\n\t\t\t\t// Other Revenue\n\t\t\t\tentry.order = OrderNumberPL.OtherRevenue.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.OperatingExpense.number\n\t\t\t) {\n\t\t\t\t// Operating Expense\n\t\t\t\tentry.order = OrderNumberPL.OperatingExpense.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.OperatingIncomeEBITDA.number\n\t\t\t) {\n\t\t\t\t// Operating Income (EBITDA)\n\t\t\t\tentry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n\t\t\t) {\n\t\t\t\t// Earning Before Interest And Tax(EBIT)\n\t\t\t\tentry.order =\n\t\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.ProfitBeforeTax.number\n\t\t\t) {\n\t\t\t\t// Profit Before Tax\n\t\t\t\tentry.order = OrderNumberPL.ProfitBeforeTax.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.ProfitForThePeriod.number\n\t\t\t) {\n\t\t\t\t// Profit For The Period\n\t\t\t\tentry.order = OrderNumberPL.ProfitForThePeriod.order;\n\t\t\t} else {\n\t\t\t\tentry.order = value.account_type_number;\n\t\t\t}\n\n\t\t\treturn entry;\n\t\t},\n\t\t// Row Template\n\t\taccountTmpl(dataItem) {\n\t\t\tlet name = dataItem.number;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname += \" - \" + dataItem.local_name;\n\t\t\t} else {\n\t\t\t\tname += \" - \" + dataItem.name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\ttypeGroupHeaderTmpl(dataItem) {\n\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\t/* Databound */\n\t\tdataBound(e) {\n\t\t\tlet grid = e.sender;\n\n\t\t\tgrid.dataSource.data().forEach((value) => {\n\t\t\t\tif (value.account_type_number >= 100) {\n\t\t\t\t\tlet row = grid.tbody\n\t\t\t\t\t\t.find(\"tr[data-uid='\" + value.uid + \"']\")\n\t\t\t\t\t\t.prev(\".k-grouping-row\");\n\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// Generate Columns\n\t\tgenerateColumn() {\n\t\t\tlet headerAttributes = {\n\t\t\t\t\tclass: \"table-header-cell\",\n\t\t\t\t\tstyle: \"text-align: right;padding-right: 35px; font-size: 14px\",\n\t\t\t\t},\n\t\t\t\tattributes = {\n\t\t\t\t\tclass: \"table-cell\",\n\t\t\t\t\tstyle: \"text-align: right; font-size: 14px\",\n\t\t\t\t};\n\n\t\t\tthis.columns = [\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldName,\n\t\t\t\t\ttitle: i18n.t(\"account\"),\n\t\t\t\t\ttemplate: this.accountTmpl,\n\t\t\t\t\tlocked: true,\n\t\t\t\t\twidth: 400,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldType,\n\t\t\t\t\ttitle: i18n.t(\"type\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate: this.typeGroupHeaderTmpl,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"statementGroup\",\n\t\t\t\t\ttitle: i18n.t(\"statement_group\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"#=value#\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"groupNature\",\n\t\t\t\t\ttitle: i18n.t(\"nature\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"#=value#\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"baseAmount\",\n\t\t\t\t\ttitle: this.baseMonth,\n\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\twidth: 150,\n\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"compareAmount\",\n\t\t\t\t\ttitle: this.compareMonth,\n\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\twidth: 150,\n\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"changePercentage\",\n\t\t\t\t\ttitle: i18n.t(\"change_%\"),\n\t\t\t\t\tformat: \"{0:p}\",\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"commonSize\",\n\t\t\t\t\ttitle: i18n.t(\"common_size\"),\n\t\t\t\t\tformat: \"{0:p}\",\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t// On Reporint Language Changes\n\t\tonReportingLanguageChanges() {\n\t\t\tthis.fieldName = \"name\";\n\t\t\tthis.fieldType = \"type\";\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tthis.fieldName = \"local_name\";\n\t\t\t\tthis.fieldType = \"type_local_name\";\n\t\t\t}\n\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Generate column with new language\n\t\t\tthis.generateColumn();\n\t\t},\n\t\t// Generate Group By\n\t\tgenerateGroupBy() {\n\t\t\tthis.groupDefinition = {\n\t\t\t\tfield: this.fieldType,\n\t\t\t\taggregates: this.aggregateDefinition,\n\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tfindChangePercentage(num1, num2){\n            let result = 0;\n\n            if(num2 !== 0){\n                result = (num1 - num2) / num2;\n            }\n\n            return result;\n        },\n\t\tfindCommonSizePercentage(num1, num2){\n            let result = 0;\n\n            if(num2 !== 0){\n                result = num1 / num2;\n            }\n\n            return result;\n        },\n\t},\n\twatch: {\n\t\treportingLanguage() {\n\t\t\tthis.onReportingLanguageChanges();\n\t\t},\n\t},\n\tcomputed: {\n\t\tappType(){\n\t\treturn dataStore.productType;\n\t\t},\n\t},\n\tmounted() {\n\t\t// Generate Group By\n\t\tthis.generateGroupBy();\n\n\t\t// Initial Grid Columns\n\t\tthis.generateColumn();\n\t},\n};\n</script>\n\n<style scoped>\n.reports_list {\n\twidth: 100%;\n\tbackground-color: #fff;\n\tpadding: 20px 20px 5px;\n}\n.report_filter {\n\tbackground-color: #f8f8f9;\n\tpadding: 0 20px 5px 20px;\n\tposition: relative;\n}\n.dv_mt {\n\tmargin-top: 24px;\n}\n.report_export {\n\tposition: absolute;\n\ttop: 15px;\n}\n.report_total {\n\tpadding: 12.5px;\n\ttext-align: right;\n\ttext-transform: uppercase;\n\tfont-weight: 700;\n\tborder-top: 1px solid #333;\n\tborder-bottom: 1px solid #333;\n}\n.custom_expansion\n\t.v-expansion-panel-header\n\t.v-expansion-panel-header__icon\n\t.v-icon {\n\tdisplay: none !important;\n}\n.v-expansion-panel {\n\tborder-bottom: 1px solid #cccccc;\n\tborder-radius: 0;\n}\n.v-expansion-panel::before {\n\tbox-shadow: none;\n}\n.v-expansion-panel-header {\n\tpadding: 15px;\n}\n.v-expansion-panel-content__wrap {\n\tpadding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n\t.dv_mt,\n\t.dv_mt8 {\n\t\tmargin-top: 0;\n\t}\n\t.reports_list {\n\t\tmargin-top: 0;\n\t}\n}\n</style>\n"],"sourceRoot":"src/views/accounting/reports/receipt_payment"}]}