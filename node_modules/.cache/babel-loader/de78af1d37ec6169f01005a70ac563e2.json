{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/value_add_tax/StageChange.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/value_add_tax/StageChange.vue","mtime":1638499443169},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StageChange.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <!-- <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\"> -->\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-2 px-6\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table>\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-bold text-uppercase\">{{ $t('description') }}</th>\n                                <th></th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('amount_exclusive_of_vat') }}</th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('vat_amount') }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td class=\"text-uppercase text-bold\">{{ $t('monthly_purchase_state_charge') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('sale_include_vat_10') }}</td>\n                                <td class=\"\">{{ $t('taxable_person') }}</td>\n                                <td class=\"\">{{ amountExcluVatP1 }}</td>\n                                <td class=\"\">{{ amountVatP1 }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ 'import_10' }}</td>\n                                <td class=\"\">{{ $t('overseas_suppliers') }}</td>\n                                <td class=\"\">{{ amountExcluVatP2 }}</td>\n                                <td class=\"\">{{ amountVatP2 }}</td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"3\" class=\"text-right text-uppercase  text-bold\">\n                                    {{ $t('total_amount_input_taxs') }}\n                                </td>\n                                <td class=\"grayBg\">{{ totalVatP }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"uppercase text-bold\">{{ $t('monthly_sales_state_charge') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('sale_include_vat_10') }}</td>\n                                <td class=\"\">{{ $t('taxable_person') }}</td>\n                                <td class=\"\">{{ amountExcluVatS1 }}</td>\n                                <td class=\"\">{{ amountVatS1 }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('sale_include_vat_10') }}</td>\n                                <td class=\"\">{{ $t('non_taxable_person') }}</td>\n                                <td class=\"\">{{ amountExcluVatS2 }}</td>\n                                <td class=\"\">{{ amountVatS2 }}</td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"3\" class=\"capitalize text-right text-bold\">\n                                    {{ $t('total_amount_output_taxs') }}\n                                </td>\n                                <td class=\"grayBg\">{{ totalVatS }}</td>\n                            </tr>\n                            <tr>\n                                <td colspan=\"3\" class=\"text-right text-uppercase text-bold\">\n                                    {{ $t('vat_state_charge_credit_forward') }}\n                                </td>\n                                <td class=\"primary white--text\">{{ totalSC }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n            </v-row>\n        </v-col>\n        <!-- </v-card>\n    </v-col> -->\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst purchaseHandler = require(\"@/scripts/compliance/handler/purchaseHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n\n        search: {\n            start_date: \"\",\n            end_date: \"\"\n        },\n\n        purchases: [],\n        sales: [],\n\n        amountExcluVatP1: 0,\n        amountVatP1: 0,\n        amountExcluVatP2: 0,\n        amountVatP2: 0,\n\n        amountExcluVatS1: 0,\n        amountVatS1: 0,\n        amountExcluVatS2: 0,\n        amountVatS2: 0,\n\n        totalVatS: 0,\n        totalVatP: 0,\n        totalSC: 0,\n        totalAmounExculS: 0,\n        totalAmounExculP: 0,\n    }),\n    props: ['sale', 'purchase'],\n    watch: {'saleSP': 'onloadSale', 'purchaseSP': 'onloadPurchase'},\n    methods: {\n        async onloadPurchase() {\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    if (this.purchaseSP.length <= 0) {\n                        new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve('resolved');\n                                purchaseHandler.getByMrId(this.$route.params.id).then(async res => {\n                                    this.purchases = res.data.data\n                                    await this.onCalculateTax()\n                                    this.showLoading = false\n                                })\n                            }, 200)\n                        })\n                    } else {\n                        this.purchases = this.purchaseSP\n                        await this.onCalculateTax()\n                    }\n                }, 300)\n            })\n        },\n        async onloadSale() {\n            window.console.log('sale tab load', this.sales)\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    if (this.sales.length <= 0) {\n                        new Promise(resolve => {\n                            setTimeout(async () => {\n                                resolve('resolved');\n                                await saleHandler.getByMrId(this.$route.params.id).then(async res => {\n                                    this.sales = res.data.data\n                                    await this.onCalculateTax()\n                                })\n                            }, 200)\n                        })\n                    } else {\n                        this.sales = this.saleSP\n                        await this.onCalculateTax()\n                    }\n                }, 300)\n            })\n        },\n        async onloadData() {\n            await this.onloadSale()\n            await this.onloadPurchase()\n        },\n        async onCalculateTax() {\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let totalPAmountVAT = 0, totalSAmountVAT = 0\n                    let amountPNet1 = 0, amountPNet2 = 0,\n                        amountSNet1 = 0, amountSNet2 = 0,\n                        amountPVat1 = 0, amountPVat2 = 0,\n                        amountSVat1 = 0, amountSVat2 = 0\n                    if (this.purchases.length > 0) {\n                        for (let i = 0; i < this.purchases.length; i++) {\n                            if (this.purchases[i].taxName.toLowerCase().includes('state charge')) {\n                                window.console.log(this.purchases[i], 'sc pc')\n                                if (this.purchases[i].supplier.nature.toLowerCase() === 'individual-local' || this.purchases[i].supplier.nature.toLowerCase() === 'taxable entity') {\n                                    amountPNet1 += this.purchases[i].totalAmountInclusive\n                                    amountPVat1 += this.purchases[i].totalVAT\n                                } else if (this.purchases[i].supplier.nature.toLowerCase() === 'individual-foreign' || this.purchases[i].supplier.nature.toLowerCase() === 'foreign entity') {\n                                    amountPNet2 += this.purchases[i].totalAmountInclusive\n                                    amountPVat2 += this.purchases[i].totalVAT\n                                }\n                            }\n                        }\n                    }\n                    if (this.sales.length > 0) {\n                        for (let i = 0; i < this.sales.length; i++) {\n                            if (this.sales[i].taxName.toLowerCase().includes('state charge')) {\n                                window.console.log('sc sale', this.sales[i])\n                                if (this.sales[i].customer.nature.toLowerCase() === 'individual-local' || this.sales[i].customer.nature.toLowerCase() === 'taxable entity') {\n                                    amountSNet1 += this.sales[i].totalAmountInclusive\n                                    amountSVat1 += this.sales[i].totalVAT\n                                } else if (this.sales[i].customer.nature.toLowerCase() === 'non-taxable entity') {\n                                    amountSNet2 += this.sales[i].totalAmountInclusive\n                                    amountSVat2 += this.sales[i].totalVAT\n                                }\n                            }\n                        }\n                    }\n                    totalPAmountVAT = amountPVat1 + amountPVat2\n                    totalSAmountVAT = amountSVat1 + amountSVat2\n                    this.totalSC = this.numberFormat(totalSAmountVAT - totalPAmountVAT)\n                    // this.vats[8].amountVAT = (totalSAmountVAT - totalPAmountVAT).toLocaleString()\n                    this.totalVatP = this.numberFormat(totalPAmountVAT)\n                    this.totalVatS = this.numberFormat(totalSAmountVAT)\n                    this.totalAmounExculS = amountSNet1 + amountSNet2\n                    this.totalAmounExculP = amountPNet1 + amountPNet2\n                    // this.vats[3].amountVAT = totalPAmountVAT.toLocaleString()\n\n                    this.amountExcluVatP1 = this.numberFormat(amountPNet1)\n                    this.amountExcluVatP2 = this.numberFormat(amountPNet2)\n                    this.amountExcluVatS1 = this.numberFormat(amountSNet1)\n                    this.amountExcluVatS2 = this.numberFormat(amountSNet2)\n\n                    this.amountVatP1 = this.numberFormat(amountPVat1)\n                    this.amountVatP2 = this.numberFormat(amountPVat2)\n                    this.amountVatS1 = this.numberFormat(amountSVat1)\n                    this.amountVatS2 = this.numberFormat(amountSVat2)\n                    this.showLoading = false\n                }, 200)\n            })\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n2`)\n        },\n        onSearch() {\n            this.search = {\n                'start_date': this.start_date + '-01',\n                'end_date': this.end_date + '-01'\n            }\n        }\n    },\n    async mounted() {\n        await this.onloadData()\n    },\n    computed: {\n        saleSP() {\n            if (this.sale !== undefined) {\n                window.console.log('stage charge sale', this.sale)\n                return this.sale\n            } else {\n                return []\n            }\n        },\n        purchaseSP() {\n            if (this.purchase !== undefined) {\n                return this.purchase\n            } else {\n                return []\n            }\n        },\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'month-picker' : ()=> import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold' !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"],"sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/review/value_add_tax"}]}