{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Currency.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Currency.js","mtime":1638499442995},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGtlbmRvIGZyb20gJ0Bwcm9ncmVzcy9rZW5kby11aSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaVVybC5qcycpOwoKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250YWluZXIsIG9wdGlvbnMpIHsKICAvLyBVc2UgbG9jYWwgZGF0YQogIHZhciBkcyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgZGF0YTogc3RvcmUuc3RhdGUuY3VycmVuY2llcy5saXN0CiAgfSk7IC8vIERlZmluZGUgZHJvcGRvd25saXN0CgogIHZhciBkZGwgPSBrZW5kby5qUXVlcnkoJzxpbnB1dCByZXF1aXJlZCBuYW1lPSInICsgb3B0aW9ucy5maWVsZCArICciLz4nKS5hcHBlbmRUbyhjb250YWluZXIpLmtlbmRvRHJvcERvd25MaXN0KHsKICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgIGhlaWdodDogNDAwLAogICAgZmlsdGVyOiAic3RhcnRzd2l0aCIsCiAgICBkYXRhVGV4dEZpZWxkOiAibmFtZSIsCiAgICBkYXRhVmFsdWVGaWVsZDogImNvZGUiLAogICAgdGVtcGxhdGU6ICI8c3Bhbj4jPWNvZGUjIC0gIz1uYW1lIzwvc3Bhbj4iLAogICAgb3B0aW9uTGFiZWw6ICItLS0gU2VsZWN0IC0tLSIsCiAgICBkYXRhU291cmNlOiBkcwogIH0pLmRhdGEoImtlbmRvRHJvcERvd25MaXN0Iik7IC8vIFVzZSByZW1vdGUgZGF0YQoKICBpZiAoIXN0b3JlLnN0YXRlLmN1cnJlbmNpZXMuaXNMb2FkZWQpIHsKICAgIHZhciByZW1vdGVEUyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgICB0cmFuc3BvcnQ6IHsKICAgICAgICByZWFkOiB7CiAgICAgICAgICB1cmw6IGFwaVVybC5jdXJyZW5jeS5jdXJyZW5jeV9nZXQgKyAnZnVuLWMnCiAgICAgICAgfSwKICAgICAgICBkYXRhVHlwZTogImpzb24iCiAgICAgIH0sCiAgICAgIHNjaGVtYTogewogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICBpZDogImlkIgogICAgICAgIH0sCiAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YShyZXNwb25zZSkgewogICAgICAgICAgLyogQWRkIHRvIHN0b3JlICovCiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnY3VycmVuY2llcy9hZGRMaXN0JywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgICAgICB9CiAgICAgIH0KICAgIH0pOwogICAgZGRsLnNldERhdGFTb3VyY2UocmVtb3RlRFMpOwogIH0KCiAgcmV0dXJuIGRkbDsKfSk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Currency.js"],"names":["kendo","store","apiUrl","require","container","options","ds","data","DataSource","state","currencies","list","ddl","jQuery","field","appendTo","kendoDropDownList","autoWidth","height","filter","dataTextField","dataValueField","template","optionLabel","dataSource","isLoaded","remoteDS","transport","read","url","currency","currency_get","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AAEA,gBAAe,UAACC,SAAD,EAAYC,OAAZ,EAAwB;AACnC;AACA,MAAIC,EAAE,GAAG,IAAIN,KAAK,CAACO,IAAN,CAAWC,UAAf,CAA0B;AAC/BD,IAAAA,IAAI,EAAEN,KAAK,CAACQ,KAAN,CAAYC,UAAZ,CAAuBC;AADE,GAA1B,CAAT,CAFmC,CAMnC;;AACA,MAAIC,GAAG,GAAGZ,KAAK,CAACa,MAAN,CAAa,2BAA2BR,OAAO,CAACS,KAAnC,GAA2C,KAAxD,EACDC,QADC,CACQX,SADR,EAEDY,iBAFC,CAEiB;AACfC,IAAAA,SAAS,EAAE,IADI;AAEfC,IAAAA,MAAM,EAAE,GAFO;AAGfC,IAAAA,MAAM,EAAC,YAHQ;AAIfC,IAAAA,aAAa,EAAE,MAJA;AAKfC,IAAAA,cAAc,EAAE,MALD;AAMfC,IAAAA,QAAQ,EAAE,gCANK;AAOfC,IAAAA,WAAW,EAAE,gBAPE;AAQfC,IAAAA,UAAU,EAAElB;AARG,GAFjB,EAWCC,IAXD,CAWM,mBAXN,CAAV,CAPmC,CAoBnC;;AACA,MAAG,CAACN,KAAK,CAACQ,KAAN,CAAYC,UAAZ,CAAuBe,QAA3B,EAAoC;AAChC,QAAIC,QAAQ,GAAG,IAAI1B,KAAK,CAACO,IAAN,CAAWC,UAAf,CAA0B;AACrCmB,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAE3B,MAAM,CAAC4B,QAAP,CAAgBC,YAAhB,GAA+B;AADlC,SADC;AAIPC,QAAAA,QAAQ,EAAE;AAJH,OAD0B;AAOrCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,EAAE,EAAE;AADD,SADH;AAIJ5B,QAAAA,IAAI,EAAE,cAAC6B,QAAD,EAAc;AAChB;AACAnC,UAAAA,KAAK,CAACoC,QAAN,CAAe,oBAAf,EAAqCD,QAAQ,CAAC7B,IAA9C;AAEA,iBAAO6B,QAAQ,CAAC7B,IAAhB;AACH;AATG;AAP6B,KAA1B,CAAf;AAoBAK,IAAAA,GAAG,CAAC0B,aAAJ,CAAkBZ,QAAlB;AACH;;AAED,SAAOd,GAAP;AACH,CA9CD","sourcesContent":["import kendo from '@progress/kendo-ui';\n\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.currencies.list,\n    })\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"name\",\n                dataValueField: \"code\",\n                template: \"<span>#=code# - #=name#</span>\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n    \n    // Use remote data\n    if(!store.state.currencies.isLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.currency.currency_get + 'fun-c',\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"id\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('currencies/addList', response.data);\n                    \n                    return response.data;\n                },\n            },\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}