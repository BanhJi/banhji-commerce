{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/expenseHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/expenseHandler.js","mtime":1638499442984},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktYWNjb3VudGluZy13ZWItbW9kdWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKS5kZWZhdWx0OwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIik7CgpyZXF1aXJlKCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiKTsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGlVcmwuanMnKTsKCnZhciB1cmxQYXRoID0gYXBpVXJsLmV4cGVuc2VzICsgJy9leHBlbnNlcyc7IC8vIEdFVCBCWSBJRAoKbW9kdWxlLmV4cG9ydHMuZ2V0T25lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShpZCkgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQodXJsUGF0aCArICIvIi5jb25jYXQoaWQpKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBHRVQgTElTVAoKCm1vZHVsZS5leHBvcnRzLmdldEFsbCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihwYXJhbXMpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybFBhdGgsIHBhcmFtcyk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gyKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIFNBVkUKCgptb2R1bGUuZXhwb3J0cy5zYXZlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGRhdGEpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCh1cmxQYXRoLCBkYXRhKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDMpIHsKICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gU0FWRSBBTEwKCgptb2R1bGUuZXhwb3J0cy5zYXZlQWxsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGV4cGVuc2VzKSB7CiAgICB2YXIgcmVxdWVzdHMsIGksIHJlcXVlc3QsIHJlc3BvbnNlcywgcmVzdWx0cywgX2ksIGVsZW1lbnQ7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAwOwogICAgICAgICAgICByZXF1ZXN0cyA9IFtdOwogICAgICAgICAgICBpID0gMDsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGlmICghKGkgPCBleHBlbnNlcy5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCh1cmxQYXRoLCBleHBlbnNlc1tpXSk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICByZXF1ZXN0ID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAvKiBBZGQgcmVxdWVzdCAqLwogICAgICAgICAgICByZXF1ZXN0cy5wdXNoKHJlcXVlc3QpOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgaSsrOwogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTM7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChyZXF1ZXN0cyk7CgogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgcmVzcG9uc2VzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIHJlc3VsdHMgPSBbXTsKCiAgICAgICAgICAgIGZvciAoX2kgPSAwOyBfaSA8IGV4cGVuc2VzLmxlbmd0aDsgX2krKykgewogICAgICAgICAgICAgIGVsZW1lbnQgPSByZXNwb25zZXNbX2ldOwogICAgICAgICAgICAgIHJlc3VsdHMucHVzaChlbGVtZW50LmRhdGEpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0cyk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOTsKICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDQudDApOwoKICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDE5XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDQpIHsKICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gU0FWRSBCQVRDSAoKCm1vZHVsZS5leHBvcnRzLnNhdmVCYXRjaCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY1ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShleHBlbnNlcykgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KHVybFBhdGggKyAiL2JhdGNoIiwgZXhwZW5zZXMpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDUuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDUudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NSkgewogICAgcmV0dXJuIF9yZWY1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOw=="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/expenseHandler.js"],"names":["axios","require","apiUrl","urlPath","expenses","module","exports","getOne","id","get","response","window","console","error","getAll","params","save","data","post","saveAll","requests","i","length","request","push","Promise","all","responses","results","element","saveBatch"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst apiUrl = require('@/apiUrl.js');\nconst urlPath = apiUrl.expenses + '/expenses';\n\n// GET BY ID\nmodule.exports.getOne = async (id) => {\n    try {\n        const response = await axios.get(urlPath + `/${id}`)\n        \n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// GET LIST\nmodule.exports.getAll = async (params) => {\n    try {\n        const response = await axios.get(urlPath, params);\n        \n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// SAVE\nmodule.exports.save = async (data) => {\n    try {\n        const response = await axios.post(urlPath, data)\n        \n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// SAVE ALL\nmodule.exports.saveAll = async (expenses) => {\n    try {\n        let requests = [];\n        for (let i = 0; i < expenses.length; i++) {\n            let request = await axios.post(urlPath, expenses[i]);\n\n            /* Add request */\n            requests.push(request);\n        }\n\n        let responses = await Promise.all(requests);\n\n        let results = [];\n        for (let i = 0; i < expenses.length; i++) {\n            const element = responses[i];\n            results.push(element.data);\n        }\n        \n        return results;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// SAVE BATCH\nmodule.exports.saveBatch = async (expenses) => {\n    try {\n        let response = await axios.post(urlPath + \"/batch\", expenses);\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}"]}]}