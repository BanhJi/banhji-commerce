{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/budget_financial/BudgetSegment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/budget_financial/BudgetSegment.vue","mtime":1639468046390},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetSegment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" :class=\" appType != 'npo' &&  appType != 'Public Sectors' ? 'grayBg px-6' : '' \" >\n\t\t\t<v-card color=\"white\" :class=\" appType != 'npo' &&  appType != 'Public Sectors' ? 'pa-3 no_border' : '' \"  elevation=\"0\">\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n          <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n            <app-fiscal-date-dropdownlist\n              :initFiscalDate=\"fiscalDate\"\n              @emitFiscalDate=\"fiscalDate = $event\"\n              @onChanged=\"onFiscalDateChanges\"\n            />\n          </v-col>\n          <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n            <app-month-of-picker\n              :initMonthOf=\"monthOf\"\n              @emitMonthOf=\"monthOf = $event\"\n              @onChanged=\"onMonthOfChanges\"\n              :initMin=\"minMonth\"\n              :initMax=\"maxMonth\"\n            />\n          </v-col>\n          <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n            <v-select\n              class=\"mt-1\"\n              :disabled=\"monthOf === ''\"\n              placeholder=\"Select Budget\"\n              @change=\"onChangeBudget\"\n              v-model=\"budget\"\n              :items=\"budgetList\"\n              item-text=\"name\"\n              item-value=\"uuid\"\n              return-object\n              clearable\n              outlined\n            />\n          </v-col>\n          <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n            <!-- Reporting Language -->\n            <label class=\"mb-1\">{{ $t(\"language\") }}:</label>\n            <app-reporting-language\n              :initLanguage=\"reportingLanguage\"\n              @emitLanguage=\"reportingLanguage = $event\"\n            />\n          </v-col>\n        </v-row>\n\n        <!-- Summary -->\n        <v-row>\n          <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n            <template>\n              <v-simple-table class=\"table_list nomal_table\">\n                <template>\n                  <tbody>\n                    <tr>\n                      <td style=\"width: 45%\" class=\"\">\n                        {{ $t(\"budget_name\") }}\n                      </td>\n                      <td class=\"\">{{ budget.name }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"\">{{ $t(\"segment\") }}</td>\n                      <td class=\"\" v-if=\"budget.segment\">\n                        {{ budget.segment.name }}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"\">{{ $t(\"fiscal_year\") }}</td>\n                      <td class=\"\" v-if=\"budget.fiscal_year\">\n                        {{\n                          Helper.formatFiscalDate(budget.fiscal_year.start_date)\n                        }}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"\">{{ $t(\"used_for_consolidation\") }}</td>\n                      <td class=\"\">\n                        {{ budget.use_consolidation === 1 ? \"Yes\" : \"No\" }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </template>\n          </v-col>\n          <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n            <template>\n              <v-simple-table class=\"table_list nomal_table\">\n                <template>\n                  <tbody>\n                    <tr>\n                      <td class=\"\">{{ $t(\"created_on\") }}</td>\n                      <!-- <td class=\"\">{{ budget.created_date }}</td> by rothny -->\n                      <td class=\"\" v-if=\"budget.created_date\">\n                        {{ Helper.dateFormat(budget.created_date) }}\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"\">{{ $t(\"last_edited_on\") }}</td>\n                      <td class=\"\">{{ budget.modified_date }}</td>\n                    </tr>\n                    <tr>\n                      <td class=\"\">{{ $t(\"last_edited_by\") }}</td>\n                      <td class=\"\">\n                        {{\n                          budget.modified_by.first_name === \"\"\n                            ? budget.created_by.first_name +\n                              \" \" +\n                              budget.created_by.last_name\n                            : budget.modified_by.first_name +\n                              \" \" +\n                              budget.modified_by.last_name\n                        }}\n                      </td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </template>\n          </v-col>\n        </v-row>\n\n        <!-- Grid -->\n        <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n            <template>\n              <kendo-datasource\n                ref=\"statementPLDS\"\n                :data=\"statementPLList\"\n                :schema=\"schemaDefinition\"\n                :sort=\"sortDefinition\"\n                :group=\"groupDefinition\"\n                :aggregate=\"aggregateDefinition\"\n              />\n\n              <kendo-grid\n                id=\"incomeStatementGrid\"\n                class=\"custom_grid\"\n                :data-source-ref=\"'statementPLDS'\"\n                :dataBound=\"dataBound\"\n                :sortable=\"true\"\n                :column-menu=\"false\"\n                :reorderable=\"true\"\n                :resizable=\"true\"\n                :noRecords=\"true\"\n                :groupable=\"groupable\"\n                :columns=\"columns\"\n              />\n\n              <LoadingMe\n                type=\"loading\"\n                :isLoading=\"showLoading\"\n                :myLoading=\"true\"\n                :fullPage=\"false\"\n              />\n            </template>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\n/* Models */\nimport SegmentModel from \"@/scripts/model/Segment.js\";\nimport BudgetModel from \"@/scripts/model/Budget.js\";\nimport AccountModel from \"@/scripts/model/Account.js\";\nimport { dataStore } from \"@/observable/store\";\n\nconst incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-fiscal-date-dropdownlist\": () =>\n      import(\"@/components/kendo_templates/FiscalDateDropDownList\"),\n    \"app-month-of-picker\": () =>\n      import(\"@/components/kendo_templates/MonthOfPicker\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n  },\n  data: () => ({\n    monthOf: \"\",\n    budget: new BudgetModel(),\n    budgetList: [],\n    incomeStatements: [],\n    statementPLList: [],\n    fiscalDate: null,\n    fiscalMonths: [],\n    minMonth: \"\",\n    maxMonth: \"\",\n    Helper: Helper,\n    columns: [],\n    sortDefinition: { field: \"number\", dir: \"asc\" },\n    groupable: {\n      enabled: false,\n      showFooter: true,\n    },\n    groupDefinition: [],\n    aggregateDefinition: [\n      { field: \"budget_month\", aggregate: \"sum\" },\n      { field: \"budget_ytd\", aggregate: \"sum\" },\n      { field: \"budget_whole\", aggregate: \"sum\" },\n      { field: \"actual_month\", aggregate: \"sum\" },\n      { field: \"actual_ytd\", aggregate: \"sum\" },\n      { field: \"actual_whole\", aggregate: \"sum\" },\n    ],\n    schemaDefinition: {\n      model: { id: \"uuid\" },\n    },\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    totalWord: \"Total\",\n    // LoadingMe\n    showLoading: false,\n  }),\n  methods: {\n    onFiscalDateChanges() {\n      this.monthOf = \"\";\n      this.budget = new BudgetModel();\n      this.fiscalMonths = [];\n\n      if (this.fiscalDate !== null) {\n        /* Set Month Range */\n        this.minMonth = this.fiscalDate.start_date;\n        this.maxMonth = this.fiscalDate.end_date;\n\n        /* Generate Months */\n        this.fiscalMonths = Helper.generateFiscalMonths(\n          this.fiscalDate.start_date,\n          this.fiscalDate.end_date,\n          \"12\"\n        );\n\n        /* Load Budget */\n        this.loadBudget();\n      }\n    },\n    onMonthOfChanges() {\n      if (this.incomeStatements.length > 0) {\n        /* Bind Data */\n        this.bindData();\n      }\n    },\n    async loadBudget() {\n      let budgets = await this.$store.dispatch(\"budgets/getList\"),\n        segments = await this.$store.dispatch(\"segments/getList\");\n\n      let budgetList = [];\n      budgets.forEach((value) => {\n        if (\n          value.fiscal_year.uuid === this.fiscalDate.uuid &&\n          value.segment_uuid !== \"\"\n        ) {\n          let budget = new BudgetModel(value);\n          budget.segment = new SegmentModel(\n            segments.find((i) => i.id === value.segment_uuid)\n          );\n          budgetList.push(budget);\n        }\n      });\n      this.budgetList = budgetList;\n    },\n    /* On Budget Changes */\n    onChangeBudget() {\n      this.search();\n    },\n    /* Search */\n    search() {\n      if (this.budget.uuid !== \"\") {\n        let sdate =\n            kendo.toString(new Date(this.fiscalDate.start_date), \"yyyy-MM-dd\") +\n            \"T00:00:00.000Z\",\n          edate =\n            kendo.toString(new Date(this.fiscalDate.end_date), \"yyyy-MM-dd\") +\n            \"T23:59:59.999Z\";\n\n        // Empty statementPLDS\n        let ds = this.$refs.statementPLDS.kendoWidget();\n        ds.data([]);\n\n        // Query Income Statement\n        this.showLoading = true;\n        incomeStatementHandler\n          .getIncomeStatement({\n            params: {\n              start_date: sdate,\n              end_date: edate,\n              group_by: \"12\",\n              segment_uuid: this.budget.segment_uuid,\n            },\n          })\n          .then((res) => {\n            if (res.data) {\n              this.incomeStatements = res.data;\n              this.bindData();\n            }\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        /* Alert Warning */\n        this.$snotify.warning(i18n.t(\"please_select_budget\"));\n      }\n    },\n    async bindData() {\n      let entries = [];\n      let Entry = kendo.data.Model.define({\n        id: \"uuid\", // the identifier of the model\n        fields: {\n          /* Budget */\n          budget_month: { type: \"number\", defaultValue: 0 },\n          budget_ytd: { type: \"number\", defaultValue: 0 },\n          budget_whole: { type: \"number\", defaultValue: 0 },\n\n          /* Actual */\n          actual_month: { type: \"number\", defaultValue: 0 },\n          actual_ytd: { type: \"number\", defaultValue: 0 },\n          actual_whole: { type: \"number\", defaultValue: 0 },\n\n          /* Percentage */\n          month_percentage: { type: \"number\", defaultValue: 0 },\n          ytd_percentage: { type: \"number\", defaultValue: 0 },\n          whole_percentage: { type: \"number\", defaultValue: 0 },\n\n          /* Account Information */\n          name: { type: \"string\", defaultValue: \"\" },\n          local_name: { type: \"string\", defaultValue: \"\" },\n          type: { type: \"string\", defaultValue: \"\" },\n          type_local_name: { type: \"string\", defaultValue: \"\" },\n          account_type_number: { type: \"number\", defaultValue: 0 },\n\n          /* Other */\n          order: { type: \"number\", defaultValue: 0 },\n        },\n      });\n\n      // Load Account List\n      let accounts = await this.$store.dispatch(\"accounting/getAccounts\");\n\n      /* Find index of selected month */\n      let monthOfFormated = kendo.toString(new Date(this.monthOf), \"MMM yyyy\"),\n        budgetMonthFormated = kendo.toString(new Date(this.monthOf), \"yyyy-MM\");\n\n      let monthOfIndex = this.fiscalMonths.indexOf(monthOfFormated);\n\n      /* Gathering from budget lines */\n      this.budget.lines.forEach((value) => {\n        let entry = new Entry(),\n          nature = 1; /* Default Naure is Dr = 1 */\n\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.find((item) => item.uuid === value.account_uuid)\n        );\n        entry.uuid = account.uuid;\n        entry.name = account.name;\n        entry.local_name = account.local_name;\n        entry.type = account.account_type.name;\n        entry.type_local_name = account.account_type.local_name;\n        entry.account_type_number = account.account_type.number;\n\n        /* Reverse Nature */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          nature = -1;\n        }\n\n        /* Order */\n        if (account.account_type.number === OrderNumberPL.OtherRevenue.number) {\n          //Other Revenue\n          entry.order = OrderNumberPL.OtherRevenue.order;\n        } else {\n          entry.order = account.account_type.number;\n        }\n\n        /* BUDGET */\n        /* Budget Whole */\n        entry.budget_whole = value.amount * nature;\n\n        value.monthly_amount.forEach((mline) => {\n          /* Budget Month */\n          if (mline.month_of === budgetMonthFormated) {\n            entry.budget_month = mline.amount * nature;\n          }\n\n          /* Budget YTD */\n          if (\n            kendo.toString(new Date(mline.month_of), \"yyyy-MM-dd\") <=\n            kendo.toString(new Date(this.monthOf), \"yyyy-MM-dd\")\n          ) {\n            entry.budget_ytd += mline.amount * nature;\n          }\n        });\n\n        /* ACTUAL */\n        this.incomeStatements.forEach((plline) => {\n          if (plline.accountUUID === value.account_uuid) {\n            /* Actual Month */\n            let propertyMonth = NumberInWord[monthOfIndex]; // ['zero','one','two',...]\n            entry.actual_month = plline[propertyMonth]; // plline['zero']\n\n            for (let i = 0; i < 12; i++) {\n              let property = NumberInWord[i];\n\n              /* Actual YTD */\n              if (i <= monthOfIndex) {\n                entry.actual_ytd += plline[property];\n              }\n\n              /* Actual Whole */\n              entry.actual_whole += plline[property];\n            }\n          }\n        });\n\n        /* Percentage = Actual / Budget */\n        if (entry.budget_month !== 0) {\n          entry.month_percentage = entry.actual_month / entry.budget_month;\n        }\n        if (entry.budget_ytd !== 0) {\n          entry.ytd_percentage = entry.actual_ytd / entry.budget_ytd;\n        }\n        if (entry.budget_whole !== 0) {\n          entry.whole_percentage = entry.actual_whole / entry.budget_whole;\n        }\n\n        /* Add entry */\n        entries.push(entry);\n      });\n\n      /* Gathering from budget estimations */\n      this.budget.budget_estimations.forEach((value) => {\n        let entry = new Entry();\n\n        /* Set Account Information */\n        entry.uuid = value.accountUUID;\n        entry.name = value.name;\n        entry.local_name = value.local_name;\n        entry.type = value.type;\n        entry.type_local_name = value.type_local_name;\n        entry.account_type_number = value.account_type_number;\n\n        // Order\n        if (value.account_type_number == OrderNumberPL.GrossProfit.number) {\n          // Gross Profit\n          entry.order = OrderNumberPL.GrossProfit.order;\n        } else if (\n          value.account_type_number == OrderNumberPL.OtherRevenue.number\n        ) {\n          // Other Revenue\n          entry.order = OrderNumberPL.OtherRevenue.order;\n        } else if (\n          value.account_type_number == OrderNumberPL.OperatingExpense.number\n        ) {\n          // Operating Expense\n          entry.order = OrderNumberPL.OperatingExpense.order;\n        } else if (\n          value.account_type_number ==\n          OrderNumberPL.OperatingIncomeEBITDA.number\n        ) {\n          // Operating Income (EBITDA)\n          entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n        } else if (\n          value.account_type_number ==\n          OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n        ) {\n          // Earning Before Interest And Tax(EBIT)\n          entry.order = OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n        } else if (\n          value.account_type_number == OrderNumberPL.ProfitBeforeTax.number\n        ) {\n          // Profit Before Tax\n          entry.order = OrderNumberPL.ProfitBeforeTax.order;\n        } else if (\n          value.account_type_number == OrderNumberPL.ProfitForThePeriod.number\n        ) {\n          // Profit For The Period\n          entry.order = OrderNumberPL.ProfitForThePeriod.order;\n        } else {\n          entry.order = value.account_type_number;\n        }\n\n        /* BUDGET */\n\n        /* Budget Month */\n        let propertyBudgetMonth = NumberInWord[monthOfIndex]; // ['zero','one','two',...]\n        entry.budget_month = value[propertyBudgetMonth]; // value['zero']\n\n        for (let i = 0; i < 12; i++) {\n          let property = NumberInWord[i];\n\n          /* Budget YTD */\n          if (i <= monthOfIndex) {\n            entry.budget_ytd += value[property];\n          }\n\n          /* Budget Whole */\n          entry.budget_whole += value[property];\n        }\n\n        /* ACTUAL */\n        this.incomeStatements.forEach((plline) => {\n          if (plline.account_type_number === value.account_type_number) {\n            /* Actual Month */\n            let propertyActualMonth = NumberInWord[monthOfIndex]; // ['zero','one','two',...]\n            entry.actual_month = plline[propertyActualMonth]; // plline['zero']\n\n            for (let i = 0; i < 12; i++) {\n              let property = NumberInWord[i];\n\n              /* Actual YTD */\n              if (i <= monthOfIndex) {\n                entry.actual_ytd += plline[property];\n              }\n\n              /* Actual Whole */\n              entry.actual_whole += plline[property];\n            }\n          }\n        });\n\n        /* Percentage = Actual / Budget */\n        if (entry.budget_month !== 0) {\n          entry.month_percentage = entry.actual_month / entry.budget_month;\n        }\n        if (entry.budget_ytd !== 0) {\n          entry.ytd_percentage = entry.actual_ytd / entry.budget_ytd;\n        }\n        if (entry.budget_whole !== 0) {\n          entry.whole_percentage = entry.actual_whole / entry.budget_whole;\n        }\n\n        /* Add entry */\n        entries.push(entry);\n      });\n\n      /* BIND STATMENT */\n      this.statementPLList = entries;\n      this.generateColumn();\n    },\n    /* Databound */\n    dataBound(e) {\n      let grid = e.sender;\n\n      grid.dataSource.data().forEach((value) => {\n        if (value.account_type_number >= 100) {\n          let row = grid.tbody\n            .find(\"tr[data-uid='\" + value.uid + \"']\")\n            .prev(\".k-grouping-row\");\n          grid.collapseGroup(row);\n        }\n      });\n    },\n    // Generate Columns\n    generateColumn() {\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: center; font-size: 14px\",\n        },\n        subHeaderAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      /* Columns */\n      let columns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          groupFooterTemplate: this.totalWord + \" #=value#\",\n          locked: true,\n          width: 300,\n        },\n        {\n          field: this.fieldType,\n          title: \"TYPE\",\n          hidden: true,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n          width: 300,\n        },\n        /* Selected Month */\n        {\n          title: kendo.toString(new Date(this.monthOf), \"MMMM yyyy\"),\n          headerAttributes: headerAttributes,\n          columns: [\n            {\n              field: \"budget_month\",\n              title: i18n.t(\"budget\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"actual_month\",\n              title: i18n.t(\"actual\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"month_percentage\",\n              title: \"%\",\n              format: \"{0:p}\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n          ],\n        },\n        /* YTD(up to selected month) */\n        {\n          title: i18n.t(\"ytd_up_to_selected_month\"),\n          headerAttributes: headerAttributes,\n          columns: [\n            {\n              field: \"budget_ytd\",\n              title: i18n.t(\"budget\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"actual_ytd\",\n              title: i18n.t(\"actual\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"ytd_percentage\",\n              title: \"%\",\n              format: \"{0:p}\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n          ],\n        },\n        /* Whole Year */\n        {\n          title: i18n.t(\"whole_year\"),\n          headerAttributes: headerAttributes,\n          columns: [\n            {\n              field: \"budget_whole\",\n              title: i18n.t(\"budget\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"actual_whole\",\n              title: i18n.t(\"actual\"),\n              format: \"{0:n}\",\n              aggregates: \"['sum']\",\n              groupFooterTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n            {\n              field: \"whole_percentage\",\n              title: \"%\",\n              format: \"{0:p}\",\n              width: 150,\n              headerAttributes: subHeaderAttributes,\n              attributes: attributes,\n            },\n          ],\n        },\n      ];\n\n      /* Set Columns */\n      this.columns = columns;\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      this.totalWord = \"Total\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n        this.totalWord = \"សរុប\";\n      }\n\n      // Generate Group By\n      this.generateGroupBy();\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    /* Templates */\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return \"<span class='text-bold text-black'>\" + name + \"</span>\";\n    },\n    // Generate Group By\n    generateGroupBy() {\n      this.groupDefinition = {\n        field: this.fieldType,\n        aggregates: this.aggregateDefinition,\n        compare: function(a, b) {\n          if (a.items[0].order === b.items[0].order) {\n            return 0;\n          } else if (a.items[0].order > b.items[0].order) {\n            return 1;\n          } else {\n            return -1;\n          }\n        },\n      };\n    },\n  },\n  watch: {\n    budget() {\n      // Prevent null error\n      if (this.budget === null) {\n        this.budget = new BudgetModel();\n      }\n    },\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: {\n\t\tappType(){\n\t\t\treturn dataStore.productType;\n\t\t},\n\t},\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    // this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.theme--light.v-data-table {\n  background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 32px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n  border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n.v-data-table.simple1_table.theme--light,\n.v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n  border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n.v-data-table.simple_table.theme--light {\n  border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n  border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.theme--light.v-data-table.simple1_table\n  > .v-data-table__wrapper\n  > table\n  > thead\n  > tr:last-child\n  > th:last-child {\n  border-right: none !important;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.border-bottom {\n  border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.font-small {\n  font-size: 12px;\n  line-height: 15px;\n}\n\n.font-26 {\n  font-size: 26px !important;\n}\n.v-data-table.simple_table.theme--light {\n  border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > thead\n  > tr:last-child\n  > th {\n  border-bottom: none !important;\n  border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n  border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n  border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:not(:last-child)\n  > td:last-child,\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:not(:last-child)\n  > th:last-child,\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr\n  > td:last-child {\n  border-right: none !important;\n}\n\n.v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 32px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n  border-right: none !important;\n}\n.v-data-table.table_list.theme--light\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:first-child\n  > td {\n  border-top: none !important;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"],"sourceRoot":"src/views/accounting/reports/budget_financial"}]}