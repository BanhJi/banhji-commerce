{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/compliance/handler/monthlyReturnHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/compliance/handler/monthlyReturnHandler.js","mtime":1638499442973},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/compliance/handler/monthlyReturnHandler.js"],"names":["axios","require","apiUrl","module","exports","create","data","post","compliance","monthly_return_post","window","console","error","delete","id","monthly_return_delete","get","monthly_return_get","getByMonth","monthOf","monthly_return_check","params","getOne","addTxnPPI","meta","type","txn_ppi_post","getBalance","bal_ppi_get","addTxnVAT","txn_vat_post","getBalanceVat","bal_vat_get","getVat","vat_get","getPpi","ppi_get","getInsight","insights_get","createTaxPayment","tax_payment_post","getTaxPayment","tax_payment_get","createJournal","monthly_return_journal_post","getJournal","monthly_return_journal_get"],"mappings":"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","sourcesContent":["/*\n * Last modified : 3/26/21, 9:52 AM in Project banhji-accounting-web-module\n * Copyright (c) 2021. Chandarith Chea under Company BanhJi Fintech Co., Ltd\n * Facebook Profile : https://www.facebook.com/profile.php?id=100011194806947\n * Github Profile : https://github.com/Darith-Mokpost\n * Instagram Profile : https://www.instagram.com/chandarith_chea\n */\n\nconst axios \t= require('axios')\nconst apiUrl \t= require('@/apiUrl.js')\n\nmodule.exports.create = async function (data) {\n  try {\n    return await axios.post(apiUrl.compliance.monthly_return_post, data)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.delete = async function (id) {\n  try {\n    return await axios.post(apiUrl.compliance.monthly_return_delete + id)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.get = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.monthly_return_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\nmodule.exports.getByMonth = async function (monthOf) {\n  try {\n    return await axios.get(apiUrl.compliance.monthly_return_check, {params: {monthOf: monthOf}})\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getOne = async function (id) {\n  try {\n    return await axios.get(apiUrl.compliance.monthly_return_get + '/' + id)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.addTxnPPI = async function (data, meta, type) {\n  try {\n    return await axios.post(apiUrl.compliance.txn_ppi_post + '/' + meta + '/' + type, data)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getBalance = async function (id, meta, type) {\n  try {\n    return await axios.get(apiUrl.compliance.bal_ppi_get + id + '/' + meta + '/' + type)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.addTxnVAT = async function (data, meta, type) {\n  try {\n    return await axios.post(apiUrl.compliance.txn_vat_post + '/' + meta + '/' + type, data)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getBalanceVat = async function (id, meta, type) {\n  try {\n    return await axios.get(apiUrl.compliance.bal_vat_get + id + '/' + meta + '/' + type)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getVat = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.vat_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getPpi = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.ppi_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getInsight = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.insights_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.createTaxPayment = async function (data) {\n  try {\n    return await axios.post(apiUrl.compliance.tax_payment_post, data)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.getTaxPayment = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.tax_payment_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.createJournal = async function (data) {\n  try {\n    return await axios.post(apiUrl.compliance.monthly_return_journal_post, data)\n  } catch (error) {\n    window.console.error(error)\n  }\n}\nmodule.exports.getJournal = async function () {\n  try {\n    return await axios.get(apiUrl.compliance.monthly_return_journal_get)\n  } catch (error) {\n    window.console.error(error)\n  }\n}"]}]}