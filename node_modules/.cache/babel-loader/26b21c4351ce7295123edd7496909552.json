{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/kendo_editor/Supplier.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/kendo_editor/Supplier.js","mtime":1638499442997},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGtlbmRvIGZyb20gJ0Bwcm9ncmVzcy9rZW5kby11aSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaVVybC5qcycpOwoKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250YWluZXIsIG9wdGlvbnMpIHsKICAvLyBEZWZpbmQgb3JkZXJpbmcgYnkgbnVtYmVyCiAgdmFyIGNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHsKICAgIGlmIChhLml0ZW1zWzBdLm51bWJlciA9PT0gYi5pdGVtc1swXS5udW1iZXIpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9IGVsc2UgaWYgKGEuaXRlbXNbMF0ubnVtYmVyID4gYi5pdGVtc1swXS5udW1iZXIpIHsKICAgICAgcmV0dXJuIDE7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gLTE7CiAgICB9CiAgfTsgLy8gRGVmaW5kIGRlZmF1bHQgZ3JvdXAKCgogIHZhciBncm91cCA9IHsKICAgIGZpZWxkOiAic3VwcGxpZXJUeXBlLm5hbWUiLAogICAgY29tcGFyZTogY29tcGFyZQogIH07IC8vIFVzZSBsb2NhbCBkYXRhCgogIHZhciBkcyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgZGF0YTogc3RvcmUuc3RhdGUuc3VwcGxpZXJzLmxpc3QsCiAgICBncm91cDogZ3JvdXAKICB9KTsgLy8gRGVmaW5kZSBkcm9wZG93bmxpc3QKCiAgdmFyIGRkbCA9IGtlbmRvLmpRdWVyeSgnPGlucHV0IHJlcXVpcmVkIG5hbWU9IicgKyBvcHRpb25zLmZpZWxkICsgJyIvPicpLmFwcGVuZFRvKGNvbnRhaW5lcikua2VuZG9Ecm9wRG93bkxpc3QoewogICAgYXV0b0JpbmQ6IHRydWUsCiAgICBhdXRvV2lkdGg6IHRydWUsCiAgICBoZWlnaHQ6IDQwMCwKICAgIGZpbHRlcjogInN0YXJ0c3dpdGgiLAogICAgZGF0YVRleHRGaWVsZDogIm5hbWUiLAogICAgZGF0YVZhbHVlRmllbGQ6ICJpZCIsCiAgICBvcHRpb25MYWJlbDogIi0tLSBTZWxlY3QgLS0tIiwKICAgIGRhdGFTb3VyY2U6IGRzCiAgfSkuZGF0YSgia2VuZG9Ecm9wRG93bkxpc3QiKTsgLy8gVXNlIHJlbW90ZSBkYXRhCgogIGlmICghc3RvcmUuc3RhdGUuc3VwcGxpZXJzLmlzTG9hZGVkKSB7CiAgICB2YXIgcmVtb3RlRFMgPSBuZXcga2VuZG8uZGF0YS5EYXRhU291cmNlKHsKICAgICAgdHJhbnNwb3J0OiB7CiAgICAgICAgcmVhZDogewogICAgICAgICAgdXJsOiBhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfZ2V0CiAgICAgICAgfSwKICAgICAgICBkYXRhVHlwZTogImpzb24iCiAgICAgIH0sCiAgICAgIHNjaGVtYTogewogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICBpZDogImlkIgogICAgICAgIH0sCiAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YShyZXNwb25zZSkgewogICAgICAgICAgLyogQWRkIHRvIHN0b3JlICovCiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnc3VwcGxpZXJzL2FkZExpc3QnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZ3JvdXA6IGdyb3VwCiAgICB9KTsKICAgIGRkbC5zZXREYXRhU291cmNlKHJlbW90ZURTKTsKICB9CgogIHJldHVybiBkZGw7Cn0pOw=="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/kendo_editor/Supplier.js"],"names":["kendo","store","apiUrl","require","container","options","compare","a","b","items","number","group","field","ds","data","DataSource","state","suppliers","list","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","filter","dataTextField","dataValueField","optionLabel","dataSource","isLoaded","remoteDS","transport","read","url","supplier","supplier_get","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AAEA,gBAAe,UAACC,SAAD,EAAYC,OAAZ,EAAwB;AACnC;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,CAAT,EAAYC,CAAZ,EAAe;AACzB,QAAID,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWC,MAAX,KAAsBF,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWC,MAArC,EAA6C;AACzC,aAAO,CAAP;AACH,KAFD,MAEO,IAAIH,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWC,MAAX,GAAoBF,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWC,MAAnC,EAA2C;AAC9C,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAC,CAAR;AACH;AACJ,GARD,CAFmC,CAYnC;;;AACA,MAAIC,KAAK,GAAG;AACRC,IAAAA,KAAK,EAAE,mBADC;AAERN,IAAAA,OAAO,EAAEA;AAFD,GAAZ,CAbmC,CAkBnC;;AACA,MAAIO,EAAE,GAAG,IAAIb,KAAK,CAACc,IAAN,CAAWC,UAAf,CAA0B;AAC/BD,IAAAA,IAAI,EAAEb,KAAK,CAACe,KAAN,CAAYC,SAAZ,CAAsBC,IADG;AAE/BP,IAAAA,KAAK,EAAEA;AAFwB,GAA1B,CAAT,CAnBmC,CAwBnC;;AACA,MAAIQ,GAAG,GAAGnB,KAAK,CAACoB,MAAN,CAAa,2BAA2Bf,OAAO,CAACO,KAAnC,GAA2C,KAAxD,EACDS,QADC,CACQjB,SADR,EAEDkB,iBAFC,CAEiB;AACfC,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,SAAS,EAAE,IAFI;AAGfC,IAAAA,MAAM,EAAE,GAHO;AAIfC,IAAAA,MAAM,EAAC,YAJQ;AAKfC,IAAAA,aAAa,EAAE,MALA;AAMfC,IAAAA,cAAc,EAAE,IAND;AAOfC,IAAAA,WAAW,EAAE,gBAPE;AAQfC,IAAAA,UAAU,EAAEjB;AARG,GAFjB,EAWCC,IAXD,CAWM,mBAXN,CAAV,CAzBmC,CAsCnC;;AACA,MAAG,CAACb,KAAK,CAACe,KAAN,CAAYC,SAAZ,CAAsBc,QAA1B,EAAmC;AAC/B,QAAIC,QAAQ,GAAG,IAAIhC,KAAK,CAACc,IAAN,CAAWC,UAAf,CAA0B;AACrCkB,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAEjC,MAAM,CAACkC,QAAP,CAAgBC;AADnB,SADC;AAIPC,QAAAA,QAAQ,EAAE;AAJH,OAD0B;AAOrCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,EAAE,EAAE;AADD,SADH;AAIJ3B,QAAAA,IAAI,EAAE,cAAC4B,QAAD,EAAc;AAChB;AACAzC,UAAAA,KAAK,CAAC0C,QAAN,CAAe,mBAAf,EAAoCD,QAAQ,CAAC5B,IAA7C;AAEA,iBAAO4B,QAAQ,CAAC5B,IAAhB;AACH;AATG,OAP6B;AAkBrCH,MAAAA,KAAK,EAAEA;AAlB8B,KAA1B,CAAf;AAqBAQ,IAAAA,GAAG,CAACyB,aAAJ,CAAkBZ,QAAlB;AACH;;AAED,SAAOb,GAAP;AACH,CAjED","sourcesContent":["import kendo from '@progress/kendo-ui';\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Defind ordering by number\n    let compare = function(a, b) {\n        if (a.items[0].number === b.items[0].number) {\n            return 0;\n        } else if (a.items[0].number > b.items[0].number) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: \"supplierType.name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.suppliers.list,\n        group: group,\n    })\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"name\",\n                dataValueField: \"id\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n\n    // Use remote data\n    if(!store.state.suppliers.isLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.supplier.supplier_get,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"id\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('suppliers/addList', response.data);\n                    \n                    return response.data;\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}