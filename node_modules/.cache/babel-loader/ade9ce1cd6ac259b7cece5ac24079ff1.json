{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/Employee.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/Employee.vue","mtime":1642155812566},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgRW1wbG95ZWVNb2RlbCBmcm9tICJAL3NjcmlwdHMvbW9kZWwvRW1wbG95ZWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0VtcGxveWVlRHJvcERvd25MaXN0JywKICBwcm9wczogewogICAgaW5pdEVtcGxveWVlOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtcGxveWVlOiBuZXcgRW1wbG95ZWVNb2RlbCgpLAogICAgICBsb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluaXRpYWxEYXRhOiBmdW5jdGlvbiBpbml0aWFsRGF0YSgpIHsKICAgICAgdGhpcy5lbXBsb3llZSA9IHRoaXMuaW5pdEVtcGxveWVlOwogICAgfSwKICAgIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSB0cnVlOyAvLyBDYWxsIExpc3QKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2VtcGxveWVlcy9nZXRMaXN0Jyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGVtaXRFbXBsb3llZTogZnVuY3Rpb24gZW1pdEVtcGxveWVlKCkgewogICAgICB2YXIgZW1wbG95ZWUgPSBuZXcgRW1wbG95ZWVNb2RlbCgpOwoKICAgICAgaWYgKHRoaXMuZW1wbG95ZWUpIHsKICAgICAgICBlbXBsb3llZSA9IHRoaXMuZW1wbG95ZWU7CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2VtaXRFbXBsb3llZScsIGVtcGxveWVlKTsKICAgIH0sCiAgICBvbkNoYW5nZWQ6IGZ1bmN0aW9uIG9uQ2hhbmdlZCgpIHsKICAgICAgdGhpcy4kZW1pdCgnb25DaGFuZ2VkJyk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaW5pdEVtcGxveWVlOiAiaW5pdGlhbERhdGEiCiAgfSwKICBjb21wdXRlZDogbWFwU3RhdGUoewogICAgZW1wbG95ZWVzOiBmdW5jdGlvbiBlbXBsb3llZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmVtcGxveWVlcy5saXN0OwogICAgfQogIH0pLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmluaXRpYWxpemUoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvKiBJbml0aWFsIEVtcGxveWVlICovCiAgICB0aGlzLmluaXRpYWxEYXRhKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Employee.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,aAAA,MAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AADA,GAFA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IAAA,aAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,QAAA,GAAA,KAAA,YAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CADA,CAGA;;AAHA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,CAJA;;AAAA;AAMA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAXA;AAYA,IAAA,YAZA,0BAYA;AACA,UAAA,QAAA,GAAA,IAAA,aAAA,EAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,QAAA,GAAA,KAAA,QAAA;AACA;;AACA,WAAA,KAAA,CAAA,cAAA,EAAA,QAAA;AACA,KAlBA;AAmBA,IAAA,SAnBA,uBAmBA;AACA,WAAA,KAAA,CAAA,WAAA;AACA;AArBA,GAbA;AAoCA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GApCA;AAuCA,EAAA,QAAA,EAAA,QAAA,CAAA;AACA,IAAA,SAAA,EAAA,mBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,SAAA,CAAA,IAAA;AAAA;AADA,GAAA,CAvCA;AA0CA,EAAA,OA1CA,qBA0CA;AACA,SAAA,UAAA;AACA,GA5CA;AA6CA,EAAA,OA7CA,qBA6CA;AACA;AACA,SAAA,WAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\n    <v-autocomplete\n        class=\"mt-1\"\n        :loading=\"loading\"\n        placeholder=\"Search Employee\"\n        @change=\"emitEmployee(), onChanged()\"\n        v-model=\"employee\"\n        :items=\"employees\"\n        item-text=\"name\"\n        item-value=\"id\"\n        hide-no-data\n        hide-selected\n        return-object\n        clearable\n        outlined\n    ></v-autocomplete>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport EmployeeModel from \"@/scripts/model/Employee\";\n\nexport default {\n    name: 'EmployeeDropDownList',\n    props: {\n        initEmployee: {\n            type: Object,\n        },\n    },\n    data() {\n        return {\n            employee: new EmployeeModel(),\n            loading: false,\n        }\n    },\n    methods: {\n        initialData(){\n            this.employee = this.initEmployee;\n        },\n        async initialize () {\n            this.loading = true;\n            \n            // Call List\n            await this.$store.dispatch('employees/getList');\n\n            this.loading = false;\n        },\n        emitEmployee() {\n            let employee = new EmployeeModel();\n            if(this.employee){\n                employee = this.employee;\n            }\n            this.$emit('emitEmployee', employee);\n        },\n        onChanged() {\n            this.$emit('onChanged')\n        },\n    },\n    watch: {\n        initEmployee: \"initialData\"\n    },\n    computed: mapState({\n        employees: state => state.employees.list\n    }),\n\tcreated() {\n        this.initialize();\n    },\n    mounted() {\n        /* Initial Employee */\n        this.initialData();\n    }\n}\n</script>"],"sourceRoot":"src/components/dropdownlist"}]}