{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/ParentAccountSecondary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/ParentAccountSecondary.vue","mtime":1642155812568},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgQWNjb3VudE1vZGVsIGZyb20gIkAvc2NyaXB0cy9tb2RlbC9BY2NvdW50IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYXJlbnRBY2NvdW50RHJvcERvd25MaXN0JywKICBwcm9wczogewogICAgaW5pdFBhcmVudEFjY291bnQ6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAogICAgaW5pdFNlY29uZGFyeVR5cGVJZDogewogICAgICB0eXBlOiBTdHJpbmcKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwYXJlbnRBY2NvdW50OiBuZXcgQWNjb3VudE1vZGVsKCksCiAgICAgIHBhcmVudEFjY291bnRzOiBbXSwKICAgICAgbG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0aWFsaXplOiBmdW5jdGlvbiBpbml0aWFsaXplKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gdHJ1ZTsgLy8gQ2FsbCBMaXN0CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdhY2NvdW50aW5nL2dldFNlY29uZGFyeUFjY291bnRzJyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF90aGlzLnBhcmVudEFjY291bnRzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGluaXRpYWxEYXRhOiBmdW5jdGlvbiBpbml0aWFsRGF0YSgpIHsKICAgICAgdGhpcy5wYXJlbnRBY2NvdW50ID0gdGhpcy5pbml0UGFyZW50QWNjb3VudDsKICAgIH0sCiAgICBlbWl0UGFyZW50QWNjb3VudDogZnVuY3Rpb24gZW1pdFBhcmVudEFjY291bnQoKSB7CiAgICAgIHZhciBwYXJlbnRBY2NvdW50ID0gbmV3IEFjY291bnRNb2RlbCgpOwoKICAgICAgaWYgKHRoaXMucGFyZW50QWNjb3VudCkgewogICAgICAgIHBhcmVudEFjY291bnQgPSB0aGlzLnBhcmVudEFjY291bnQ7CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2VtaXRQYXJlbnRBY2NvdW50JywgcGFyZW50QWNjb3VudCk7CiAgICB9LAogICAgb25DaGFuZ2VkOiBmdW5jdGlvbiBvbkNoYW5nZWQoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ29uQ2hhbmdlZCcpOwogICAgfSwKICAgIGZpbHRlckJ5VHlwZUNvZGU6IGZ1bmN0aW9uIGZpbHRlckJ5VHlwZUNvZGUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5wYXJlbnRBY2NvdW50cyA9IHRoaXMuYWNjb3VudHMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIGkudHlwZV9jb2RlID09PSBfdGhpczIuaW5pdEFjY291bnRUeXBlQ29kZTsKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaW5pdFBhcmVudEFjY291bnQ6ICJpbml0aWFsRGF0YSIsCiAgICBpbml0QWNjb3VudFR5cGVDb2RlOiAiZmlsdGVyQnlUeXBlQ29kZSIKICB9LAogIGNvbXB1dGVkOiBtYXBTdGF0ZSh7CiAgICBhY2NvdW50czogZnVuY3Rpb24gYWNjb3VudHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmFjY291bnRpbmcuYWNjb3VudHM7CiAgICB9LAogICAgbGFuZ3VhZ2U6IGZ1bmN0aW9uIGxhbmd1YWdlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hY2NvdW50aW5nLmFjY291bnRMYW5ndWFnZTsKICAgIH0KICB9KSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0aWFsaXplKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgLyogSW5pdGlhbCBPYmogKi8KICAgIHRoaXMuaW5pdGlhbERhdGEoKTsKICB9Cn07"},{"version":3,"sources":["ParentAccountSecondary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAA,QAAA,QAAA,MAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,2BADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAJA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IAAA,YAAA,EADA;AAEA,MAAA,cAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CADA,CAGA;;AAHA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iCAAA,CAJA;;AAAA;AAIA,gBAAA,KAAA,CAAA,cAJA;AAMA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KARA;AASA,IAAA,WATA,yBASA;AACA,WAAA,aAAA,GAAA,KAAA,iBAAA;AACA,KAXA;AAYA,IAAA,iBAZA,+BAYA;AACA,UAAA,aAAA,GAAA,IAAA,YAAA,EAAA;;AACA,UAAA,KAAA,aAAA,EAAA;AACA,QAAA,aAAA,GAAA,KAAA,aAAA;AACA;;AACA,WAAA,KAAA,CAAA,mBAAA,EAAA,aAAA;AACA,KAlBA;AAmBA,IAAA,SAnBA,uBAmBA;AACA,WAAA,KAAA,CAAA,WAAA;AACA,KArBA;AAsBA,IAAA,gBAtBA,8BAsBA;AAAA;;AACA,WAAA,cAAA,GAAA,KAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,SAAA,KAAA,MAAA,CAAA,mBAAA;AAAA,OAAA,CAAA;AACA;AAxBA,GAjBA;AA2CA,EAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA,aADA;AAEA,IAAA,mBAAA,EAAA;AAFA,GA3CA;AA+CA,EAAA,QAAA,EAAA,QAAA,CAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AAAA,KADA;AAEA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,UAAA,CAAA,eAAA;AAAA;AAFA,GAAA,CA/CA;AAmDA,EAAA,OAnDA,qBAmDA;AACA,SAAA,UAAA;AACA,GArDA;AAsDA,EAAA,OAtDA,qBAsDA;AACA;AACA,SAAA,WAAA;AACA;AAzDA,CAAA","sourcesContent":["<template>\n    <v-select\n        :loading=\"loading\"\n        class=\"mt-1\"\n        placeholder=\"Select Parent Account\"\n        v-model=\"parentAccount\"\n        :items=\"parentAccounts\"\n        item-text=\"name\"\n        item-value=\"uuid\"\n        @change=\"emitParentAccount();onChanged()\"\n        return-object\n        clearable\n        outlined>\n        <template slot='selection' slot-scope='{ item }'>\n            {{ item.number }} - {{ item.name }}\n        </template>\n        <template slot='item' slot-scope='{ item }'>\n            {{ item.number }} - {{ item.name }}\n        </template>\n    </v-select>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport AccountModel from \"@/scripts/model/Account\";\n\nexport default {\n    name: 'ParentAccountDropDownList',\n    props: {\n        initParentAccount: {\n            type: Object,\n        },\n        initSecondaryTypeId: {\n            type: String,\n        }\n    },\n    data() {\n        return {\n            parentAccount: new AccountModel(),\n            parentAccounts: [],\n            loading: false\n        }\n    },\n    methods: {\n        async initialize () {\n            this.loading = true;\n            \n            // Call List\n            this.parentAccounts = await this.$store.dispatch('accounting/getSecondaryAccounts');\n\n            this.loading = false;\n        },\n        initialData(){\n            this.parentAccount = this.initParentAccount;\n        },\n        emitParentAccount() {\n            let parentAccount = new AccountModel();\n            if(this.parentAccount){\n                parentAccount = this.parentAccount;\n            }\n            this.$emit('emitParentAccount', parentAccount);\n        },\n        onChanged() {\n            this.$emit('onChanged');\n        },\n        filterByTypeCode(){\n            this.parentAccounts = this.accounts.filter((i) => i.type_code === this.initAccountTypeCode);\n        },\n    },\n    watch: {\n        initParentAccount: \"initialData\",\n        initAccountTypeCode: \"filterByTypeCode\",\n    },\n    computed: mapState({\n        accounts: state => state.accounting.accounts,\n        language: state => state.accounting.accountLanguage,\n    }),\n    created() {\n        this.initialize();\n    },\n    mounted() {\n        /* Initial Obj */\n        this.initialData();\n    }\n}\n</script>"],"sourceRoot":"src/components/dropdownlist"}]}