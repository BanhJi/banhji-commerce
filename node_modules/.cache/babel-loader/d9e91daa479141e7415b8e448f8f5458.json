{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLossByProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLossByProject.vue","mtime":1640595536784},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatementOfProfitOrLossByProject.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n        <v-row class=\"mt-0\">\n          <v-col sm=\"9\" cols=\"9\" class=\"py-0\">\n            <div v-if=\"columnBy === '1'\">\n              <app-searchdate\n                :initStartDate=\"startDate\"\n                @emitStartDate=\"startDate = $event\"\n                :initEndDate=\"endDate\"\n                @emitEndDate=\"endDate = $event\"\n              />\n            </div>\n            <div v-else>\n              <app-fiscal-date-dropdownlist\n                :initFiscalDate=\"fiscalDate\"\n                @emitFiscalDate=\"fiscalDate = $event\"\n              />\n            </div>\n          </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n          <v-col class=\"py-0\" sm=\"3\" cols=\"3\">\n            <label class=\"label\">{{ $t(\"disable_column_by\") }}</label>\n            <v-select\n              class=\"mt-1\"\n              :items=\"columnsBy\"\n              item-text=\"text\"\n              item-value=\"value\"\n              v-model=\"columnBy\"\n              clearable\n              outlined\n            />\n          </v-col>\n          <v-col class=\"py-0\" sm=\"3\" cols=\"3\">\n            <label class=\"label\">{{ $t(\"project\") }}</label>\n            <app-project-dropdownlist\n              :initProject=\"project\"\n              @emitProject=\"project = $event\"\n            />\n          </v-col>\n          <v-col sm=\"3\" cols=\"3\" class=\"py-0\">\n            <div class=\"report_expor\">\n              <label class=\"mb-1\">{{ $t(\"reporting_language\") }}:</label>\n              <app-reporting-language\n                :initLanguage=\"reportingLanguage\"\n                @emitLanguage=\"reportingLanguage = $event\"\n              />\n            </div>\n          </v-col>\n          <v-col class=\"py-0\" sm=\"3\" cols=\"3\">\n            <v-btn class=\"white--text dv_mt\" color=\"primary\" @click=\"search\">\n              {{ $t(\"run_report\") }}\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n          <v-col sm=\"12\" cols=\"12\" class=\"custom_expansion\">\n            <kendo-datasource\n              ref=\"statementPLDS\"\n              :data=\"statementPLList\"\n              :schema=\"schemaDefinition\"\n              :sort=\"sortDefinition\"\n              :group=\"groupDefinition\"\n              :aggregate=\"aggregateDefinition\"\n            />\n\n            <kendo-grid\n              id=\"gridSPL\"\n              class=\"custom_grid\"\n              :data-source-ref=\"'statementPLDS'\"\n              :dataBound=\"dataBound\"\n              :change=\"onGridChanges\"\n              :selectable=\"true\"\n              :persistSelection=\"true\"\n              :sortable=\"true\"\n              :column-menu=\"true\"\n              :reorderable=\"true\"\n              :resizable=\"true\"\n              :noRecords=\"true\"\n              :toolbar=\"['excel']\"\n              :excel-file-name=\"'incomeStatement.xlsx'\"\n              :excel-filterable=\"true\"\n              :columns=\"columns\"\n            />\n          </v-col>\n        </v-row>\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"false\"\n          :myLoading=\"true\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { dataStore } from \"@/observable/store\";\n\n/* Store */\nimport store from \"@/store\";\nconst institute = store.state.institute.institute;\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst { columnsBy } = require(\"@/scripts/default_setup/DateSearch.js\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-fiscal-date-dropdownlist\": () =>\n      import(\"@/components/kendo_templates/FiscalDateDropDownList\"),\n    \"app-project-dropdownlist\": () =>\n      import(\"@/components/dropdownlist/Project\"),\n  },\n  data: () => ({\n    // Obj\n    startDate: \"\",\n    endDate: \"\",\n    statementPLList: [],\n    project: null,\n    columnBy: \"1\", //Default Total\n    columnsBy: columnsBy,\n    fiscalDate: institute.fiscalDate[0],\n    fiscalDates: institute.fiscalDate,\n    fiscalMonths: Helper.generateFiscalMonths(\n      institute.fiscalDate[0].start_date,\n      institute.fiscalDate[0].end_date,\n      \"12\"\n    ),\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    // LodingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    sortDefinition: { field: \"number\", dir: \"asc\" },\n    groupDefinition: [],\n    aggregateDefinition: [\n      { field: \"balance\", aggregate: \"sum\" },\n      { field: \"zero\", aggregate: \"sum\" },\n      { field: \"one\", aggregate: \"sum\" },\n      { field: \"two\", aggregate: \"sum\" },\n      { field: \"three\", aggregate: \"sum\" },\n      { field: \"four\", aggregate: \"sum\" },\n      { field: \"five\", aggregate: \"sum\" },\n      { field: \"six\", aggregate: \"sum\" },\n      { field: \"seven\", aggregate: \"sum\" },\n      { field: \"eight\", aggregate: \"sum\" },\n      { field: \"nine\", aggregate: \"sum\" },\n      { field: \"ten\", aggregate: \"sum\" },\n      { field: \"eleven\", aggregate: \"sum\" },\n    ],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSPL\").data(\"kendoGrid\");\n      let selectedItem = grid.dataItem(grid.select());\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedItem.accountUUID,\n          start_date: this.startDate,\n          end_date: this.endDate,\n        },\n      });\n    },\n    // Search journals\n    search() {\n      if (this.project !== null) {\n        let sdate = this.startDate,\n          edate = this.endDate;\n\n        // Generate Fiscal Months\n        if (this.columnBy !== \"1\") {\n          sdate = this.fiscalDate.start_date;\n          edate = this.fiscalDate.end_date;\n\n          this.fiscalMonths = Helper.generateFiscalMonths(\n            sdate,\n            edate,\n            this.columnBy\n          );\n        }\n\n        if (sdate && edate) {\n          sdate =\n            kendo.toString(new Date(sdate), \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n\n          edate = new Date(edate);\n          edate = kendo.toString(edate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n        } else {\n          sdate = 0;\n          edate = 0;\n        }\n\n        // Empty dataSource\n        let ds = this.$refs.statementPLDS.kendoWidget();\n        ds.data([]);\n\n        // Query\n        this.showLoading = true;\n        incomeStatementHandler\n          .getByProject(\n            {\n              params: {\n                start_date: sdate,\n                end_date: edate,\n                group_by: this.columnBy,\n              },\n            },\n            this.project.id\n          )\n          .then((res) => {\n            if (res.data) {\n              let entries = [];\n              res.data.forEach((value) => {\n                let entry = value;\n\n                // Order\n                if (\n                  value.account_type_number == OrderNumberPL.GrossProfit.number\n                ) {\n                  // Gross Profit\n                  entry.order = OrderNumberPL.GrossProfit.order;\n                } else if (\n                  value.account_type_number == OrderNumberPL.OtherRevenue.number\n                ) {\n                  // Other Revenue\n                  entry.order = OrderNumberPL.OtherRevenue.order;\n                } else if (\n                  value.account_type_number ==\n                  OrderNumberPL.OperatingExpense.number\n                ) {\n                  // Operating Expense\n                  entry.order = OrderNumberPL.OperatingExpense.order;\n                } else if (\n                  value.account_type_number ==\n                  OrderNumberPL.OperatingIncomeEBITDA.number\n                ) {\n                  // Operating Income (EBITDA)\n                  entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n                } else if (\n                  value.account_type_number ==\n                  OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n                ) {\n                  // Earning Before Interest And Tax(EBIT)\n                  entry.order =\n                    OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n                } else if (\n                  value.account_type_number ==\n                  OrderNumberPL.ProfitBeforeTax.number\n                ) {\n                  // Profit Before Tax\n                  entry.order = OrderNumberPL.ProfitBeforeTax.order;\n                } else if (\n                  value.account_type_number ==\n                  OrderNumberPL.ProfitForThePeriod.number\n                ) {\n                  // Profit For The Period\n                  entry.order = OrderNumberPL.ProfitForThePeriod.order;\n                } else {\n                  entry.order = value.account_type_number;\n                }\n\n                entries.push(entry);\n              });\n\n              this.statementPLList = entries;\n              this.generateColumn();\n            }\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        Helper.alertErrorMsg(\"Please select project\");\n      }\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    /* Databound */\n    dataBound(e) {\n      let grid = e.sender;\n\n      grid.dataSource.data().forEach((value) => {\n        if (value.account_type_number >= 100) {\n          let row = grid.tbody\n            .find(\"tr[data-uid='\" + value.uid + \"']\")\n            .prev(\".k-grouping-row\");\n          grid.collapseGroup(row);\n        }\n      });\n    },\n    // Generate Columns\n    generateColumn() {\n      let defaultColumns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          template: this.accountTmpl,\n          locked: true,\n          width: 300,\n        },\n        {\n          field: this.fieldType,\n          title: \"TYPE\",\n          hidden: true,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n          width: 300,\n        },\n        {\n          field: \"statementGroup\",\n          title: \"STATEMENT GROUP\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n        {\n          field: \"groupNature\",\n          title: \"NATURE\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n      ];\n\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      switch (this.columnBy) {\n        case \"12\": // MONTH\n          for (let i = 0; i < 12; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"4\": // QUARTER\n          for (let i = 0; i < 4; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"2\": // SEMI-ANNUAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 400;\n\n          for (let i = 0; i < 2; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 300,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        default:\n          // TOTAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 600;\n\n          defaultColumns.push({\n            field: \"balance\",\n            title: i18n.t(\"total\"),\n            format: \"{0:n}\",\n            width: 300,\n            aggregates: \"['sum']\",\n            groupHeaderColumnTemplate:\n              \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          });\n\n          this.columns = defaultColumns;\n\n          break;\n      }\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n      }\n\n      // Generate Group By\n      this.generateGroupBy();\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      this.groupDefinition = {\n        field: this.fieldType,\n        aggregates: this.aggregateDefinition,\n        compare: function (a, b) {\n          if (a.items[0].order === b.items[0].order) {\n            return 0;\n          } else if (a.items[0].order > b.items[0].order) {\n            return 1;\n          } else {\n            return -1;\n          }\n        },\n      };\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: {\n    appType() {\n      return dataStore.productType;\n    },\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.reports_list {\n  width: 100%;\n  background-color: #fff;\n  padding: 20px 20px 5px;\n}\n.report_filter {\n  background-color: #f8f8f9;\n  padding: 0 20px 5px 20px;\n  position: relative;\n}\n.dv_mt {\n  margin-top: 24px;\n}\n.report_export {\n  position: absolute;\n  top: 15px;\n}\n.report_total {\n  padding: 12.5px;\n  text-align: right;\n  text-transform: uppercase;\n  font-weight: 700;\n  border-top: 1px solid #333;\n  border-bottom: 1px solid #333;\n}\n.custom_expansion\n  .v-expansion-panel-header\n  .v-expansion-panel-header__icon\n  .v-icon {\n  display: none !important;\n}\n.v-expansion-panel {\n  border-bottom: 1px solid #cccccc;\n  border-radius: 0;\n}\n.v-expansion-panel::before {\n  box-shadow: none;\n}\n.v-expansion-panel-header {\n  padding: 15px;\n}\n.v-expansion-panel-content__wrap {\n  padding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n  .dv_mt,\n  .dv_mt8 {\n    margin-top: 0;\n  }\n  .reports_list {\n    margin-top: 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/accounting/reports/statement_profit_lost"}]}