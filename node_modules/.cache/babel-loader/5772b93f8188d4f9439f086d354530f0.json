{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/PaymentOption.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/PaymentOption.vue","mtime":1638499443190},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PaymentOption.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" sm=\"12\">\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 no_border rounded-sm\"\n              color=\"white\">\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-card outlined dense class=\"no_border\">\n                <h2 class=\"mb-0\">{{ $t(\"payment_option\") }}</h2>\n                <v-icon\n                    onclick=\"window.history.go(-1); return false;\"\n                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                    class=\"float-right\">close\n                </v-icon>\n              </v-card>\n              <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                <v-row>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                        $t(\"code\")\n                      }}</label>\n                    <v-text-field\n                        class=\"mt-1\"\n                        tage=\"Number\"\n                        v-model=\"paymentOption.code\"\n                        :rules=\"[v => !!v || $t('is_required')]\"\n                        outlined/>\n                  </v-col>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0\">{{ $t(\"name\") }}</label>\n                    <v-text-field\n                        class=\"mt-1\"\n                        tage=\"Catalog Name\"\n                        v-model=\"paymentOption.name\"\n                        :placeholder=\"$t('name')\"\n                        :rules=\"[v => !!v || $t('is_required')]\"\n                        outlined/>\n                  </v-col>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                        $t(\"type\")\n                      }}</label>\n                    <v-select class=\"mt-1\"\n                              :disabled=\"disabled\"\n                              id=\"acc_type_selector\"\n                              :items=\"paymentTypes\"\n                              v-model=\"paymentOption.type\"\n                              @change=\"TypeChange\"\n                              tage=\"Payment Type\"\n                              :rules=\"[v => !!v || $t('is_required')]\"\n                              outlined/>\n                  </v-col>\n                </v-row>\n                <v-row v-show=\"!isHideBank\">\n                  <v-col sm=\"5\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                        $t(\"account\")\n                      }}</label>\n                    <v-select class=\"mt-1\"\n                              id=\"acc_type_selector\"\n                              :items=\"accounts\"\n                              v-model=\"paymentOption.account\"\n                              item-value=\"id\"\n                              :item-text=\"item =>`${item.number} - ${item.name}`\"\n                              return-object\n                              tage=\"Account\"\n                              :rules=\"[v => !!v || $t('is_required')]\"\n                              outlined/>\n                  </v-col>\n                </v-row>\n              </v-card>\n              <v-card outlined dense class=\"no_border mb-1\" color=\"white\">\n                <v-row v-show=\"isHideBank\">\n                  <v-col sm=\"12\" cols=\"12\" class=\"\">\n                    <v-row>\n                      <v-col sm=\"12\">\n                        <h3 class=\" mb-0\">\n                          {{ $t(\"select_bank_account\") }}\n                        </h3>\n                      </v-col>\n                      <v-col cols=\"12\" sm=\"12\">\n                        <kendo-datasource ref=\"connectedBankDS\"\n                                          :data=\"connectedBanks\"/>\n                        <kendo-grid id=\"gridLeft\" class=\"grid-function\"\n                                    :data-source-ref=\"'connectedBankDS'\"\n                                    :editable=\"false\"\n                                    :scrollable-virtual=\"true\">\n                          <kendo-grid-column\n                              :field=\"'tick'\"\n                              :title=\"$t(' ')\"\n                              :width=\"63\"\n                              :template=\"getRowTemplate\"\n                              :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"/>\n                          <kendo-grid-column\n                              :field=\"'logo'\"\n                              :title=\"$t('logo')\"\n                              :template=\"loadImage\"\n                              :width=\"100\"\n                              :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                          <kendo-grid-column\n                              :field=\"'bank'\"\n                              :title=\"$t('fi')\"\n                              :width=\"200\"\n                              :template=\"bankTemplate\"\n                              :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                          <kendo-grid-column\n                              :field=\"'bankAccount'\"\n                              :title=\"$t('bank_account')\"\n                              :width=\"250\"\n                              :template=\"bankAccountTemplate\"\n                              :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                          <kendo-grid-column\n                              :field=\"'account'\"\n                              :title=\"$t('account')\"\n                              :width=\"250\"\n                              :template=\"accountTemplate\"\n                              :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                        </kendo-grid>\n\n                        <!--                        <v-btn color=\"primary\" @click=\"addRowL\"-->\n                        <!--                               class=\"float-left rounded-0 white&#45;&#45;text mt-3\">-->\n                        <!--                          <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>-->\n                        <!--                        </v-btn>-->\n                      </v-col>\n                    </v-row>\n                  </v-col>\n                </v-row>\n              </v-card>\n              <v-divider/>\n              <v-card outlined dense class=\"no_border function_footer\">\n                <v-btn @click=\"cancel\"\n                       color=\"black\"\n                       outlined\n                       class=\"text-capitalize  black--text float-left\"\n                >{{ $t(\"cancel\") }}\n                </v-btn>\n\n                <v-btn @click=\"onSaveClose\"\n                       color=\"primary\"\n                       class=\"float-right  white--text text-capitalize\"\n                >{{ $t(\"save_close\") }}\n                </v-btn>\n              </v-card>\n            </v-form>\n          </v-card>\n        </v-col>\n      </v-row>\n      <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\"/>\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport PaymentOptionModel from \"@/scripts/model/PaymentOption\";\nimport BankPaymentModel from \"@/scripts/model/BankPaymenOption\";\n// import ConnectedBankModel from \"@/scripts/bank-partner/model/ConnectedBank\";\nimport Row from \"./settings/CheckboxTemplate\";\nimport {bankAccountHandler} from '@/scripts/AppHandlers';\nimport {uuid} from \"vue-uuid\";\nimport {AccountModel, BankModel} from \"@/scripts/model/AppModels\";\nimport AccountMappingModel from '@/scripts/account-map/Account'\n\nconst rowTemplate = Vue.component(Row.name, Row);\n\nconst bankPaymentHandler = require(\"@/scripts/bankPaymentHandler\")\nconst paymentOptionHandler = require(\"@/scripts/paymentOptionHandler\")\n\n// const $ = kendo.jQuery\nconst accountHandler = require(\"@/scripts/handler/accounting/account\")\nconst paymentOptionModel = new PaymentOptionModel({})\nconst bankPaymentModel = new BankPaymentModel({})\nconst {PAYMENT_OPINION_TYPE, TYPE_CUSTOMER} = require(\"@/scripts/default_setup/Setting\");\n\nconst BILL = PAYMENT_OPINION_TYPE.BILL_PAYMENT\nconst CASH = PAYMENT_OPINION_TYPE.CASH_PAYMENT\nconst BANK = PAYMENT_OPINION_TYPE.BANK_TRANSFER\nconst QR = PAYMENT_OPINION_TYPE.QR_PAYMENT\nconst CARD = PAYMENT_OPINION_TYPE.CARD_PAYMENT\nconst OPTION_TYPE = TYPE_CUSTOMER\n\nexport default {\n  name: \"AddPaymentOption\",\n  props: ['id'],\n  components: {\n    LoadingMe: () => import(`@/components/Loading`)\n  },\n  data: () => ({\n    paymentTypes: [CASH, BANK, BILL, QR, CARD],\n    showLoading: false,\n    customerList: [],\n    customers: [],\n    customer: {},\n    supplier: {},\n    valid: true,\n    paymentOption: paymentOptionModel,\n    supplierList: [],\n    accounts: [],\n    mAccount: {},\n    bank: bankPaymentModel,\n    bankCenters: [],\n    connectedBanks: [],\n    isHideBank: false\n  }),\n  methods: {\n    updateSelection(item, value) {\n      const ds = this.$refs.connectedBankDS.kendoWidget()\n      const rows = ds.data()\n      rows.map(row => {\n        if (row.id === item.id) {\n          // row.set('tick', value)\n          row['tick'] = value\n        }\n      })\n      // window.console.log('hello', value);\n      // for (let i = 0; i < this.connectedBanks.length; i++) {\n      //   if (item.id == this.connectedBanks[i].id) {\n      //     this.connectedBanks[i].tick = value;\n      //     break;\n      //   }\n      // }\n      //why is this not reactive? Bug?  Will it be fixed at some point?\n      // this.connectedBanks = Object.assign([], this.connectedBanks);\n    },\n    getRowTemplate(e) {\n      return {\n        template: rowTemplate,\n        templateArgs: Object.assign(this.templateData(e, true))\n      };\n    },\n    templateData(item, isOdd) {\n      window.console.log(isOdd, '----', item)\n      return {\n        dataItem: item,\n        parentComponent: this\n      };\n    },\n    loadImage(dataItem) {\n      const item = dataItem.logo || ''\n      if (item) {\n        return \"<img width='50' height='50' style= 'margin: auto;display: block;' src='\" + item + \"' />\"\n      }\n      return ''\n    },\n    bankTemplate(dataItem) {\n      const item = dataItem.bank\n      if (item) {\n        return `<span>${item.name || ``}</span>`\n      } else {\n        return ``\n      }\n    },\n    bankAccountTemplate(dataItem) {\n      const item = dataItem.bankAccount\n      if (item) {\n        return `<span>${item.number + ' - ' + item.name}</span>`\n      } else {\n        return ``\n      }\n    },\n    accountTemplate(dataItem) {\n      const item = dataItem.account\n      if (item) {\n        return `<span>${item.number + ' - ' + item.name}</span>`\n      } else {\n        return ``\n      }\n    },\n    TypeChange() {\n      this.isHideBank = this.paymentOption.type === BILL || this.paymentOption.type === CARD || this.paymentOption.type === QR || this.paymentOption.type === BANK;\n      this.connectedBanks = []\n      if (this.paymentOption.type) {\n        const type = this.paymentOption.type || ''\n        if (type === BANK) {\n          this.loadBankCenter()\n        } else if (type !== CASH) {\n          this.loadConnectedBank()\n        }\n      }\n    },\n    async loadAccountTypes() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          accountHandler.getAll().then(res => {\n            this.showLoading = false\n            this.accounts = res.data.filter(m => m.account_type.number <= 5).map(item => {\n              return {\n                id: item.uuid,\n                uuid: item.uuid,\n                name: item.name,\n                local_name: item.local_name,\n                number: item.number,\n                is_taxable: item.is_taxable,\n                banhjiAccCode: item.banhjiAccCode,\n                group_code: item.group_code,\n                parent_account: item.parent_account,\n                type_code: item.type_code,\n                account_type: item.account_type\n              }\n            })\n          })\n        }, 10);\n      })\n    },\n    async loadConnectedBank() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          const strFilter = '?type=' + this.paymentOption.type.replace(/ /g, '').toLowerCase()\n          this.showLoading = true\n          bankPaymentHandler.list(strFilter).then(async res => {\n            this.connectedBanks = []\n            this.showLoading = false\n            const result = res.data\n            let banks = []\n            result.forEach(n => {\n              const coa = n.coa || {}\n              let bank = coa.bank || {}\n              const bankId = bank.uuid || ''\n              const bankAccountNumber = coa.number || ''\n              const bankAccountName = coa.name || ''\n              const account = coa.account || {}\n              bank['id'] = bankId\n              bank['name'] = n.bank || ''\n              const obj = {\n                lineId: `lin-${uuid.v1()}`,\n                id: n.id,\n                tick: false,\n                bank: new BankModel(bank),\n                bankAccount: {\n                  number: bankAccountNumber,\n                  name: bankAccountName\n                },\n                account: new AccountMappingModel(account),\n                merchant: n.merchant,\n                logo: n.logo,\n                coa: new AccountModel(n.coa)\n              }\n              banks.push(obj)\n            })\n            if (this.$route.params.id) {\n              const bank = this.paymentOption.bank || []\n              banks.forEach(n => {\n                const find = bank.filter(m => m.id === n.id)\n                if (find) {\n                  n['tick'] = true\n                }\n              })\n              this.connectedBanks = banks\n            } else {\n              this.connectedBanks = banks\n            }\n          }).catch()\n          {\n            // this.showLoading = false\n          }\n        }, 10)\n      })\n    },\n    async initData() {\n      if (this.$route.params.id !== undefined) {\n        await this.loadSinglePaymentOption()\n      } else {\n        this.clear()\n      }\n    },\n    clear() {\n      this.paymentOption = {}\n      this.connectedBanks = []\n      this.bankCenters = []\n    },\n    async onSaveClose() {\n      // if (!this.$refs.form.validate()) {\n      //   this.$refs.form.validate()\n      //   return\n      // }\n      let bank = this.$refs.connectedBankDS.kendoWidget()\n      let row = bank.data().filter(m => m.tick === true).map(item => {\n        return {\n          lineId: item.lineId,\n          id: item.id,\n          tick: item.tick,\n          bank: new BankModel(item.bank),\n          bankAccount: item.bankAccount,\n          account: new AccountMappingModel(item.account),\n          merchant: item.merchant,\n          logo: item.logo,\n          coa: new AccountModel(item.coa)\n        }\n        // return new ConnectedBankModel(item)\n      })\n\n      // window.console.log(row, 'row')\n      // return\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          let account = this.paymentOption.account\n          if (this.paymentOption.type !== CASH) {\n            account = {}\n          } else {\n            row = []\n          }\n          let data = {\n            \"id\": this.paymentOption.id ? this.paymentOption.id : '',\n            \"name\": this.paymentOption.name,\n            \"code\": this.paymentOption.code,\n            \"type\": this.paymentOption.type,\n            \"bank\": row,\n            \"optionType\": OPTION_TYPE,\n            \"account\": account\n          }\n          // window.console.log(JSON.stringify(row), 'row')\n          this.btnEnable = true\n          paymentOptionHandler.create(data).then(response => {\n            if (response.data.statusCode === 201) {\n              // const res = response.data.data\n              this.btnEnable = false\n              this.$snotify.success('Success')\n              this.close()\n            }\n          }).catch(e => {\n            this.btnEnable = false\n            this.$snotify.error('Something went wrong')\n            this.errors.push(e)\n          })\n        }, 10);\n      })\n    },\n    cancel() {\n      window.history.go(-1)\n    },\n    close() {\n      window.history.go(-1)\n      // this.$router.push({\n      //   name: 'Customers', params: {\n      //     data: data\n      //   }\n      // })\n    },\n    async loadSinglePaymentOption() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          this.paymentOptions = []\n          paymentOptionHandler.list('?id=' + this.$route.params.id).then(res => {\n            this.showLoading = true\n            if (res.data.statusCode === 200) {\n              this.showLoading = false\n              const response = res.data.data\n              this.paymentOption = {}\n              if (response.length > 0) {\n                this.paymentOption = response[0]\n                this.connectedBanks = this.paymentOption.bank\n                if (this.paymentOption.type) {\n                  const type = this.paymentOption.type || ''\n                  if (type === BANK) {\n                    this.loadBankCenter()\n                  } else if (type !== CASH) {\n                    this.loadConnectedBank()\n                  }\n                }\n                this.isHideBank = this.paymentOption.type === BILL || this.paymentOption.type === CARD || this.paymentOption.type === QR || this.paymentOption.type === BANK\n              }\n            }\n          })\n        }, 10)\n      })\n    },\n    async loadBankCenter() {\n      this.showLoading = true\n      const bankAccounts = await bankAccountHandler.getAll();\n      this.showLoading = false\n      // window.console.log('bankAccounts', bankAccounts)\n      if (bankAccounts) {\n        const result = await bankAccounts.data;\n        this.connectedBanks = []\n        let banks = []\n        result.forEach(n => {\n          let bank = n.bank || {}\n          const bankId = bank.uuid || ''\n          const bankAccountNumber = n.number || ''\n          const bankAccountName = n.name || ''\n          const account = n.account || {}\n          bank['id'] = bankId\n          const obj = {\n            lineId: `lin-${uuid.v1()}`,\n            id: n.uuid,\n            tick: false,\n            bank: bank,\n            bankAccount: {\n              number: bankAccountNumber,\n              name: bankAccountName\n            },\n            account: account,\n            currency: n.currency || {},\n            merchant: n.merchant || {},\n            logo: n.logo || '',\n            coa: {}\n          }\n          banks.push(obj)\n        })\n        if (this.$route.params.id) {\n          const bank = this.paymentOption.bank || []\n          banks.forEach(n => {\n            const find = bank.filter(m => m.id === n.id)\n            if (find.length > 0) {\n              n['tick'] = true\n            }\n          })\n          this.connectedBanks = banks\n        } else {\n          this.connectedBanks = banks\n        }\n      }\n    },\n  },\n  mounted: async function () {\n    // await this.initGrid(this)\n    // await this.loadConnectedBank()\n    await this.loadAccountTypes()\n    await this.initData()\n  },\n  watch: {\n    id() {\n      if (this.$route.params.id !== undefined) {\n        this.loadSinglePaymentOption()\n      } else {\n        this.clear()\n      }\n    }\n  },\n  computed: {\n    disabled() {\n      return !!this.$route.params.id;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.dropdown-header {\n  border-width: 0 0 1px 0;\n  text-transform: uppercase;\n}\n\n.dropdown-header > span {\n  display: inline-block;\n  padding: 10px;\n}\n\n.dropdown-header > span:first-child {\n  width: 50px;\n}\n\n.k-list-container > .k-footer {\n  padding: 10px;\n}\n\n.function_content {\n  padding: 0 25px 25px;\n  border-bottom: 0;\n  background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n  .container {\n    /* max-width: 1185px; */\n    max-width: 1080px !important;\n  }\n}\n\n.grayBg {\n  background-color: #F8F8F9;\n}\n\n@media (max-width: 576px) {\n  .mb-6 {\n    margin-bottom: 0 !important;\n  }\n}\n\n.section2 {\n  border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n  border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n  width: 100%;\n}\n\n.my_radio [type=\"radio\"] + label {\n  position: relative;\n  padding: 6px;\n  grid-template-columns: 15% 80% !important;\n  display: grid;\n}\n\n.upload_btn {\n  padding: 10px 6px;\n  text-align: center;\n  color: white;\n  margin-top: 15px;\n  margin-bottom: none !important;\n  border-radius: 22px;\n  background: #92d050;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n</style>\n"],"sourceRoot":"src/views/customers"}]}