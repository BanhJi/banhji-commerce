{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/BudgetPerformance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/BudgetPerformance.vue","mtime":1642478961301},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetPerformance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA,OAAA,KAAA,MAAA,oBAAA;AACA,SAAA,IAAA,QAAA,QAAA;AACA,OAAA,MAAA,MAAA,aAAA;AACA;;AACA,OAAA,YAAA,MAAA,yBAAA;AACA,OAAA,eAAA,MAAA,4BAAA;AACA,OAAA,WAAA,MAAA,wBAAA;AACA,OAAA,sBAAA,MAAA,mCAAA;AACA,OAAA,YAAA,MAAA,yBAAA;AAEA;;AACA,SAAA,QAAA,QAAA,sCAAA;AACA,SAAA,kBAAA,QAAA,wCAAA;AAEA;;AACA,SAAA,QAAA,QAAA,MAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,CAAA,qDAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,yCAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,iBAAA;AAAA,aAAA,OAAA,sBAAA,CAAA;AAAA,KADA;AAEA,oCAAA;AAAA,aAAA,OAAA,qDAAA,CAAA;AAAA,KAFA;AAGA,2BAAA;AAAA,aAAA,OAAA,4CAAA,CAAA;AAAA,KAHA;AAIA,8BAAA;AAAA,aAAA,OAAA,4DAAA,CAAA;AAAA,KAJA;AAKA,gBAAA,QALA;AAMA,0BAAA;AANA,GADA;AASA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,IAAA,WAAA,EAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,EAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,UAAA,EAAA,IAAA,eAAA,EANA;AAOA,MAAA,MAAA,EAAA,MAPA;;AAQA;AACA,MAAA,OAAA,EAAA,EATA;AAUA,MAAA,cAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,OAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAFA,CAVA;AAcA,MAAA,KAAA,EAAA;AACA,QAAA,EAAA,EAAA,MADA;AAEA,QAAA,QAAA,EAAA;AAFA,OAdA;AAkBA;AACA,MAAA,iBAAA,EAAA,SAnBA;AAoBA,MAAA,SAAA,EAAA,MApBA;AAqBA;AACA,MAAA,WAAA,EAAA,KAtBA;AAuBA,MAAA,aAAA,EAAA;AAvBA,KAAA;AAAA,GATA;AAkCA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,KADA,EACA;AACA,aAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,wBAAA;AACA,KAHA;AAIA,IAAA,mBAJA,iCAIA;AACA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,IAAA,WAAA,EAAA;;AAEA,UAAA,KAAA,UAAA,KAAA,IAAA,EAAA;AACA;AACA,aAAA,UAAA;AAEA;AACA,KAbA;AAcA,IAAA,gBAdA,8BAcA;AACA,UAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA;AACA,aAAA,QAAA;AACA;AACA,KAnBA;AAoBA,IAAA,UApBA,wBAoBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,aAAA,GAAA,IAAA;AADA;AAAA,uBAEA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,OAFA;AAAA;AAAA,uBAGA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,kBAAA,CAHA;;AAAA;AAGA,gBAAA,QAHA;AAKA,gBAAA,UALA,GAKA,EALA;AAMA,gBAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,sBAAA,KAAA,CAAA,WAAA,CAAA,IAAA,KAAA,KAAA,CAAA,UAAA,CAAA,IAAA,IACA,KAAA,CAAA,YAAA,KAAA,EADA,IAEA,KAAA,CAAA,WAAA,KAAA,UAFA,EAEA;AACA,wBAAA,MAAA,GAAA,IAAA,WAAA,CAAA,KAAA,CAAA;AACA,oBAAA,MAAA,CAAA,OAAA,GAAA,IAAA,YAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,6BAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CAAA,YAAA;AAAA,qBAAA,CAAA,CAAA;AACA,oBAAA,UAAA,CAAA,IAAA,CAAA,MAAA;AACA;AACA,iBARA;AASA,gBAAA,KAAA,CAAA,UAAA,GAAA,UAAA;AACA,gBAAA,KAAA,CAAA,aAAA,GAAA,KAAA;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,KArCA;;AAsCA;AACA,IAAA,MAvCA,oBAuCA;AAAA;;AACA,UAAA,KAAA,MAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AACA,YAAA,KAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,KAAA,UAAA,CAAA,UAAA,CAAA,EAAA,YAAA,IAAA,gBAAA;AAAA,YACA,KAAA,GAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,KAAA,UAAA,CAAA,QAAA,CAAA,EAAA,YAAA,IAAA,gBADA,CADA,CAIA;;AACA,YAAA,EAAA,GAAA,KAAA,KAAA,CAAA,WAAA,CAAA,WAAA,EAAA;AACA,QAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EANA,CAQA;;AACA,aAAA,WAAA,GAAA,IAAA;AACA,QAAA,sBAAA,CAAA,kBAAA,CAAA;AACA,UAAA,MAAA,EAAA;AACA,YAAA,UAAA,EAAA,KADA;AAEA,YAAA,QAAA,EAAA,KAFA;AAGA,YAAA,QAAA,EAAA,IAHA;AAIA,YAAA,YAAA,EAAA,KAAA,MAAA,CAAA;AAJA;AADA,SAAA,EAQA,IARA,CAQA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,IAAA;;AACA,YAAA,MAAA,CAAA,QAAA;AACA,WAHA,MAGA;AACA,YAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,CAAA,uBAAA,CAAA;AACA;AACA,SAfA,EAgBA,OAhBA,CAgBA,YAAA,CACA;AACA,SAlBA;AAmBA,OA7BA,MA6BA;AACA;AACA,aAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,CAAA,sBAAA,CAAA;AACA;AACA,KAzEA;AA0EA,IAAA,QA1EA,sBA0EA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,CADA,GACA,EADA,EACA,QADA,GACA,EADA,EAGA;;AAHA;AAAA,uBAIA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,wBAAA,CAJA;;AAAA;AAMA;AACA,gBAAA,YAPA,GAOA,MAAA,CAAA,oBAAA,CAAA,MAAA,CAAA,UAAA,CAAA,UAAA,EAAA,MAAA,CAAA,UAAA,CAAA,QAAA,EAAA,IAAA,EAAA,SAAA,CAPA;AAQA,gBAAA,YARA,GAQA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CARA;AAUA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA;AACA,sBAAA,OAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,2BAAA,IAAA,CAAA,IAAA,KAAA,KAAA,CAAA,YAAA;AAAA,mBAAA,CAAA;;AACA,sBAAA,OAAA,EAAA;AACA;AACA,wBAAA,KAAA,GAAA,OAAA,CAAA,SAAA;;AACA,wBAAA,OAAA,CAAA,SAAA,KAAA,eAAA,CAAA,aAAA,EAAA;AACA,sBAAA,KAAA,GAAA,aAAA,CAAA,OAAA,CAAA,SAAA,CAAA;AACA;AAEA;;AACA;;;AACA,wBAAA,CAAA,CAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAAA;AACA,sBAAA,CAAA,CAAA,OAAA,CAAA,SAAA,CAAA,GAAA,IAAA,sBAAA,CAAA;AACA,wBAAA,IAAA,EAAA,OAAA,CAAA,SADA;AAEA,wBAAA,MAAA,EAAA,OAAA,CAAA,SAFA;AAGA,wBAAA,IAAA,EAAA,OAAA,CAAA,YAAA,CAAA,IAHA;AAIA,wBAAA,UAAA,EAAA,OAAA,CAAA,YAAA,CAAA,UAJA;AAKA,wBAAA,KAAA,EAAA;AALA,uBAAA,CAAA;AAOA;AAEA;;;AACA,wBAAA,mBAAA,GAAA,EAAA;;AACA,wBAAA,OAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA;AAAA;AACA,4BAAA,oBAAA,GAAA,IAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA;AAAA,4BAAA,OAAA,GAAA,CAAA;;AACA,+BAAA,oBAAA,CAAA,MAAA,KAAA,EAAA,EAAA;AACA;AACA,8BAAA,aAAA,GAAA,IAAA,YAAA,EAAA;;AACA,8BAAA,oBAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AAAA;AACA,4BAAA,aAAA,GAAA,IAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,qCAAA,IAAA,CAAA,IAAA,KAAA,oBAAA,CAAA,IAAA;AAAA,6BAAA,CAAA,CAAA;AACA,2BAFA,MAEA;AAAA;AACA,gCAAA,oBAAA,CAAA,qBAAA,KAAA,EAAA,EAAA;AACA,8BAAA,aAAA,GAAA,IAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,uCAAA,IAAA,CAAA,qBAAA,KAAA,oBAAA,CAAA,qBAAA;AAAA,+BAAA,CAAA,CAAA;AACA;AACA;AAEA;;;AACA,8BAAA,OAAA,KAAA,CAAA,EAAA;AACA,4BAAA,mBAAA,GAAA,aAAA,CAAA,IAAA;AACA;AAEA;;;AACA,8BAAA,UAAA,GAAA,IAAA,YAAA,EAAA;;AACA,8BAAA,aAAA,CAAA,cAAA,CAAA,gBAAA,CAAA,EAAA;AAAA;AACA,kCAAA,qBAAA,GAAA,IAAA,YAAA,CAAA,aAAA,CAAA,cAAA,CAAA;;AACA,kCAAA,qBAAA,CAAA,MAAA,KAAA,EAAA,EAAA;AACA,oCAAA,qBAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AAAA;AACA,kCAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,2CAAA,IAAA,CAAA,IAAA,KAAA,qBAAA,CAAA,IAAA;AAAA,mCAAA,CAAA;AACA,iCAFA,MAEA;AAAA;AACA,sCAAA,qBAAA,CAAA,qBAAA,KAAA,EAAA,EAAA;AACA,oCAAA,UAAA,GAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,6CAAA,IAAA,CAAA,qBAAA,KAAA,qBAAA,CAAA,qBAAA;AAAA,qCAAA,CAAA;AACA;AACA;AACA;AAVA;AAWA;AAEA;;;AACA,8BAAA,QAAA,GAAA,aAAA,CAAA,SAAA;;AACA,8BAAA,UAAA,CAAA,MAAA,KAAA,EAAA,EAAA;AACA,4BAAA,QAAA,GAAA,UAAA,CAAA,IAAA;AAEA;;AACA,4BAAA,MAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,UAAA;AACA,2BALA,MAKA;AACA;AACA,4BAAA,oBAAA,CAAA,MAAA,GAAA,EAAA;AACA;AAEA;;;AACA,0BAAA,CAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA,IAAA,sBAAA,CAAA;AACA,4BAAA,IAAA,EAAA,aAAA,CAAA,IADA;AAEA,4BAAA,MAAA,EAAA,aAAA,CAAA,MAFA;AAGA,4BAAA,IAAA,EAAA,aAAA,CAAA,IAHA;AAIA,4BAAA,UAAA,EAAA,aAAA,CAAA,UAJA;AAKA,4BAAA,QAAA,EAAA,QALA;AAMA,4BAAA,OAAA,EAAA,aANA;AAOA,4BAAA,KAAA,EAAA;AAPA,2BAAA,CAAA;AAUA;;AACA,0BAAA,OAAA;AACA;AAAA;;AA1DA;AA2DA;AAEA;;;AACA,wBAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA;AACA,sBAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,IAAA,sBAAA,CAAA;AACA,wBAAA,IAAA,EAAA,OAAA,CAAA,IADA;AAEA,wBAAA,MAAA,EAAA,OAAA,CAAA,MAFA;AAGA,wBAAA,IAAA,EAAA,OAAA,CAAA,IAHA;AAIA,wBAAA,UAAA,EAAA,OAAA,CAAA,UAJA;AAKA,wBAAA,OAAA,EAAA,OALA;AAMA,wBAAA,KAAA,EAAA;AANA,uBAAA,CAAA;AAQA;AAEA;;;AACA,wBAAA,OAAA,GAAA,OAAA,CAAA,IAAA;;AACA,wBAAA,mBAAA,KAAA,EAAA,EAAA;AAAA;AACA,sBAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,QAAA,GAAA,mBAAA;AACA,qBAFA,MAEA;AAAA;AACA,sBAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,QAAA,GAAA,OAAA,CAAA,SAAA;AAAA;;AAEA,0BAAA,KAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,wBAAA,OAAA,GAAA,OAAA,CAAA,MAAA;AAEA;;AACA,4BAAA,CAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA;AACA,0BAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,IAAA,sBAAA,CAAA;AACA,4BAAA,IAAA,EAAA,OAAA,CAAA,MADA;AAEA,4BAAA,MAAA,EAAA,OAAA,CAAA,MAFA;AAGA,4BAAA,IAAA,EAAA,OAAA,CAAA,IAHA;AAIA,4BAAA,UAAA,EAAA,OAAA,CAAA,UAJA;AAKA,4BAAA,QAAA,EAAA,OAAA,CAAA,IALA;AAMA,4BAAA,OAAA,EAAA,OANA;AAOA,4BAAA,KAAA,EAAA;AAPA,2BAAA,CAAA;AASA;AACA;AACA;AAEA;;;AACA,oBAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AAEA;;AACA,wBAAA,MAAA,GAAA,CAAA;AAAA;;AACA,wBAAA,OAAA,CAAA,YAAA,CAAA,MAAA,CAAA,WAAA,OAAA,IAAA,EAAA;AACA,sBAAA,MAAA,GAAA,CAAA,CAAA;AACA;AAEA;;AACA;;;AACA,oBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,YAAA,GAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AAEA,oBAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA;AACA,0BAAA,KAAA,CAAA,QAAA,KAAA,MAAA,CAAA,OAAA,EAAA;AACA,wBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,YAAA,GAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA;AAEA;;;AACA,0BAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,YAAA,KAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,MAAA,CAAA,OAAA,CAAA,EAAA,YAAA,CAAA,EAAA;AACA,wBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,UAAA,IAAA,KAAA,CAAA,MAAA,GAAA,MAAA;AACA;AACA,qBAVA;AAYA;;AACA,wBAAA,MAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,6BAAA,IAAA,CAAA,WAAA,KAAA,KAAA,CAAA,YAAA;AAAA,qBAAA,CAAA;;AACA,wBAAA,MAAA,EAAA;AACA;AACA,0BAAA,aAAA,GAAA,YAAA,CAAA,YAAA,CAAA,CAFA,CAEA;;AACA,sBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,YAAA,GAAA,MAAA,CAAA,aAAA,CAAA,CAHA,CAGA;;AACA,2BAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,EAAA,EAAA,CAAA,EAAA,EAAA;AACA,4BAAA,QAAA,GAAA,YAAA,CAAA,CAAA,CAAA;AAEA;;AACA,4BAAA,CAAA,IAAA,YAAA,EAAA;AACA,0BAAA,CAAA,CAAA,OAAA,CAAA,CAAA,UAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA;AAEA;;;AACA,wBAAA,CAAA,CAAA,OAAA,CAAA,CAAA,YAAA,IAAA,MAAA,CAAA,QAAA,CAAA;AACA;AACA;AACA;AACA,iBAtKA;AAwKA;;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,sBAAA,KAAA,CAAA,mBAAA,IAAA,GAAA,IAAA,KAAA,CAAA,mBAAA,IAAA,GAAA,EAAA;AACA,oBAAA,CAAA,CAAA,KAAA,CAAA,mBAAA,CAAA,GAAA,IAAA,sBAAA,CAAA;AACA,sBAAA,IAAA,EAAA,KAAA,CAAA,mBADA;AAEA,sBAAA,IAAA,EAAA,KAAA,CAAA,IAFA;AAGA,sBAAA,UAAA,EAAA,KAAA,CAAA,UAHA;AAIA,sBAAA,KAAA,EAAA,aAAA,CAAA,KAAA,CAAA,mBAAA;AAJA,qBAAA,CAAA;AAMA;AACA,iBATA;AAWA;;;AACA,gBAAA,OAhMA,GAgMA,MAAA,CAAA,MAAA,CAAA,CAAA,CAhMA;AAkMA;;AACA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,KADA,GACA,OAAA,CAAA,CAAA,CADA;;AAGA,sBAAA,CAAA,QAAA,CAAA,OAAA,CAAA,KAAA,CAAA,IAAA,CAAA,EAAA;AAAA;AACA,0BAAA,QAAA,GAAA,KAAA,CAAA,QAAA;;AACA,6BAAA,QAAA,KAAA,IAAA,EAAA;AACA,4BAAA,QAAA,EAAA;AACA,8BAAA,MAAA,GAAA,OAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,mCAAA,IAAA,CAAA,IAAA,KAAA,QAAA;AAAA,2BAAA,CAAA;;AACA,8BAAA,MAAA,EAAA;AACA;AACA,4BAAA,MAAA,CAAA,YAAA,IAAA,KAAA,CAAA,YAAA;AACA,4BAAA,MAAA,CAAA,UAAA,IAAA,KAAA,CAAA,UAAA;AACA,4BAAA,MAAA,CAAA,YAAA,IAAA,KAAA,CAAA,YAAA;AAEA;;AACA,4BAAA,MAAA,CAAA,YAAA,IAAA,KAAA,CAAA,YAAA;AACA,4BAAA,MAAA,CAAA,UAAA,IAAA,KAAA,CAAA,UAAA;AACA,4BAAA,MAAA,CAAA,YAAA,IAAA,KAAA,CAAA,YAAA;AAEA;;AACA,4BAAA,QAAA,GAAA,MAAA,CAAA,QAAA;AACA,2BAbA,MAaA;AACA;AACA,4BAAA,QAAA,GAAA,IAAA;AACA;AACA,yBAnBA,MAmBA;AACA;AACA,0BAAA,QAAA,GAAA,IAAA;AACA;AACA;AA1BA;AA2BA;AACA;AAEA;;AACA;;;AACA,gBAAA,OAtOA,GAsOA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,OAAA,CAtOA,EAuOA,UAvOA,GAuOA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,IAAA,CAvOA,EAwOA,WAxOA,GAwOA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,YAAA;AAAA,iBAAA,CAxOA;AA0OA;;AACA,gBAAA,aA3OA,GA2OA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,cAAA,CA3OA,EA4OA,aA5OA,GA4OA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,cAAA,CA5OA,EA6OA,0BA7OA,GA6OA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,4BAAA,CA7OA,EA8OA,oBA9OA,GA8OA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,sBAAA,CA9OA,EA+OA,oBA/OA,GA+OA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,qBAAA,CA/OA,EAgPA,iBAhPA,GAgPA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,iBAAA;AAAA,iBAAA,CAhPA,EAiPA,YAjPA,GAiPA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,aAAA,CAjPA,EAkPA,qBAlPA,GAkPA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,uBAAA;AAAA,iBAAA,CAlPA;AAoPA;;AACA,gBAAA,YArPA,GAqPA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,YAAA,CArPA,EAsPA,aAtPA,GAsPA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,aAAA,CAtPA,EAuPA,+BAvPA,GAuPA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,oCAAA;AAAA,iBAAA,CAvPA;AAyPA;;AACA,gBAAA,aA1PA,GA0PA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,cAAA,CA1PA,EA2PA,eA3PA,GA2PA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,iBAAA;AAAA,iBAAA,CA3PA;AA6PA;;AACA,gBAAA,kBA9PA,GA8PA,MAAA,CAAA,QAAA,CAAA,OAAA,EAAA,eAAA,CAAA,GAAA,CA9PA,EA+PA,kBA/PA,GA+PA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,IAAA,KAAA,eAAA,CAAA,qBAAA;AAAA,iBAAA,CA/PA;AAiQA;;AACA;;AACA,gBAAA,WAAA,CAAA,YAAA,GAAA,OAAA,CAAA,YAAA,GAAA,UAAA,CAAA,YAAA;AACA,gBAAA,iBAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,0BAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA;AACA,gBAAA,qBAAA,CAAA,YAAA,GAAA,WAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,iBAAA,CAAA,YAAA;AACA,gBAAA,+BAAA,CAAA,YAAA,GAAA,qBAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,eAAA,CAAA,YAAA,GAAA,+BAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,kBAAA,CAAA,YAAA,GAAA,eAAA,CAAA,YAAA,GAAA,kBAAA,CAAA,YAAA;AAEA;;AACA,gBAAA,WAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,GAAA,UAAA,CAAA,UAAA;AACA,gBAAA,iBAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA,GAAA,0BAAA,CAAA,UAAA,GAAA,oBAAA,CAAA,UAAA,GAAA,oBAAA,CAAA,UAAA;AACA,gBAAA,qBAAA,CAAA,UAAA,GAAA,WAAA,CAAA,UAAA,GAAA,YAAA,CAAA,UAAA,GAAA,iBAAA,CAAA,UAAA;AACA,gBAAA,+BAAA,CAAA,UAAA,GAAA,qBAAA,CAAA,UAAA,GAAA,YAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA;AACA,gBAAA,eAAA,CAAA,UAAA,GAAA,+BAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA;AACA,gBAAA,kBAAA,CAAA,UAAA,GAAA,eAAA,CAAA,UAAA,GAAA,kBAAA,CAAA,UAAA;AAEA;;AACA,gBAAA,WAAA,CAAA,YAAA,GAAA,OAAA,CAAA,YAAA,GAAA,UAAA,CAAA,YAAA;AACA,gBAAA,iBAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,0BAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA;AACA,gBAAA,qBAAA,CAAA,YAAA,GAAA,WAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,iBAAA,CAAA,YAAA;AACA,gBAAA,+BAAA,CAAA,YAAA,GAAA,qBAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,eAAA,CAAA,YAAA,GAAA,+BAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,kBAAA,CAAA,YAAA,GAAA,eAAA,CAAA,YAAA,GAAA,kBAAA,CAAA,YAAA;AAEA;;AACA;;AACA,gBAAA,WAAA,CAAA,YAAA,GAAA,OAAA,CAAA,YAAA,GAAA,UAAA,CAAA,YAAA;AACA,gBAAA,iBAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,0BAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA;AACA,gBAAA,qBAAA,CAAA,YAAA,GAAA,WAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,iBAAA,CAAA,YAAA;AACA,gBAAA,+BAAA,CAAA,YAAA,GAAA,qBAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,eAAA,CAAA,YAAA,GAAA,+BAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,kBAAA,CAAA,YAAA,GAAA,eAAA,CAAA,YAAA,GAAA,kBAAA,CAAA,YAAA;AAEA;;AACA,gBAAA,WAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,GAAA,UAAA,CAAA,UAAA;AACA,gBAAA,iBAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA,GAAA,0BAAA,CAAA,UAAA,GAAA,oBAAA,CAAA,UAAA,GAAA,oBAAA,CAAA,UAAA;AACA,gBAAA,qBAAA,CAAA,UAAA,GAAA,WAAA,CAAA,UAAA,GAAA,YAAA,CAAA,UAAA,GAAA,iBAAA,CAAA,UAAA;AACA,gBAAA,+BAAA,CAAA,UAAA,GAAA,qBAAA,CAAA,UAAA,GAAA,YAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA;AACA,gBAAA,eAAA,CAAA,UAAA,GAAA,+BAAA,CAAA,UAAA,GAAA,aAAA,CAAA,UAAA;AACA,gBAAA,kBAAA,CAAA,UAAA,GAAA,eAAA,CAAA,UAAA,GAAA,kBAAA,CAAA,UAAA;AAEA;;AACA,gBAAA,WAAA,CAAA,YAAA,GAAA,OAAA,CAAA,YAAA,GAAA,UAAA,CAAA,YAAA;AACA,gBAAA,iBAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA,GAAA,0BAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA,GAAA,oBAAA,CAAA,YAAA;AACA,gBAAA,qBAAA,CAAA,YAAA,GAAA,WAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,iBAAA,CAAA,YAAA;AACA,gBAAA,+BAAA,CAAA,YAAA,GAAA,qBAAA,CAAA,YAAA,GAAA,YAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,eAAA,CAAA,YAAA,GAAA,+BAAA,CAAA,YAAA,GAAA,aAAA,CAAA,YAAA;AACA,gBAAA,kBAAA,CAAA,YAAA,GAAA,eAAA,CAAA,YAAA,GAAA,kBAAA,CAAA,YAAA;AAEA;;AACA,gBAAA,OAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,kBAAA,KAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,YAAA,EAAA,KAAA,CAAA,YAAA,CAAA;AACA,kBAAA,KAAA,CAAA,cAAA,GAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,UAAA,EAAA,KAAA,CAAA,UAAA,CAAA;AACA,kBAAA,KAAA,CAAA,gBAAA,GAAA,MAAA,CAAA,cAAA,CAAA,KAAA,CAAA,YAAA,EAAA,KAAA,CAAA,YAAA,CAAA;AACA,iBAJA;AAMA;;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,OAAA;;AACA,gBAAA,MAAA,CAAA,cAAA;;AAEA,gBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;;AA9TA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+TA,KAzYA;AA0YA,IAAA,QA1YA,oBA0YA,OA1YA,EA0YA,EA1YA,EA0YA;AACA,aAAA,IAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA,KAAA,EAAA;AAAA,OAAA,CAAA,CAAA;AACA,KA5YA;AA6YA,IAAA,cA7YA,0BA6YA,MA7YA,EA6YA,MA7YA,EA6YA;AACA,UAAA,MAAA,GAAA,CAAA;;AACA,UAAA,MAAA,KAAA,CAAA,EAAA;AACA,QAAA,MAAA,GAAA,MAAA,GAAA,MAAA;AACA;;AAEA,aAAA,MAAA;AACA,KApZA;;AAqZA;AACA,IAAA,WAtZA,uBAsZA,CAtZA,EAsZA;AACA,UAAA,OAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,EAAA,GAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA;AACA,QAAA,EAAA,CAAA,GAAA,CAAA,aAAA,EAAA,MAAA;AACA,QAAA,EAAA,CAAA,GAAA,CAAA,YAAA,EAAA,QAAA;AACA;;AAEA,UAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,GAAA,GAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AACA,YAAA,QAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA;AAEA;;AACA,QAAA,GAAA,CAAA,GAAA,CAAA,YAAA,EAAA,OAAA;AAEA;;AACA,YAAA,QAAA,CAAA,GAAA,CAAA,aAAA,KAAA,QAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,GAAA,CAAA,aAAA,EAAA,MAAA;AACA;AACA;AACA,KA3aA;AA4aA;AACA,IAAA,cA7aA,4BA6aA;AACA,UAAA,gBAAA,GAAA;AACA,iBAAA,mBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAAA,UAIA,mBAAA,GAAA;AACA,iBAAA,mBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAJA;AAAA,UAQA,UAAA,GAAA;AACA,iBAAA,YADA;AAEA,QAAA,KAAA,EAAA;AAFA,OARA;AAaA;;AACA,UAAA,OAAA,GAAA,CACA;AACA,QAAA,KAAA,EAAA,KAAA,SADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAFA;AAGA,QAAA,QAAA,EAAA,KAAA,QAHA;AAIA,QAAA,MAAA,EAAA,IAJA;AAKA,QAAA,KAAA,EAAA;AALA,OADA;AAQA;AACA;AACA,QAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA,KAAA,OAAA,CAAA,EAAA,WAAA,CADA;AAEA,QAAA,gBAAA,EAAA,gBAFA;AAGA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SADA,EASA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SATA,EAiBA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SAjBA;AAHA,OATA;AAuCA;AACA;AACA,QAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,0BAAA,CADA;AAEA,QAAA,gBAAA,EAAA,gBAFA;AAGA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,YADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SADA,EASA;AACA,UAAA,KAAA,EAAA,YADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SATA,EAiBA;AACA,UAAA,KAAA,EAAA,gBADA;AAEA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SAjBA;AAHA,OAxCA;AAsEA;AACA;AACA,QAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,YAAA,CADA;AAEA,QAAA,gBAAA,EAAA,gBAFA;AAGA,QAAA,OAAA,EAAA,CACA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SADA,EASA;AACA,UAAA,KAAA,EAAA,cADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SATA,EAiBA;AACA,UAAA,KAAA,EAAA,kBADA;AAEA,UAAA,KAAA,EAAA,GAFA;AAGA,UAAA,MAAA,EAAA,OAHA;AAIA,UAAA,KAAA,EAAA,GAJA;AAKA,UAAA,gBAAA,EAAA,mBALA;AAMA,UAAA,UAAA,EAAA;AANA,SAjBA;AAHA,OAvEA,CAAA;AAuGA;;AACA,WAAA,OAAA,GAAA,OAAA;AACA,KAriBA;AAsiBA;AACA,IAAA,0BAviBA,wCAuiBA;AACA,WAAA,SAAA,GAAA,MAAA;;AACA,UAAA,KAAA,iBAAA,KAAA,OAAA,EAAA;AACA,aAAA,SAAA,GAAA,YAAA;AACA,OAJA,CAMA;;;AACA,WAAA,cAAA;AACA,KA/iBA;;AAgjBA;AACA,IAAA,QAjjBA,oBAijBA,QAjjBA,EAijBA;AACA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,IAAA;;AACA,UAAA,KAAA,iBAAA,KAAA,OAAA,EAAA;AACA,QAAA,IAAA,GAAA,QAAA,CAAA,UAAA;AACA;AAEA;;;AACA,UAAA,MAAA,mBAAA,QAAA,CAAA,MAAA,gBAAA,IAAA,YAAA;AAEA;;AACA,UAAA,QAAA,CAAA,QAAA,KAAA,IAAA,EAAA;AACA,QAAA,MAAA,gDAAA,IAAA,YAAA;AACA;AAEA;;;AACA,UAAA,QAAA,CAAA,WAAA,IAAA,QAAA,CAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,MAAA,gDAAA,QAAA,CAAA,MAAA,gBAAA,IAAA,YAAA;AACA;;AAEA,aAAA,MAAA;AACA;AAtkBA,GAlCA;AA0mBA,EAAA,QAAA,EAAA,QAAA,CAAA;AACA,IAAA,QAAA,EAAA,kBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AAAA;AADA,GAAA,CA1mBA;AA6mBA,EAAA,OA7mBA,qBA6mBA,CACA;AA9mBA,CAAA","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <!-- Title -->\n        <v-row>\n            <v-col sm=\"5\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('budget_performance_report')}}</h3>\n                <p class=\"mb-0\">{{$t('a_detail_breakdown_of_budget_by_months')}}</p>\n            </v-col>\n             <v-col sm=\"7\" cols=\"12\" class=\"pb-1\">\n                <app-reporting-language \n                    :initLanguage=\"reportingLanguage\" \n                    @emitLanguage=\"reportingLanguage = $event\" \n                    @onChanged=\"onReportingLanguageChanges\" />\n            </v-col>\n        </v-row>\n\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                    @onChanged=\"onFiscalDateChanges\"\n                />\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-0\">\n                <app-month-of-picker \n                    :initMonthOf=\"monthOf\" \n                    @emitMonthOf=\"monthOf = $event\"\n                    @onChanged=\"onMonthOfChanges\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-0\">\n                <v-select class=\"mt-1\"\n                    :disabled=\"monthOf === ''\"\n                    placeholder=\"Select Budget\"\n                    v-model=\"budget\"\n                    :loading=\"loadingBudget\"\n                    :items=\"budgetList\"\n                    item-text=\"name\"\n                    item-value=\"uuid\"\n                    return-object\n                    clearable\n                    outlined />\n            </v-col>\n            <v-col sm=\"2\" cols=\"12\" class=\"py-1\">\n                <v-btn\n                    class=\"white--text\"\n                    color=\"primary\"\n                    @click=\"search\"\n                >\n                    <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                </v-btn>\n            </v-col>\n           \n        </v-row>\n\n        <!-- Summary -->\n        <v-row>\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                            <tr>\n                                <td style=\"width: 45%;font-weight: 900\">{{$t('budget_name')}}:</td>\n                                <td class=\"\">{{ budget.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"segment\") }}:</td>\n                                <td class=\"\" v-if=\"budget.segment\">{{ budget.segment.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"fiscal_year\") }}:</td>\n                                <td class=\"\" v-if=\"budget.fiscal_year\">{{ Helper.formatFiscalDate(budget.fiscal_year.start_date) }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{$t('used_for_consolidation')}}</td>\n                                <td class=\"\">{{ budget.use_consolidation === 1 ? 'Yes' : 'No' }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                               <tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_by.email\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{budget.created_by.email}}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_at\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_date\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ formatDateTime(budget.created_date) }}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_at\") }}:</td>\n                                            <td v-if=\"budget.modified_date\">\n\t\t\t\t\t\t\t\t\t\t\t{{ formatDateTime(budget.modified_date) }}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"\" v-if=\"budget.modified_by.email\">{{budget.modified_by.email}}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n        </v-row>\n        \n        <!-- Table -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <treelistdatasource \n                        ref=\"statementDS\"\n                        :data=\"statementList\"\n                        :sort=\"sortDefinition\"\n                        :schema-model=\"model\" />\n\n                    <treelist \n                        ref=\"statementTreeList\"\n                        data-source-ref=\"statementDS\"\n                        :resizable=\"true\"\n                        :columns=\"columns\"\n                        :dataBound=\"onDataBound\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import AccountModel from \"@/scripts/model/Account\";\n    import FiscalDateModel from \"@/scripts/model/FiscalDate\";\n    import BudgetModel from \"@/scripts/model/Budget\";\n    import BudgetPerformanceModel from \"@/scripts/model/BudgetPerformance\";\n    import SegmentModel from \"@/scripts/model/Segment\";\n    \n    /* TreeList */\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n    \n    /* Vuex */\n    import { mapState } from 'vuex';\n\n    const incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n    const AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            \"app-month-of-picker\": () => import('@/components/kendo_templates/MonthOfPicker'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            monthOf : '',\n            budget : new BudgetModel(),\n            budgetList : [],\n            statements : [],\n            statementList : [],\n            fiscalDate: new FiscalDateModel(),\n            Helper : Helper,\n            /* Kendo */\n            columns : [],\n            sortDefinition : [\n                { field: \"order\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n\t\t\tmodel: {\n                id: \"uuid\",\n                expanded: true\n            },\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n            // LoadingMe\n            showLoading: false,\n            loadingBudget: false,\n        }),\n        methods:{\n            formatDateTime(value) {\n                return kendo.toString(new Date(value), `dd-MMM-yyyy h:mm tt`);\n            },\n            onFiscalDateChanges(){\n                this.monthOf = '';\n                this.budget = new BudgetModel();\n\n                if(this.fiscalDate !== null){\n                    /* Load Budget */\n                    this.loadBudget();\n\n                }\n            },\n            onMonthOfChanges () {\n                if(this.statementList.length > 0){\n                    /* Bind Data */\n                    this.bindData();\n                }\n            },\n            async loadBudget(){\n                this.loadingBudget = true;\n                let budgets = await this.$store.dispatch('budgets/getList'),\n                    segments = await this.$store.dispatch('segments/getList');\n\n                let budgetList = [];\n                budgets.forEach(value => {\n                    if(value.fiscal_year.uuid === this.fiscalDate.uuid \n                        && value.segment_uuid !== '' \n                        && value.budget_type === 'standard'){\n                        let budget = new BudgetModel(value);\n                        budget.segment = new SegmentModel(segments.find(i => i.id === value.segment_uuid));\n                        budgetList.push(budget);\n                    }\n                });\n                this.budgetList = budgetList;\n                this.loadingBudget = false;\n            },\n            /* Search */\n            search () {\n                if(this.budget.uuid !== ''){\n                    let sdate = kendo.toString(new Date(this.fiscalDate.start_date), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                        edate = kendo.toString(new Date(this.fiscalDate.end_date), 'yyyy-MM-dd') + 'T23:59:59.999Z';\n                    \n                    // Empty statementDS\n                    let ds = this.$refs.statementDS.kendoWidget();\n                    ds.data([]);\n                        \n                    // Query Income Statement\n                    this.showLoading = true;\n                    incomeStatementHandler.getIncomeStatement({\n                        params : {\n                            start_date \t\t: sdate,\n                            end_date \t\t: edate,\n                            group_by \t\t: \"12\",\n                            segment_uuid    : this.budget.segment_uuid,\n                        }\n                    })\n                    .then(res => {\n                        if(res){\n                            this.statements = res.data;\n                            this.bindData();\n                        }else{\n                            this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                        }\n                    })\n                    .finally(()=>{\n                        // this.showLoading = false;\n                    });\n                }else{\n                    /* Alert Warning */\n                    this.$snotify.warning(i18n.t(\"please_select_budget\"));\n                }\n\t\t\t},\n            async bindData () {\n                let g = {}, childIds = [];\n\n                // Load Account List\n                await this.$store.dispatch('accounting/getAccounts');\n                \n                /* Generate Months */\n                let fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\", \"yyyy-MM\");\n                let monthOfIndex = fiscalMonths.indexOf(this.monthOf);\n                \n                /* Gathering from budget lines */\n                this.budget.lines.forEach(value => {\n                    /* Get Account Information */\n                    let account = this.accounts.find(item => item.uuid === value.account_uuid);\n                    if(account){\n                        /* Order */\n                        let order = account.type_code;\n                        if(account.type_code === AccountTypeCode.OTHER_REVENUE){\n                            order = OrderNumberPL[account.type_code];\n                        }\n\n                        /* GROUPING */\n                        /* Top Level Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new BudgetPerformanceModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.account_type.local_name,\n                                order : order,\n                            });\n                        }\n                        \n                        /* Parent Level */\n                        let thisAccountParentId = \"\";\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            let currentParentAccount = new AccountModel(account.parent_account), counter = 0;\n                            while (currentParentAccount.number !== \"\") {\n                                /* Get account by uuid or banhji_account_number */\n                                let accountParent = new AccountModel();\n                                if(currentParentAccount.uuid !== \"\"){/* Get by uuid */\n                                    accountParent = new AccountModel(this.accounts.find((item) => item.uuid === currentParentAccount.uuid));\n                                }else{/* Get by banhji_account_number because default data has no uuid */\n                                    if(currentParentAccount.banhji_account_number !== \"\"){\n                                        accountParent = new AccountModel(this.accounts.find((item) => item.banhji_account_number === currentParentAccount.banhji_account_number));\n                                    }\n                                }\n\n                                /* Set This Account Parent Id */\n                                if(counter === 0){\n                                    thisAccountParentId = accountParent.uuid;\n                                }\n\n                                /* Find Next Parent */\n                                let nextParent = new AccountModel();\n                                if(accountParent.hasOwnProperty(\"parent_account\")){\n                                    let parentOfAccountParent = new AccountModel(accountParent.parent_account);\n                                    if(parentOfAccountParent.number !== \"\"){\n                                        if(parentOfAccountParent.uuid !== \"\"){/* Get by uuid */\n                                            nextParent = this.accounts.find((item) => item.uuid === parentOfAccountParent.uuid);\n                                        }else{/* Get by banhji_account_number because default data has no uuid */\n                                            if(parentOfAccountParent.banhji_account_number !== \"\"){\n                                                nextParent = this.accounts.find((item) => item.banhji_account_number === parentOfAccountParent.banhji_account_number);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                /* Set Parent Id */\n                                let parentId = accountParent.type_code;\n                                if(nextParent.number !== \"\"){\n                                    parentId = nextParent.uuid;\n\n                                    /* Set next parent account */\n                                    Object.assign(currentParentAccount, nextParent);\n                                }else{\n                                    /* Set loop to end */\n                                    currentParentAccount.number = \"\";\n                                }\n\n                                /* Add Parent Level */\n                                g[accountParent.uuid] = new BudgetPerformanceModel({\n                                    uuid : accountParent.uuid,\n                                    number : accountParent.number,\n                                    name : accountParent.name,\n                                    local_name : accountParent.local_name,\n                                    parentId : parentId,\n                                    account : accountParent,\n                                    order : order,\n                                });\n\n                                /* Increase Counter By 1 */\n                                counter++;\n                            }/* End While Loop */\n                        }\n\n                        /* Child Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new BudgetPerformanceModel({\n                                uuid : account.uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                account : account,\n                                order : order,\n                            });\n                        }\n\n                        /* Set Parent Id Or Self Parent */\n                        let acctKey = account.uuid;\n                        if(thisAccountParentId !== \"\"){/* Child Level */\n                            g[account.uuid].parentId = thisAccountParentId;\n                        }else{/* Child As Parent */\n                            g[account.uuid].parentId = account.type_code; /* Self As Parent */\n\n                            if(value.amount !== 0){\n                                acctKey = account.number;\n\n                                /* Self As Child With Balance */\n                                if(!g[account.number]){\n                                    g[account.number] = new BudgetPerformanceModel({\n                                        uuid : account.number,\n                                        number : account.number,\n                                        name : account.name,\n                                        local_name : account.local_name,\n                                        parentId : account.uuid,\n                                        account : account,\n                                        order : order,\n                                    });\n                                }\n                            }\n                        }\n\n                        /* Child Id */\n                        childIds.push(acctKey);\n\n                        /* Reverse Nature */\n                        let nature = 1; /* Default Naure is Dr = 1 */\n                        if(account.account_type.nature.toLowerCase() === \"cr\"){\n                            nature = -1;\n                        }\n\n                        /* BUDGET */\n                        /* Budget Whole */\n                        g[acctKey].budget_whole = value.amount * nature;\n                        \n                        value.monthly_amount.forEach(mline => {\n                            /* Budget Month */\n                            if(mline.month_of === this.monthOf){\n                                g[acctKey].budget_month = mline.amount * nature;\n                            }\n\n                            /* Budget YTD */\n                            if (kendo.toString(new Date(mline.month_of),\"yyyy-MM-dd\") <= kendo.toString(new Date(this.monthOf),\"yyyy-MM-dd\")) {\n                                g[acctKey].budget_ytd += mline.amount * nature;\n                            }\n                        });\n\n                        /* ACTUAL */\n                        let actual = this.statements.find((item) => item.accountUUID === value.account_uuid);\n                        if(actual){\n                            /* Actual Month */\n                            let propertyMonth = NumberInWord[monthOfIndex];// ['zero','one','two',...]\n                            g[acctKey].actual_month = actual[propertyMonth];// actual['zero']\n                            for (let i = 0; i < 12; i++) {\n                                let property = NumberInWord[i];\n\n                                /* Actual YTD */\n                                if(i <= monthOfIndex){\n                                    g[acctKey].actual_ytd += actual[property];\n                                }\n\n                                /* Actual Whole */\n                                g[acctKey].actual_whole += actual[property];\n                            }\n                        }\n                    }\n                });\n\n                /* Budget Estimations */\n                this.budget.budget_estimations.forEach(value => {\n                    if(value.account_type_number >= 100 && value.account_type_number <= 105){\n                        g[value.account_type_number] = new BudgetPerformanceModel({\n                            uuid: value.account_type_number,\n                            name: value.name,\n                            local_name: value.local_name,\n                            order: OrderNumberPL[value.account_type_number],\n                        });\n                    }\n                });\n\n                /* Parse Object Array */\n                let entries = Object.values(g);\n                \n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    /* Budget */\n                                    parent.budget_month += entry.budget_month;\n                                    parent.budget_ytd += entry.budget_ytd;\n                                    parent.budget_whole += entry.budget_whole;\n\n                                    /* Actual */\n                                    parent.actual_month += entry.actual_month;\n                                    parent.actual_ytd += entry.actual_ytd;\n                                    parent.actual_whole += entry.actual_whole;\n\n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n\n                /* Other Groups */\n                /* Gross Profit */\n                let revenue = this.getEntry(entries, AccountTypeCode.REVENUE),\n                    costOfSale = this.getEntry(entries, AccountTypeCode.COGS),\n                    grossProfit = entries.find((i)=>i.uuid === AccountTypeCode.GROSS_PROFIT);\n\n                /* EBITDA */\n                let salaryBenefit = this.getEntry(entries, AccountTypeCode.SALARY_BENEFIT),\n                    saleMarketing = this.getEntry(entries, AccountTypeCode.SALE_MARKETING),\n                    researchProductDevelopment = this.getEntry(entries, AccountTypeCode.RESEARCH_PRODUCT_DEVELOPMENT),\n                    legalProfessionalFee = this.getEntry(entries, AccountTypeCode.LEGAL_PROFESSIONAL_FEE),\n                    generalAdminExpenses = this.getEntry(entries, AccountTypeCode.GENERAL_ADMIN_EXPENSE),\n                    operatingExpenses = entries.find((i)=>i.uuid === AccountTypeCode.OPERATING_EXPENSE),\n                    otherRevenue = this.getEntry(entries, AccountTypeCode.OTHER_REVENUE),\n                    operatingIncomeEBITDA = entries.find((i)=>i.uuid === AccountTypeCode.OPERATING_INCOME_EBITDA);\n\n                /* EBIT */\n                let depreciation = this.getEntry(entries, AccountTypeCode.DEPRECIATION),\n                    otherExpenses = this.getEntry(entries, AccountTypeCode.OTHER_EXPENSE),\n                    earningBeforeInterestAndTaxEBIT = entries.find((i)=>i.uuid === AccountTypeCode.EARNING_BEFORE_INTEREST_AND_TAX_EBIT);\n\n                /* Profit Before Tax */\n                let financingCost = this.getEntry(entries, AccountTypeCode.FINANCING_COST),\n                    profitBeforeTax = entries.find((i)=>i.uuid === AccountTypeCode.PROFIT_BEFORE_TAX);\n\n                /* Profit For The Period */\n                let taxRelatedExpenses = this.getEntry(entries, AccountTypeCode.TAX),\n                    profitForThePeriod = entries.find((i)=>i.uuid === AccountTypeCode.PROFIT_FOR_THE_PERIOD);\n\n                /* BUDGET */\n                /* Budget Month */\n                grossProfit.budget_month = revenue.budget_month - costOfSale.budget_month;\n                operatingExpenses.budget_month = salaryBenefit.budget_month + saleMarketing.budget_month + researchProductDevelopment.budget_month + legalProfessionalFee.budget_month + generalAdminExpenses.budget_month;\n                operatingIncomeEBITDA.budget_month = (grossProfit.budget_month + otherRevenue.budget_month) - operatingExpenses.budget_month;\n                earningBeforeInterestAndTaxEBIT.budget_month = operatingIncomeEBITDA.budget_month - depreciation.budget_month - otherExpenses.budget_month;\n                profitBeforeTax.budget_month = earningBeforeInterestAndTaxEBIT.budget_month - financingCost.budget_month;\n                profitForThePeriod.budget_month = profitBeforeTax.budget_month - taxRelatedExpenses.budget_month;\n\n                /* Budget YTD */\n                grossProfit.budget_ytd = revenue.budget_ytd - costOfSale.budget_ytd;\n                operatingExpenses.budget_ytd = salaryBenefit.budget_ytd + saleMarketing.budget_ytd + researchProductDevelopment.budget_ytd + legalProfessionalFee.budget_ytd + generalAdminExpenses.budget_ytd;\n                operatingIncomeEBITDA.budget_ytd = (grossProfit.budget_ytd + otherRevenue.budget_ytd) - operatingExpenses.budget_ytd;\n                earningBeforeInterestAndTaxEBIT.budget_ytd = operatingIncomeEBITDA.budget_ytd - depreciation.budget_ytd - otherExpenses.budget_ytd;\n                profitBeforeTax.budget_ytd = earningBeforeInterestAndTaxEBIT.budget_ytd - financingCost.budget_ytd;\n                profitForThePeriod.budget_ytd = profitBeforeTax.budget_ytd - taxRelatedExpenses.budget_ytd;\n\n                /* Budget Whole */\n                grossProfit.budget_whole = revenue.budget_whole - costOfSale.budget_whole;\n                operatingExpenses.budget_whole = salaryBenefit.budget_whole + saleMarketing.budget_whole + researchProductDevelopment.budget_whole + legalProfessionalFee.budget_whole + generalAdminExpenses.budget_whole;\n                operatingIncomeEBITDA.budget_whole = (grossProfit.budget_whole + otherRevenue.budget_whole) - operatingExpenses.budget_whole;\n                earningBeforeInterestAndTaxEBIT.budget_whole = operatingIncomeEBITDA.budget_whole - depreciation.budget_whole - otherExpenses.budget_whole;\n                profitBeforeTax.budget_whole = earningBeforeInterestAndTaxEBIT.budget_whole - financingCost.budget_whole;\n                profitForThePeriod.budget_whole = profitBeforeTax.budget_whole - taxRelatedExpenses.budget_whole;\n\n                /* ACTUAL */\n                /* Actual Month */\n                grossProfit.actual_month = revenue.actual_month - costOfSale.actual_month;\n                operatingExpenses.actual_month = salaryBenefit.actual_month + saleMarketing.actual_month + researchProductDevelopment.actual_month + legalProfessionalFee.actual_month + generalAdminExpenses.actual_month;\n                operatingIncomeEBITDA.actual_month = (grossProfit.actual_month + otherRevenue.actual_month) - operatingExpenses.actual_month;\n                earningBeforeInterestAndTaxEBIT.actual_month = operatingIncomeEBITDA.actual_month - depreciation.actual_month - otherExpenses.actual_month;\n                profitBeforeTax.actual_month = earningBeforeInterestAndTaxEBIT.actual_month - financingCost.actual_month;\n                profitForThePeriod.actual_month = profitBeforeTax.actual_month - taxRelatedExpenses.actual_month;\n\n                /* Actual YTD */\n                grossProfit.actual_ytd = revenue.actual_ytd - costOfSale.actual_ytd;\n                operatingExpenses.actual_ytd = salaryBenefit.actual_ytd + saleMarketing.actual_ytd + researchProductDevelopment.actual_ytd + legalProfessionalFee.actual_ytd + generalAdminExpenses.actual_ytd;\n                operatingIncomeEBITDA.actual_ytd = (grossProfit.actual_ytd + otherRevenue.actual_ytd) - operatingExpenses.actual_ytd;\n                earningBeforeInterestAndTaxEBIT.actual_ytd = operatingIncomeEBITDA.actual_ytd - depreciation.actual_ytd - otherExpenses.actual_ytd;\n                profitBeforeTax.actual_ytd = earningBeforeInterestAndTaxEBIT.actual_ytd - financingCost.actual_ytd;\n                profitForThePeriod.actual_ytd = profitBeforeTax.actual_ytd - taxRelatedExpenses.actual_ytd;\n\n                /* Actual Whole */\n                grossProfit.actual_whole = revenue.actual_whole - costOfSale.actual_whole;\n                operatingExpenses.actual_whole = salaryBenefit.actual_whole + saleMarketing.actual_whole + researchProductDevelopment.actual_whole + legalProfessionalFee.actual_whole + generalAdminExpenses.actual_whole;\n                operatingIncomeEBITDA.actual_whole = (grossProfit.actual_whole + otherRevenue.actual_whole) - operatingExpenses.actual_whole;\n                earningBeforeInterestAndTaxEBIT.actual_whole = operatingIncomeEBITDA.actual_whole - depreciation.actual_whole - otherExpenses.actual_whole;\n                profitBeforeTax.actual_whole = earningBeforeInterestAndTaxEBIT.actual_whole - financingCost.actual_whole;\n                profitForThePeriod.actual_whole = profitBeforeTax.actual_whole - taxRelatedExpenses.actual_whole;\n\n                /* Find Percentage = Actual / Budget */\n                entries.forEach(value => {\n                    value.month_percentage = this.findPercentage(value.actual_month, value.budget_month);\n                    value.ytd_percentage = this.findPercentage(value.actual_ytd, value.budget_ytd);\n                    value.whole_percentage = this.findPercentage(value.actual_whole, value.budget_whole);\n                });\n\n                /* BIND STATMENT */\n                this.statementList = entries;\n                this.generateColumn();\n\n                this.showLoading = false;\n\t\t\t},\n            getEntry(entries, id){\n                return new BudgetPerformanceModel(entries.find(i=>i.uuid === id));\n            },\n            findPercentage (value1, value2) {\n                let result = 0;\n                if(value2 !== 0){\n                    result = value1 / value2;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    row.css(\"text-align\", \"right\");\n\n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.uuid >= 100){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            // Generate Columns\n\t\t\tgenerateColumn () {\n                let headerAttributes = {\n                        \"class\": \"table-header-cell\",\n                        style: \"text-align: center; font-size: 14px\"\n                    },\n                    subHeaderAttributes = {\n                        \"class\": \"table-header-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    },\n                    attributes = {\n                        \"class\": \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    };\n\n                /* Columns */\n\t\t\t\tlet columns = [\n\t\t\t\t\t{ \n\t\t\t\t\t\tfield: this.fieldName, \n\t\t\t\t\t\ttitle: i18n.t('account'),\n                        template: this.nameTmpl,\n\t\t\t\t\t\tlocked: true,\n\t\t\t\t\t\twidth:300\n\t\t\t\t\t},\n                    /* Selected Month */\n                    { \n\t\t\t\t\t\ttitle: kendo.toString(new Date(this.monthOf), 'MMMM yyyy'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_month\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_month\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"month_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                    /* YTD(up to selected month) */\n                    { \n\t\t\t\t\t\ttitle: i18n.t('ytd_up_to_selected_month'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_ytd\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_ytd\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"ytd_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                    /* Whole Year */\n                    { \n\t\t\t\t\t\ttitle: i18n.t('whole_year'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_whole\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_whole\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"whole_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                ]\n\n                /* Set Columns */\n                this.columns = columns;\n\t\t\t},\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                }\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n            /* Templates */\n            nameTmpl(dataItem){\n                /* Name in language */\n                let name = dataItem.name;\n                if(this.reportingLanguage === \"local\"){\n                    name = dataItem.local_name;\n                }\n\n                /* Define result */\n                let result = `<span>${dataItem.number} - ${name}</span>`;\n\n                /* Top Level */\n                if(dataItem.parentId === null){\n                    result = `<span style='font-weight: bolder;'>${name}</span>`;\n                }\n\n                /* Parent Level */\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    result = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n                }\n\n                return result;\n            },\n        },\n        computed: mapState({\n            accounts: state => state.accounting.accounts\n        }),\n        mounted () {\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th{\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"],"sourceRoot":"src/views/budgeting/budgets"}]}