{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/cash_payment/CashPayment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/cash_payment/CashPayment.vue","mtime":1641438291872},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CashPayment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card outlined dense class=\"pa-4 no_border rounded-sm\" color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t('cash_payment') }}</h2>\n                                <v-icon\n                                    @click=\"cancel()\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 no_border mb-3\" color=\"white\">\n                                <v-row class=\"grayBg\">\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"employee\") }}</label>\n                                        <v-autocomplete\n                                            v-model=\"employeeSelect\"\n                                            style=\"padding-top: 0px\"\n                                            :items=\"employees\"\n                                            item-value=\"id\"\n                                            :filter=\"employeeFilter\"\n                                            item-text=\"name\"\n                                            :search-input.sync=\"search\"\n                                            hide-no-data\n                                            hide-selected\n                                            placeholder=\"Start typing to Search\"\n                                            @change=\"employeeChange\"\n                                            return-object\n                                            outlined\n                                            append-icon=\"mdi-database-search\"\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"date\") }}</label>\n                                        <app-datepicker :initialDate=\"start_date\"  @emitDate=\"start_date = $event\" hint=\"MM/DD/YYYY format\"/>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label>{{ $t('payment_number') }}</label>\n                                        <v-row class=\"my-3 mr-0\">\n                                            <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                                                <div style=\"line-height: 20px;\" class=\"code_text text-bold\">{{\n                                                    prefix.abbr}}\n                                                </div>\n                                            </v-col>\n                                            <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                                                <v-text-field class=\" custom-border \"\n                                                    v-model=\"number\"\n                                                    outlined\n                                                    :rules=\"[v => !!v || 'Number is required']\"\n                                                    required\n                                                    readonly/>\n                                            </v-col>\n                                            <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                                                <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                                        @click=\"generateNumber\">mdi-qrcode\n                                                </v-icon>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col cols=\"12\">\n                                        <kendo-datasource ref=\"dataSourcePayment\"\n                                            :data=\"resultAR\"\n                                            :change=\"dataSourceChanged\"\n                                            />\n                                            <kendo-grid id=\"grid\" class=\"grid-function\"\n                                                :data-source-ref=\"'dataSourcePayment'\"\n                                                :sortable=\"false\"\n                                                :filterable=\"false\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\">\n                                                <kendo-grid-column\n                                                    :title=\"$t('month_of')\"\n                                                    :width=\"150\"\n                                                    :field=\"'monthOf'\"\n                                                    :column-menu=\"false\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=monthOf#</span>'\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5;', class: 'text-products'}\"\n                                                    :attributes=\"{style: 'text-align: products'}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'slipNumber'\"\n                                                    :title=\"$t('pay_slip')\"\n                                                    :width=\"150\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=slipNumber#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'paymentCode'\"\n                                                    :title=\"$t('payment_code')\"\n                                                    :width=\"170\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=paymentCode#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'payDate'\"\n                                                    :title=\"$t('pay_date')\"\n                                                    :width=\"170\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=payDate#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'totalBenefit'\"\n                                                    :title=\"$t('Benefit')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"true\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=kendo.toString(totalBenefit, `n2`)#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'taxBenefit'\"\n                                                    :title=\"$t('tax_benefit')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"true\"\n                                                    :format=\"'{0:#,##0.##;(#,##0.##)}'\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :width=\"150\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=kendo.toString(amount, `n2`)#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'netSalary'\"\n                                                    :title=\"$t('net_salary')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"true\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=kendo.toString(netSalary, `n2`)#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'currency'\"\n                                                    :title=\"$t('currency')\"\n                                                    :width=\"150\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=currency.code#</span>'\"\n                                                    :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5; text-align: center'}\"\n                                                    :attributes=\"{style: 'text-align: center; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'paidAmount'\"\n                                                    :title=\"$t('paid_amount')\"\n                                                    :width=\"200\"\n                                                    :lockable=\"false\"\n                                                    :template=\"'<span>#= kendo.toString(paidAmount,`n2`)#</span>'\"\n                                                    :editor=\"paidAmountEditor\"\n                                                    :headerAttributes=\"{style: 'text-align: right; background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'paymentOption'\"\n                                                    :title=\"$t('payment_option')\"\n                                                    :width=\"200\"\n                                                    :lockable=\"false\"\n                                                    :editor=\"paymentOptionEditor\"\n                                                    :template=\"'<span>#= paymentOption.name#</span>'\"\n                                                    :headerAttributes=\"{style: 'text-align: right; background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'segment'\"\n                                                    :title=\"$t('segment')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#= segment.name#</span>'\"\n                                                    :headerAttributes=\"{style: 'text-align: right; background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right; '}\"/>\n                                                <kendo-grid-column\n                                                    :width=\"100\"\n                                                    :command=\"{iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus'}\"\n                                                    :title=\"$t('action')\"\n                                                    :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: center;'}\"/>\n                                            </kendo-grid>\n                                    </v-col>\n                                    <v-col cols=\"12\" class=\"py-0\">\n                                        <v-row>\n                                            <v-col md=\"4\" sm=\"5\" cols=\"12\" class=\"py-0\">\n                                                <v-file-input class=\"mt-0 pt-0 \"\n                                                    v-model=\"files\"\n                                                    :placeholder=\"$t('attachment')\"\n                                                    multiple\n                                                    prepend-icon=\"mdi-paperclip\">\n                                                    <template v-slot:selection=\"{ text }\">\n                                                        <v-chip\n                                                            small\n                                                            label\n                                                            color=\"primary\">\n                                                            {{ text }}\n                                                        </v-chip>\n                                                    </template>\n                                                </v-file-input>\n                                            </v-col>\n                                             <v-col md=\"4\" sm=\"2\" cols=\"12\" class=\"py-0\"></v-col>\n                                            <v-col md=\"4\" sm=\"5\" cols=\"12\" class=\"py-0\">\n                                                <v-simple-table>\n                                                    <template v-slot:default>\n                                                        <tbody>\n                                                            <tr>\n                                                                <td class=\"text-left text-uppercase pr-0\">{{\n                                                                    $t('total')\n                                                                    }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right primary--text text-bold\"\n                                                                    id=\"total\">\n                                                                    {{amountFormat(totalNetPay)}}\n                                                                </td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </template>\n                                                </v-simple-table>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col sm=\"6\" class=\"py-0\">\n                                        <v-row>\n                                            <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                                <label>{{$t('message_on_payment')}}</label>\n                                                <v-textarea height=\"80px\"\n                                                    no-resize\n                                                    outlined\n                                                    rows=\"4\"\n                                                    v-model=\"messageOnPayment\"\n                                                />\n                                            </v-col>\n                                            <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                                <label>{{$t('message_on_journal')}}</label>\n                                                <v-textarea height=\"80px\"\n                                                    v-model=\"messageOnJournal\"\n                                                    no-resize\n                                                    outlined\n                                                    rows=\"4\"\n                                                />\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider class=\"mt-4\"/>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-menu>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn color=\"black\" outlined class=\"mr-2 text-capitalize  black--text float-left\" v-on=\"on\">\n                                            {{$t('select_template')}}\n                                            <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <v-list>\n                                        <v-list-item v-for=\"(item, index) in templates\" :key=\"index\">\n                                            <v-list-item-title>{{ item.title }}</v-list-item-title>\n                                        </v-list-item>\n                                    </v-list>\n                                </v-menu>\n                                <v-btn color=\"black\"  class=\"text-capitalize  white--text float-left\" @click=\"cancel\">{{$t('cancel')}}</v-btn>\n                                <!-- <v-menu>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn class=\"ml-2 float-right text-capitalize  white--text\"\n                                                color=\"primary\" v-on=\"on\">\n                                            {{ $t('save_option') }}\n                                            <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <v-list rounded>\n                                        <v-list-item-group>\n                                            <v-list-item>\n                                                <v-list-item-content>\n                                                    <v-list-item-title @click=\"saveNew\">\n                                                        {{ $t('save_new') }}\n                                                    </v-list-item-title>\n                                                </v-list-item-content>\n                                            </v-list-item>\n                                            <v-list-item>\n                                                <v-list-item-content>\n                                                    <v-list-item-title>{{\n                                                            $t('save_close')\n                                                        }}\n                                                    </v-list-item-title>\n                                                </v-list-item-content>\n                                            </v-list-item>\n                                        </v-list-item-group>\n                                    </v-list>\n                                </v-menu> -->\n                                <v-btn class=\"float-right text-capitalize  white--text\"\n                                        color=\"primary\" @click=\"saveClose\">\n                                    {{ $t('save_close') }}\n                                </v-btn>\n                            </v-card>\n                        </v-form>\n                        <LoadingMe\n                            :isLoading=\"showLoading\"\n                            :fullPage=\"false\"\n                            :myLoading=\"true\"\n                            type=\"loading\"\n                       />\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n    import {i18n} from '@/i18n';\n    import LoadingMe from \"@/components/Loading\";\n    import DatePickerComponent from '@/components/custom_templates/DatePickerComponent'\n    import kendo from \"@progress/kendo-ui\"\n    import Helper from \"@/helper.js\";\n    import {JournalModel,\n        JournalEntryModel,\n        AccountModel,\n        CurrencyModel,} from \"@/scripts/model/AppModels\";\n    const { EntityType, } = require(\"@/scripts/default_setup/Collections\");\n    const employeeHandler   = require(\"@/scripts/employeeHandler\")\n    const payrollHandler    = require(\"@/scripts/payrollHandler\")\n    const settingsHandler   = require(\"@/scripts/settingsHandler\")\n    const paymentOptionHandler = require(\"@/scripts/paymentOptionHandler\");\n    const cookieJS = require(\"@/cookie.js\");\n    const cookie = cookieJS.getCookie();\n    export default {\n        name: \"Task\",\n        components: {\n            'LoadingMe': LoadingMe,\n            'app-datepicker' : DatePickerComponent\n        },\n        data: () => ({\n            showLoading: false,\n            template: [],\n            start_date: new Date().toISOString().substr(0, 10),\n            files: [],\n            templates: [],\n            result:  [],\n            valid: true,\n            employees: [],\n            employeeSelect: '',\n            search: null,\n            totalNetPay: 0,\n            totalAmountPay: 0,\n            prefix:'',\n            number: '',\n            messageOnPayment: '',\n            messageOnJournal: '',\n            selectAccount: '',\n            accounts: [],\n            transations: [],\n            paymentOption: [],\n            resultPay: [],\n            raw_journal: [],\n            resultAR: [],\n            resultPayment: [],\n            payrollLiabilitie: {},\n            resultJournals: [],\n            payNumber:  {},\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            prefix_format: ''\n        }),\n        methods:{\n            amountFormat(value){\n                return kendo.toString(value,'n2');\n            },\n            async loadEmployee(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        employeeHandler.center().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.employees = res.data.data\n                                this.start_date = new Date().toISOString().substr(0, 10)\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            employeeFilter(item, queryText){\n                const textOne = item.name.toLowerCase()\n                const textTwo = item.employeeId.toLowerCase()\n                const searchText = queryText.toLowerCase()\n                return textOne.indexOf(searchText) > -1 ||\n                textTwo.indexOf(searchText) > -1\n            },\n            async payrollTansactions(){\n                let param ={\n                    employeeUuid: this.employeeSelect.id\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getTransaction(param).then(res => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.transations = res.data.data \n                                if(this.transations.length > 0){\n                                    this.payrollLiabilitie = this.transations[0].payrollLiabilitie\n                                    this.loadResult()\n                                    this.initData()\n                                }else{\n                                    this.resultAR = []\n                                }                          \n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadResult(){\n                let result = this.transations\n                let resultAR = []\n                 for (let i = 0; i < result.length; i ++) {\n                    result[i].segment.forEach(index => {\n                        let calculateNet        = (result[i].amount * index.percentage)/ 100\n                        let calculateGross      = (result[i].grossSalary * index.percentage)/ 100\n                        let calculateTaxBenefit = (-1 * (result[i].taxBenefit * index.percentage)/ 100) + 0.07\n                        let calculateBenefit = (result[i].totalBenefit * index.percentage)/ 100 \n                        let netSalary = calculateNet - calculateBenefit + calculateTaxBenefit\n                        resultAR.push({\n                            id:                 result[i].id,\n                            amount:             result[i].amount,\n                            paymentCode:        result[i].paymentCode,\n                            monthOf:            result[i].monthOf,\n                            employeeId:         result[i].employeeId,\n                            employeeName:       result[i].employeeName,\n                            location:           result[i].location,\n                            natureEmployee:     result[i].natureEmployee,\n                            salaryType:         result[i].salaryType,\n                            payDate:            result[i].payDate,\n                            payrollId:          result[i].payrollId,\n                            slipNumber:         result[i].slipNumber,\n                            paymentOption:      result[i].paymentOption,\n                            currency:           result[i].currency,\n                            payrollLiabilitie:  result[i].payrollLiabilitie,\n                            netPayFull:         result[i].netPay,\n                            grossSalary:        calculateGross,\n                            netPay:             calculateNet,\n                            netSalary:          netSalary,\n                            taxBenefit:         calculateTaxBenefit,\n                            totalBenefit:       calculateBenefit,\n                            percentage:         index.percentage,\n                            paidAmount:         calculateNet,\n                            segment:            index.component\n                        })\n                    })\n                }\n                this.resultAR = resultAR\n            },\n            employeeChange(){\n                this.payrollTansactions()\n                this.laodPaymentOption()\n            },\n            removeRow(e) {\n                e.preventDefault();\n                const grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\"),\n                    dataSource = grid.dataSource,\n                    dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n                if (dataSource.total() > 1) {\n                    dataSource.remove(dataItem);\n                    this.initData()\n                }\n            },\n            async initData(){\n                let ds = this.$refs.dataSourcePayment.kendoWidget();\n                let result = ds.data()\n                let totale = 0;\n                let totalNet = 0;\n                result.forEach(function(r){\n                    window.console.log('123456789', r)\n                    if(r.paidAmount && r.paymentOption.name !== ''){\n                        totale      += parseFloat(r.paidAmount)\n                        totalNet    += parseFloat(r.netPay)\n                    }\n                })\n                this.totalAmountPay = totale\n                this.totalNetPay    = totalNet\n                this.calculateJournal()\n            },\n            loadPrefixes() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        settingsHandler.getPrefixes().then(res => {\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                this.prefixList = result.filter(p => p.type =='payroll_payment')\n                                this.prefix = this.prefixList[0]\n                                this.payNumber = this.prefix\n                                const lastNumber = this.zeroPad(parseInt(0), this.prefix.format)\n                                this.prefix_format = (this.prefix.abbr + this.prefix.numberSeparator + this.prefix.structure + this.prefix.numberSeparator + lastNumber + '@' + this.prefix.sequcencing)\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            generateNumber() {\n                if(this.resultPayment.length == 0){\n                    let sequcencing = ''\n                    if(this.payNumber.sequcencing ==\"Year\"){\n                        sequcencing = kendo.toString(new Date(this.start_date),'yyyy')\n                    }else if(this.payNumber.sequcencing ==\"Month\"){\n                        sequcencing = kendo.toString(new Date(this.start_date),'yyyyMM')\n                    }else{\n                        sequcencing = ''\n                    }\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve('resolved');\n                            let data = {\n                                abbr:       this.payNumber.abbr,\n                                structure:  this.payNumber.structure,\n                                date:       new Date(this.start_date),\n                                type:       'payroll_payment',\n                                pkId:       'ppm-',\n                                sequcencing: sequcencing\n                            }\n                            payrollHandler.getPrefixNumber(data).then(res => {\n                                this.showLoading = true;\n                                if(res.data.statusCode === 200){\n                                    this.showLoading = false;\n                                    const result = res.data.data\n                                    const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                    const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                    this.lastNumber = lastNumber\n                                    this.number = number\n                                }\n                            })\n                        }, 300);\n                    })\n                }else{\n                    this.lastNumber = this.resultPay.lastNumber\n                    this.number = this.resultPay.number\n                }\n            },\n            zeroPad(num, places) {\n                return String(num).padStart(places, '0')\n            },\n            saveClose(){\n                let ds = this.$refs.dataSourcePayment.kendoWidget();\n                let d1 = ds.data().filter(i => i.paymentOption.name !=='' && i.paidAmount > 0)\n                if(d1.length > 0){\n                    this.initData()\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve('resolved');\n                            const result = d1.map(o => {\n                                return {\n                                    employeeId:         o.employeeId,\n                                    employeeName:       o.employeeName,\n                                    grossSalary:        o.grossSalary,\n                                    id:                 o.id,\n                                    amount:             o.amount,\n                                    paymentCode:        o.paymentCode,\n                                    payDate:            o.payDate,\n                                    location:           o.location,\n                                    monthOf:            o.monthOf,\n                                    natureEmployee:     o.natureEmployee,\n                                    netPay:             o.netPay,\n                                    netSalary:          o.netSalary,\n                                    paidAmount:         o.paidAmount,\n                                    paymentOption:      o.paymentOption,\n                                    percentage:         o.percentage,\n                                    slipNumber:         o.slipNumber,\n                                    salaryType:         o.salaryType,\n                                    currency:           o.currency,\n                                    segment:            o.segment,\n                                    taxBenefit:         o.taxBenefit,\n                                    totalBenefit:       o.totalBenefit,  \n                                    payrollLiabilitie:  o.payrollLiabilitie,\n                                    payrollId:          o.payrollId,\n                                    netPayFull:         o.netPayFull,\n                                }\n                            })\n                            let helper = {};\n                            let resPay = result.reduce(function(r, o) {\n                                let key = o.payrollId;\n                                if(!helper[key]) {\n                                    helper[key] = Object.assign({}, o); // create a copy of o\n                                    r.push(helper[key]);\n                                } else {\n                                    helper[key].amount += o.amount;\n                                }\n                                return r;\n                            }, []).map(a =>{\n                                 return {\n                                    amount:        a.amount,\n                                    payrollId:     a.payrollId,\n                                    netPayFull:    a.netPayFull\n                                 }\n                            });\n                            if (result.length > 0) {\n                                let data = {\n                                    payment_data: {\n                                        id:                   this.resultPay.id ? this.resultPay.id: '',\n                                        created:              kendo.toString(new Date(this.start_date),'yyyy-MM-dd'),\n                                        amountPay:            parseFloat(this.totalAmountPay),\n                                        netPay:               parseFloat(this.totalNetPay),\n                                        resPay:               resPay,\n                                        number:               this.number,\n                                        payNumber:            this.payNumber,\n                                        referenceNumber:      this.payNumber.abbr+this.payNumber.numberSeparator + this.number,\n                                        abbr:                 this.payNumber.abbr,\n                                        method:               \"payroll_payment\",\n                                        lastNumber:           parseInt(this.lastNumber),\n                                        messageOnJournal:     this.messageOnJournal,\n                                        messageOnPayment:     this.messageOnPayment,\n                                        payrollLiabilitie:    this.payrollLiabilitie,\n                                        paymentline:          result,\n                                        employee:             this.employeeSelect,\n                                    },\n                                    raw_journal:              this.raw_journal,\n                                    loggedUser:               this.loggedUser\n                                }\n                                this.showLoading = true\n                                window.console.log('data', data)\n                                payrollHandler.createPayment(data).then(response => {\n                                    this.showLoading = true\n                                    if (response.data.statusCode === 201) {\n                                        this.close() \n                                    }\n                                }).catch(e => {\n                                    this.$snotify.error('Something went wrong')\n                                    this.showLoading = false\n                                    this.errors.push(e)\n                                    this.close()\n                                })\n                            }else{\n                                this.$snotify.error('Please check again')\n                            }\n                        }, 300);\n                    })\n                }else{\n                     this.$snotify.error('Please check again')\n                }\n            },\n            saveNew(){\n                \n            },\n            close(){\n                this.$router.go(-1);\n                this.clear()\n            },\n            clear(){\n                this.employeeSelect = ''\n                this.start_date = ''\n                this.resultAR = []\n                this.messageOnPayment = ''\n                this.messageOnJournal = ''\n                this.totalNetPay = 0\n                this.loadPrefixes()\n            },\n            paidAmountEditor(container, options) {\n                kendo.jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                    .appendTo(container)\n                    .kendoNumericTextBox({\n                        decimals: 30,\n                    });\n            },\n            paymentOptionEditor(container, options){\n                kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.paymentOption,\n                    })\n                })\n            },\n            dataSourceChanged(e) {\n                if (e.field) {\n                    this.initData()\n                }\n            },\n            calculateJournal(){\n                let ds = this.$refs.dataSourcePayment.kendoWidget();\n                let dataSource = ds.data().map(i=>{\n                    return {\n                        currency:           i.currency,\n                        employeeId:         i.employeeId,\n                        employeeName:       i.employeeName,\n                        grossSalary:        i.grossSalary,\n                        id:                 i.id,\n                        location:           i.location,\n                        monthOf:            i.monthOf,\n                        paymentCode:        i.paymentCode,\n                        natureEmployee:     i.natureEmployee,\n                        netPay:             i.netPay,\n                        netSalary:          i.netSalary,\n                        paidAmount:         i.paidAmount,\n                        paymentOption:      i.paymentOption,\n                        payrollLiabilitie:  i.payrollLiabilitie,\n                        percentage:         i.percentage,\n                        slipNumber:         i.slipNumber,\n                        salaryType:         i.salaryType,\n                        segment:            i.segment,\n                        taxBenefit:         i.taxBenefit,\n                        totalBenefit:       i.totalBenefit,\n                    }\n                })\n                let lastResult = {}\n                let last_result = dataSource.reduce(function(m, n) {\n                    let key = n.paymentOption.code + n.segment.name\n                    if(!lastResult[key]) {\n                        lastResult[key] = Object.assign({}, n); // create a copy of o\n                        m.push(lastResult[key]);\n                    } else {\n                        lastResult[key].paidAmount          += n.paidAmount;\n                        lastResult[key].totalBenefit        += n.totalBenefit;\n                        lastResult[key].taxBenefit          += n.taxBenefit;\n                        lastResult[key].netPay              += n.netPay;\n                        lastResult[key].netSalary           += n.netSalary;\n                    }\n                    return m;\n                }, []);\n                if(last_result.length > 0){\n                    let journalEntry = []\n                    last_result.forEach(item=>{\n                        if(item.paymentOption.name !== ''){\n                            let descriptionD = item.paymentOption.account\n                            journalEntry.push(\n                                new JournalEntryModel({\n                                    description: item.payrollLiabilitie.name,\n                                    account: new AccountModel(item.payrollLiabilitie),\n                                    currency: new CurrencyModel(item.currency),\n                                    exchange_rate: 1,\n                                    amount:           item.netPay,//Dr,\n                                    class_1_uuid:     item.segment.id\n                                })\n                            )\n                            journalEntry.push(\n                                new JournalEntryModel({\n                                    description: descriptionD.name,\n                                    account: new AccountModel(descriptionD),\n                                    currency: new CurrencyModel(item.currency),\n                                    exchange_rate: 1,\n                                    amount:           item.paidAmount * -1, //Cr\n                                    class_1_uuid:     item.segment.id\n                                })\n                            )\n                        }\n                    })\n                    let journals = []\n                    let prefix_format = this.prefix_format\n                    window.console.log('journalEntry',journalEntry)\n                    last_result.forEach(index=>{\n                        window.console.log('item',index)\n                        if(index.paymentOption.name !==''){\n                            let line = journalEntry.filter(i=>i.class_1_uuid == index.segment.id) \n                            journals.push(new JournalModel({\n                                number:                       this.payNumber.abbr+this.payNumber.numberSeparator + this.number,\n                                journal_date:                 new Date(this.start_date),//'2021-02-01',\n                                created_date:                 new Date(this.start_date),\n                                month_of:                     Helper.toISODate(new Date(this.start_date).toISOString().substr(0, 7)),//'2021-02-01',   \n                                journal_type:                 EntityType.GENERAL_JOURNAL,\n                                transaction_type:             'Payroll Payment',\n                                segment_uuid:                 index.segment.id,\n                                journal_entries:              line,\n                                base_currency:                index.currency,\n                                prefix_format:                prefix_format\n                            }))\n                        }\n                    })\n                    let result_journal = []\n                    let journalUuid     = ''\n                    let created_date    = ''\n                    if(this.resultJournals.length > 0){\n                        let jNal = this.resultJournals\n                        journals.forEach(res =>{\n                            let journalAR =  jNal.filter(n => n.segment_uuid = res.segment_uuid)\n                            if(journalAR.length > 0){\n                                journalUuid = journalAR[0].uuid\n                                created_date = journalAR[0].created_date\n                            }\n                            result_journal.push(new JournalModel( {\n                                uuid:                         journalUuid ? journalUuid: '',\n                                number:                       res.number,\n                                created_date:                 created_date ? created_date: '',\n                                journal_date:                 res.journal_date,\n                                month_of:                     res.month_of,\n                                journal_type:                 res.journal_type,\n                                transaction_type:             res.transaction_type,\n                                segment_uuid:                 res.segment_uuid,\n                                prefix_format:                res.prefix_format,\n                                journal_entries:              res.journal_entries,\n                                base_currency:                res.base_currency,\n                            }))\n                        })\n                        this.raw_journal = result_journal\n                    }else{\n                        this.raw_journal = journals\n                    }\n                    // window.console.log(this.result_journal)\n                }\n            },\n            laodPaymentOption(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        const strFilter = '?optionType=Supplier'\n                        paymentOptionHandler.list(strFilter)\n                        .then(res => {\n                            if(res){\n                                let resultPayOption = res.data\n                                this.paymentOption = resultPayOption.data\n                                this.showLoading = false\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            async loadSinglePayment(){\n                this.showLoading = true\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        payrollHandler.getPaymentSingle(this.$route.params.id).then(res => {\n                            this.showLoading = true\n                            if (res.statusCode === 200) {\n                                if(res.data.length > 0){\n                                    this.resultPay          =  res.data[0]\n                                    this.resultPayment      =  res.data\n                                    this.result             =  res.data\n                                    this.resultAR           = this.resultPay.paymentline\n                                    window.console.log(this.resultAR)\n                                    this.employeeSelect     = this.resultPay.employee\n                                    this.start_date         = new Date(this.resultPay.created).toISOString().substr(0, 10)\n                                    this.number             = this.resultPay.number\n                                    this.messageOnPayment   = this.resultPay.messageOnPayment\n                                    this.messageOnJournal   = this.resultPay.messageOnJournal\n                                    this.payrollLiabilitie  = this.resultPay.payrollLiabilitie\n                                    this.totalNetPay        = parseFloat(this.resultPay.amountPay)\n                                    this.loadJournal()\n                                    this.generateNumber()\n                                    this.showLoading = false\n                                }else{\n                                    this.generateNumber()\n                                    this.loadEmployee()\n                                }\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadJournal(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        payrollHandler.getPayrollJournal( this.$route.params.id).then(res => {\n                            if (res.statusCode === 200) {\n                                this.resultJournals = res.data\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            cancel(){\n                this.$swal({\n                    title: i18n.t('msg_title_warning'),\n                    text: i18n.t('msg_discard'),\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    cancelButtonText: i18n.t('cancel'),\n                    confirmButtonColor: \"#4d4848\",\n                    cancelButtonColor: \"#ED1A3A\",\n                    confirmButtonText: i18n.t('discard'),\n                }).then((result) => {\n                    if (result.value) {\n                        this.$router.go(-1);\n                        this.clear()\n                    }\n                });\n            }\n        },\n        async mounted(){\n            await this.initData()\n            await this.loadEmployee()\n            await this.loadPrefixes()\n            await this.laodPaymentOption()\n            await this.loadSinglePayment()\n            await this.loadJournal()\n        },\n        watch:{\n            '$route': 'loadSinglePayment'\n        },        \n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-text-field__details{\n        display: none !important;\n    }\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1080px !important;\n    }\n\n}\n\n.k-dropdown {\n    width: 100%;\n    margin-top: 3px;\n}\n</style>\n"],"sourceRoot":"src/views/payroll/payment/cash_payment"}]}