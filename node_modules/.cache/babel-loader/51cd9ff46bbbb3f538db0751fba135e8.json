{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/s_ledgers/ChartOfAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/s_ledgers/ChartOfAccount.vue","mtime":1642478961300},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChartOfAccount.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-card color=\"white\" class=\"no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col sm=\"10\" cols=\"12\">\n                        <h2 class=\"mb-0 font_20\">{{ $t(\"s_chart_of_accounts\") }}</h2>\n                        <p class=\"mb-4\">{{$t('chart_of_accounts_desc2')}}</p>\n                    </v-col>\n                    <v-col sm=\"2\" cols=\"12\">\n                        <v-btn color=\"primary\" class=\"float-right\">\n                            <v-icon @click=\"onClickSearch\" size=\"30\" color=\"white\">mdi-reload</v-icon>\n                        </v-btn>\n                    </v-col>\n                </v-row>\n\n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <template>\n                            <treelistdatasource \n                                ref=\"coaDS\"\n                                :data=\"coaList\"\n                                :sort=\"sortDefinition\"\n                                :schema-model=\"model\" />\n\n                            <treelist \n                                ref=\"coaTreeList\"\n                                data-source-ref=\"coaDS\"\n                                :resizable=\"true\"\n                                :column-menu=\"true\"\n                                :columns=\"columns\"\n                                :toolbar=\"['excel']\"\n\t\t\t\t\t\t\t\t:excel-file-name=\"'Chart of accounts.xlsx'\"\n\t\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t\t:excel-all-pages=\"true\"\n                                :dataBound=\"onDataBound\" />\n                        </template>\n                        <LoadingMe \n\t\t\t\t\t\t\t:isLoading =\"showLoading\" \n\t\t\t\t\t\t\t:fullPage  =\"false\" \n\t\t\t\t\t\t\t:myLoading =\"true\"\n                            type=\"loading\"/>\n\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    // import Helper from \"@/helper.js\";\n    /* TreeList */\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n\n    import JSZip from \"jszip\";\n    window.JSZip = JSZip;\n    \n    import AccountModel from \"@/scripts/model/Account.js\";\n    import AccountingReportTreeListModel from \"@/scripts/model/AccountingReportTreeList\";\n    // import store from \"@/store\";\n    import { mapState } from 'vuex';\n\n    const { trialBalanceHandler } = require(\"@/scripts/AppHandlers\");\n\n    export default {\n        components: {\n            \"LoadingMe\": () => import('@/components/Loading'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            // Obj\n            coa: [],\n            coaList: [],\n            // LoadingMe\n            showLoading: false,\n            /* KENDO */\n            columns: [],\n            sortDefinition : [\n                { field: \"account.type_code\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n            model: {\n                id: \"uuid\",\n                expanded: true\n            },\n        }),\n        methods: {\n            onClickSearch(){\n                /* Clear */\n                // store.state.accounting.accountLoaded = false;\n\n                // Empty dataSource\n                let ds = this.$refs.coaDS.kendoWidget();\n                ds.data([]);\n\n                this.search();\n            },\n            // Search\n            search(){\n                this.showLoading = true;\n                trialBalanceHandler.getTrialBalance({\n                    params : {\n                        as_of_date: kendo.toString(new Date(), 'yyyy-MM-dd') + 'T23:59:59.999Z',\n                        include_0_balance: true\n                    }\n                })\n                .then((res)=>{\n                    if(res){\n                        this.coa = res.data;\n                        this.bindData();\n                    }\n                });\n            },\n            /* Bind Data */\n            async bindData() {\n                let g = {}, childIds = [];\n\n                /* Call account list */\n                await this.$store.dispatch('accounting/getAccounts');\n                \n                /* Balance Sheet */\n                this.coa.tbdetails.forEach(value => {\n                    let account = new AccountModel(value.account);\n                    if(account.is_secondary === 1){/* Filter secondary Account Only */\n                        /* GROUPING */\n                        /* Top Level Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new AccountingReportTreeListModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.account_type.local_name,\n                                account : account.account_type,\n                            });\n                        }\n\n                        /* Parent Level */\n                        let thisAccountParentId = \"\";\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            let currentParentAccount = new AccountModel(account.parent_account), counter = 0;\n                            while (currentParentAccount.number !== \"\") {\n                                /* Get account by uuid or banhji_account_number */\n                                let accountParent = new AccountModel();\n                                if(currentParentAccount.uuid !== \"\"){/* Get by uuid */\n                                    accountParent = new AccountModel(this.accounts.find((item) => item.uuid === currentParentAccount.uuid));\n                                }else{/* Get by banhji_account_number because default data has no uuid */\n                                    if(currentParentAccount.banhji_account_number !== \"\"){\n                                        accountParent = new AccountModel(this.accounts.find((item) => item.banhji_account_number === currentParentAccount.banhji_account_number));\n                                    }\n                                }\n\n                                /* Set This Account Parent Id */\n                                if(counter === 0){\n                                    thisAccountParentId = accountParent.uuid;\n                                }\n\n                                /* Find Next Parent */\n                                let nextParent = new AccountModel();\n                                if(accountParent.hasOwnProperty(\"parent_account\")){\n                                    let parentOfAccountParent = new AccountModel(accountParent.parent_account);\n                                    if(parentOfAccountParent.number !== \"\"){\n                                        if(parentOfAccountParent.uuid !== \"\"){/* Get by uuid */\n                                            nextParent = this.accounts.find((item) => item.uuid === parentOfAccountParent.uuid);\n                                        }else{/* Get by banhji_account_number because default data has no uuid */\n                                            if(parentOfAccountParent.banhji_account_number !== \"\"){\n                                                nextParent = this.accounts.find((item) => item.banhji_account_number === parentOfAccountParent.banhji_account_number);\n                                            }\n                                        }\n                                    }\n                                }\n                                \n                                /* Set Parent Id */\n                                let parentId = accountParent.type_code;\n                                if(nextParent.number !== \"\"){\n                                    parentId = nextParent.uuid;\n\n                                    /* Set next parent account */\n                                    Object.assign(currentParentAccount, nextParent);\n                                }else{\n                                    /* Set loop to end */\n                                    currentParentAccount.number = \"\";\n                                }\n\n                                /* Add Parent Level */\n                                if(!g[accountParent.uuid]){\n                                    g[accountParent.uuid] = new AccountingReportTreeListModel({\n                                        uuid : accountParent.uuid,\n                                        number : accountParent.number,\n                                        name : accountParent.name,\n                                        local_name : accountParent.local_name,\n                                        parentId : parentId,\n                                        account : accountParent,\n                                    });\n                                }\n                                \n                                counter++;\n                            }/* End While Loop */\n                        }\n\n                        /* Account Nature */\n                        let balance = value.balance;\n                        if(account.account_type.nature.toLowerCase() === \"cr\"){\n                            balance *= -1;\n                        }\n\n                        /* Child Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new AccountingReportTreeListModel({\n                                uuid : account.uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                account : account,\n                                balance : balance,\n                            });\n                        }\n\n                        let childId = account.uuid;\n                        if(thisAccountParentId !== \"\"){/* Child Level */\n                            g[account.uuid].parentId = thisAccountParentId;\n                        }else{/* Child As Parent */\n                            g[account.uuid].parentId = account.type_code; /* Self As Parent */\n\n                            if(value.balance !== 0){\n                                g[account.uuid].balance = 0;\n                                childId = account.number;\n\n                                /* Self As Child With Balance */\n                                if(!g[account.number]){\n                                    g[account.number] = new AccountingReportTreeListModel({\n                                        uuid : account.number,\n                                        number : account.number,\n                                        name : account.name,\n                                        local_name : account.local_name,\n                                        parentId : account.uuid,\n                                        account : account,\n                                        balance : balance,\n                                    });\n                                }\n                            }\n                        }\n\n                        /* Child Id */\n                        childIds.push(childId);\n                    }\n                });\n                \n                /* Parse Object Array */\n                let entries = Object.values(g);\n\n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    parent.balance += entry.balance;\n                                    \n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n                \n                /* BIND ACCOUNTS */\n                this.coaList = entries;\n                \n                this.generateColumn();\n\n                this.showLoading = false;\n            },\n            // Row Template\n            nameTmpl(dataItem){\n                /* Name in language */\n                let name = dataItem.name;\n                if(this.reportingLanguage === \"local\"){\n                    name = dataItem.local_name;\n                }\n\n                /* Define result */\n                let result = `<span>${dataItem.number} - ${name}</span>`;\n\n                /* Top Level */\n                if(dataItem.parentId === null){\n                    result = `<span style='font-weight: bolder;'>${name}</span>`;\n                }\n\n                /* Parent Level */\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    result = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    // row.css(\"text-align\", \"right\");\n                    \n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.get(\"parentId\") === null){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            generateColumn() {\n                let headerAttributes = {\n                    class: \"table-header-cell\",\n                    style: \"font-weight: bold;text-align: center;padding-right: 35px; font-size: 14px\",\n                },\n                attributes = {\n                    class: \"table-cell\",\n                    style: \"text-align: right; font-size: 14px\",\n                };\n\n                let columns = [\n                    {\n                        field: \"name\",\n                        title: i18n.t(\"account\"),\n                        template: this.nameTmpl,\n                        width: 300,\n                        headerAttributes: headerAttributes,\n                    },\n                    {\n                        field: \"account.local_name\",\n                        title: i18n.t(\"local_name\"),\n                        width: 300,\n                        hidden: true,\n                        headerAttributes: headerAttributes,\n                    },\n                    {\n                        field: \"account.account_type.name\",\n                        title: i18n.t(\"type\"),\n                        width: 200,\n                        headerAttributes: headerAttributes,\n                    },\n                   \n                    {\n                        field: \"balance\",\n                        title: i18n.t(\"balance\"),\n                        format: \"{0:n}\",\n                        width: 100,\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    },\n                ];\n                \n                /* Set All Columns */\n                this.columns = columns;\n            },\n        },\n        watch: {\n            accounts: \"onClickSearch\"\n        },\n        computed: mapState({\n            accounts: state => state.accounting.accounts\n        }),\n        mounted() {\n            this.search();\n        },\n    };\n</script>\n<style scoped>\n</style>"],"sourceRoot":"src/views/accounting/s_ledgers"}]}