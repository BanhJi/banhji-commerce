{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/transactionHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/transactionHandler.js","mtime":1638843525734},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/transactionHandler.js"],"names":["axios","require","apiUrl","module","exports","list","get","transaction","sale_quote_get","window","console","error","view","id","transaction_get","create","data","post","transaction_post","history","transaction_history","search","transaction_search","searchURL","strFilter","txn_search","transactionFilter","transaction_filter","delete","transaction_delete","deleteSaleOrder","transaction_saleOrder_delete","getByFilters","params"],"mappings":"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","sourcesContent":["const axios = require('axios')\nconst apiUrl = require('../apiUrl.js')\n\n// List\nmodule.exports.list = async function () {\n    try {\n        return await axios.get(apiUrl.transaction.sale_quote_get)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// view\nmodule.exports.view = async function (id) {\n    try {\n        return await axios.get(apiUrl.transaction.transaction_get + '/' + id)\n    } catch (error) {\n        window.console.error(error, 'here')\n    }\n}\n\n\n// save\nmodule.exports.create = async (data) => {\n    try {\n        return await axios.post(apiUrl.transaction.transaction_post, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// History List\nmodule.exports.history = async function (id) {\n    try {\n        return await axios.get(apiUrl.transaction.transaction_history + '/' + id)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//search\nmodule.exports.search = async (data) => {\n    try {\n        return await axios.post(apiUrl.transaction.transaction_search, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n//search url\nmodule.exports.searchURL = (strFilter) => {\n    try {\n        return apiUrl.transaction.txn_search + strFilter\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n//Filter by Customer Id / location Id / Segment Id / PriceLevel Id\nmodule.exports.transactionFilter = async (strFilter) => {\n    try {\n        return await axios.get(apiUrl.transaction.transaction_filter + strFilter)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// delete transaction\nmodule.exports.delete = async (data) => {\n    try {\n        return await axios.post(apiUrl.transaction.transaction_delete, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// delete transaction Sale Order\nmodule.exports.deleteSaleOrder = async (data) => {\n    try {\n        return await axios.post(apiUrl.transaction.transaction_saleOrder_delete, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// BY DAWINE\n// GET BY FILTER\nmodule.exports.getByFilters = async (params) => {\n    try {\n        return await axios.get(apiUrl.transaction.transaction_filter, params)\n    } catch (error) {\n        window.console.error(error)\n    }\n}"]}]}