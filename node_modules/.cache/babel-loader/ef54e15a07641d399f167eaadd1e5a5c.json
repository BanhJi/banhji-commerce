{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/Payment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/Payment.vue","mtime":1638499443258},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Payment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" sm=\"12\" class=\"py-0\">\n            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                <h2 class=\"mb-0 font_20\">{{$t('payment')}}</h2>\n                <v-dialog v-model=\"dialogm2\" max-width=\"600px\" eager>\n                    <template v-slot:activator=\"{ on }\">\n                         <v-menu\n                            nudge-bottom=\"4\"\n                            bottom\n                            offset-y\n                            origin=\"bottom top\"\n                            transition=\"scroll-y-reverse-transition\">\n                            <template v-slot:activator=\"{ on }\">\n                            <span class=\"hidden-sm-and-up\">\n                                <div class=\"dropdown_transactions\">\n                                    <v-icon v-on=\"on\" left>mdi-attachment</v-icon>\n                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                </div>\n                            </span>\n                                <span class=\"hidden-sm-and-down\">\n                                <v-btn color=\"lightGreen\" v-on=\"on\"\n                                    class=\"dropdown_transactions white--text float-right text-capitalize\">\n                                    {{$t('create_new')}}\n                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                </v-btn>\n                            </span>\n                            </template>\n                            <v-list>\n                                <v-list-item v-on=\"on\" @click=\"addNewPayment\">\n                                    <v-list-item-title>{{$t('cash_payment')}}</v-list-item-title>\n                                </v-list-item>\n                                <v-list-item v-on=\"on\" @click=\"addNewPayment\">\n                                    <v-list-item-title>{{$t('bank_payment')}}</v-list-item-title>\n                                </v-list-item>\n                            </v-list>\n                        </v-menu>\n                    </template>\n                    <v-card>\n                        <div class=\"modal_header\">\n                        <v-card-title>{{$t('Cash Payment')}}</v-card-title>\n                        <v-icon class=\"btn_close\" @click=\"dialogm2 = false\">close</v-icon>\n                        </div>\n                        <v-card-text class=\"modal_text_content\">\n                            <v-form ref=\"form\">\n                                <v-row>\n                                    <v-col style=\"line-height: 0px;\" sm=\"6\" cosl=\"12\">\n                                        <label>{{ $t('Employee') }}</label>\n                                        <v-autocomplete\n                                            v-model=\"employeeSelect\"\n                                            style=\"padding-top: 0px\"\n                                            :items=\"employees\"\n                                            item-value=\"id\"\n                                            :filter=\"employeeFilter\"\n                                            item-text=\"name\"\n                                            :search-input.sync=\"search\"\n                                            hide-no-data\n                                            hide-selected\n                                            placeholder=\"Start typing to Search\"\n                                            prepend-icon=\"mdi-database-search\"\n                                        />\n                                    </v-col>\n                                    <v-col style=\"line-height: 0px;\" sm=\"6\" cosl=\"12\">\n                                        <label>{{ $t('payslip') }}</label>\n                                        <v-row class=\"my-3 mr-0\">\n                                            <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                                                <div style=\"line-height: 20px;\" class=\"code_text text-bold\">{{\n                                                    prefix.abbr}}\n                                                </div>\n                                            </v-col>\n                                            <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                                                <v-text-field class=\" custom-border \"\n                                                    v-model=\"number\"\n                                                    outlined\n                                                    :rules=\"[v => !!v || 'Number is required']\"\n                                                    required/>\n                                            </v-col>\n                                            <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                                                <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                                        @click=\"generateNumber\">mdi-qrcode\n                                                </v-icon>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col style=\"line-height: 0px;\" sm=\"6\" cosl=\"12\">\n                                        <label class=\"label\">{{$t('for_the_month_of')}}</label>\n                                        <v-menu\n                                            v-model=\"is_month_search\"\n                                            :close-on-content-click=\"false\"\n                                            :nudge-right=\"40\"\n                                            lazy\n                                            transition=\"scale-transition\"\n                                            offset-y\n                                            full-width>\n                                            <template v-slot:activator=\"{ on }\">\n                                            <v-text-field class=\"pt-0\"\n                                                v-model=\"monthOfSearch\"\n                                                prepend-icon=\"event\"\n                                                v-on=\"on\"/>\n                                            </template>\n                                            <v-date-picker\n                                            v-model=\"monthOfSearch\"\n                                            @change=\"monthOfChang\"\n                                            type=\"month\"\n                                            no-title @input=\"is_month_search = false\">\n                                            </v-date-picker>\n                                        </v-menu>\n                                    </v-col>\n                                    <v-col style=\"line-height: 0px;\" sm=\"6\" cosl=\"12\">\n                                        <label>{{ $t('payroll_number') }}</label>\n                                        <v-select\n                                            class=\" my-2\"\n                                            outlined\n                                            :items=\"payrolls\"\n                                            filter=\"true\"\n                                            item-value=\"id\"\n                                            item-text=\"referenceNumber\"\n                                            v-model=\"payrollSelected\"\n                                            :disabled=\"changMonthOf\"\n                                            @change=\"payrollNumberChang\"\n                                            :rules=\"[v => !!v || $t('field_is_required')]\"\n                                            tage=\"unitOfMeasureSelector\"\n                                        />\n                                    </v-col>\n                                </v-row>\n                            </v-form>\n                        </v-card-text>\n                        <v-card-text style=\"padding: 0px; height: 260px; background-color: #fff; color: #333;\">\n                            <template>\n                                <v-simple-table class=\"attachment_table\">\n                                    <template v-slot:default>\n                                        <tbody style=\"width: 100%\">\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span> Salary</span></td>\n                                                <td style=\"text-align: right; height: 40px;\">{{numberFormat(transaction.grossSalary)}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span>Deduction</span></td>\n                                                <td style=\"text-align: right; height: 40px;\">{{numberFormat(transaction.deduction * -1)}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span>Tax Salary</span></td>\n                                                <td style=\"text-align: right; height: 40px;\">{{numberFormat(transaction.taxSalaryUS * -1)}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span>Benefit</span></td>\n                                                <td style=\"text-align: right; height: 40px;\">{{numberFormat(transaction.totalBenefit- transaction.taxBenefit)}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span>Net Salary</span></td>\n                                                <td style=\"text-align: right; height: 40px;\">{{numberFormat(transaction.netSalary +(transaction.totalBenefit- transaction.taxBenefit))}}</td>\n                                            </tr>\n                                        </tbody>\n                                        <tfoot>\n                                            <tr>\n                                                <td style=\"padding-left: 30px; height: 40px;\"><span>Net Pay</span></td>\n                                                <td style=\"text-align: right; height: 40px; padding: 0px\">\n                                                    <v-text-field class=\"mt-1\"\n                                                        type=\"number\"\n                                                        outlined\n                                                        tage=\"Name\"\n                                                        v-model=\"amountPay\"\n                                                        placeholder=\"\"/>\n                                                    <!-- {{numberFormat(transaction.netPay + (transaction.totalBenefit- transaction.taxBenefit))}} -->\n                                                </td>\n                                            </tr>\n                                        </tfoot>\n                                    </template>\n                                </v-simple-table>\n                            </template>\n                        </v-card-text>\n                        <v-divider/>\n                        <v-card-actions class=\"modal_footer\">\n                            <v-row>\n                                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                                    <v-btn color=\"primary\" outlined class=\" text-capitalize  black--text float-left\" @click=\"dialogm2 = false\">{{$t('cancel')}}</v-btn>\n                                </v-col>\n                                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                                    <v-btn color=\"primary\" class=\" white--text text-capitalize\" @click=\"onSaveClose\">{{$t('save_close')}}\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                        </v-card-actions>\n                    </v-card>\n                </v-dialog>\n            </v-col>\n            <div class=\"reports_table\">\n                <kendo-datasource ref=\"dataSource\"\n                    :data=\"payments\"/>\n                    <kendo-grid id=\"grid\" class=\"grid-function\"\n                        :data-source-ref=\"'dataSource'\"\n                        :editable=\"false\"\n                        :scrollable-virtual=\"true\">\n                    <kendo-grid-column\n                        :width=\"150\"\n                        :field=\"'employees'\"\n                        :title=\"$t('employee')\"\n                        :template=\"'<span>#= employees.employeeName#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                        :attributes=\"{ style: 'text-align: center'}\"/>\n                    <kendo-grid-column\n                        :width=\"200\"\n                        :field=\"'referenceNumber'\"\n                        :title=\"$t('reference_number')\"\n                        :template=\"'<span>#= referenceNumber#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                        :attributes=\"{ style: 'text-align: center'}\"/>\n                    <kendo-grid-column\n                        :width=\"120\"\n                        :field=\"'monthOf'\"\n                        :title=\"$t('month_of')\"\n                        :template=\"'<span>#= monthOf#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"120\"\n                        :field=\"'netPay'\"\n                        :title=\"$t('net_pay')\"\n                        :template=\"'<span>#= kendo.toString(netPay,`c2`)#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"120\"\n                        :field=\"'amountPay'\"\n                        :title=\"$t('amount_pay')\"\n                        :template=\"'<span>#= kendo.toString(amountPay,`c2`)#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"120\"\n                        :field=\"'createdAt'\"\n                        :title=\"$t('created')\"\n                        :template=\"'<span>#= kendo.toString(new Date(created), `yyyy-MM-dd` )#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"150\"\n                        :field=\"'method'\"\n                        :title=\"$t('method')\"\n                        :template=\"'<span>#= method #</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    </kendo-grid>\n            </div>\n        </v-col>\n        <!-- <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"/> -->\n    </v-row>\n</template>\n\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    const payrollHandler = require(\"@/scripts/payrollHandler\")\n    const employeeHandler = require(\"@/scripts/employeeHandler\")\n    const settingsHandler = require(\"@/scripts/settingsHandler\")\n    export default {\n        name: \"Payment\",\n        components: {\n            // LoadingMe: () => import(`@/components/Loading`)\n        },\n        data: () => ({\n            loading: false,\n            search: null,\n            select: null,\n            showLoading: false,\n            dialogm2: false,\n            changMonthOf: true,\n            payrolls: [],\n            employees:[],\n            items: [],\n            is_month: false,\n            is_month_search: false,\n            monthOf: '',\n            monthOfSearch: '',\n            payrollSelected: '',\n            cashAccountSelected: {},\n            employeeSelect: '',\n            payNumber: {},\n            prefix:'',\n            number: '',\n            result:{},\n            cashAccount:[{\n                id: 'cash_payment',\n                name: 'Cash Payment'\n            },{\n                id: 'bank_payment',\n                name: 'Bank Payment'\n            }],\n            transaction: {\n                grossSalary: 0,\n                deduction: 0,\n                taxSalaryUS: 0,\n                totalBenefit: 0,\n                netSalary:  0,\n                taxBenefit: 0,\n                netPay: 0\n            },\n            amountPay: 0,\n            payments: [],\n        }),\n        methods: {\n            numberFormat(value){\n                return kendo.toString( kendo.parseFloat(value),\"c2\")\n            },\n            monthOfChang(){\n                let param =  {\n                    'monthOf':      this.monthOfSearch + '-01',\n                    'selectTime':   this.natureInputSelected,\n                    'employee_id':  this.employeeSelect,\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getPayrollList(param).then(res => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.payrolls = res.data.data\n                                this.changMonthOf = false\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            payrollNumberChang(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getTransaction(this.employeeSelect, this.payrollSelected).then(res => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                let result = res.data.data\n                                this.transaction = result[0]\n                                this.amountPay = this.transaction.netPay + (this.transaction.totalBenefit- this.transaction.taxBenefit)\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            loadPrefixes() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        settingsHandler.getPrefixes().then(res => {\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                this.prefixList = result.filter(p => p.type =='pay_slip')\n                                this.prefix = this.prefixList[0]\n                                this.payNumber = this.prefix\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            generateNumber() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            abbr: this.payNumber.abbr,\n                            structure: this.payNumber.structure,\n                            monthOf: '2021-01-01',\n                            type: 'pay_slip',\n                            pkId: 'psn-'\n                        }\n                        payrollHandler.getPrefixNumber(data).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                const result = res.data.data\n                                const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                this.lastNumber = lastNumber\n                                this.number = number\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            zeroPad(num, places) {\n                return String(num).padStart(places, '0')\n            },\n            async loadEmployee(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        employeeHandler.center().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.employees = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            close() {\n                this.dialogm2 = false\n                this.payrollSelected = ''\n                this.employeeSelect = ''\n                this.monthOfSearch = ''\n            },\n            employeeFilter(item, queryText){\n                const textOne = item.name.toLowerCase()\n                const textTwo = item.employeeId.toLowerCase()\n                const searchText = queryText.toLowerCase()\n                return textOne.indexOf(searchText) > -1 ||\n                textTwo.indexOf(searchText) > -1\n            },\n            onSaveClose(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            \"payroll_id\":           this.payrollSelected,\n                            \"monthOf\":              this.monthOfSearch + '-01',\n                            \"employee_id\":          this.employeeSelect,\n                            \"employees\":            this.transaction,\n                            \"amountPay\":            parseInt(this.amountPay),\n                            \"number\":               this.number,\n                            \"payNumber\":            this.payNumber,\n                            \"referenceNumber\":      this.payNumber.abbr+this.payNumber.numberSeparator + this.number,\n                            \"type\":                 \"pay_slip\",\n                            \"abbr\":                 this.payNumber.abbr,\n                            \"netPay\":               this.transaction.netPay,\n                            \"method\":               \"cash_payment\",\n                            \"lastNumber\":           this.lastNumber,\n                        };\n                        payrollHandler.createPayment(data).then(response => {\n                            if (response.data.statusCode === 201) {\n                                this.$snotify.success('Success')\n                                this.close()        \n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                            this.close()\n                        })\n                    }, 300);\n                })\n            },\n            addNewPayment(){\n                this.generateNumber()\n            },\n            loadPayment(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getPayment().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.payments = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            }\n        },\n        mounted() {\n            this.loadEmployee()\n            this.loadPrefixes()\n            this.loadPayment()\n        },\n        computed: {\n        },\n        watch: {\n            dialogm2(val) {\n                val || this.close()\n                this.loadPayment()\n            },\n            \n        },\n    };\n</script>\n<style scoped>\n</style>"],"sourceRoot":"src/views/payroll/payment"}]}