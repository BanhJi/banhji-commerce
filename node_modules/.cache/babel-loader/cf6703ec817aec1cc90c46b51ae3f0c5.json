{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/BudgetSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/BudgetSummary.vue","mtime":1638499443140},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetSummary.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-3\">\n      <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\" min-height=\"200px\">\n        <div id=\"grid\"></div>\n        <LoadingMe\n              :isLoading=\"isLoading\"\n              :fullPage=\"false\"\n              :myLoading=\"true\"\n              :type=\"'loading'\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\n/* Models */\nimport BudgetModel from \"@/scripts/model/Budget.js\";\nimport AccountModel from \"@/scripts/model/Account.js\";\n\nconst accountHandler = require(\"@/scripts/handler/accounting/account.js\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\nexport default {\n  components:{\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  name: \"BudgetSummary\",\n  props: {\n    initBudget: {\n      type: BudgetModel,\n    },\n  },\n  data: () => ({\n    budget: new BudgetModel(),\n    isLoading: true,\n  }),\n  methods: {\n    /* Load Data */\n    async loadData() {\n      /* Bind Budget */\n      this.budget = this.initBudget;\n\n      /* Set Current Fiscal Date */\n      let currencyFiscalDate = Helper.getFiscalDateByDate(new Date());\n      let fiscalMonths = Helper.generateFiscalMonths(\n        currencyFiscalDate.start_date,\n        currencyFiscalDate.end_date,\n        \"12\"\n      );\n\n      let entries = [];\n      let Entry = kendo.data.Model.define({\n        id: \"uuid\", // the identifier of the model\n        fields: {\n          month_name: { type: \"number\", defaultValue: \"\" },\n          rev: { type: \"number\", defaultValue: 0 },\n          cogs: { type: \"number\", defaultValue: 0 },\n          ope_exp: { type: \"number\", defaultValue: 0 },\n          oth_exp_dep: { type: \"number\", defaultValue: 0 },\n          oth_rev: { type: \"number\", defaultValue: 0 },\n          fin_cost_tax: { type: \"number\", defaultValue: 0 },\n          net_income: { type: \"number\", defaultValue: 0 },\n        },\n      });\n\n      // Load Account List\n      let accounts = await accountHandler.getAll();\n\n      /* Total */\n      let totalEntry = new Entry();\n      totalEntry.month_name = \"Total\";\n\n      /* Gathering from line */\n      this.budget.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.data.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        let nature = 1; /* Default Naure is Dr = 1 */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          nature = -1;\n        }\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalEntry.rev += value.amount * nature;\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalEntry.cogs += value.amount * nature;\n        }\n\n        /* Other Expense & Depreciations */\n        if (\n          account.account_type.number === AccountTypeCode.OTHER_EXPENSE ||\n          account.account_type.number === AccountTypeCode.DEPRECIATION\n        ) {\n          totalEntry.oth_exp_dep += value.amount * nature;\n        }\n\n        /* Other Revenue */\n        if (account.account_type.number === AccountTypeCode.OTHER_REVENUE) {\n          totalEntry.oth_rev += value.amount * nature;\n        }\n\n        /* Financing Cost & Tax */\n        if (\n          account.account_type.number === AccountTypeCode.FINANCING_COST ||\n          account.account_type.number === AccountTypeCode.TAX\n        ) {\n          totalEntry.fin_cost_tax += value.amount * nature;\n        }\n      });\n\n      /* Gathering from budget estimations */\n      this.budget.budget_estimations.forEach((value) => {\n        /* Operating Expense */\n        if (\n          value.account_type_number === OrderNumberPL.OperatingExpense.number\n        ) {\n          totalEntry.ope_exp += value.balance;\n        }\n\n        /* Profit For The Period */\n        if (\n          value.account_type_number === OrderNumberPL.ProfitForThePeriod.number\n        ) {\n          totalEntry.net_income += value.balance;\n        }\n      });\n\n      /* Add to entries */\n      entries.push(totalEntry);\n      /* End Total */\n\n      /* Monthly */\n      let monthEntries = [];\n      for (let i = 0; i < 12; i++) {\n        let monthEntry = new Entry();\n\n        /* Month Name */\n        monthEntry.month_name = fiscalMonths[i];\n\n        /* Add Entry */\n        monthEntries.push(monthEntry);\n      }\n\n      /* Gathering from line */\n      this.budget.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.data.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        let nature = 1; /* Default Naure is Dr = 1 */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          nature = -1;\n        }\n\n        for (let i = 0; i < 12; i++) {\n          /* Revenue */\n          if (account.account_type.number === AccountTypeCode.REVENUE) {\n            monthEntries[i].rev += value.monthly_amount[i].amount * nature;\n          }\n\n          /* COGS */\n          if (account.account_type.number === AccountTypeCode.COGS) {\n            monthEntries[i].cogs += value.monthly_amount[i].amount * nature;\n          }\n\n          /* Other Expense & Depreciations */\n          if (\n            account.account_type.number === AccountTypeCode.OTHER_EXPENSE ||\n            account.account_type.number === AccountTypeCode.DEPRECIATION\n          ) {\n            monthEntries[i].oth_exp_dep +=\n              value.monthly_amount[i].amount * nature;\n          }\n\n          /* Other Revenue */\n          if (account.account_type.number === AccountTypeCode.OTHER_REVENUE) {\n            monthEntries[i].oth_rev += value.monthly_amount[i].amount * nature;\n          }\n\n          /* Financing Cost & Tax */\n          if (\n            account.account_type.number === AccountTypeCode.FINANCING_COST ||\n            account.account_type.number === AccountTypeCode.TAX\n          ) {\n            monthEntries[i].fin_cost_tax +=\n              value.monthly_amount[i].amount * nature;\n          }\n        }\n      });\n\n      /* Gathering from budget estimations */\n      this.budget.budget_estimations.forEach((value) => {\n        for (let i = 0; i < 12; i++) {\n          let property = NumberInWord[i];\n\n          /* Operating Expense */\n          if (\n            value.account_type_number === OrderNumberPL.OperatingExpense.number\n          ) {\n            monthEntries[i].ope_exp += value[property];\n          }\n\n          /* Profit For The Period */\n          if (\n            value.account_type_number ===\n            OrderNumberPL.ProfitForThePeriod.number\n          ) {\n            monthEntries[i].net_income += value[property];\n          }\n        }\n      });\n\n      /* Add to entries */\n      monthEntries.forEach((value) => {\n        entries.push(value);\n      });\n      /* End Monthly */\n\n      /* Styles */\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      kendo.jQuery(\"#grid\").kendoGrid({\n        dataSource: {\n          data: entries,\n          pageSize: 20,\n        },\n        scrollable: true,\n        columns: [\n          {\n            field: \"month_name\",\n            title: i18n.t(\"monthly\"),\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"rev\",\n            title: i18n.t(\"revenue\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"cogs\",\n            title: i18n.t(\"cost_of_goods_sold\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"ope_exp\",\n            title: i18n.t(\"operating_expenses\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"oth_exp_dep\",\n            title: i18n.t(\"other_expenses_&_depreciations\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"oth_rev\",\n            title: i18n.t(\"other_revenues\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"fin_cost_tax\",\n            title: i18n.t(\"financing_cost_&_tax\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"net_income\",\n            title: i18n.t(\"net_income\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n        ],\n      });\n      this.isLoading = false\n    },\n  },\n  watch: {\n    initBudget() {\n      this.loadData();\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/views/budgeting/budgets"}]}