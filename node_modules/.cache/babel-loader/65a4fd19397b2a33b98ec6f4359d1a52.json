{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/warehouses/warehouse_report/Balance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/warehouses/warehouse_report/Balance.vue","mtime":1638499443298},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbWFjb3MvRGVza3RvcC9iYW5oamktMC4yL2JhbmhqaS1jb21tZXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktY29tbWVyY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgRGF0ZVBpY2tlckNvbXBvbmVudCBmcm9tICdAL2NvbXBvbmVudHMvY3VzdG9tX3RlbXBsYXRlcy9EYXRlUGlja2VyQ29tcG9uZW50JzsKaW1wb3J0IHsgaTE4biB9IGZyb20gIkAvaTE4biI7Cgp2YXIgd2FyZWhvdXNlSGFuZGxlciA9IHJlcXVpcmUoIkAvc2NyaXB0cy93YXJlaG91c2VIYW5kbGVyIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dMb2FkaW5nOiBmYWxzZSwKICAgICAgbURhdGVTb3J0ZXI6ICdUb2RheScsCiAgICAgIHN0YXJ0RGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCksCiAgICAgIGRhdGVTb3J0ZXJzOiBbJ1RvZGF5JywgJ1RoaXMgV2VlaycsICdUaGlzIE1vbnRoJywgJ1RoaXMgWWVhciddLAogICAgICBiYWxhbmNlV2FyZWhvdXNlOiBbXSwKICAgICAgcHJvZHVjdGlvbk9yZGVyOiB7fSwKICAgICAgd2FyZWhvdXNlczogW10sCiAgICAgIHdhcmVob3VzZToge30sCiAgICAgIGNvbHVtbnM6IFtdLAogICAgICBjYWxRdHk6IDAKICAgIH07CiAgfSwKICBwcm9wczoge30sCiAgbWV0aG9kczogewogICAgZ2VuZXJhdGVDb2x1bW46IGZ1bmN0aW9uIGdlbmVyYXRlQ29sdW1uKCkgewogICAgICB0aGlzLmNvbHVtbnMgPSBbewogICAgICAgIGZpZWxkOiAnbmFtZScsCiAgICAgICAgdGl0bGU6IGkxOG4udCgncHJvZHVjdCcpLAogICAgICAgIGxvY2tlZDogdHJ1ZSwKICAgICAgICB3aWR0aDogMzAwCiAgICAgIH0sIHsKICAgICAgICBmaWVsZDogJ2J1b20nLAogICAgICAgIHRpdGxlOiBpMThuLnQoJ3VvbScpLAogICAgICAgIHRlbXBsYXRlOiB0aGlzLlVPTVRlbXBsYXRlLAogICAgICAgIHdpZHRoOiAzMDAKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAnYlF0eScsCiAgICAgICAgdGl0bGU6IGkxOG4udCgncXR5JyksCiAgICAgICAgZm9ybWF0OiAiezA6bn0iLAogICAgICAgIHdpZHRoOiAzMDAKICAgICAgfV07CiAgICB9LAogICAgVU9NVGVtcGxhdGU6IGZ1bmN0aW9uIFVPTVRlbXBsYXRlKGRhdGFJdGVtKSB7CiAgICAgIHZhciBidW9tID0gZGF0YUl0ZW0uYnVvbTsKCiAgICAgIGlmIChidW9tKSB7CiAgICAgICAgcmV0dXJuICI8c3Bhbj4iLmNvbmNhdChidW9tID8gYnVvbS5uYW1lIDogIiIsICI8L3NwYW4+Iik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICIiOwogICAgICB9CiAgICB9LAogICAgZ2V0QmFsYW5jZVdhcmVob3VzZTogZnVuY3Rpb24gZ2V0QmFsYW5jZVdhcmVob3VzZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMuc2hvd0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgZGF0ZTogX3RoaXMuc3RhcnREYXRlID8gX3RoaXMuc3RhcnREYXRlIDogbmV3IERhdGUoKSwKICAgICAgICAgICAgICAgICAgd2hJZDogX3RoaXMud2FyZWhvdXNlID8gX3RoaXMud2FyZWhvdXNlLmlkIDogJycKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB3YXJlaG91c2VIYW5kbGVyLmdldEFsbEJhbGFuY2UoZGF0YSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLmJhbGFuY2VXYXJlaG91c2UgPSByZXM7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhyZXMsICdkYXRhJyk7CiAgICAgICAgICAgICAgICAgIHZhciBjb2x1bW5zID0gW3sKICAgICAgICAgICAgICAgICAgICBmaWVsZDogJ25hbWUnLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiBpMThuLnQoJ3Byb2R1Y3QnKSwKICAgICAgICAgICAgICAgICAgICBsb2NrZWQ6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwMAogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICdidW9tJywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogaTE4bi50KCd1b20nKSwKICAgICAgICAgICAgICAgICAgICB0ZW1wbGF0ZTogX3RoaXMuVU9NVGVtcGxhdGUsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEyMAogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICdiUXR5JywKICAgICAgICAgICAgICAgICAgICB0aXRsZTogaTE4bi50KCdxdHknKSwKICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6ICJ7MDpufSIsCiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEyMAogICAgICAgICAgICAgICAgICB9XTsKCiAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy53YXJlaG91c2UpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb2x1bW5zID0gY29sdW1uczsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdOwogICAgICAgICAgICAgICAgICAgICAgdmFyIHdoTWFwID0gbmV3IE1hcCgpOwogICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcCA9IG5ldyBNYXAoKTsKCiAgICAgICAgICAgICAgICAgICAgICB2YXIgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghd2hNYXAuaGFzKF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ud2hJZCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB3aE1hcC5zZXQoX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS53aElkLCB0cnVlKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtYXAuaGFzKF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ubmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcC5zZXQoX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS5uYW1lLCB0cnVlKTsgLy8gc2V0IGFueSB2YWx1ZSB0byBNYXAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzZXQgYW55IHZhbHVlIHRvIE1hcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goX2RlZmluZVByb3BlcnR5KHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYlF0eTogX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS5iUXR5LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidW9tOiBfdGhpcy5iYWxhbmNlV2FyZWhvdXNlW2ldLmJ1b20sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdOYW1lOiBfdGhpcy5iYWxhbmNlV2FyZWhvdXNlW2ldLndoTmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgJ3doJyArIGksIF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYlF0eSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sdW1ucy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICd3aCcgKyBpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS53aE5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQuZm9yRWFjaChmdW5jdGlvbiAobywgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG8ubmFtZSA9PT0gX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS5uYW1lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKG8sICd3aCBnZXQxJyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2luZGV4XVsnYlF0eSddICs9IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYlF0eTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRbaW5kZXhdWyd3aCcgKyBpXSA9IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYlF0eTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2x1bW5zLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQ6ICd3aCcgKyBpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ud2hOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDMwMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlc3VsdCwgJ3Jlc3VsdCBiZWZvcmUnKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFtYXAuaGFzKF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ubmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcC5zZXQoX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS5uYW1lLCB0cnVlKTsgLy8gc2V0IGFueSB2YWx1ZSB0byBNYXAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzZXQgYW55IHZhbHVlIHRvIE1hcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmZvckVhY2goZnVuY3Rpb24gKG8pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG8ud05hbWUgPT09IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ud2hOYW1lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGFLZXkgPSBPYmplY3Qua2V5cyhvKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhS2V5ID0gZGF0YUtleS5maWx0ZXIoZnVuY3Rpb24gKGspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBrLmluY2x1ZGVzKCd3aCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKF9kZWZpbmVQcm9wZXJ0eSh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogX3RoaXMuYmFsYW5jZVdhcmVob3VzZVtpXS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJRdHk6IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYlF0eSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ1b206IF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYnVvbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdOYW1lOiBfdGhpcy5iYWxhbmNlV2FyZWhvdXNlW2ldLndoTmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGRhdGFLZXlbMF0sIF90aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0uYlF0eSkpOyAvLyBjb2x1bW5zLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBmaWVsZDogJ3doJytpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICB0aXRsZTogdGhpcy5iYWxhbmNlV2FyZWhvdXNlW2ldLndoTmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgd2lkdGg6IDMwMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0pCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbHVtbnMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIGZpZWxkOiAnd2gnK2ksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gICAgIHRpdGxlOiB0aGlzLmJhbGFuY2VXYXJlaG91c2VbaV0ud2hOYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICB3aWR0aDogMzAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coZGF0YUtleSwgJ3doIGdldDInKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJzk4NycpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMuYmFsYW5jZVdhcmVob3VzZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICBfbG9vcChpKTsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5iYWxhbmNlV2FyZWhvdXNlID0gcmVzdWx0OwogICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKF90aGlzLmNvbHVtbnMsICdjb2x1bW5zJyk7IC8vIHRoaXMuYmFsYW5jZVdhcmVob3VzZSA9IFt0aGlzLmJhbGFuY2VXYXJlaG91c2VbMF1dCgogICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5iYWxhbmNlV2FyZWhvdXNlID0gW3RoaXMuYmFsYW5jZVdhcmVob3VzZVswXV0KICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmNvbHVtbnMgPSBjb2x1bW5zOwogICAgICAgICAgICAgICAgICAgIH0pKCk7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF90aGlzLnNob3dMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9ubG9hZFdhcmVob3VzZTogZnVuY3Rpb24gb25sb2FkV2FyZWhvdXNlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gd2FyZWhvdXNlSGFuZGxlci5nZXRXYXJlaG91c2VTZXR0aW5nQWxsKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi53YXJlaG91c2VzID0gcmVzOwoKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLndhcmVob3VzZSA9IHJlc1swXTsKCiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmdldEJhbGFuY2VXYXJlaG91c2UoKTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlcywgJ3dhcmVob3VzZScpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMzLmdlbmVyYXRlQ29sdW1uKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczMub25sb2FkV2FyZWhvdXNlKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICBjb21wb25lbnRzOiB7CiAgICAnYXBwLWRhdGVwaWNrZXInOiBEYXRlUGlja2VyQ29tcG9uZW50LAogICAgTG9hZGluZ01lOiBmdW5jdGlvbiBMb2FkaW5nTWUoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoIkAvY29tcG9uZW50cy9Mb2FkaW5nIik7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Balance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col sm=\"4\" cols=\"12\" class=\"pt-1\">\n                        <v-select @change=\"getBalanceWarehouse\" :items=\"warehouses\" item-value=\"id\" item-text=\"name\" v-model=\"warehouse\" return-object clearable outlined placeholder=\"Warehouse\" />\n                    </v-col>\n                    <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                        <app-datepicker :initialDate=\"startDate\" @emitDate=\"startDate = $event\"/>\n                    </v-col>\n                    <v-col sm=\"1\" cols=\"1\" class=\"pt-1\">\n                        <v-btn\n                            class=\"btn_search\" @click=\"getBalanceWarehouse\"\n                            style=\"background-color: rgb(237, 241, 245)\"\n                        >\n                            <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                        </v-btn>\n                    </v-col>\n                </v-row>\n    \n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <kendo-datasource ref=\"dataSource\" :data=\"balanceWarehouse\"/>\n                        <kendo-grid id=\"gridProductionOrder\"\n                                    class=\"grid-function\"\n                                    :data-source-ref=\"'dataSource'\"\n                                    :sortable=\"false\"\n                                    :noRecords=\"true\"\n                                    :filterable=\"false\"\n                                    :columns=\"columns\"\n                                    :column-menu=\"true\"\n                                    :editable=\"false\"\n                                    :scrollable-virtual=\"true\">\n<!--                            <kendo-grid-column :field=\"'name'\" :template=\"'<span>#=name#</span>'\" :title=\"$t('product')\" :width=\"100\" :column-menu=\"'false'\"-->\n<!--                                               :headerAttributes=\"{-->\n<!--                                        style: 'background-color: #EDF1F5;',-->\n<!--                                        class: 'text-variants'-->\n<!--                                    }\" :attributes=\"{-->\n<!--                                        style: 'text-align: variants'-->\n<!--                                    }\"/>-->\n<!--                            <kendo-grid-column :field=\"'buom'\" :title=\"$t('uom')\" :width=\"130\"-->\n<!--                                               :template=\"UOMTemplate\" :headerAttributes=\"{-->\n<!--                                        style: 'background-color: #EDF1F5'-->\n<!--                                    }\"/>-->\n<!--                            <kendo-grid-column :field=\"'bQty'\" :title=\"$t('qty')\" :width=\"100\" :headerAttributes=\"{-->\n<!--                                        style: 'background-color: #EDF1F5'-->\n<!--                                    }\"/>-->\n                        </kendo-grid>\n                    </v-col>\n                </v-row>\n                <LoadingMe\n                    :isLoading=\"showLoading\"\n                    :fullPage=\"false\"\n                    :myLoading=\"true\"\n                />\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\nimport DatePickerComponent from '@/components/custom_templates/DatePickerComponent'\nimport {i18n} from \"@/i18n\";\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        mDateSorter: 'Today',\n        startDate: new Date().toISOString().substr(0, 10),\n        dateSorters: ['Today', 'This Week', 'This Month', 'This Year'],\n\n        balanceWarehouse: [],\n        productionOrder: {},\n\n        warehouses: [],\n        warehouse: {},\n        columns: [],\n        calQty: 0,\n    }),\n    props: {},\n    methods: {\n        generateColumn() {\n            this.columns = [\n                {\n                    field: 'name',\n                    title: i18n.t('product'),\n                    locked: true,\n                    width:300\n                },\n                {\n                    field: 'buom',\n                    title: i18n.t('uom'),\n                    template :this.UOMTemplate,\n                    width:300\n                },\n                {\n                    field: 'bQty',\n                    title: i18n.t('qty'),\n                    format: \"{0:n}\",\n                    width:300\n                },\n            ]\n        },\n        UOMTemplate(dataItem) {\n            const buom = dataItem.buom\n            if (buom) {\n                return `<span>${buom ? buom.name : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        async getBalanceWarehouse() {\n            this.showLoading = true\n            const data = {\n                date: this.startDate ? this.startDate : new Date(),\n                whId: this.warehouse ? this.warehouse.id : ''\n            }\n            await warehouseHandler.getAllBalance(data).then(res => {\n                this.balanceWarehouse = res\n                window.console.log(res, 'data')\n                let columns = [\n                    {\n                        field: 'name',\n                        title: i18n.t('product'),\n                        locked: true,\n                        width:300\n                    },\n                    {\n                        field: 'buom',\n                        title: i18n.t('uom'),\n                        template :this.UOMTemplate,\n                        width:120\n                    },\n                    {\n                        field: 'bQty',\n                        title: i18n.t('qty'),\n                        format: \"{0:n}\",\n                        width:120\n                    },\n                ]\n                if (this.warehouse) {\n                    this.columns = columns\n                } else {\n                    const result = [];\n                    const whMap = new Map()\n                    const map = new Map()\n                    for (let i = 0; i < this.balanceWarehouse.length; i++) {\n                        if (!whMap.has(this.balanceWarehouse[i].whId)) {\n                            whMap.set(this.balanceWarehouse[i].whId, true)\n                            if(!map.has(this.balanceWarehouse[i].name)) {\n                                map.set(this.balanceWarehouse[i].name, true);    // set any value to Map\n                                result.push({\n                                    id: this.balanceWarehouse[i].id,\n                                    name: this.balanceWarehouse[i].name,\n                                    bQty: this.balanceWarehouse[i].bQty,\n                                    buom: this.balanceWarehouse[i].buom,\n                                    wName: this.balanceWarehouse[i].whName,\n                                    ['wh'+i]: this.balanceWarehouse[i].bQty\n                                });\n                                columns.push({\n                                    field: 'wh'+i,\n                                    title: this.balanceWarehouse[i].whName,\n                                    width: 300\n                                })\n                            } else {\n                                result.forEach((o, index) => {\n                                    if (o.name === this.balanceWarehouse[i].name) {\n                                        window.console.log(o, 'wh get1')\n                                        result[index]['bQty'] += this.balanceWarehouse[i].bQty\n                                        result[index]['wh'+i] = this.balanceWarehouse[i].bQty\n                                        columns.push({\n                                            field: 'wh'+i,\n                                            title: this.balanceWarehouse[i].whName,\n                                            width: 300\n                                        })\n                                    }\n                                })\n                            }\n                        } else {\n                            window.console.log(result, 'result before')\n                            if(!map.has(this.balanceWarehouse[i].name)) {\n                                map.set(this.balanceWarehouse[i].name, true);    // set any value to Map\n                                result.forEach((o) => {\n                                    if (o.wName === this.balanceWarehouse[i].whName) {\n                                        let dataKey = Object.keys(o)\n                                        dataKey = dataKey.filter(k => k.includes('wh'))\n                                        result.push({\n                                            id: this.balanceWarehouse[i].id,\n                                            name: this.balanceWarehouse[i].name,\n                                            bQty: this.balanceWarehouse[i].bQty,\n                                            buom: this.balanceWarehouse[i].buom,\n                                            wName: this.balanceWarehouse[i].whName,\n                                            [dataKey[0]]: this.balanceWarehouse[i].bQty\n                                        })\n                                        // columns.push({\n                                        //     field: 'wh'+i,\n                                        //     title: this.balanceWarehouse[i].whName,\n                                        //     width: 300\n                                        // })\n                                        window.console.log(dataKey, 'wh get2')\n                                    }\n                                })\n                            }\n                            window.console.log('987')\n                        }\n                    }\n                    this.balanceWarehouse = result\n                    window.console.log(this.columns, 'columns')\n                    // this.balanceWarehouse = [this.balanceWarehouse[0]]\n                    this.columns = columns\n                }\n                this.showLoading = false\n            })\n        },\n        async onloadWarehouse() {\n            await warehouseHandler.getWarehouseSettingAll().then(res => {\n                this.warehouses = res\n                if (res.length > 0) {\n                    this.warehouse = res[0]\n                    this.getBalanceWarehouse()\n                }\n                window.console.log(res, 'warehouse')\n            })\n        }\n    },\n    async mounted() {\n        await this.generateColumn()\n        await this.onloadWarehouse()\n    },\n    computed: {},\n    components: {\n        'app-datepicker': DatePickerComponent,\n        LoadingMe: () => import(\"@/components/Loading\")\n    },\n};\n</script>\n\n<style scoped>\n.function_footer {\n    padding: 15px;\n    display: inline-block;\n}\n\np {\n    color: rgba(0, 0, 0, 0.87);\n}\n\n.actionBtn {\n    height: 47.2px !important;\n}\n\n.text_tip {\n    font-size: 9px;\n    line-height: 10px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"],"sourceRoot":"src/views/products/warehouses/warehouse_report"}]}