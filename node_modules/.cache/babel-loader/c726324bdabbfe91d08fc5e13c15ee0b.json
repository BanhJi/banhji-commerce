{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Input.vue","mtime":1639966363943},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Input.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-row>\n            <v-col sm=\"3\" class=\"pr-1\">\n                <v-row class=\"my-1 mr-0\">\n                    <p>{{$t('p_select_month')}}</p>\n                </v-row>\n                <v-row class=\"my-1 mr-0\">\n                    <p>{{$t('financial_this_payroll')}}</p>\n                </v-row>\n                <v-row class=\"my-2 mr-0\">\n                    <v-col sm=\"0\" cols=\"0\" class=\"pt-0 pr-0\">\n                        <div style=\"line-height: 20px;\" class=\"code_text text-bold\">PBP\n                        </div>\n                    </v-col>\n                    <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                        <v-text-field class=\" custom-border \"\n                            v-model=\"number\"\n                            outlined\n                            :rules=\"[v => !!v || 'Number is required']\"\n                            required\n                            readonly/>\n                    </v-col>\n                    <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                        <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                @click=\"generateNumber\">mdi-qrcode\n                        </v-icon>\n                    </v-col>\n                </v-row>\n            </v-col>\n            <v-col sm=\"3\" class=\"px-1\">\n                <month-picker :initialMonth=\"start_date\"  @emitMonth=\"start_date = $event\" @onChanged=\"monthChange\" :rules=\"[v => !!v || $t('field_is_required')]\"/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"payrollBank\"\n                    item-text=\"bankName\"\n                    item-value=\"bankUuid\"\n                    v-model=\"selectBank\"\n                    :rules=\"[v => !!v || $t('bank_name_require')]\"\n                    @change=\"bankChange\"\n                    outlined\n                    return-object/>\n                <date-picker :initialDate=\"date\" :rules=\"[v => !!v || $t('field_is_required')]\" @emitDate=\"date = $event\"/>\n            </v-col>\n            <v-col sm=\"1\" class=\"\"></v-col>\n            <v-col sm=\"1\" class=\"pr-0 pt-4\">\n                <p>{{$t('payroll_batch_no')}}</p>\n                <p>{{$t('pay_date')}}</p>\n                <p>{{$t('bank_account')}}</p>\n                <p>{{$t('balance_in_banhji')}}</p>\n            </v-col>\n            <v-col sm=\"4\" class=\"pt-4\">\n                <v-select id=\"acc_type_selector\"\n                    :items=\"payrolls\"\n                    item-text=\"referenceNumber\"\n                    item-value=\"id\"\n                    v-model=\"selectReference\"\n                    :rules=\"[v => !!v || $t('field_is_required')]\"\n                    outlined\n                    @change=\"referenceChange\"/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"paymentSchedules\"\n                    :rules=\"[v => !!v || $t('require')]\"\n                    item-text=\"payDate\"\n                    item-value=\"payDate\"\n                    v-model=\"payDate\"\n                    @change=\"scheduleChange\"\n                    outlined/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"bankAccount\"\n                    :rules=\"[v => !!v || $t('bank_name_require')]\"\n                    item-text=\"account.account\"\n                    item-value=\"account.id\"\n                    v-model=\"selectBankAccount\"\n                    outlined\n                    return-object/>\n                <v-text-field outlined v-model=\"balanceInBanhJi\"/>\n            </v-col>\n            <v-col sm=\"12\">\n                <kendo-datasource ref=\"dataSourceInputPayment\"\n                    :data=\"payroll_list\"\n                    :page-size='100'\n                    :sort=\"sort\"/>\n                    <kendo-grid id=\"gridInputPayment\" class=\"grid-function\"\n                        :data-source-ref=\"'dataSourceInputPayment'\"\n                        :editable=\"false\"\n                        :pageable=\"true\"\n                        :pageable-refresh=\"true\"\n                        :column-menu=\"true\">\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'monthOf'\"\n                            :title=\"$t('month_of')\"\n                            :template=\"'<span>#= monthOf#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'slipNumber'\"\n                            :title=\"$t('pay_slip')\"\n                            :template=\"'<span>#= slipNumber#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                         <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'paymentCode'\"\n                            :title=\"$t('payment_code')\"\n                            :template=\"'<span>#= paymentCode#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'employeeId'\"\n                            :title=\"$t('employee_id')\"\n                            :template=\"'<span>#= employeeId#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"250\"\n                            :field=\"'employeeName'\"\n                            :title=\"$t('employee_name')\"\n                            :template=\"'<span>#= employeeName#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"250\"\n                            :field=\"'bank'\"\n                            :title=\"$t('bank')\"\n                            :template=\"'<span>#= bank.bankName #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'bank'\"\n                            :title=\"$t('bank_account')\"\n                            :template=\"'<span>#= bank.bankAccount #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'amounts'\"\n                            :title=\"$t('amount')\"\n                            :template=\"'<span>#= kendo.toString(amount, `n2`) #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                            :attributes=\"{style: 'text-align: right;'}\"/>\n                    </kendo-grid>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        type=\"loading\"\n                        :myLoading=\"true\"\n                    />\n            </v-col>\n        </v-row>\n    </v-form>\n</template>\n<script>\nimport LoadingMe from '@/components/Loading'\nimport kendo from \"@progress/kendo-ui\"\nconst payrollHandler    = require(\"@/scripts/payrollHandler\")\nconst settingsHandler   = require(\"@/scripts/settingsHandler\")\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default({\n    props:['propInput'],\n    data() {\n        return {\n            valid: true,\n            date: '',\n            showLoading: false,\n            start_date: '',\n            selectBank: '',\n            payrollBank:   [],\n            selectBankAccount: '',\n            bankAccount: [],\n            search:{\n                start_date: '',\n                end_date: ''\n            },\n            payrolls: [],\n            payroll_list: [],\n            selectReference: '',\n            sort:[\n                { field: 'referenceNumber', dir: 'asc' }\n            ],\n            num: 0,\n            batchPayment: {},\n            balanceInBanhJi: 0,\n            prefix: '',\n            number:  '',\n            lastNumber: 0,\n            referenceNumber: '',\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            paymentSchedules: [],\n            payDate: '',\n            prefix_format: ''\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        'month-picker' : ()=> import('@/components/custom_templates/MonthPicker'),\n        'date-picker' : ()=> import('@/components/custom_templates/DatePickerComponent')\n    },\n    computed:{\n        loadBatch(){\n            if(this.batch !== undefined){\n                return this.batch\n            }else{\n                return []\n            }\n        }\n    },\n    methods:{\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        async loadPayrollBank(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getBank().then(res => {\n                        this.payrollBank = res.data.data\n                        window.console.log(this.payrollBank,'payrollBank')\n                        this.bankChange()\n                    })\n                }, 300);\n            })\n        },\n        bankChange(){\n            this.bankAccount =  this.payrollBank.filter(item => item.bankUuid ===  this.selectBank.bankUuid)\n        },\n        monthChange(){\n            window.console.log('batchPayment', this.batchPayment)\n            let month_of = kendo.toString(new Date(this.start_date),'yyyy-MM-dd')\n            this.loadPayroll(month_of)\n\n            if(this.batchPayment.number !== ''){\n                this.number = this.batchPayment.number\n                window.console.log(this.number)\n            }else{\n                this.generateNumber()\n            }\n        },\n        loadPayroll(monthOf){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    this.showLoading = true\n                    payrollHandler.getPayrollByMonth(monthOf).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.payrolls = res.data.data\n                        }\n                    })\n                }, 300)\n            })\n        },\n        referenceChange(){\n            if(this.selectReference){\n                this.paymentSchedules = this.payrolls.filter(i =>i.id === this.selectReference).map(index=>{\n                    return index.paymentSchedule\n                })[0]\n            }\n        },\n        loadBatchSingle(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchSingle(this.$route.params.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            this.showLoading = false\n                            let result = res.data\n                            if(result.length > 0){\n                                this.batchPayment           = result[0]\n                                this.selectBank             = this.batchPayment.bank\n                                this.selectBankAccount      = this.batchPayment.bankAccount\n                                // let monthOf                 = this.batchPayment.monthOf ? this.batchPayment.monthOf: new Date()\n                                // this.start_date             = kendo.toString(new Date(monthOf),'yyyy-MM')\n                                this.selectReference        = this.batchPayment.referencePayroll ? this.batchPayment.referencePayroll: ''\n                                this.balanceInBanhJi        = this.batchPayment.balanceInBanhJi\n                                this.payDate                = this.batchPayment.payDate\n                                this.date                   = new Date(this.batchPayment.created || kendo.toString(new Date(),'yyyy-MM-dd')).toISOString().substr(0, 10)\n                                if(this.selectReference){\n                                    this.monthChange()\n                                    this.bankChange()\n                                    this.referenceChange()\n                                    \n                                }\n                                window.console.log('payDate',this.payDate )\n                                this.loadBatchItem(this.batchPayment)\n                            }\n                        }\n                    })\n                }, 300)\n            })\n        },\n        loadBatchItem(result){\n            window.console.log(2)\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            this.showLoading = false\n                            let result = res.data\n                            this.payroll_list = result\n                        }\n                    })\n                }, 300)\n            })\n        },\n        saveSpets(){\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            this.showLoading = true\n            let ds = this.$refs.dataSourceInputPayment.kendoWidget()\n            let dataSource = ds.data()\n            const result = dataSource.map(o => {\n                return {\n                    bank:                       o.bank,\n                    currency:                   o.currency,\n                    deduction:                  o.deduction,\n                    employeeId:                 o.employeeId,\n                    employeeName:               o.employeeName,\n                    employeeUuid:               o.employeeUuid,\n                    employee:                   o.employee,\n                    exchangeRate:               o.exchangeRate,\n                    grossSalary:                o.grossSalary,\n                    id:                         o.id,\n                    abbr:                       this.prefix.abbr,\n                    lastNumber:                 this.lastNumber,\n                    number:                     this.number,\n                    referenceNumber:            this.referenceNumber,\n                    location:                   o.location,\n                    monthOf:                    o.monthOf,\n                    natureEmployee:             o.natureEmployee,\n                    netPay:                     o.netPay,\n                    amountPay:                  o.amount,\n                    netSalary:                  o.netSalary,\n                    overTimeHoliday:            o.overTimeHoliday,\n                    overTimeWeekend:            o.overTimeWeekend,\n                    paymentMethod:              o.paymentMethod,\n                    payrollLiabilitie:          o.payrollLiabilitie,\n                    payrollReferenceNumber:     o.payrollReferenceNumber,\n                    payslip:                    o.payslip,\n                    position:                   o.position,\n                    slipNumber:                 o.slipNumber,\n                    salary:                     o.salary,\n                    salaryType:                 o.salaryType,\n                    status:                     o.status,\n                    taxBenefit:                 o.taxBenefit,\n                    taxRate:                    o.taxRate,\n                    taxSalary:                  o.taxSalary,\n                    taxSalaryUS:                o.taxSalaryUS,\n                    totalBenefit:               o.totalBenefit,\n                    segment:                    o.segment,\n                    amount:                     o.amount,\n                    exchangeAmount:             o.exchangeAmount,\n                    paymentCode:                o.paymentCode,\n                    paymentCodeId:              o.paymentCodeId,\n                    payrollId:                  o.payrollId,\n                }\n            })\n            window.console.log('result', result)\n            if(result.length > 0){\n                let batchAmount = 0;\n                let totalBatch = 0;\n                ds.data().forEach(element => {\n                    totalBatch += 1\n                    batchAmount += parseFloat(element.amount)\n                });\n                this.batchAmount = batchAmount\n                this.totalBatch = totalBatch\n                let amountInWord   = this.inWords(this.batchAmount)\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        this.showLoading = true\n                        resolve('resolved');\n                        let data = {\n                            id:                 this.$route.params.id ? this.$route.params.id : '',\n                            monthOf:            kendo.toString(new Date(this.start_date),'yyyy-MM-dd'),\n                            created:            kendo.toString(new Date(this.date),'yyyy-MM-dd'),\n                            bank:               this.selectBank,\n                            bankAccount:        this.selectBankAccount,\n                            balanceInBanhJi:    this.balanceInBanhJi,\n                            batchItem:          result,\n                            batchAmount:        this.batchAmount,\n                            totalBatch:         this.totalBatch,\n                            referencePayroll:   this.selectReference,\n                            amountInWord:       amountInWord,\n                            abbr:               'PBP',\n                            lastNumber:         parseInt(this.lastNumber),\n                            number:             this.number,\n                            referenceNumber:    this.referenceNumber,\n                            type:               'bath_payment',\n                            step:               2,\n                            status:             0,\n                            loggedUser:         this.loggedUser,\n                            payDate:            this.payDate\n                        };\n                        window.console.log(data)\n                        payrollHandler.createBatchPayment(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.loadSuccess(response.data.statusCode)\n                                this.showLoading = false\n                                this.$snotify.success('Success')\n                            }\n                        })\n                    }, 300);\n                })\n            }else{\n                this.showLoading = false\n                this.$snotify.error('Please check again! ')\n            }\n        },\n        inWords(totalRent){\n        //console.log(totalRent);\n            var a = ['','one ','two ','three ','four ', 'five ','six ','seven ','eight ','nine ','ten ','eleven ','twelve ','thirteen ','fourteen ','fifteen ','sixteen ','seventeen ','eighteen ','nineteen '];\n            var b = ['', '', 'twenty','thirty','forty','fifty', 'sixty','seventy','eighty','ninety'];\n            var number = parseFloat(totalRent).toFixed(2).split(\".\");\n            var num = parseInt(number[0]);\n            var digit = parseInt(number[1]);\n            //console.log(num);\n            if ((num.toString()).length > 10)  return 'overflow';\n            var n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n            var d = ('00' + digit).substr(-2).match(/^(\\d{2})$/);\n            if (!n) return; var str = '';\n            str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';\n            str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';\n            str += (n[5] != 0) ? (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) : '';\n            str += (d[1] != 0) ? ((str != '' ) ? \"and \" : '') + (a[Number(d[1])] || b[d[1][0]] + ' ' + a[d[1][1]]): 'Only!';\n            return str;\n        },\n        goBack(){\n            let batch_id = this.$route.params.id\n            let paymentList = this.payroll_list\n            if(batch_id && paymentList.length === 0){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        payrollHandler.deleteTransactions(batch_id).then(response => {\n                            if (response.statusCode === 200) {\n                                this.showLoading = false\n                                window.history.go(-2)\n                            }\n                        })\n                    },300)\n                })\n            }else{\n                window.history.go(-1)\n            }\n        },\n        loadPrefixes() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getPrefixes().then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.prefixList = result.filter(p => p.type =='payroll_payment')\n                            this.prefix = this.prefixList[0]\n                            this.payNumber = this.prefix\n                            const lastNumber = this.zeroPad(parseInt(0), this.prefix.format)\n                            this.prefix_format = (this.prefix.abbr + this.prefix.numberSeparator + this.prefix.structure + this.prefix.numberSeparator + lastNumber + '@' + this.prefix.sequcencing)\n                        }\n                    })\n                }, 300)\n            })\n        },\n        generateNumber() {\n            if(this.batchPayment !== ''){\n                let sequcencing = ''\n                if(this.payNumber.sequcencing ==\"Year\"){\n                    sequcencing = new Date(this.start_date).toISOString().substr(0, 4)\n                }else if(this.payNumber.sequcencing ==\"Month\"){\n                    sequcencing = new Date(this.start_date).toISOString().substr(0, 7)\n                }else{\n                    sequcencing = ''\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            abbr:       \"PBP\",\n                            structure:  this.payNumber.structure,\n                            date:       new Date(this.start_date),\n                            type:       'bath_payment',\n                            pkId:       'pbp-',\n                            sequcencing: sequcencing\n                        }\n                        payrollHandler.getPrefixNumber(data).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                this.showLoading = false;\n                                const result = res.data.data\n                                const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                this.lastNumber = lastNumber\n                                this.number = number\n                                this.referenceNumber = this.payNumber.abbr + this.payNumber.numberSeparator + this.number\n                            }\n                        })\n                    }, 300);\n                })\n            }else{\n                this.lastNumber = this.batchPayment.lastNumber\n                this.number = this.batchPayment.number\n                this.referenceNumber = this.batchPayment.referenceNumber\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        scheduleChange(){\n            let params =  {\n                payroll_id: this.selectReference,\n                payDate:    this.payDate\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    payrollHandler.getTransactionList(params).then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.payroll_list = result\n                        }\n                    })\n                }, 300)\n            })\n        }\n    },\n    async mounted(){\n        await this.loadPayrollBank()\n        await this.loadBatchSingle()\n        await this.loadPrefixes()\n    },\n    activasted(){\n        this.loadBatchSingle()\n    },\n    watch:{\n        '$route': 'loadBatchSingle'\n    }\n})\n</script>\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: #f44336 !important;\n    }\n\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n        border-top: thin solid #ddd;\n        border-bottom: thin solid #ddd;\n        border-radius: 0 !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n</style>\n"],"sourceRoot":"src/views/payroll/payment/bank_payment"}]}