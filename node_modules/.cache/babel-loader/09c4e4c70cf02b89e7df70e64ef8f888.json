{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Review.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Review.vue","mtime":1639966363943},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Review.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\">\n            <h2 class=\"capitalize\">{{$t('payroll_bank_payment_letter')}}</h2>\n            <p class=\"text-uppercase mb-0\">{{$t('payroll_bank_payament_pa')}}</p>\n            <p class=\"mb-0\">{{$t('for_the_month_of')}}: <span class=\"text-bold\">{{monthOf}}</span></p>\n            <p class=\"  mb-0\">{{$t('reference_no')}}: <span class=\"text-bold\"> PRP2009-001</span></p>\n            <p class=\"\">{{$t('date')}}: <span class=\"text-bold\"> {{createdAt}}</span></p>\n            <p>{{$t('bank_payment_desc_function1')}}:<span class=\"text-bold\"> {{ bankAccount.account ? bankAccount.account:\"\" }}</span> \n                {{$t('bank_payment_desc_function2')}}\n                <span class=\"text-bold\"> {{format(batchPayment.batchAmount)}} ({{batchPayment.amountInWord}})</span>\n                {{$t('bank_payment_desc_function3')}}\n            </p>\n            <kendo-datasource ref=\"dataSourceReview\"\n                :data=\"batchItem\"\n                :page-size='100'\n                :sort=\"sort\"/>\n                <kendo-grid id=\"gridReview\" class=\"grid-function\"\n                    :data-source-ref=\"'dataSourceReview'\"\n                    :editable=\"false\"\n                    :pageable=\"false\"\n                    :pageable-refresh=\"true\"\n                    :column-menu=\"true\">\n                    <kendo-grid-column\n                        :width=\"150\"\n                        :field=\"'employeeId'\"\n                        :title=\"$t('employee_id')\"\n                        :template=\"'<span>#= employeeId#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"220\"\n                        :field=\"'employeeName'\"\n                        :title=\"$t('employee_name')\"\n                        :template=\"'<span>#= employeeName#</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"300\"\n                        :field=\"'bank'\"\n                        :title=\"$t('bank')\"\n                        :template=\"'<span>#= bank.bankName #</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"250\"\n                        :field=\"'bank'\"\n                        :title=\"$t('bank_account')\"\n                        :template=\"'<span>#= bank.bankAccount #</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                    <kendo-grid-column\n                        :width=\"130\"\n                        :field=\"'amountPay'\"\n                        :title=\"$t('amount')\"\n                        :template=\"'<span>#= kendo.toString(amountPay, `n2`) #</span>'\"\n                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                        :attributes=\"{style: 'text-align: right'}\"/>\n                </kendo-grid>\n                <LoadingMe\n                    :isLoading=\"showLoading\"\n                    :fullPage=\"false\"\n                    type=\"loading\"\n                    :myLoading=\"true\"\n                />\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport kendo from \"@progress/kendo-ui\"\nimport LoadingMe from '@/components/Loading'\nconst payrollHandler    = require(\"@/scripts/payrollHandler\")\nimport XLSX from 'xlsx'\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default({\n    props:['batchreview'],\n    data() {\n        return {\n            showLoading: false,\n            batchPayment: {},\n            batchItem: [],\n            monthOf: '',\n            batchAmount: 0,\n            bankAccount: '',\n            createdAt: '',\n            sort:[\n                { field: 'employeeId', dir: 'asc' }\n            ],\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n    },\n    methods:{\n        format(val){\n            return kendo.toString(val,'c2')\n        },\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        loadBatchSingle(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchSingle(this.$route.params.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            let result          = res.data\n                            this.batchPayment   = result[0]\n                            this.batchItem      = this.batchPayment.batchItem\n                            this.monthOf        = kendo.toString(new Date(this.batchPayment.monthOf), 'y')\n                            this.createdAt      = kendo.toString(new Date(this.batchPayment.createdAt),'dd MMMM yyyy')\n                            this.bankAccount    = this.batchPayment.bankAccount.account\n                            this.loadBatchItem(this.batchPayment)\n                        }\n                    })\n                }, 300)\n            })\n        },\n        loadBatchItem(result){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            this.showLoading = false\n                            window.console.log('result',res)\n                            let result = res.data\n                            this.batchItem = result\n                            this.batchItem.sort(function(i, j){\n                                var keyA = i.employeeId,\n                                    keyB = j.employeeId;\n                                if (keyA < keyB) return -1;\n                                if (keyA > keyB) return 1;\n                                return 0;\n                            })\n                        }\n                    })\n                }, 300)\n            })\n        },\n        formatAmount(value){\n            return kendo.toString(value,'n2')\n        },\n        saveSpets(){\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    let data = {\n                        id:                 this.$route.params.id ? this.$route.params.id : '',\n                        monthOf:            this.batchPayment.monthOf,\n                        created:            this.batchPayment.created,\n                        bank:               this.batchPayment.bank,\n                        bankAccount:        this.batchPayment.bankAccount,\n                        balanceInBanhJi:    this.batchPayment.balanceInBanhJi,\n                        batchItem:          this.batchPayment.batchItem,\n                        date:               this.batchPayment.date,\n                        batchAmount:        this.batchPayment.batchAmount,\n                        totalBatch:         this.batchPayment.totalBatch,\n                        amountInWord:       this.batchPayment.amountInWord,\n                        referencePayroll:   this.batchPayment.referencePayroll,\n                        abbr:               this.batchPayment.abbr,\n                        lastNumber:         this.batchPayment.lastNumber,\n                        number:             this.batchPayment.number,\n                        referenceNumber:    this.batchPayment.referenceNumber,\n                        type:               this.batchPayment.type,\n                        step:               3,\n                        status:             0,\n                        loggedUser:         this.loggedUser\n                    };\n                    window.console.log('2', data)\n                    payrollHandler.createBatchPayment(data).then(response => {\n                        this.showLoading = true\n                        if (response.data.statusCode === 201) {\n                            this.showLoading = false\n                            this.$snotify.success('Success')\n                            this.loadSuccess(response.data.statusCode)\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n                }, 300);\n            })\n        },\n        goBack(){\n            window.history.go(-1)\n        },\n        download(){\n            let ds = this.$refs.dataSourceReview.kendoWidget()\n            const result = ds.data().map((o, i) => {\n                return {\n                    no:                         i + 1,\n                    employeeId:                 o.employeeId,\n                    employeeName:               o.employeeName,\n                    amountPay:                  o.amountPay,\n                    bankName:                   o.bank.bankName,\n                    bankAccount:                o.bankAccount,\n                    // currency:                   o.currency,\n                    // deduction:                  o.deduction,\n                    // employeeId:                 o.employeeId,\n                    // employeeUuid:               o.employeeUuid,\n                    // employee:                   o.employee,\n                    // exchangeRate:               o.exchangeRate,\n                    // grossSalary:                o.grossSalary,\n                    // id:                         o.id,\n                    // location:                   o.location,\n                    // monthOf:                    o.monthOf,\n                    // natureEmployee:             o.natureEmployee,\n                    // netPay:                     o.netPay,\n                    // amountPay:                  o.netPay,\n                    // netSalary:                  o.netSalary,\n                    // overTimeHoliday:            o.overTimeHoliday,\n                    // overTimeWeekend:            o.overTimeWeekend,\n                    // paymentMethod:              o.paymentMethod,\n                    // payrollLiabilitie:          o.payrollLiabilitie,\n                    // payrollReferenceNumber:     o.payrollReferenceNumber,\n                    // payslip:                    o.payslip,\n                    // position:                   o.position,\n                    // slipNumber:                 o.slipNumber,\n                    // salary:                     o.salary,\n                    // salaryType:                 o.salaryType,\n                    // status:                     o.status,\n                    // taxBenefit:                 o.taxBenefit,\n                    // taxRate:                    o.taxRate,\n                    // taxSalary:                  o.taxSalary,\n                    // taxSalaryUS:                o.taxSalaryUS,\n                    // totalBenefit:               o.totalBenefit,\n                    // segment:                    o.segment\n                }\n            })\n            window.console.log(result)\n            this.excelData = [\n                {name: 'thearann',id: '00001'},\n                {name: 'Dara',id: '00002'}\n            ]\n            let header = ['no','employeeId','employeeName','bankName','bankAccount','amountPay']\n            const jsonWorkSheet = XLSX.utils.json_to_sheet(result, {header, defval: null});\n            const workBook = {\n                SheetNames: ['PAYROLL (BANK PAYMENT)'], // sheet name\n                Sheets: {'PAYROLL (BANK PAYMENT)': jsonWorkSheet}\n            }\n            XLSX.writeFile(workBook, \"bank-payment.xlsx\");\n        },\n    },\n    async mounted(){\n        await this.loadBatchSingle()\n    },\n    watch:{\n        batchreview(){\n            if (this.batchreview !== undefined) {\n                this.loadBatchSingle()\n            }\n        }\n    }\n})\n</script>\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: #f44336 !important;\n    }\n\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n        border-collapse: collapse !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table td{\n        height: 32px !important;\n        border: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-collapse: collapse !important;\n    }\n    .v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        height: 32px !important;\n        border: thin solid rgba(0, 0, 0, 0.12) !important;\n        color: #000 !important;\n        border-collapse: collapse !important;\n    }\n</style>\n\n"],"sourceRoot":"src/views/payroll/payment/bank_payment"}]}