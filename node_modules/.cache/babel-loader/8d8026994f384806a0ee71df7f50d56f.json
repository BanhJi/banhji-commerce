{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/input/add_withholding_tax/_add_withholding_tax.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/input/add_withholding_tax/_add_withholding_tax.js","mtime":1638499443168},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/input/add_withholding_tax/_add_withholding_tax.js"],"names":["kendo","DropDownList","uuid","MonthlyReturn","WithholdingRecord","axios","require","$","textField","keyField","defaultItem","emptyItem","taxSetting","taxSettingHandler","apiUrl","monthlyReturnHandler","supplierHandler","withholdingTaxHandler","withholdingTax","monthlyReturn","name","components","LoadingMe","mixins","props","data","showLoading","menu","itemLines","filter","dataItemKey","suppBaseUrl","search","supplierList","txn_date","Date","toISOString","substr","amount","totalVat","natures","computed","natureWithholding","default","state","natureTaxPayer","typeProductTax","listTax","isDisable","hasOwnProperty","status","code","$route","query","type","id","params","withholding","undefined","watch","created","loadListTax","loadNatureTaxType","mounted","initData","loadData","methods","onLoadOneReturn","window","console","log","clear","w_id","onloadOneWithholding","get","tax_setting","tax_nature_get","then","res","i","itemLine","taxName","p","defaultTax","push","vat","baseAmount","description","natureTaxType","supplier","length","totalAmount","totalVAT","clearWithholding","addRow","getOne","Promise","resolve","setTimeout","disableEditor","ds","$refs","dataSource","kendoWidget","total","insert","tax_list_get","onSupplierFilterChanged","event","value","skip","baseUrl","url","requestStarted","fetch","response","json","afterFetch","onChange","nature","toLowerCase","taxPayerType","forEach","calculateTax","dataRow","vatTax","totalTax","item","amt","autoCalculateTax","map","index","uid","splice","parseFloat","tax","formula","inAmt","nAmt","taxBase","rate","eval","calculateTaxDelete","onDataSourceChanges","e","field","items","set","onClose","history","go","numberFormat","toString","rowNumberTmpl","dataItem","indexOf","removeRow","preventDefault","grid","jQuery","currentTarget","closest","remove","natureTaxTypeDropdownEditor","container","options","appendTo","kendoDropDownList","autoBind","autoWidth","height","dataTextField","dataValueField","optionLabel","typeProductTaxDropdownEditor","transactionType","taxType","typeId","model","group","onSaveClose","supplierId","purchase","accountId","account","v1","date","monthlyReturnId","reference","monthOf","isSave","result","$store","dispatch"],"mappings":"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","sourcesContent":["/*\n * Last modified : 3/31/21, 10:09 AM in Project banhji-accounting-web-module\n * Copyright (c) 2021. Chandarith Chea under Company BanhJi Fintech Co., Ltd\n * Facebook Profile : https://www.facebook.com/profile.php?id=100011194806947\n * Github Profile : https://github.com/Darith-Mokpost\n * Instagram Profile : https://www.instagram.com/chandarith_chea\n */\nimport kendo from \"@progress/kendo-ui\";\nimport {DropDownList} from \"@progress/kendo-vue-dropdowns\";\nimport {uuid} from 'vue-uuid'\nimport MonthlyReturn from \"@/scripts/compliance/model/MonthlyReturn\";\nimport WithholdingRecord from \"@/scripts/compliance/model/WithholdingRecord\";\n\nconst axios = require('axios')\nconst $ = require(\"jquery\")\nconst textField = 'numberName'\nconst keyField = 'id'\nconst defaultItem = {[textField]: 'Select supplier...', [keyField]: null}\nconst emptyItem = {[textField]: 'loading ...'}\nconst taxSetting = require('@/store/taxSetting');\nconst taxSettingHandler = require(\"@/scripts/taxSettingHandler\")\nconst apiUrl = require('@/apiUrl')\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nconst supplierHandler = require(\"@/scripts/supplierHandler\")\nconst withholdingTaxHandler = require(\"@/scripts/compliance/handler/withholdingTaxHandler\")\nconst withholdingTax = new WithholdingRecord({})\nconst monthlyReturn = new MonthlyReturn({})\n// @vue/component\nexport default {\n    name: 'Add_withholding_tax',\n\n    components: {\n        LoadingMe: () => import('@/components/Loading'),\n        'dropdownlist': DropDownList,\n    },\n\n    mixins: [],\n\n    props: {},\n\n    data() {\n        return {\n            showLoading: false,\n            menu: false,\n            monthlyReturn: monthlyReturn,\n            withholdingTax: withholdingTax,\n            itemLines: [],\n            filter: '',\n            textField: 'numberName',\n            dataItemKey: 'id',\n            defaultItem: defaultItem,\n            suppBaseUrl: supplierHandler.search(),\n            supplierList: [],\n            txn_date: new Date().toISOString().substr(0, 10),\n\n            amount: 0,\n            totalVat: 0,\n            natures: []\n        }\n    },\n\n    computed: {\n        natureWithholding() {\n            return taxSetting.default.state.natureTaxPayer\n        },\n        typeProductTax() {\n            return taxSetting.default.state.listTax\n        },\n        isDisable() {\n            if (this.monthlyReturn.hasOwnProperty('status')) {\n                if (this.monthlyReturn.status.code === 1) {\n                    if (this.$route.query.type === 'edit') {\n                        return false\n                    } else if (this.$route.query.type === 'view') {\n                        return true\n                    } else {\n                        return true\n                    }\n                } else {\n                    return true\n                }\n            } else {\n                return true\n            }\n        },\n        id() {\n            if (this.$route.params.withholding !== undefined) {\n                return this.$route.params.withholding\n            } else {\n                return ''\n            }\n        }\n    },\n\n    watch: {\n        'id': 'initData'\n    },\n\n    async created() {\n        await this.loadListTax()\n        await this.loadNatureTaxType()\n    },\n\n    async mounted() {\n        await this.initData()\n        await this.loadData(0, '', this.suppBaseUrl)\n    },\n\n    methods: {\n        async initData() {\n            this.showLoading = true\n            if (this.$route.params.id !== undefined && this.$route.params.monthlyReturn === undefined) {\n                await this.onLoadOneReturn()\n                window.console.log(this.$route.params)\n            } else if (this.$route.params.monthlyReturn !== undefined) {\n                this.monthlyReturn = this.$route.params.monthlyReturn\n            } else {\n                this.clear()\n            }\n            if (this.$route.query.w_id !== undefined && this.$route.params.withholding === undefined) {\n                await this.onloadOneWithholding()\n            } else if (this.$route.params.withholding !== undefined) {\n                await axios.get(apiUrl.tax_setting.tax_nature_get).then(res => {\n                    this.natures = res.data.data\n                })\n                this.withholdingTax = this.$route.params.withholding\n                const itemLines = []\n                for (let i =0; i < this.withholdingTax.itemLine.length; i++) {\n                    this.withholdingTax.itemLine[i].taxName = this.typeProductTax.filter(p => p.defaultTax === this.withholdingTax.itemLine[i].taxName.name)[0]\n                    itemLines.push({\n                        amount: this.withholdingTax.itemLine[i].amount,\n                        vat: this.withholdingTax.itemLine[i].vat,\n                        baseAmount: this.withholdingTax.itemLine[i].baseAmount,\n                        taxName: this.withholdingTax.itemLine[i].taxName,\n                        description: this.withholdingTax.itemLine[i].description,\n                        natureTaxType: this.natures.filter(p => p.name === this.withholdingTax.supplier.natureTaxType)[0]\n                    })\n                }\n                this.withholdingTax.itemLine = itemLines\n                this.amount = this.withholdingTax.totalAmount || 0\n                this.totalVat = this.withholdingTax.totalVAT || 0\n            } else {\n                await this.clearWithholding()\n            }\n            if (this.withholdingTax.totalAmount !== 0 || this.withholdingTax.totalVAT !== 0) {\n                this.amount = this.withholdingTax.totalAmount\n                this.totalVat = this.withholdingTax.totalVAT\n            } else {\n                if (withholdingTax.itemLine.length === 0) {\n                    await this.addRow()\n                }\n            }\n            this.showLoading = false\n            // if (this.sale.itemLine.length === 0) {\n            //     await this.addRow()\n            // }\n        },\n        onloadOneWithholding() {\n            withholdingTaxHandler.getOne(this.monthlyReturn.id).then(res => {\n                this.withholdingTax = res.data.data[0]\n            })\n        },\n        clearWithholding() {\n        },\n        async onLoadOneReturn() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    const id = this.$route.params.id\n                    monthlyReturnHandler.getOne(id).then(res => {\n                        this.monthlyReturn = res.data.data[0]\n                    })\n                })\n            })\n        },\n        disableEditor() {\n            return false;\n        },\n        async addRow() {\n            let ds = this.$refs.dataSource.kendoWidget(),\n                total = ds.total();\n            ds.insert(total, {\n                natureTaxType: {name: ''},\n                taxName: {defaultTax: \"\"},\n                baseAmount: \"\",\n                amount: 0,\n                description: \"\",\n            });\n        },\n        async loadListTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_list_get, \"listTax\", \"setListTax\")\n                    window.console.log(taxSetting.default.state.listTax, 'list')\n                }, 100)\n            })\n        },\n        async onSupplierFilterChanged(event) {\n            const filter = event.filter.value\n            await this.loadData(0, filter, this.suppBaseUrl)\n            this.filter = filter\n        },\n        async loadData(skip, filter, baseUrl) {\n            const url = baseUrl +\n                `?filter=${filter}`\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    return response.json()\n                })\n                .then(this.afterFetch)\n        },\n        afterFetch(json) {\n            this.supplierList = json.data\n        },\n        async onChange(event) {\n            const value = event.value\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            let natureTaxType = {}\n            this.withholdingTax.supplier = value\n            window.console.log(this.natureWithholding, '0987')\n            if (this.withholdingTax.supplier.nature.name.toLowerCase() === 'individual-foreign') {\n                this.withholdingTax.supplier.taxPayerType = 'Physical Person'\n                this.withholdingTax.supplier.natureTaxType = 'Non-Resident'\n            } else if (this.withholdingTax.supplier.nature.name.toLowerCase() === 'foreign entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Non-Resident'\n            } else if (this.withholdingTax.supplier.nature.name.toLowerCase() === 'individual-local') {\n                this.withholdingTax.supplier.taxPayerType = 'Physical Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            } else if (this.withholdingTax.supplier.nature.name.toLowerCase() === 'non-taxable entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            } else if (this.withholdingTax.supplier.nature.name.toLowerCase() === 'taxable entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            }\n            this.natureWithholding.forEach(i => {\n                window.console.log(i.name, this.withholdingTax.supplier.natureTaxType)\n                if (i.name === this.withholdingTax.supplier.natureTaxType) {\n                    window.console.log(i, 'mnv')\n                    natureTaxType = i\n                }\n            })\n\n            this.withholdingTax.itemLine = [{\n                natureTaxType: natureTaxType,\n                typeProductTax: {defaultTax: \"\"},\n                baseAmount: \"\",\n                amount: 0,\n                description: \"\",\n            }]\n            window.console.log(this.withholdingTax.itemLine, '12')\n        },\n        calculateTax() {\n            let ds = this.$refs.dataSource.kendoWidget()\n            let dataRow = ds.data(),\n                vatTax = 0, totalTax = 0, totalAmount = 0, amount = 0\n            this.itemLines = []\n            dataRow.forEach(item => {\n                if (item.typeProductTax) {\n                    let amt = (item.amount)\n                    vatTax = this.autoCalculateTax(item.typeProductTax, amt)\n                }\n                amount = item.amount\n                this.itemLines.map((i, index) => {\n                    if (i.uid === item.uid) {\n                        this.itemLines.splice(index, 1)\n                    }\n                })\n                this.itemLines.push({\n                    uid: item.uid,\n                    amount: item.amount,\n                    natureTaxType: item.natureTaxType,\n                    vat: vatTax,\n                    description: item.description,\n                    typeProductTax: item.typeProductTax,\n                    baseAmount: item.baseAmount\n                })\n            })\n            totalTax += kendo.parseFloat(vatTax)\n            totalAmount += kendo.parseFloat(amount)\n\n            this.totalVat += totalTax\n            this.amount += totalAmount\n\n            window.console.log(this.itemLines)\n        },\n        autoCalculateTax(tax, amount) {\n            if (tax) {\n                let formula = tax.formula,\n                    inAmt = kendo.parseFloat(amount),\n                    nAmt = kendo.parseFloat(amount),\n                    taxBase = kendo.parseFloat(tax.taxBase) / 100,\n                    rate = kendo.parseFloat(tax.rate) / 100,\n                    total = eval(formula)\n                window.console.log(inAmt, nAmt, taxBase, rate, formula, total)\n                return total\n            }\n        },\n        calculateTaxDelete(dataRow) {\n            let vatTax = 0\n            if (dataRow.typeProductTax) {\n                let amt = dataRow.amount\n                vatTax = this.autoCalculateTax(dataRow.typeProductTax, amt)\n            }\n            this.totalVat = this.totalVat - vatTax\n        },\n        onDataSourceChanges(e) {\n            if (e.field) {\n                let dataRow = e.items[0]\n                switch (e.field) {\n                    case \"typeProductTax\":\n                        dataRow.set(\"baseAmount\", dataRow.typeProductTax.baseAmount)\n                        if (dataRow.amount > 0) {\n                            this.calculateTax()\n                        }\n                        break\n                    case \"amount\":\n                        if (dataRow.typeProductTax.hasOwnProperty('defaultTax')) {\n                            this.calculateTax()\n                        }\n                        break\n                }\n            }\n        },\n        async loadNatureTaxType() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_nature_get, \"natureTaxPayer\", \"setNatureTaxPayer\")\n                    window.console.log(taxSetting.default.state.natureTaxPayer, 'nature')\n                })\n            })\n        },\n        onClose() {\n            this.withholdingTax = new WithholdingRecord({})\n            this.itemLines = []\n            this.totalVat = 0\n            this.amount = 0\n            window.history.go(-1)\n            // this.$router.push({\n            //     name: 'Withholding Tax Record',\n            //     path: 'withholding_tax_record',\n            //     query: {type: this.$route.query.type},\n            //     params: {id: this.monthlyReturn.id, monthlyReturn: this.monthlyReturn}\n            // })\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n2`)\n        },\n        // Auto Increase number\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.dataSource.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        // Remove Row\n        removeRow(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                window.console.log(dataItem, 'delete')\n                if (dataItem.amount !== 0 || dataItem.typeProductTax.rate !== undefined) {\n                    this.amount = this.amount - dataItem.amount\n                    this.calculateTaxDelete(dataItem)\n                }\n\n                dataSource.remove(dataItem);\n            }\n        },\n        natureTaxTypeDropdownEditor(container, options) {\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 300,\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: this.natureWithholding\n                })\n        },\n        typeProductTaxDropdownEditor(container, options) {\n            window.console.log(options)\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 200,\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: {\n                        data: this.typeProductTax.filter((item) => item.transactionType === \"Purchase\" && item.taxType.typeId === 2 && item.natureTaxPayer === options.model.natureTaxType.name),\n                        group: {\n                            field: \"baseAmount\"\n                        }\n                    }\n                });\n        },\n        async onSaveClose() {\n            if (this.withholdingTax.supplier.type.toLowerCase() === 'individual-foreign') {\n                this.withholdingTax.supplier.taxPayerType = 'Physical Person'\n                this.withholdingTax.supplier.natureTaxType = 'Non-Resident'\n            } else if (this.withholdingTax.supplier.type.toLowerCase() === 'foreign entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Non-Resident'\n            } else if (this.withholdingTax.supplier.type.toLowerCase() === 'individual-local') {\n                this.withholdingTax.supplier.taxPayerType = 'Physical Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            } else if (this.withholdingTax.supplier.type.toLowerCase() === 'non-taxable entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            } else if (this.withholdingTax.supplier.type.toLowerCase() === 'taxable entity') {\n                this.withholdingTax.supplier.taxPayerType = 'Legal Person'\n                this.withholdingTax.supplier.natureTaxType = 'Resident'\n            }\n            this.withholdingTax.supplier.supplierId = ''\n            if (this.itemLines.length < 0 || this.withholdingTax.itemLine.length > 0) {\n                window.console.log(this.purchase.itemLine, 'itemline 123412412')\n                this.withholdingTax.itemLine = this.withholdingTax.itemLine.map(item => {\n                    return {\n                        uid: item.uid,\n                        amount: item.amount,\n                        item: item.item,\n                        vat: item.vat,\n                        description: item.description,\n                        natureTaxType: item.natureTaxType ? item.natureTaxType.name : '',\n                        taxName: {name: item.taxName.defaultTax, accountId: item.taxName.account.id},\n                        baseAmount: item.baseAmount,\n                    }\n                })\n            }\n            const data = {\n                id: this.withholdingTax.id ? this.withholdingTax.id : `mr-${uuid.v1()}`,\n                type: 'withholding',\n                date: this.withholdingTax.date,\n                monthlyReturnId: this.monthlyReturn.id,\n                description: '',\n                reference: this.withholdingTax.reference,\n                monthOf: this.monthlyReturn.monthOf,\n                supplier: this.withholdingTax.supplier,\n                totalVAT: this.totalVat,\n                totalAmount: this.amount,\n                itemLine: this.itemLines.length > 0 ? this.itemLines : this.withholdingTax.itemLine,\n                isSave: this.withholdingTax.isSave || false,\n                status: this.$route.query.type === 'Edit' ? 2 : 1,\n                dataSource: this.$route.query.type === 'Edit' ? this.withholdingTax.dataSource : {name: \"Manually\", id: 2},\n            }\n            const result = new WithholdingRecord(data)\n            // data = this.stringify(data)\n            window.console.log(data, 'data')\n            this.$store.dispatch('compliance/pushWithholding', result)\n            // let w = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding'))\n            // window.console.log(w, 'we12')\n            // if (w) {\n            //     if (w.length <= 0) {\n            //         if (this.monthlyReturn.abbr !== '' && this.monthlyReturn.number !== '') {\n            //             localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding', JSON.stringify(data))\n            //         }\n            //\n            //     } else {\n            //         const allArray = [...w, ...data]\n            //         results = allArray.filter((e, i) => allArray.findIndex(o => o.totalVAT === e.totalVAT && o.totalAmount === e.totalAmount) === i)\n            //         window.console.log(results, '34567')\n            //         if (this.monthlyReturn.abbr !== '' && this.monthlyReturn.number !== '') {\n            //             localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding', JSON.stringify(results))\n            //         }\n            //     }\n            // } else {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding', JSON.stringify(data))\n            // }\n            this.showLoading = false\n            this.onClose()\n            window.console.log(result, 'withholding')\n            // new Promise((resolve) => {\n            //     setTimeout(() => {\n            //         resolve(\"resolved\");\n            //         withholdingTaxHandler.create(data).then(() => {\n            //             this.showLoading = false\n            //             this.onClose()\n            //         }).catch(e => {\n            //             window.console.error(e)\n            //         })\n            //     }, 300);\n            // })\n        },\n    }\n}\n"]}]}