{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/paymentTerms.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/paymentTerms.js","mtime":1638499443072},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwoKdmFyIHBheW1lbnRUZXJtSGFuZGxlciA9IHJlcXVpcmUoJ0Avc2NyaXB0cy9wYXltZW50VGVybUhhbmRsZXInKTsgLy8gaW5pdGlhbCBzdGF0ZQoKCnZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7CiAgICBsaXN0OiBbXSwKICAgIGlzTG9hZGVkOiBmYWxzZQogIH07Cn07IC8vIGdldHRlcnMKCgp2YXIgZ2V0dGVycyA9IHt9OyAvLyBhY3Rpb25zCgp2YXIgYWN0aW9ucyA9IHsKICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZSwgY29tbWl0ID0gX3JlZi5jb21taXQ7CgogICAgICAgICAgICAgIGlmIChzdGF0ZS5pc0xvYWRlZCkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBwYXltZW50VGVybUhhbmRsZXIuZ2V0QWxsKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgic2V0TGlzdCIsIHJlc3BvbnNlLmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2FkZWQiLCB0cnVlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5saXN0KTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZExpc3Q6IGZ1bmN0aW9uIGFkZExpc3QoX3JlZjIsIGxpc3QpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICBjb21taXQoInNldExpc3QiLCBsaXN0KTsKICAgIGNvbW1pdCgic2V0TG9hZGVkIiwgdHJ1ZSk7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0TGlzdDogZnVuY3Rpb24gc2V0TGlzdChzdGF0ZSwgbGlzdCkgewogICAgc3RhdGUubGlzdCA9IGxpc3Q7CiAgfSwKICBzZXRMb2FkZWQ6IGZ1bmN0aW9uIHNldExvYWRlZChzdGF0ZSwgc3RhdHVzKSB7CiAgICBzdGF0ZS5pc0xvYWRlZCA9IHN0YXR1czsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/paymentTerms.js"],"names":["paymentTermHandler","require","state","list","isLoaded","getters","actions","getList","commit","getAll","response","data","addList","mutations","setList","setLoaded","status","namespaced"],"mappings":";;;AAAA,IAAMA,kBAAkB,GAAGC,OAAO,CAAC,8BAAD,CAAlC,C,CAEA;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,QAAQ,EAAE;AAFO,GAAP;AAAA,CAAd,C,CAKA;;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACNC,EAAAA,OADM,yBACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBL,cAAAA,KAAgB,QAAhBA,KAAgB,EAATM,MAAS,QAATA,MAAS;;AAAA,kBACtBN,KAAK,CAACE,QADgB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEFJ,kBAAkB,CAACS,MAAnB,EAFE;;AAAA;AAEnBC,cAAAA,QAFmB;AAGvBF,cAAAA,MAAM,CAAC,SAAD,EAAYE,QAAQ,CAACC,IAAT,CAAcA,IAA1B,CAAN;AACAH,cAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;;AAJuB;AAAA,+CAOpBN,KAAK,CAACC,IAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,GATW;AAUZS,EAAAA,OAVY,0BAUMT,IAVN,EAUY;AAAA,QAAfK,MAAe,SAAfA,MAAe;AACpBA,IAAAA,MAAM,CAAC,SAAD,EAAYL,IAAZ,CAAN;AACAK,IAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACH;AAbW,CAAhB,C,CAgBA;;AACA,IAAMK,SAAS,GAAG;AACdC,EAAAA,OADc,mBACNZ,KADM,EACCC,IADD,EACO;AACjBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,GAHa;AAIdY,EAAAA,SAJc,qBAIJb,KAJI,EAIGc,MAJH,EAIW;AACrBd,IAAAA,KAAK,CAACE,QAAN,GAAiBY,MAAjB;AACH;AANa,CAAlB;AASA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXf,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXC,EAAAA,OAAO,EAAPA,OAJW;AAKXO,EAAAA,SAAS,EAATA;AALW,CAAf","sourcesContent":["const paymentTermHandler = require('@/scripts/paymentTermHandler');\n\n// initial state\nconst state = () => ({\n    list: [],\n    isLoaded: false,\n})\n\n// getters\nconst getters = {}\n\n// actions\nconst actions = {\n    async getList({state, commit}) {\n        if (!state.isLoaded) {\n            let response = await paymentTermHandler.getAll();\n            commit(\"setList\", response.data.data);\n            commit(\"setLoaded\", true);\n        }\n\n        return state.list;\n    },\n    addList({commit}, list) {\n        commit(\"setList\", list);\n        commit(\"setLoaded\", true);\n    },\n}\n\n// mutations\nconst mutations = {\n    setList(state, list) {\n        state.list = list\n    },\n    setLoaded(state, status) {\n        state.isLoaded = status\n    },\n}\n\nexport default {\n    namespaced: true,\n    state,\n    getters,\n    actions,\n    mutations\n}"]}]}