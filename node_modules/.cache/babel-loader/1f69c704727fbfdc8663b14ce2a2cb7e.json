{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/app-connection/handler/appConnectionHandle.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/app-connection/handler/appConnectionHandle.js","mtime":1640658755374},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktYWNjb3VudGluZy13ZWItbW9kdWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanMiKS5kZWZhdWx0OwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiKTsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7Cgp2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoKTsKdmFyIGJhc2VVcmwgPSBwcm9jZXNzLmVudi5WVUVfQVBQX0FQSTsKCnZhciBjb29raWVKUyA9IHJlcXVpcmUoIkAvY29va2llLmpzIik7Cgp2YXIgY29va2llID0gY29va2llSlMuZ2V0Q29va2llKCk7CnZhciBpbnN0aXR1dGVJZCA9IGNvb2tpZSAhPT0gdW5kZWZpbmVkID8gY29va2llLmluc3RpdHV0ZUlkIDogJyc7CnZhciBpbnN0ID0gaW5zdGl0dXRlSWQuc3BsaXQoJy0nKTsKCnZhciBnZXRUb2tlbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICB2YXIgZGF0YSwgcmVzdWx0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgIGVtYWlsOiAiYmFuaGppQGdtYWlsLmNvbSIsCiAgICAgICAgICAgICAgcGFzc3dvcmQ6ICJEZmEkVVpwYUc0VFQtayVlIgogICAgICAgICAgICB9OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlLnBvc3QoImh0dHBzOi8vYXBpLXJ1cHAuY2FtaXMtaW5mby5jb20vcnVwcC1hcGkvdjEvaWRlbnRpZnkiLCBkYXRhKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3VsdC5kYXRhLnRva2VuKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsKCm1vZHVsZS5leHBvcnRzLmdldCA9IC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogIHZhciB0b2tlbiwgcmVzdWx0OwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICByZXR1cm4gZ2V0VG9rZW4oKTsKCiAgICAgICAgY2FzZSAzOgogICAgICAgICAgdG9rZW4gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5nZXQoJ2h0dHBzOi8vYXBpLXJ1cHAuY2FtaXMtaW5mby5jb20vcnVwcC1hcGkvdjEvbGlzdC1mZWUtY2F0ZWdvcnknLCB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICJCZWFyZXIgIi5jb25jYXQodG9rZW4sICIgIiksCiAgICAgICAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQuZGF0YS5kYXRhKTsKCiAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTA7CiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICBjYXNlIDEzOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDEwXV0pOwp9KSk7Cm1vZHVsZS5leHBvcnRzLmdldERlcGFydG1lbnQgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICB2YXIgdG9rZW4sIHJlc3VsdDsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgcmV0dXJuIGdldFRva2VuKCk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHRva2VuID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICByZXR1cm4gaW5zdGFuY2UuZ2V0KCdodHRwczovL2FwaS1ydXBwLmNhbWlzLWluZm8uY29tL3J1cHAtYXBpL3YxL2xpc3QtYWxsLWZhY3VsdHktZGVwYXJ0bWVudCcsIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogIkJlYXJlciAiLmNvbmNhdCh0b2tlbiwgIiAiKSwKICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3VsdC5kYXRhLmRhdGEpOwoKICAgICAgICBjYXNlIDEwOgogICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxMDsKICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0My50MCk7CgogICAgICAgIGNhc2UgMTM6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgMTBdXSk7Cn0pKTsKCm1vZHVsZS5leHBvcnRzLmFkZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChkYXRhKSB7CiAgICB2YXIgcmVzdWx0OwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCIiLmNvbmNhdChiYXNlVXJsLCAiL3YxLXNydi9lZHVjYXRpb25zLyIpLmNvbmNhdChpbnN0WzFdLCAiL21hdGNoZXMiKSwgZGF0YSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXN1bHQuZGF0YSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDg7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1swLCA4XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKbW9kdWxlLmV4cG9ydHMuZ2V0TWF0Y2ggPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICB2YXIgcmVzdWx0OwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDUucHJldiA9IDA7CiAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDM7CiAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCIiLmNvbmNhdChiYXNlVXJsLCAiL3YxLXNydi9lZHVjYXRpb25zLyIpLmNvbmNhdChpbnN0WzFdLCAiL21hdGNoZXMiKSk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgcmVzdWx0LmRhdGEpOwoKICAgICAgICBjYXNlIDg6CiAgICAgICAgICBfY29udGV4dDUucHJldiA9IDg7CiAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMCk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDUudDApOwoKICAgICAgICBjYXNlIDExOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDhdXSk7Cn0pKTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/app-connection/handler/appConnectionHandle.js"],"names":["axios","require","instance","create","baseUrl","process","env","VUE_APP_API","cookieJS","cookie","getCookie","instituteId","undefined","inst","split","getToken","data","email","password","post","result","token","module","exports","get","headers","window","console","error","getDepartment","add","log","getMatch"],"mappings":"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","sourcesContent":["const axios \t= require('axios')\nconst instance = axios.create();\nconst baseUrl = process.env.VUE_APP_API;\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nconst instituteId = cookie !== undefined ? cookie.instituteId : '';\nconst inst = instituteId.split('-');\nconst getToken = async () => {\n    let data ={\n        email: \"banhji@gmail.com\",\n        password: \"Dfa$UZpaG4TT-k%e\"\n    }\n    const result =  await instance.post(`https://api-rupp.camis-info.com/rupp-api/v1/identify`,data); \n    return result.data.token;\n}\n\nmodule.exports.get = async function () {\n  try {\n    const token = await getToken();\n    const result =  await instance.get('https://api-rupp.camis-info.com/rupp-api/v1/list-fee-category',   \n        {\n            headers: {\n                'Authorization': `Bearer ${token} `,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n         \n            }\n        });\n    return result.data.data;\n  } catch (error) {\n    window.console.error(error)\n  }\n}\nmodule.exports.getDepartment = async function () {\n  try {\n    const token = await getToken();\n    const result =  await instance.get('https://api-rupp.camis-info.com/rupp-api/v1/list-all-faculty-department',   \n        {\n            headers: {\n                'Authorization': `Bearer ${token} `,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n         \n            }\n        });\n    return result.data.data;\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n\nmodule.exports.add = async function (data) {\n    try {\n        const result =  await axios.post(`${baseUrl}/v1-srv/educations/${inst[1]}/matches`,data); \n        window.console.log(result);\n        return result.data;\n    } catch (error) {\n      window.console.error(error)\n    }\n  }\n\nmodule.exports.getMatch = async () => {\n  try {\n    const result =  await axios.get(`${baseUrl}/v1-srv/educations/${inst[1]}/matches`); \n      window.console.log(result);\n      return result.data;\n  } catch (error) {\n    window.console.error(error)\n  }\n}\n  "]}]}