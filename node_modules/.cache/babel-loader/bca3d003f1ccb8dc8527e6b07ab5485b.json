{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/projects/project_information/Attachment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/projects/project_information/Attachment.vue","mtime":1638499443309},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Attachment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row class=\"grayBg\">\n    <v-col sm=\"12\" cols=\"12\" class=\"\">\n      <v-card outlined color=\"white\" class=\"pa-3\">\n        <v-row class=\"\">\n          <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <p class=\"mb-2\">{{ $t('file_type') }} [PDF, JPG, JPEG, TIFF,\n              PNG, GIF] - 5MB</p>\n            <template>\n              <v-file-input\n                  v-model=\"files\"\n                  @change=\"onFileChange\"\n                  accept=\"image/jpg, image/jpeg, application/pdf\"\n                  :placeholder=\"$t('attachments')\"\n                  single\n                  prepend-icon=\"mdi-paperclip\">\n                <template v-slot:selection=\"{ text }\">\n                  <v-chip\n                      small\n                      label\n                      color=\"primary\"\n                  >\n                    {{ text }}\n                  </v-chip>\n                </template>\n              </v-file-input>\n              <v-text-field\n                  v-model=\"fileDesc\"\n                  outlined\n                  :placeholder=\"$t('description')\"\n                  clearable/>\n            </template>\n            <v-btn color=\"primary\" class=\"text-capitalize white--text\" @click=\"uploadFile\">\n              <v-icon size=\"15\" class=\"mr-2\">fa-check</v-icon>\n              {{ $t('upload') }}\n            </v-btn>\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoadingAtch\"\n                  :fullPage=\"false\"\n                  type=\"loading\"\n                  :myLoading=\"true\">\n              </LoadingMe>\n              <kendo-datasource ref=\"attachmentDS\"\n                                :data=\"attachmentList\"/>\n              <kendo-grid id=\"gridAttachment\" class=\"grid-function\"\n                          :data-source-ref=\"'attachmentDS'\"\n                          :editable=\"false\"\n                          :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                    :field=\"''\"\n                    :title=\"$t('open')\"\n                    :width=\"70\"\n                    :template=\"fileUrl\"\n                    :attributes=\"{style: 'text-align: center'}\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'fileName'\"\n                    :title=\"$t('file_name')\"\n                    :width=\"250\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'description'\"\n                    :title=\"$t('description')\"\n                    :width=\"250\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'fileType'\"\n                    :title=\"$t('file_type')\"\n                    :width=\"150\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n                <kendo-grid-column\n                    :field=\"'size'\"\n                    :title=\"$t('size')\"\n                    :width=\"150\"\n                    :template=\"byteToMB\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n                <kendo-grid-column\n                    :field=\"'createdAt'\"\n                    :title=\"$t('date')\"\n                    :width=\"120\"\n                    :template=\"'<span>#= kendo.toString(new Date(createdAt), dateFormat)#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n              </kendo-grid>\n            </template>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n<script>\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\")\nexport default {\n  name: \"ProjectAttachment\",\n  props: ['project'],\n  data: () => ({\n    showLoadingAtch: false,\n    showLoading: false,\n    attachments: [],\n    files: [],\n    rules: [\n      files => !files || !files.some(file => file.size > 5 * 1024 * 1024) || 'Avatar size should be less than 5 MB!'\n    ],\n    attachmentList: [],\n    imgFile: '',\n    src: '',\n    file_: {},\n    fileDesc: '',\n    fileSize: 0,\n    fileType: '',\n    fileName: ''\n  }),\n  components: {\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  methods: {\n    byteToMB(dataItem) {\n      const FileSize = dataItem.size || 0 // in MiB\n      const marker = 1024; // Change to 1000 if required\n      const decimal = 3; // Change as required\n      const kiloBytes = marker; // One Kilobyte is 1024 bytes\n      const megaBytes = marker * marker; // One MB is 1024 KB\n      const gigaBytes = marker * marker * marker; // One GB is 1024 MB\n      // const teraBytes = marker * marker * marker * marker; // One TB is 1024 GB\n\n      // return bytes if less than a KB\n      if (FileSize < kiloBytes) {\n        return FileSize + \" Bytes\";\n      }\n      // return KB if less than a MB\n      else if (FileSize < megaBytes) {\n        return ((FileSize / kiloBytes).toFixed(decimal) + \" KB\");\n      }\n      // return MB if less than a GB\n      else if (FileSize < gigaBytes) {\n        return ((FileSize / megaBytes).toFixed(decimal) + \" MB\");\n      }\n      // return GB if less than a TB\n      else {\n        return ((FileSize / gigaBytes).toFixed(decimal) + \" GB\");\n      }\n\n      /* var FileSize = file.files[0].size / 1024 / 1024; // in MiB\n      if (FileSize > 2) {\n          alert('File size exceeds 2 MiB');\n         // $(file).val(''); //for clearing with Jquery\n      } else {\n                  alert('File size' + FileSize);\n      } */\n    },\n    onFileChange(e) {\n      if (e) {\n        this.fileDesc = e.name\n        this.fileName = e.name\n        this.fileSize = e.size\n        this.fileType = e.type\n        let input = this.files\n        // Ensure that you have a file before attempting to read it\n        if (input) {\n          let reader = new FileReader()\n          // Define a callback function to run, when FileReader finishes its job\n          reader.onloadend = (e) => {\n            // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n            // Read image as base64 and set to imageData\n            this.imgFile = e.target.result\n          }\n          // Start the reader job - read file as a data url (base64 format)\n          reader.readAsBinaryString(input)\n          this.src = URL.createObjectURL(input)\n        }\n      }\n    },\n    async uploadFile() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          if (this.imgFile || this.project) {\n            const id = this.project.id || ''\n            const name = this.project.name || ''\n            let data = {\n              file: this.imgFile,\n              info: {\n                name: this.fileName,\n                description: this.fileDesc,\n                size: this.fileSize,\n                type: this.fileType\n              },\n              type: 'Project',\n              id: id,\n              name: name\n            }\n            this.showLoadingAtch = true\n            billingHandler.attachment(data).then(res => {\n              if (res.data.statusCode === 201) {\n                this.showLoadingAtch = false\n                this.imgFile = null\n                this.src = ''\n                this.fileDesc = ''\n                this.fileName = ''\n                this.fileSize = 0\n                this.fileType = ''\n                this.$snotify.success('Success')\n                this.loadAttachment()\n                // this.txnList = JSON.parse(JSON.stringify(res.data.data))\n                // window.console.log('transactions', this.txnList)\n              }\n            })\n          } else {\n            this.showLoadingAtch = false\n            this.$snotify.error('Please browse to upload image')\n          }\n        }, 10)\n      })\n    },\n    fileUrl(dataItem) {\n      if (dataItem.fileUrl) {\n        return `<a target=\"_blank\" style=\"color:#ED1A3A !important\" href=\"${dataItem.fileUrl}\"><span>Open</span></a>`\n      }\n      return ``\n    },\n    async loadAttachment() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          if (this.project.hasOwnProperty('id')) {\n            this.showLoadingAtch = true\n            const strFilter = '?id=' + this.project.id\n            billingHandler.attachmentList(strFilter).then(res => {\n              if (res.data.statusCode === 200) {\n                this.showLoadingAtch = false\n                this.attachmentList = res.data.data\n              }\n            })\n          }\n\n        }, 10)\n      })\n    },\n  },\n  watch: {\n    'project': 'loadAttachment'\n  },\n}\n</script>\n<style scoped>\n</style>"],"sourceRoot":"src/views/services_projects/projects/project_information"}]}