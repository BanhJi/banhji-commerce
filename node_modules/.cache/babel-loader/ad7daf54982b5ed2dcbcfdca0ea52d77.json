{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js","mtime":1638499442997},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBrZW5kbyBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGlVcmwuanMnKTsKCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGFpbmVyLCBvcHRpb25zKSB7CiAgLy8gRGVmaW5kIG9yZGVyaW5nIGJ5IHR5cGUgbnVtYmVyCiAgdmFyIGNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHsKICAgIGlmIChhLml0ZW1zWzBdLnRheFR5cGUudHlwZUlkID09PSBiLml0ZW1zWzBdLnRheFR5cGUudHlwZUlkKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIGlmIChhLml0ZW1zWzBdLnRheFR5cGUudHlwZUlkID4gYi5pdGVtc1swXS50YXhUeXBlLnR5cGVJZCkgewogICAgICByZXR1cm4gMTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiAtMTsKICAgIH0KICB9OyAvLyBEZWZpbmQgZGVmYXVsdCBncm91cAoKCiAgdmFyIGdyb3VwID0gewogICAgZmllbGQ6ICJ0YXhUeXBlLm5hbWUiLAogICAgY29tcGFyZTogY29tcGFyZQogIH07IC8vIFVzZSBsb2NhbCBkYXRhCgogIHZhciBkcyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgZGF0YTogc3RvcmUuc3RhdGUudGF4ZXMubGlzdC5maWx0ZXIoZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZS50cmFuc2FjdGlvblR5cGUudG9Mb3dlckNhc2UoKSA9PT0gInB1cmNoYXNlIjsKICAgIH0pLAogICAgZ3JvdXA6IGdyb3VwCiAgfSk7IC8vIERlZmluZSBkcm9wZG93bmxpc3QKCiAgdmFyIGRkbCA9IGtlbmRvLmpRdWVyeSgnPGlucHV0IG5hbWU9IicgKyBvcHRpb25zLmZpZWxkICsgJyIvPicpLmFwcGVuZFRvKGNvbnRhaW5lcikua2VuZG9Ecm9wRG93bkxpc3QoewogICAgYXV0b0JpbmQ6IHRydWUsCiAgICBhdXRvV2lkdGg6IHRydWUsCiAgICBoZWlnaHQ6IDQwMCwKICAgIGZpbHRlcjogInN0YXJ0c3dpdGgiLAogICAgZGF0YVRleHRGaWVsZDogImRlZmF1bHRUYXgiLAogICAgZGF0YVZhbHVlRmllbGQ6ICJpZCIsCiAgICBvcHRpb25MYWJlbDogIi0tLSBTZWxlY3QgLS0tIiwKICAgIGRhdGFTb3VyY2U6IGRzCiAgfSkuZGF0YSgia2VuZG9Ecm9wRG93bkxpc3QiKTsgLy8gVXNlIHJlbW90ZSBkYXRhCgogIGlmICghc3RvcmUuc3RhdGUudGF4ZXMuaXNMb2FkZWQpIHsKICAgIHZhciByZW1vdGVEUyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgICB0cmFuc3BvcnQ6IHsKICAgICAgICByZWFkOiB7CiAgICAgICAgICB1cmw6IGFwaVVybC50YXhfc2V0dGluZy50YXhfbGlzdF9nZXQKICAgICAgICB9LAogICAgICAgIGRhdGFUeXBlOiAianNvbiIKICAgICAgfSwKICAgICAgc2NoZW1hOiB7CiAgICAgICAgbW9kZWw6IHsKICAgICAgICAgIGlkOiAiaWQiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHJlc3BvbnNlKSB7CiAgICAgICAgICAvKiBBZGQgdG8gc3RvcmUgKi8KICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCd0YXhlcy9hZGRMaXN0JywgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YS5maWx0ZXIoZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiB2YWx1ZS50cmFuc2FjdGlvblR5cGUudG9Mb3dlckNhc2UoKSA9PT0gInB1cmNoYXNlIjsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSwKICAgICAgZ3JvdXA6IGdyb3VwCiAgICB9KTsKICAgIGRkbC5zZXREYXRhU291cmNlKHJlbW90ZURTKTsKICB9CgogIHJldHVybiBkZGw7Cn0pOw=="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js"],"names":["kendo","store","apiUrl","require","container","options","compare","a","b","items","taxType","typeId","group","field","ds","data","DataSource","state","taxes","list","filter","value","transactionType","toLowerCase","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","dataTextField","dataValueField","optionLabel","dataSource","isLoaded","remoteDS","transport","read","url","tax_setting","tax_list_get","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"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","sourcesContent":["import kendo from '@progress/kendo-ui';\n\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Defind ordering by type number\n    let compare = function(a, b) {\n        if (a.items[0].taxType.typeId === b.items[0].taxType.typeId) {\n            return 0;\n        } else if (a.items[0].taxType.typeId > b.items[0].taxType.typeId) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: \"taxType.name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.taxes.list.filter(value => value.transactionType.toLowerCase() === \"purchase\"),\n        group: group,\n    })\n\n    // Define dropdownlist\n    let ddl = kendo.jQuery('<input name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"defaultTax\",\n                dataValueField: \"id\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n    \n    // Use remote data\n    if(!store.state.taxes.isLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.tax_setting.tax_list_get,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"id\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('taxes/addList', response.data);\n                    \n                    return response.data.filter(value => value.transactionType.toLowerCase() === \"purchase\");\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}