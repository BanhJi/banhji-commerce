{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/journalHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/journalHandler.js","mtime":1638760538965},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/journalHandler.js"],"names":["axios","require","apiUrl","module","exports","getOne","id","get","journals","params","request_for_entry","response","window","console","error","getEntryDetailByAccount","accounts","data","entries_detail","forEach","value","dr","cr","amount","exchanged_amount","journal_uuid","getJournalByPrimaryContact","getJournalByTransactionType","type","save","post"],"mappings":"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","sourcesContent":["const axios \t= require('axios');\nconst apiUrl \t= require('@/apiUrl.js');\n\n// GET BY ID\nmodule.exports.getOne = async (id) => {\n    try {\n        const response = await axios.get(apiUrl.journals + `/${id}`, {\n            params : {\n                request_for_entry: true\n            }\n        })\n        \n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// GET ENTRY DETAIL BY ACCOUNT { account_uuid }\nmodule.exports.getEntryDetailByAccount = async (id, params) => {\n    try {\n        const response = await axios.get(apiUrl.accounts + `/${id}/entries`, params);\n        \n        let data = [];\n        if (typeof response.data === \"object\") {\n            data = response.data;\n            data.entries_detail.forEach(value => {\n                // Set dr/cr from amount\n                let dr = '', cr = '';\n                if(value.amount < 0){\n                    cr = value.exchanged_amount * -1;\n                }else{\n                    dr = value.exchanged_amount;\n                }\n\n                value.id = value.journal_uuid;\n                value.dr = dr;\n                value.cr = cr;\n            })\n        }\n\n        return data;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET JOURNAL BY PRIMARY CONTACT\nmodule.exports.getJournalByPrimaryContact = async (id, params) => {\n    try {\n        const response = await axios.get(apiUrl.journals + `/primarycontact/${id}`, params);\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET JOURNAL BY TRANSACTION TYPE\nmodule.exports.getJournalByTransactionType = async (type, params) => {\n    try {\n        const response = await axios.get(apiUrl.journals + `/transactions/${type}`, params);\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// SAVE\nmodule.exports.save = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.journals, data);\n        \n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}"]}]}