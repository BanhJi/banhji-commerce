{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/settings/tax_setting/_tax_setting.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/settings/tax_setting/_tax_setting.js","mtime":1638499443179},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/settings/tax_setting/_tax_setting.js"],"names":["i18n","ListTaxModel","NatureTaxPayerModel","SupplierCustomerTaxModel","TaxPayerModel","TypeTaxModel","apiUrl","require","taxSetting","taxSettingHandler","name","components","LoadingMe","mixins","props","data","showLoading","tabTaxSetting","id","t","title","step","dialogCloneTypeTax","noClone","selectTax","defaultTaxFix","listTaxClones","progress_load","text_load","headerListTax","text","value","align","width","typeTax","listTax","supplierCustomerTax","taxPayer","natureTaxPayer","computed","listTaxs","set","default","commit","get","state","typeTaxs","supplierCustomerTaxs","SuppliersCustomerTax","taxPayers","natureTaxPayers","natureWithholding","loadData","watch","created","mounted","methods","onClickCloneTax","i","length","isClone","push","onClone","defaultTax","alert","onEditTax","item","setTimeout","onSaveCloseTax","window","console","log","ListTax","subId","desc","acc","rate","taxBase","baseAmount","transac","formula","save","then","timeSet","loadListTax","Promise","resolve","tax_setting","tax_list_get","loadTypeTax","tax_type_get","loadTaxPayer","tax_payer_get","loadTypeCustomer","tax_supcus_get","loadNatureTaxPayer","tax_nature_get"],"mappings":"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","sourcesContent":["/*\n * Last modified : 3/29/21, 11:11 AM in Project banhji-accounting-web-module\n * Copyright (c) 2021. Chandarith Chea under Company BanhJi Fintech Co., Ltd\n * Facebook Profile : https://www.facebook.com/profile.php?id=100011194806947\n * Github Profile : https://github.com/Darith-Mokpost\n * Instagram Profile : https://www.instagram.com/chandarith_chea\n */\n\n// @vue/component\nimport {i18n} from \"@/i18n\";\nimport {\n    ListTaxModel,\n    NatureTaxPayerModel,\n    SupplierCustomerTaxModel,\n    TaxPayerModel,\n    TypeTaxModel\n} from \"@/scripts/model/AppModels\";\n\nconst apiUrl = require('@/apiUrl')\nconst taxSetting = require('@/store/taxSetting');\nconst taxSettingHandler = require('@/scripts/taxSettingHandler')\nexport default {\n    name: 'Tax_setting',\n\n    components: {\n        LoadingMe: () => import('@/components/Loading')\n    },\n\n    mixins: [],\n\n    props: {},\n\n    data () {\n        return {\n            showLoading: false,\n            tabTaxSetting: [\n                {\n                    id: 1,\n                    name: i18n.t('type_of_tax')\n                },\n                {\n                    id: 2,\n                    name: i18n.t('list_of_tax')\n                },\n                {\n                    id: 3,\n                    name: i18n.t('type_of_tax_payer')\n                },\n                {\n                    id: 4,\n                    name: i18n.t(\"nature_of_tax_payer\")\n                },\n                {\n                    id: 5,\n                    name: i18n.t(\"type_of_customer_supplier\")\n                }\n            ],\n            title: '',\n            step: 1,\n            dialogCloneTypeTax: false,\n            noClone: false,\n            selectTax: {},\n            defaultTaxFix: '',\n            listTaxClones: [],\n            progress_load: true,\n            text_load: i18n.t('loading_please_wait'),\n            headerListTax: [\n                {\n                    text: i18n.t('id'),\n                    value: 'id',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('sub_id'),\n                    value: 'subId',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('default_tax'),\n                    value: 'defaultTax',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('transaction'),\n                    value: 'transac',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('description'),\n                    value: 'desc',\n                    align: 'center',\n                    width: \"25%\"\n                },\n                {\n                    text: i18n.t('accounts'),\n                    value: 'acc',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('tax_base'),\n                    value: 'taxBase',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('rate'),\n                    value: 'rate',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('base_amount'),\n                    value: 'baseAmount',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('nature_of_tax_payers'),\n                    value: 'natureTaxPayer',\n                    align: 'center',\n                },\n                {\n                    text: i18n.t('action'),\n                    value: 'action',\n                    align: 'center',\n                },\n\n            ],\n            typeTax: new TypeTaxModel({}),\n            listTax: new ListTaxModel({}),\n            supplierCustomerTax: new SupplierCustomerTaxModel({}),\n            taxPayer: new TaxPayerModel({}),\n            natureTaxPayer: new NatureTaxPayerModel({}),\n        }\n    },\n\n    computed: {\n        listTaxs: {\n            set(listTax) {\n                taxSetting.default.commit(\"setListTax\", listTax)\n            },\n            get() {\n                return taxSetting.default.state.listTax\n            }\n        },\n        typeTaxs: {\n            set(typeTax) {\n                taxSetting.default.commit(\"setTypeTax\", typeTax)\n            },\n            get() {\n                return taxSetting.default.state.typeTax\n            }\n        },\n        supplierCustomerTaxs: {\n            set(SuppliersCustomerTax) {\n                taxSetting.default.commit(\"setSupplierCustomerTax\", SuppliersCustomerTax)\n            },\n            get() {\n                return taxSetting.default.state.supplierCustomerTax\n            }\n        },\n        taxPayers: {\n            set(taxPayer) {\n                taxSetting.default.commit(\"setTaxPayer\", taxPayer)\n            },\n            get() {\n                return taxSetting.default.state.taxPayer\n            }\n        },\n        natureTaxPayers: {\n            set(natureWithholding) {\n                taxSetting.default.commit(\"setNatureWithholdingTax\", natureWithholding)\n                this.loadData()\n            },\n            get() {\n                return taxSetting.default.state.natureTaxPayer\n            }\n        },\n    },\n\n    watch: {},\n\n    created () {},\n\n    mounted() {\n        this.loadData()\n    },\n\n    methods: {\n        async onClickCloneTax() {\n            this.dialogCloneTypeTax = true\n            this.title = \"clone_tax\"\n            this.selectTax = []\n            this.step = 1\n            for (let i = 0; i < this.listTaxs.length; i++) {\n                if (this.listTaxs[i].isClone !== 1) {\n                    this.listTaxClones.push(this.listTaxs[i])\n                }\n            }\n        },\n        async onClone() {\n            if (this.selectTax.length !== 0) {\n                this.selectTax.id = ''\n                this.defaultTaxFix = this.selectTax.defaultTax\n                this.step = 2\n                this.noClone = false\n            } else {\n                alert(\"Please Choose one tax of default tax\")\n            }\n        },\n        async onEditTax(item) {\n            this.step = 2\n            this.selectTax = []\n            this.title = 'Edit Tax \"' + item.defaultTax + '\"'\n            setTimeout(() => {\n                this.dialogCloneTypeTax = true\n            }, 300)\n            this.defaultTaxFix = ''\n            this.selectTax = item\n            this.noClone = true\n        },\n        async onSaveCloseTax() {\n            window.console.log(this.selectTax.defaultTax)\n            let ListTax\n            if (this.selectTax.id) {\n                ListTax = {\n                    id: this.selectTax.id,\n                    defaultTax: this.selectTax.defaultTax,\n                }\n            } else {\n                ListTax = {\n                    id: this.selectTax.id || '',\n                    subId: this.selectTax.subId,\n                    defaultTax: this.defaultTaxFix,\n                    desc: this.selectTax.desc,\n                    acc: this.selectTax.acc,\n                    natureTaxPayer: this.selectTax.natureTaxPayer,\n                    rate: this.selectTax.rate,\n                    taxBase: this.selectTax.taxBase,\n                    baseAmount: this.selectTax.baseAmount,\n                    transac: this.selectTax.transac,\n                    formula: this.selectTax.formula,\n                }\n            }\n\n            taxSettingHandler.save(ListTax).then(() => {\n                this.selectTax = []\n                this.step = 1\n                this.dialogCloneTypeTax = false\n\n            })\n        },\n\n        async timeSet() {\n            setTimeout(() => {\n                this.progress_load = false\n                this.text_load = 'No Data Here!'\n            }, 3000)\n        },\n        async loadListTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_list_get, \"listTax\", \"setListTax\")\n                }, 500)\n            })\n        },\n        async loadTypeTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_type_get, \"typeTax\", \"setTypeTax\")\n                }, 200)\n            })\n            window.console.log(this.typeTax)\n        },\n        async loadTaxPayer() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_payer_get, \"taxPayer\", \"setTaxPayer\")\n                }, 1000)\n            })\n        },\n        async loadTypeCustomer() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_supcus_get, \"taxCustomerSupplier\", \"setSupplierCustomerTax\")\n                }, 3000)\n            })\n        },\n        async loadNatureTaxPayer() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    taxSettingHandler.get(apiUrl.tax_setting.tax_nature_get, \"natureTaxPayer\", \"setNatureTaxPayer\")\n                }, 2000)\n            })\n        },\n        async loadData() {\n            this.showLoading = true\n            await this.loadTypeCustomer()\n            await this.loadListTax()\n            await this.loadNatureTaxPayer()\n            await this.loadTypeTax()\n            await this.loadTaxPayer()\n            this.showLoading = false\n        }\n    }\n}\n"]}]}