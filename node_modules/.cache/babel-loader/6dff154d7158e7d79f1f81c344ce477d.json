{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/upload_excel/Timesheet.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/upload_excel/Timesheet.vue","mtime":1638499442953},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFhMU1ggZnJvbSAneGxzeCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgYmVmb3JlVXBsb2FkOiBGdW5jdGlvbiwKICAgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICAgIG9uU3VjY2VzczogRnVuY3Rpb24gLy8gZXNsaW50LWRpc2FibGUtbGluZQoKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgZXhjZWxEYXRhOiB7CiAgICAgICAgaGVhZGVyOiBudWxsLAogICAgICAgIHJlc3VsdHM6IG51bGwKICAgICAgfQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdlbmVyYXRlRGF0YTogZnVuY3Rpb24gZ2VuZXJhdGVEYXRhKF9yZWYpIHsKICAgICAgdmFyIGhlYWRlciA9IF9yZWYuaGVhZGVyLAogICAgICAgICAgcmVzdWx0cyA9IF9yZWYucmVzdWx0czsKICAgICAgdGhpcy5leGNlbERhdGEuaGVhZGVyID0gaGVhZGVyOwogICAgICB0aGlzLmV4Y2VsRGF0YS5yZXN1bHRzID0gcmVzdWx0czsKICAgICAgdGhpcy5vblN1Y2Nlc3MgJiYgdGhpcy5vblN1Y2Nlc3ModGhpcy5leGNlbERhdGEpOwogICAgfSwKICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVDbGljayhlKSB7CiAgICAgIHZhciBmaWxlcyA9IGUudGFyZ2V0LmZpbGVzOwogICAgICB2YXIgcmF3RmlsZSA9IGZpbGVzWzBdOyAvLyBvbmx5IHVzZSBmaWxlc1swXQoKICAgICAgaWYgKCFyYXdGaWxlKSByZXR1cm47CiAgICAgIHRoaXMudXBsb2FkKHJhd0ZpbGUpOwogICAgfSwKICAgIHVwbG9hZDogZnVuY3Rpb24gdXBsb2FkKHJhd0ZpbGUpIHsKICAgICAgaWYgKCF0aGlzLmJlZm9yZVVwbG9hZCkgewogICAgICAgIHRoaXMucmVhZGVyRGF0YShyYXdGaWxlKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciBiZWZvcmUgPSB0aGlzLmJlZm9yZVVwbG9hZChyYXdGaWxlKTsKCiAgICAgIGlmIChiZWZvcmUpIHsKICAgICAgICB0aGlzLnJlYWRlckRhdGEocmF3RmlsZSk7CiAgICAgIH0KICAgIH0sCiAgICByZWFkZXJEYXRhOiBmdW5jdGlvbiByZWFkZXJEYXRhKHJhd0ZpbGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgIHZhciBkYXRhID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgICAgICAgICAgIHZhciB3b3JrYm9vayA9IFhMU1gucmVhZChkYXRhLCB7CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnYXJyYXknCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0U2hlZXROYW1lID0gd29ya2Jvb2suU2hlZXROYW1lc1swXTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGZpcnN0U2hlZXROYW1lID09PSAnVGltZXNoZWV0JykgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHdvcmtzaGVldCA9IHdvcmtib29rLlNoZWV0c1tmaXJzdFNoZWV0TmFtZV07CgogICAgICAgICAgICAgICAgICAgICAgdmFyIGhlYWRlciA9IF90aGlzLmdldEhlYWRlclJvdyh3b3Jrc2hlZXQpOyAvLyBjb25zdCBoZWFkZXJfcmVzdWx0ID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCwge2hlYWRlcjogMX0pCiAgICAgICAgICAgICAgICAgICAgICAvLyBza2lwIHJvdwoKCiAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zdCBoZWFkZXJfcmVzdWx0ID0gWExTWC51dGlscy5zaGVldF90b19qc29uKHdvcmtzaGVldCwge2hlYWRlcjogMX0pCiAgICAgICAgICAgICAgICAgICAgICAvLyBza2lwIHJvdwogICAgICAgICAgICAgICAgICAgICAgdmFyIHJhbmdlID0gWExTWC51dGlscy5kZWNvZGVfcmFuZ2Uod29ya3NoZWV0WychcmVmJ10pOwogICAgICAgICAgICAgICAgICAgICAgcmFuZ2Uucy5yID0gMTA7CiAgICAgICAgICAgICAgICAgICAgICB3b3Jrc2hlZXRbJyFyZWYnXSA9IFhMU1gudXRpbHMuZW5jb2RlX3JhbmdlKHJhbmdlKTsgLy8gc2tpcCByb3cKCiAgICAgICAgICAgICAgICAgICAgICAvLyBza2lwIHJvdwogICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdHMgPSBYTFNYLnV0aWxzLnNoZWV0X3RvX2pzb24od29ya3NoZWV0LCB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogMQogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzID0gcmVzdWx0cy5maWx0ZXIoZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlbMV0gIT09IHVuZGVmaW5lZDsKICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmdlbmVyYXRlRGF0YSh7CiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcjogaGVhZGVyLAogICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRzOiByZXN1bHRzCiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIF90aGlzLiR0b2FzdC5lcnJvcignUGxlYXNlIFVwbG9hZCBTYWxlIGZpbGUhJyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKHJhd0ZpbGUpOwogICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0SGVhZGVyUm93OiBmdW5jdGlvbiBnZXRIZWFkZXJSb3coc2hlZXQpIHsKICAgICAgdmFyIGhlYWRlcnMgPSBbXTsKICAgICAgdmFyIHJhbmdlID0gWExTWC51dGlscy5kZWNvZGVfcmFuZ2Uoc2hlZXRbJyFyZWYnXSk7CiAgICAgIHZhciBDOyAvLyBjb25zdCBSID0gcmFuZ2Uucy5yCgogICAgICB2YXIgUiA9IDk7CiAgICAgIC8qIHN0YXJ0IGluIHRoZSBmaXJzdCByb3cgKi8KCiAgICAgIGZvciAoQyA9IHJhbmdlLnMuYzsgQyA8PSByYW5nZS5lLmM7ICsrQykgewogICAgICAgIC8qIHdhbGsgZXZlcnkgY29sdW1uIGluIHRoZSByYW5nZSAqLwogICAgICAgIHZhciBjZWxsID0gc2hlZXRbWExTWC51dGlscy5lbmNvZGVfY2VsbCh7CiAgICAgICAgICBjOiBDLAogICAgICAgICAgcjogUgogICAgICAgIH0pXTsKICAgICAgICAvKiBmaW5kIHRoZSBjZWxsIGluIHRoZSBmaXJzdCByb3cgKi8KCiAgICAgICAgdmFyIGhkciA9ICdVTktOT1dOICcgKyBDOyAvLyA8LS0gcmVwbGFjZSB3aXRoIHlvdXIgZGVzaXJlZCBkZWZhdWx0CgogICAgICAgIGlmIChjZWxsICYmIGNlbGwudCkgaGRyID0gWExTWC51dGlscy5mb3JtYXRfY2VsbChjZWxsKTsKICAgICAgICBoZWFkZXJzLnB1c2goaGRyKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGhlYWRlcnM7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Timesheet.vue"],"names":[],"mappings":";;;;;;;;;AAMA,OAAA,IAAA,MAAA,MAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,YAAA,EAAA,QADA;AACA;AACA,IAAA,SAAA,EAAA,QAFA,CAEA;;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA;AACA,QAAA,MAAA,EAAA,IADA;AAEA,QAAA,OAAA,EAAA;AAFA;AAFA,KAAA;AAOA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,8BACA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,OAAA,QAAA,OAAA;AACA,WAAA,SAAA,CAAA,MAAA,GAAA,MAAA;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,OAAA;AACA,WAAA,SAAA,IAAA,KAAA,SAAA,CAAA,KAAA,SAAA,CAAA;AACA,KALA;AAMA,IAAA,WANA,uBAMA,CANA,EAMA;AACA,UAAA,KAAA,GAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AACA,UAAA,OAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAFA,CAEA;;AACA,UAAA,CAAA,OAAA,EAAA;AACA,WAAA,MAAA,CAAA,OAAA;AACA,KAXA;AAYA,IAAA,MAZA,kBAYA,OAZA,EAYA;AACA,UAAA,CAAA,KAAA,YAAA,EAAA;AACA,aAAA,UAAA,CAAA,OAAA;AACA;AACA;;AACA,UAAA,MAAA,GAAA,KAAA,YAAA,CAAA,OAAA,CAAA;;AACA,UAAA,MAAA,EAAA;AACA,aAAA,UAAA,CAAA,OAAA;AACA;AACA,KArBA;AAsBA,IAAA,UAtBA,sBAsBA,OAtBA,EAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AADA,iDAEA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,sBAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,kBAAA,MAAA,CAAA,MAAA,GAAA,UAAA,CAAA,EAAA;AACA,wBAAA,IAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA;AACA,wBAAA,QAAA,GAAA,IAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AAAA,sBAAA,IAAA,EAAA;AAAA,qBAAA,CAAA;AACA,wBAAA,cAAA,GAAA,QAAA,CAAA,UAAA,CAAA,CAAA,CAAA;;AACA,wBAAA,cAAA,KAAA,WAAA,EAAA;AACA,0BAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CAAA,cAAA,CAAA;;AACA,0BAAA,MAAA,GAAA,KAAA,CAAA,YAAA,CAAA,SAAA,CAAA,CAFA,CAGA;AACA;;;AADA;AACA;AACA,0BAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA;AACA,sBAAA,KAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA;AACA,sBAAA,SAAA,CAAA,MAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAPA,CAQA;;AAAA;AAEA,0BAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAA,wBAAA,MAAA,EAAA;AAAA,uBAAA,CAAA;AACA,sBAAA,OAAA,GAAA,OAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,+BAAA,CAAA,CAAA,CAAA,CAAA,KAAA,SAAA;AACA,uBAFA,CAAA;;AAGA,sBAAA,KAAA,CAAA,YAAA,CAAA;AAAA,wBAAA,MAAA,EAAA,MAAA;AAAA,wBAAA,OAAA,EAAA;AAAA,uBAAA;;AACA,sBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,sBAAA,OAAA;AACA,qBAjBA,MAiBA;AACA,sBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,0BAAA;AACA;AACA,mBAxBA;;AAyBA,kBAAA,MAAA,CAAA,iBAAA,CAAA,OAAA;AACA,iBA5BA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA,KArDA;AAsDA,IAAA,YAtDA,wBAsDA,KAtDA,EAsDA;AACA,UAAA,OAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA;AACA,UAAA,CAAA,CAHA,CAIA;;AACA,UAAA,CAAA,GAAA,CAAA;AACA;;AACA,WAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,IAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA;AAAA;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA;AAAA,UAAA,CAAA,EAAA,CAAA;AAAA,UAAA,CAAA,EAAA;AAAA,SAAA,CAAA,CAAA;AACA;;AACA,YAAA,GAAA,GAAA,aAAA,CAAA,CAHA,CAGA;;AACA,YAAA,IAAA,IAAA,IAAA,CAAA,CAAA,EAAA,GAAA,GAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,IAAA,CAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;;AACA,aAAA,OAAA;AACA;AArEA;AAdA,CAAA","sourcesContent":["<template>\n  <div>\n    <input ref=\"excel-upload-input\" type=\"file\" accept=\".xlsx, .xls\" @change=\"handleClick\">\n  </div>\n</template>\n<script>\nimport XLSX from 'xlsx'\nexport default {\n  props: {\n    beforeUpload: Function, // eslint-disable-line\n    onSuccess: Function// eslint-disable-line\n  },\n  data() {\n    return {\n      loading: false,\n      excelData: {\n        header: null,\n        results: null\n      }\n    }\n  },\n  methods: {\n    generateData({ header, results }) {\n      this.excelData.header = header\n      this.excelData.results = results\n      this.onSuccess && this.onSuccess(this.excelData)\n    },\n    handleClick(e) {\n      const files = e.target.files\n      const rawFile = files[0] // only use files[0]\n      if (!rawFile) return\n      this.upload(rawFile)\n    },\n    upload(rawFile) {\n      if (!this.beforeUpload) {\n        this.readerData(rawFile)\n        return\n      }\n      const before = this.beforeUpload(rawFile)\n      if (before) {\n        this.readerData(rawFile)\n      }\n    },\n    async readerData(rawFile) {\n        this.loading = true\n        return new Promise((resolve) => {\n            const reader = new FileReader()\n            reader.onload = e => {\n                const data = e.target.result\n                const workbook = XLSX.read(data, {type: 'array'})\n                const firstSheetName = workbook.SheetNames[0]\n                if (firstSheetName === 'Timesheet') {\n                    const worksheet = workbook.Sheets[firstSheetName]\n                    const header = this.getHeaderRow(worksheet)\n                    // const header_result = XLSX.utils.sheet_to_json(worksheet, {header: 1})\n                    // skip row\n                    const range = XLSX.utils.decode_range(worksheet['!ref'])\n                    range.s.r = 10\n                    worksheet['!ref'] = XLSX.utils.encode_range(range)\n                    // skip row\n\n                    let results = XLSX.utils.sheet_to_json(worksheet, {header: 1})\n                    results = results.filter(i => {\n                        return i[1] !== undefined\n                    })\n                    this.generateData({header, results})\n                    this.loading = false\n                    resolve()\n                } else {\n                    this.$toast.error('Please Upload Sale file!')\n                }\n            }\n            reader.readAsArrayBuffer(rawFile)\n        })\n    },\n    getHeaderRow(sheet) {\n      const headers = []\n      const range = XLSX.utils.decode_range(sheet['!ref'])\n      let C \n      // const R = range.s.r\n      const R = 9\n      /* start in the first row */\n      for (C = range.s.c; C <= range.e.c; ++C) { /* walk every column in the range */\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\n        /* find the cell in the first row */\n        let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\n        headers.push(hdr)\n      }\n      return headers\n    },\n  }\n}\n</script>\n\n<style scoped>\n.excel-upload-input{\n  display: none;\n  z-index: -9999;\n}\n.drop{\n  border: 2px dashed #bbb;\n  width: 600px;\n  height: 160px;\n  line-height: 160px;\n  margin: 0 auto;\n  font-size: 24px;\n  border-radius: 5px;\n  text-align: center;\n  color: #bbb;\n  position: relative;\n}\n</style>"],"sourceRoot":"src/components/upload_excel"}]}