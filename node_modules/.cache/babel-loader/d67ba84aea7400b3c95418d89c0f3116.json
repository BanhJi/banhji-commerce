{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/currency/handler/currencyHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/currency/handler/currencyHandler.js","mtime":1638499442977},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/currency/handler/currencyHandler.js"],"names":["baseHandler","require","apiUrl","axios","instance","create","module","exports","getAll","get","currency","currency_get","response","window","console","error","getJson","currency_json","list","type","reportingPeriod","fy","reporting_period_get","data","post","currency_post","getLastExchangeRateByDate","date","code","params","exchange_rate","getLastExchangeRateTaxByDate"],"mappings":"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","sourcesContent":["const baseHandler = require('@/scripts/baseHandler.js')\nconst apiUrl = require('@/apiUrl')\n\nconst axios = require('axios')\nconst instance = axios.create();\n\n// const currencyType = {\n//     FUNCTIONAL_CURRENCY: 'fun-c',\n//     TRANSACTION_CURRENCY: 'txn-c',\n//     REPORTING_CURRENCY: 'rpt-c',\n//     TAX_EXCHANGE_CURRENCY: 'tax-c',\n// }\n\n// GET LIST\nmodule.exports.getAll = async () => {\n    try {\n        const response = await axios.get(apiUrl.currency.currency_get + 'fun-c');\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET JSON FILE\nmodule.exports.getJson = async () => {\n    try {\n        return await instance.get(apiUrl.currency.currency_json);\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// active currency or functional currency that allowed by company\nmodule.exports.get = async function () {\n    try {\n        return await baseHandler.get(apiUrl.currency.currency_get)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// active currency or functional currency that allowed by company\nmodule.exports.list = async function (type) {\n    try {\n        return await axios.get(apiUrl.currency.currency_get + type)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//\nmodule.exports.reportingPeriod = async function (type, fy) {\n    try {\n        return await axios.get(apiUrl.currency.reporting_period_get + type + '/' + fy)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// Create Currency\nmodule.exports.create = async (data) => {\n    try {\n        return await axios.post(apiUrl.currency.currency_post, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// get last rate of transaction Currency\n// currency?type=txn-c&date=2021-02-25&code=KHR\nmodule.exports.getLastExchangeRateByDate = async (date, code='') => {\n    try {\n        let params = {\n            type: 'txn-c',\n            date: date\n        }\n\n        if(code !== ''){\n            params.code = code;\n        }\n\n        const response = await axios.get(apiUrl.currency.exchange_rate, {\n            params: params\n        })\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\nmodule.exports.getLastExchangeRateTaxByDate = async (date, code) => {\n    try {\n        const response = await axios.get(apiUrl.currency.exchange_rate, {\n            params: {\n                type: 'tax-c',\n                date: date,\n                code: code,\n            }\n        })\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n"]}]}