{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/CashAccount.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/CashAccount.js","mtime":1638499442994},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0IGtlbmRvIGZyb20gJ0Bwcm9ncmVzcy9rZW5kby11aSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaVVybC5qcycpOwoKdmFyIEFjY291bnRUeXBlQ29kZSA9IHJlcXVpcmUoIkAvc2NyaXB0cy9kZWZhdWx0X3NldHVwL0FjY291bnRUeXBlQ29kZSIpOwoKZnVuY3Rpb24gZmlsdGVyQ2FzaEFjY291bnQoYWNjb3VudHMpIHsKICByZXR1cm4gYWNjb3VudHMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gfkFjY291bnRUeXBlQ29kZS5DQVNIX0FDQ09VTlRTLmluZGV4T2YoaXRlbS5hY2NvdW50X3R5cGUubnVtYmVyKTsKICB9KTsKfQoKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250YWluZXIsIG9wdGlvbnMpIHsKICAvLyBEZWZpbmQgb3JkZXJpbmcgYnkgbnVtYmVyCiAgdmFyIGNvbXBhcmUgPSBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHsKICAgIGlmIChhLml0ZW1zWzBdLm51bWJlciA9PT0gYi5pdGVtc1swXS5udW1iZXIpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9IGVsc2UgaWYgKGEuaXRlbXNbMF0ubnVtYmVyID4gYi5pdGVtc1swXS5udW1iZXIpIHsKICAgICAgcmV0dXJuIDE7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gLTE7CiAgICB9CiAgfTsgLy8gRGVmaW5kIGRlZmF1bHQgZ3JvdXAKCgogIHZhciBhY2NfbGFuZ3VhZ2UgPSBzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRMYW5ndWFnZSA9PT0gJ0VuZ2xpc2gnID8gIm5hbWUiIDogImxvY2FsX25hbWUiOwogIHZhciBhY2NfZ3JvdXBfbmFtZSA9IHN0b3JlLnN0YXRlLmFjY291bnRpbmcuYWNjb3VudExhbmd1YWdlID09PSAnRW5nbGlzaCcgPyAiYWNjb3VudF90eXBlLm5hbWUiIDogImFjY291bnRfdHlwZS5sb2NhbF9uYW1lIjsKICB2YXIgZ3JvdXAgPSB7CiAgICBmaWVsZDogYWNjX2dyb3VwX25hbWUsCiAgICBjb21wYXJlOiBjb21wYXJlCiAgfTsgLy8gVXNlIGxvY2FsIGRhdGEKCiAgdmFyIGRzID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICBkYXRhOiBmaWx0ZXJDYXNoQWNjb3VudChzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRzKSwKICAgIGdyb3VwOiBncm91cAogIH0pOyAvLyBEZWZpbmRlIGRyb3Bkb3dubGlzdAoKICB2YXIgZGRsID0ga2VuZG8ualF1ZXJ5KCc8aW5wdXQgcmVxdWlyZWQgbmFtZT0iJyArIG9wdGlvbnMuZmllbGQgKyAnIi8+JykuYXBwZW5kVG8oY29udGFpbmVyKS5rZW5kb0Ryb3BEb3duTGlzdCh7CiAgICBhdXRvQmluZDogdHJ1ZSwKICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgIGhlaWdodDogNDAwLAogICAgZmlsdGVyOiAic3RhcnRzd2l0aCIsCiAgICBkYXRhVGV4dEZpZWxkOiBhY2NfbGFuZ3VhZ2UsCiAgICBkYXRhVmFsdWVGaWVsZDogInV1aWQiLAogICAgb3B0aW9uTGFiZWw6ICItLS0gU2VsZWN0IC0tLSIsCiAgICBkYXRhU291cmNlOiBkcwogIH0pLmRhdGEoImtlbmRvRHJvcERvd25MaXN0Iik7IC8vIFVzZSByZW1vdGUgZGF0YQoKICBpZiAoIXN0b3JlLnN0YXRlLmFjY291bnRpbmcuYWNjb3VudExvYWRlZCkgewogICAgdmFyIHJlbW90ZURTID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICAgIHRyYW5zcG9ydDogewogICAgICAgIHJlYWQ6IHsKICAgICAgICAgIHVybDogYXBpVXJsLmFjY291bnRzCiAgICAgICAgfSwKICAgICAgICBkYXRhVHlwZTogImpzb24iCiAgICAgIH0sCiAgICAgIHNjaGVtYTogewogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICBpZDogInV1aWQiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHJlc3BvbnNlKSB7CiAgICAgICAgICAvKiBBZGQgdG8gc3RvcmUgKi8KICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdhY2NvdW50aW5nL3B1dEFjY291bnRzJywgcmVzcG9uc2UpOwogICAgICAgICAgcmV0dXJuIGZpbHRlckNhc2hBY2NvdW50KHJlc3BvbnNlKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdyb3VwOiBncm91cAogICAgfSk7CiAgICBkZGwuc2V0RGF0YVNvdXJjZShyZW1vdGVEUyk7CiAgfQoKICByZXR1cm4gZGRsOwp9KTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/CashAccount.js"],"names":["kendo","store","apiUrl","require","AccountTypeCode","filterCashAccount","accounts","filter","item","CASH_ACCOUNTS","indexOf","account_type","number","container","options","compare","a","b","items","acc_language","state","accounting","accountLanguage","acc_group_name","group","field","ds","data","DataSource","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","dataTextField","dataValueField","optionLabel","dataSource","accountLoaded","remoteDS","transport","read","url","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"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","sourcesContent":["import kendo from '@progress/kendo-ui';\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode\");\n\nfunction filterCashAccount(accounts) {\n    return accounts.filter(item => ~AccountTypeCode.CASH_ACCOUNTS.indexOf(item.account_type.number));\n}\n\nexport default (container, options) => {\n    // Defind ordering by number\n    let compare = function(a, b) {\n        if (a.items[0].number === b.items[0].number) {\n            return 0;\n        } else if (a.items[0].number > b.items[0].number) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let acc_language = store.state.accounting.accountLanguage === 'English' ? \"name\" :  \"local_name\";\n    let acc_group_name = store.state.accounting.accountLanguage === 'English' ? \"account_type.name\" :  \"account_type.local_name\";\n    let group = { \n        field: acc_group_name,\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: filterCashAccount(store.state.accounting.accounts),\n        group: group,\n    })\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: acc_language,\n                dataValueField: \"uuid\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n\n    // Use remote data\n    if(!store.state.accounting.accountLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.accounts,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"uuid\"\n                },\n                data: function (response) {\n                    /* Add to store */\n                    store.dispatch('accounting/putAccounts', response);\n                    \n                    return filterCashAccount(response);\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}