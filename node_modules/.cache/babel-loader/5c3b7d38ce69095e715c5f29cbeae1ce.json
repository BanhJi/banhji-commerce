{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue","mtime":1642390528849},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvbWFjb3MvRGVza3RvcC9iYW5oamktMC4yL2JhbmhqaS1jb21tZXJjZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudmFsdWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQga2VuZG8gZnJvbSAnQHByb2dyZXNzL2tlbmRvLXVpJzsKaW1wb3J0IHsgaTE4biB9IGZyb20gJ0AvaTE4bic7CmltcG9ydCBIZWxwZXIgZnJvbSAiQC9oZWxwZXIuanMiOwovKiBNb2RlbHMgKi8KCmltcG9ydCBBY2NvdW50TW9kZWwgZnJvbSAiQC9zY3JpcHRzL21vZGVsL0FjY291bnQuanMiOwppbXBvcnQgRmlzY2FsRGF0ZU1vZGVsIGZyb20gIkAvc2NyaXB0cy9tb2RlbC9GaXNjYWxEYXRlIjsKaW1wb3J0IFN0YXRlbWVudE9mUHJvZml0T3JMb3NzTW9kZWwgZnJvbSAiQC9zY3JpcHRzL21vZGVsL1N0YXRlbWVudE9mUHJvZml0T3JMb3NzIjsKLyogVHJlZUxpc3QgKi8KCmltcG9ydCB7IFRyZWVMaXN0IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLXRyZWVsaXN0LXZ1ZS13cmFwcGVyJzsKaW1wb3J0IHsgVHJlZUxpc3REYXRhU291cmNlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWRhdGFzb3VyY2UtdnVlLXdyYXBwZXInOwovKiBWdWV4ICovCgppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwoKdmFyIGluY29tZVN0YXRlbWVudEhhbmRsZXIgPSByZXF1aXJlKCJAL3NjcmlwdHMvaGFuZGxlci9hY2NvdW50aW5nL2luY29tZVN0YXRlbWVudEhhbmRsZXIiKTsKCnZhciBPcmRlck51bWJlclBMID0gcmVxdWlyZSgiQC9zY3JpcHRzL2RlZmF1bHRfc2V0dXAvT3JkZXJOdW1iZXJQTC5qcyIpOwoKdmFyIEFjY291bnRUeXBlQ29kZSA9IHJlcXVpcmUoIkAvc2NyaXB0cy9kZWZhdWx0X3NldHVwL0FjY291bnRUeXBlQ29kZS5qcyIpOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICJMb2FkaW5nTWUiOiBmdW5jdGlvbiBMb2FkaW5nTWUoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0AvY29tcG9uZW50cy9Mb2FkaW5nJyk7CiAgICB9LAogICAgImFwcC1maXNjYWwtZGF0ZS1kcm9wZG93bmxpc3QiOiBmdW5jdGlvbiBhcHBGaXNjYWxEYXRlRHJvcGRvd25saXN0KCkgewogICAgICByZXR1cm4gaW1wb3J0KCdAL2NvbXBvbmVudHMva2VuZG9fdGVtcGxhdGVzL0Zpc2NhbERhdGVEcm9wRG93bkxpc3QnKTsKICAgIH0sCiAgICAiYXBwLW1vbnRoLW9mLXBpY2tlciI6IGZ1bmN0aW9uIGFwcE1vbnRoT2ZQaWNrZXIoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0AvY29tcG9uZW50cy9rZW5kb190ZW1wbGF0ZXMvTW9udGhPZlBpY2tlcicpOwogICAgfSwKICAgICdhcHAtcmVwb3J0aW5nLWxhbmd1YWdlJzogZnVuY3Rpb24gYXBwUmVwb3J0aW5nTGFuZ3VhZ2UoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0AvY29tcG9uZW50cy9rZW5kb190ZW1wbGF0ZXMvUmVwb3J0aW5nTGFuZ3VhZ2VEcm9wRG93bkxpc3QnKTsKICAgIH0sCiAgICAnYnVkZ2V0LWxpc3QtaXRlbS1ncm91cCc6IGZ1bmN0aW9uIGJ1ZGdldExpc3RJdGVtR3JvdXAoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0AvY29tcG9uZW50cy9kcm9wZG93bmxpc3QvQnVkZ2V0TGlzdEl0ZW1Hcm91cCcpOwogICAgfSwKICAgICd0cmVlbGlzdCc6IFRyZWVMaXN0LAogICAgJ3RyZWVsaXN0ZGF0YXNvdXJjZSc6IFRyZWVMaXN0RGF0YVNvdXJjZQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkQnVkZ2V0czogW10sCiAgICAgIHNlZ21lbnRJZHM6IFtdLAogICAgICBzdGF0ZW1lbnRzOiBbXSwKICAgICAgc3RhdGVtZW50TGlzdDogW10sCiAgICAgIHN0YXJ0TW9udGg6ICcnLAogICAgICBlbmRNb250aDogJycsCiAgICAgIG1pbk1vbnRoOiAnJywKICAgICAgbWF4TW9udGg6ICcnLAoKICAgICAgLyogRmlzY2FsIERhdGUgKi8KICAgICAgZmlzY2FsRGF0ZTogbmV3IEZpc2NhbERhdGVNb2RlbCgpLAoKICAgICAgLyogS2VuZG8gKi8KICAgICAgY29sdW1uczogW10sCiAgICAgIHNvcnREZWZpbml0aW9uOiBbewogICAgICAgIGZpZWxkOiAib3JkZXIiLAogICAgICAgIGRpcjogImFzYyIKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAibnVtYmVyIiwKICAgICAgICBkaXI6ICJhc2MiCiAgICAgIH1dLAogICAgICBtb2RlbDogewogICAgICAgIGlkOiAidXVpZCIsCiAgICAgICAgZXhwYW5kZWQ6IHRydWUKICAgICAgfSwKICAgICAgLy8gUmVwb3J0aW5nIExhbmd1YWdlCiAgICAgIHJlcG9ydGluZ0xhbmd1YWdlOiAnZW5nbGlzaCcsCiAgICAgIGZpZWxkTmFtZTogJ25hbWUnLAogICAgICAvLyBMb2FkaW5nTWUKICAgICAgc2hvd0xvYWRpbmc6IGZhbHNlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgdmFsaWRhdGluZzogZnVuY3Rpb24gdmFsaWRhdGluZygpIHsKICAgICAgdmFyIGlzVmFsaWQgPSB0cnVlOwoKICAgICAgaWYgKHRoaXMuZmlzY2FsRGF0ZS51dWlkID09PSAnJykgewogICAgICAgIGlzVmFsaWQgPSBmYWxzZTsKICAgICAgICB0aGlzLiRzbm90aWZ5Lndhcm5pbmcoaTE4bi50KCJwbGVhc2Vfc2VsZWN0X2Zpc2NhbF95ZWFyIikpOwogICAgICB9CgogICAgICBpZiAodGhpcy5zdGFydE1vbnRoID09PSAnJyB8fCB0aGlzLmVuZE1vbnRoID09PSAnJykgewogICAgICAgIGlzVmFsaWQgPSBmYWxzZTsKICAgICAgICB0aGlzLiRzbm90aWZ5Lndhcm5pbmcoaTE4bi50KCJwbGVhc2VfZnJvbV90b19tb250aCIpKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRCdWRnZXRzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIGlzVmFsaWQgPSBmYWxzZTsKICAgICAgICB0aGlzLiRzbm90aWZ5Lndhcm5pbmcoaTE4bi50KCJwbGVhc2Vfc2VsZWN0X2J1ZGdldHMiKSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpc1ZhbGlkOwogICAgfSwKCiAgICAvKiBTZWFyY2ggKi8KICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudmFsaWRhdGluZygpKSB7CiAgICAgICAgdmFyIGVuZE1vbnRoID0gbmV3IERhdGUodGhpcy5lbmRNb250aCksCiAgICAgICAgICAgIGxhc3REYXkgPSBuZXcgRGF0ZShlbmRNb250aC5nZXRGdWxsWWVhcigpLCBlbmRNb250aC5nZXRNb250aCgpICsgMSwgMCk7CiAgICAgICAgdmFyIHNkYXRlID0ga2VuZG8udG9TdHJpbmcobmV3IERhdGUodGhpcy5zdGFydE1vbnRoKSwgJ3l5eXktTU0tZGQnKSArICdUMDA6MDA6MDAuMDAwWicsCiAgICAgICAgICAgIGVkYXRlID0ga2VuZG8udG9TdHJpbmcobGFzdERheSwgJ3l5eXktTU0tZGQnKSArICdUMjM6NTk6NTkuOTk5Wic7CiAgICAgICAgLyogU2VnbWVudCBJZHMgKi8KCiAgICAgICAgdmFyIHNlZ21lbnRJZHMgPSBbXTsKICAgICAgICB0aGlzLiRzdG9yZS5zdGF0ZS5idWRnZXRzLmxpc3QuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgIGlmICh+X3RoaXMuc2VsZWN0ZWRCdWRnZXRzLmluZGV4T2YodmFsdWUudXVpZCkpIHsKICAgICAgICAgICAgc2VnbWVudElkcy5wdXNoKHZhbHVlLnNlZ21lbnRfdXVpZCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgLyogUmVtb3ZlIER1cGxpY2F0ZSAqLwoKICAgICAgICB0aGlzLnNlZ21lbnRJZHMgPSBfdG9Db25zdW1hYmxlQXJyYXkobmV3IFNldChzZWdtZW50SWRzKSk7IC8vIEVtcHR5IGRhdGFzb3VyY2UKCiAgICAgICAgdmFyIGRzID0gdGhpcy4kcmVmcy5zdGF0ZW1lbnREUy5rZW5kb1dpZGdldCgpOwogICAgICAgIGRzLmRhdGEoW10pOyAvLyBRdWVyeSBJbmNvbWUgU3RhdGVtZW50CgogICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlOwogICAgICAgIGluY29tZVN0YXRlbWVudEhhbmRsZXIuZ2V0QnlTZWdtZW50cyhzZGF0ZSwgZWRhdGUsIHRoaXMuc2VnbWVudElkcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBpZiAocmVzKSB7CiAgICAgICAgICAgIF90aGlzLnN0YXRlbWVudHMgPSByZXM7CgogICAgICAgICAgICBfdGhpcy5iaW5kRGF0YSgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXMuJHNub3RpZnkuZXJyb3IoaTE4bi50KCJlcnJvcl9zb21ldGhpbmdfd3JvbmciKSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuZmluYWxseShmdW5jdGlvbiAoKSB7Ly8gdGhpcy5zaG93TG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYmluZERhdGE6IGZ1bmN0aW9uIGJpbmREYXRhKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGcsIGNoaWxkSWRzLCBmaXNjYWxNb250aHMsIHN0YXJ0TW9udGhJbmRleCwgZW5kTW9udGhJbmRleCwgbWluTW9udGhJbmRleCwgbWF4TW9udGhJbmRleCwgX2xvb3AsIGksIGtleSwgX2ksIF9sb29wMiwgX2kyLCBlbnRyaWVzLCBfaTMsIGVudHJ5LCByZXZlbnVlLCBjb3N0T2ZTYWxlLCBncm9zc1Byb2ZpdCwgc2FsYXJ5QmVuZWZpdCwgc2FsZU1hcmtldGluZywgcmVzZWFyY2hQcm9kdWN0RGV2ZWxvcG1lbnQsIGxlZ2FsUHJvZmVzc2lvbmFsRmVlLCBnZW5lcmFsQWRtaW5FeHBlbnNlcywgb3BlcmF0aW5nRXhwZW5zZXMsIG90aGVyUmV2ZW51ZSwgb3BlcmF0aW5nSW5jb21lRUJJVERBLCBkZXByZWNpYXRpb24sIG90aGVyRXhwZW5zZXMsIGVhcm5pbmdCZWZvcmVJbnRlcmVzdEFuZFRheEVCSVQsIGZpbmFuY2luZ0Nvc3QsIHByb2ZpdEJlZm9yZVRheCwgdGF4UmVsYXRlZEV4cGVuc2VzLCBwcm9maXRGb3JUaGVQZXJpb2QsIF9pNDsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgZyA9IHt9LCBjaGlsZElkcyA9IFtdOwogICAgICAgICAgICAgICAgLyogR2VuZXJhdGUgTW9udGhzICovCgogICAgICAgICAgICAgICAgZmlzY2FsTW9udGhzID0gSGVscGVyLmdlbmVyYXRlRmlzY2FsTW9udGhzKF90aGlzMi5maXNjYWxEYXRlLnN0YXJ0X2RhdGUsIF90aGlzMi5maXNjYWxEYXRlLmVuZF9kYXRlLCAiMTIiLCAieXl5eS1NTSIpOwogICAgICAgICAgICAgICAgLyogTW9udGggSW5kZXggKi8KCiAgICAgICAgICAgICAgICBzdGFydE1vbnRoSW5kZXggPSBmaXNjYWxNb250aHMuaW5kZXhPZihfdGhpczIuc3RhcnRNb250aCksIGVuZE1vbnRoSW5kZXggPSBmaXNjYWxNb250aHMuaW5kZXhPZihfdGhpczIuZW5kTW9udGgpOwogICAgICAgICAgICAgICAgbWluTW9udGhJbmRleCA9IHN0YXJ0TW9udGhJbmRleCwgbWF4TW9udGhJbmRleCA9IGVuZE1vbnRoSW5kZXg7CgogICAgICAgICAgICAgICAgaWYgKHN0YXJ0TW9udGhJbmRleCA+IGVuZE1vbnRoSW5kZXgpIHsKICAgICAgICAgICAgICAgICAgbWluTW9udGhJbmRleCA9IGVuZE1vbnRoSW5kZXgsIG1heE1vbnRoSW5kZXggPSBzdGFydE1vbnRoSW5kZXg7CiAgICAgICAgICAgICAgICB9IC8vIExvYWQgQWNjb3VudCBMaXN0CgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kc3RvcmUuZGlzcGF0Y2goJ2FjY291bnRpbmcvZ2V0QWNjb3VudHMnKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcChpKSB7CiAgICAgICAgICAgICAgICAgIHZhciBidWRnZXQgPSBfdGhpczIuJHN0b3JlLnN0YXRlLmJ1ZGdldHMubGlzdC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0udXVpZCA9PT0gX3RoaXMyLnNlbGVjdGVkQnVkZ2V0c1tpXTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIC8qIEJ1ZGdldCBsaW5lcyAqLwoKCiAgICAgICAgICAgICAgICAgIGJ1ZGdldC5saW5lcy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgIC8qIEdldCBBY2NvdW50ICovCiAgICAgICAgICAgICAgICAgICAgdmFyIGFjY291bnQgPSBfdGhpczIuYWNjb3VudHMuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0udXVpZCA9PT0gdmFsdWUuYWNjb3VudF91dWlkOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIC8qIE9yZGVyICovCgoKICAgICAgICAgICAgICAgICAgICB2YXIgb3JkZXIgPSBhY2NvdW50LnR5cGVfY29kZTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGFjY291bnQudHlwZV9jb2RlID09PSBBY2NvdW50VHlwZUNvZGUuT1RIRVJfUkVWRU5VRSkgewogICAgICAgICAgICAgICAgICAgICAgb3JkZXIgPSBPcmRlck51bWJlclBMW2FjY291bnQudHlwZV9jb2RlXTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLyogR1JPVVBJTkcgKi8KCiAgICAgICAgICAgICAgICAgICAgLyogVG9wIExldmVsIEFjY291bnQgVHlwZSAqLwoKCiAgICAgICAgICAgICAgICAgICAgaWYgKCFnW2FjY291bnQudHlwZV9jb2RlXSkgewogICAgICAgICAgICAgICAgICAgICAgZ1thY2NvdW50LnR5cGVfY29kZV0gPSBuZXcgU3RhdGVtZW50T2ZQcm9maXRPckxvc3NNb2RlbCh7CiAgICAgICAgICAgICAgICAgICAgICAgIHV1aWQ6IGFjY291bnQudHlwZV9jb2RlLAogICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IGFjY291bnQudHlwZV9jb2RlLAogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBhY2NvdW50LmFjY291bnRfdHlwZS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBsb2NhbF9uYW1lOiBhY2NvdW50LmFjY291bnRfdHlwZS5sb2NhbF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogb3JkZXIKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvKiBQYXJlbnQgTGV2ZWwgKi8KCgogICAgICAgICAgICAgICAgICAgIHZhciB0aGlzQWNjb3VudFBhcmVudElkID0gIiI7CgogICAgICAgICAgICAgICAgICAgIGlmIChhY2NvdW50Lmhhc093blByb3BlcnR5KCJwYXJlbnRfYWNjb3VudCIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFBhcmVudEFjY291bnQgPSBuZXcgQWNjb3VudE1vZGVsKGFjY291bnQucGFyZW50X2FjY291bnQpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRlciA9IDA7CgogICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY3VycmVudFBhcmVudEFjY291bnQubnVtYmVyICE9PSAiIikgewogICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEdldCBhY2NvdW50IGJ5IHV1aWQgb3IgYmFuaGppX2FjY291bnRfbnVtYmVyICovCiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGFjY291bnRQYXJlbnQgPSBuZXcgQWNjb3VudE1vZGVsKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UGFyZW50QWNjb3VudC51dWlkICE9PSAiIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogR2V0IGJ5IHV1aWQgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRQYXJlbnQgPSBuZXcgQWNjb3VudE1vZGVsKF90aGlzMi5hY2NvdW50cy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnV1aWQgPT09IGN1cnJlbnRQYXJlbnRBY2NvdW50LnV1aWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEdldCBieSBiYW5oamlfYWNjb3VudF9udW1iZXIgYmVjYXVzZSBkZWZhdWx0IGRhdGEgaGFzIG5vIHV1aWQgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UGFyZW50QWNjb3VudC5iYW5oamlfYWNjb3VudF9udW1iZXIgIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnRQYXJlbnQgPSBuZXcgQWNjb3VudE1vZGVsKF90aGlzMi5hY2NvdW50cy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uYmFuaGppX2FjY291bnRfbnVtYmVyID09PSBjdXJyZW50UGFyZW50QWNjb3VudC5iYW5oamlfYWNjb3VudF9udW1iZXI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgLyogU2V0IFRoaXMgQWNjb3VudCBQYXJlbnQgSWQgKi8KCgogICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjb3VudGVyID09PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzQWNjb3VudFBhcmVudElkID0gYWNjb3VudFBhcmVudC51dWlkOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBGaW5kIE5leHQgUGFyZW50ICovCgoKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmV4dFBhcmVudCA9IG5ldyBBY2NvdW50TW9kZWwoKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFjY291bnRQYXJlbnQuaGFzT3duUHJvcGVydHkoInBhcmVudF9hY2NvdW50IikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRPZkFjY291bnRQYXJlbnQgPSBuZXcgQWNjb3VudE1vZGVsKGFjY291bnRQYXJlbnQucGFyZW50X2FjY291bnQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudE9mQWNjb3VudFBhcmVudC5udW1iZXIgIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmVudE9mQWNjb3VudFBhcmVudC51dWlkICE9PSAiIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogR2V0IGJ5IHV1aWQgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5leHRQYXJlbnQgPSBfdGhpczIuYWNjb3VudHMuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS51dWlkID09PSBwYXJlbnRPZkFjY291bnRQYXJlbnQudXVpZDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBHZXQgYnkgYmFuaGppX2FjY291bnRfbnVtYmVyIGJlY2F1c2UgZGVmYXVsdCBkYXRhIGhhcyBubyB1dWlkICovCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50T2ZBY2NvdW50UGFyZW50LmJhbmhqaV9hY2NvdW50X251bWJlciAhPT0gIiIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV4dFBhcmVudCA9IF90aGlzMi5hY2NvdW50cy5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uYmFuaGppX2FjY291bnRfbnVtYmVyID09PSBwYXJlbnRPZkFjY291bnRQYXJlbnQuYmFuaGppX2FjY291bnRfbnVtYmVyOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIC8qIFNldCBQYXJlbnQgSWQgKi8KCgogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnRJZCA9IGFjY291bnRQYXJlbnQudHlwZV9jb2RlOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dFBhcmVudC5udW1iZXIgIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRJZCA9IG5leHRQYXJlbnQudXVpZDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIFNldCBuZXh0IHBhcmVudCBhY2NvdW50ICovCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihjdXJyZW50UGFyZW50QWNjb3VudCwgbmV4dFBhcmVudCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIFNldCBsb29wIHRvIGVuZCAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFBhcmVudEFjY291bnQubnVtYmVyID0gIiI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIC8qIEFkZCBQYXJlbnQgTGV2ZWwgKi8KCgogICAgICAgICAgICAgICAgICAgICAgICAgIGdbYWNjb3VudFBhcmVudC51dWlkXSA9IG5ldyBTdGF0ZW1lbnRPZlByb2ZpdE9yTG9zc01vZGVsKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHV1aWQ6IGFjY291bnRQYXJlbnQudXVpZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlcjogYWNjb3VudFBhcmVudC5udW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBhY2NvdW50UGFyZW50Lm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhbF9uYW1lOiBhY2NvdW50UGFyZW50LmxvY2FsX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRJZDogcGFyZW50SWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiBhY2NvdW50UGFyZW50LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IG9yZGVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgLyogSW5jcmVhc2UgQ291bnRlciBCeSAxICovCgogICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50ZXIrKzsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAvKiBFbmQgV2hpbGUgTG9vcCAqLwoKICAgICAgICAgICAgICAgICAgICAgIH0pKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8qIENoaWxkIExldmVsICovCgoKICAgICAgICAgICAgICAgICAgICBpZiAoIWdbYWNjb3VudC51dWlkXSkgewogICAgICAgICAgICAgICAgICAgICAgZ1thY2NvdW50LnV1aWRdID0gbmV3IFN0YXRlbWVudE9mUHJvZml0T3JMb3NzTW9kZWwoewogICAgICAgICAgICAgICAgICAgICAgICB1dWlkOiBhY2NvdW50LnV1aWQsCiAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlcjogYWNjb3VudC5udW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGFjY291bnQubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfbmFtZTogYWNjb3VudC5sb2NhbF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBhY2NvdW50OiBhY2NvdW50LAogICAgICAgICAgICAgICAgICAgICAgICBvcmRlcjogb3JkZXIKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvKiBCdWRnZXQgQW1vdW50ICovCgoKICAgICAgICAgICAgICAgICAgICB2YXIgYnVkZ2V0QW1vdW50ID0gMDsKCiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCAxMjsgaisrKSB7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoaiA+PSBtaW5Nb250aEluZGV4ICYmIGogPD0gbWF4TW9udGhJbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgbmF0dXJlID0gMTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY2NvdW50LmFjY291bnRfdHlwZS5uYXR1cmUudG9Mb3dlckNhc2UoKSA9PT0gImNyIikgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hdHVyZSA9IC0xOwogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICBidWRnZXRBbW91bnQgKz0ga2VuZG8ucGFyc2VGbG9hdCh2YWx1ZS5tb250aGx5X2Ftb3VudFtqXS5hbW91bnQpICogbmF0dXJlOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvKiBTZXQgUGFyZW50IElkIE9yIFNlbGYgUGFyZW50ICovCgoKICAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGRJZCA9IGFjY291bnQudXVpZDsKCiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNBY2NvdW50UGFyZW50SWQgIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgICAvKiBDaGlsZCBMZXZlbCAqLwogICAgICAgICAgICAgICAgICAgICAgZ1thY2NvdW50LnV1aWRdLnBhcmVudElkID0gdGhpc0FjY291bnRQYXJlbnRJZDsKICAgICAgICAgICAgICAgICAgICAgIGdbYWNjb3VudC51dWlkXS5idWRnZXRBbW91bnQgPSBidWRnZXRBbW91bnQ7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgIC8qIENoaWxkIEFzIFBhcmVudCAqLwogICAgICAgICAgICAgICAgICAgICAgZ1thY2NvdW50LnV1aWRdLnBhcmVudElkID0gYWNjb3VudC50eXBlX2NvZGU7CiAgICAgICAgICAgICAgICAgICAgICAvKiBTZWxmIEFzIFBhcmVudCAqLwoKICAgICAgICAgICAgICAgICAgICAgIGlmIChidWRnZXRBbW91bnQgIT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRJZCA9IGFjY291bnQubnVtYmVyOwogICAgICAgICAgICAgICAgICAgICAgICAvKiBTZWxmIEFzIENoaWxkIFdpdGggQmFsYW5jZSAqLwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFnW2FjY291bnQubnVtYmVyXSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGdbYWNjb3VudC5udW1iZXJdID0gbmV3IFN0YXRlbWVudE9mUHJvZml0T3JMb3NzTW9kZWwoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdXVpZDogYWNjb3VudC5udW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXI6IGFjY291bnQubnVtYmVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogYWNjb3VudC5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfbmFtZTogYWNjb3VudC5sb2NhbF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50SWQ6IGFjY291bnQudXVpZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWRnZXRBbW91bnQ6IGJ1ZGdldEFtb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yZGVyOiBvcmRlcgogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8qIENoaWxkIElkICovCgoKICAgICAgICAgICAgICAgICAgICBjaGlsZElkcy5wdXNoKGNoaWxkSWQpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgLyogTG9vcCBhbGwgYnVkZ2V0cyAqLwogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IF90aGlzMi5zZWxlY3RlZEJ1ZGdldHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgX2xvb3AoaSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvKiBBQ1RVQUwgKi8KCiAgICAgICAgICAgICAgICAvKiBEZWZpbmUgU2VnbWVudHMgKi8KCgogICAgICAgICAgICAgICAgZm9yIChrZXkgaW4gZykgewogICAgICAgICAgICAgICAgICBmb3IgKF9pID0gMDsgX2kgPCBfdGhpczIuc2VnbWVudElkcy5sZW5ndGg7IF9pKyspIHsKICAgICAgICAgICAgICAgICAgICBnW2tleV1bInMiICsgX2ldID0gMDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLyogU3VtIFNlZ21lbnRzICovCgoKICAgICAgICAgICAgICAgIF9sb29wMiA9IGZ1bmN0aW9uIF9sb29wMihfaTIpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLnN0YXRlbWVudHNbX2kyXS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgIGlmIChnW3ZhbHVlLmFjY291bnRVVUlEXSkgewogICAgICAgICAgICAgICAgICAgICAgZ1t2YWx1ZS5hY2NvdW50VVVJRF1bInMiICsgX2kyXSArPSBrZW5kby5wYXJzZUZsb2F0KHZhbHVlLmJhbGFuY2UpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvKiBPdGhlciBHcm91cHMgKi8KCgogICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyID49IDEwMCAmJiB2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyIDw9IDEwNSkgewogICAgICAgICAgICAgICAgICAgICAgZ1t2YWx1ZS5hY2NvdW50X3R5cGVfbnVtYmVyXSA9IG5ldyBTdGF0ZW1lbnRPZlByb2ZpdE9yTG9zc01vZGVsKHsKICAgICAgICAgICAgICAgICAgICAgICAgdXVpZDogdmFsdWUuYWNjb3VudF90eXBlX251bWJlciwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdmFsdWUubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxfbmFtZTogdmFsdWUubG9jYWxfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgb3JkZXI6IE9yZGVyTnVtYmVyUExbdmFsdWUuYWNjb3VudF90eXBlX251bWJlcl0KICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGZvciAoX2kyID0gMDsgX2kyIDwgX3RoaXMyLnNlZ21lbnRJZHMubGVuZ3RoOyBfaTIrKykgewogICAgICAgICAgICAgICAgICBfbG9vcDIoX2kyKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8qIFBhcnNlIE9iamVjdCBBcnJheSAqLwoKCiAgICAgICAgICAgICAgICBlbnRyaWVzID0gT2JqZWN0LnZhbHVlcyhnKTsKICAgICAgICAgICAgICAgIC8qIFBhcmVudCBhZ2dyZWdhdGUgc3VtICovCgogICAgICAgICAgICAgICAgZm9yIChfaTMgPSAwOyBfaTMgPCBlbnRyaWVzLmxlbmd0aDsgX2kzKyspIHsKICAgICAgICAgICAgICAgICAgZW50cnkgPSBlbnRyaWVzW19pM107CgogICAgICAgICAgICAgICAgICBpZiAofmNoaWxkSWRzLmluZGV4T2YoZW50cnkudXVpZCkpIHsKICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudElkID0gZW50cnkucGFyZW50SWQ7CgogICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKHBhcmVudElkICE9PSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwYXJlbnRJZCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnQgPSBlbnRyaWVzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnV1aWQgPT09IHBhcmVudElkOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnQuYnVkZ2V0QW1vdW50ICs9IGVudHJ5LmJ1ZGdldEFtb3VudDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIERlZmluZSBTZWdtZW50cyAqLwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgX3RoaXMyLnNlZ21lbnRJZHMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50WyJzIiArIGpdICs9IGVudHJ5WyJzIiArIGpdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLyogU2V0IG5ldyBwYXJlbnQgaWQgKi8KCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50SWQgPSBwYXJlbnQucGFyZW50SWQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8qIFNldCBsb29wIHRvIGVuZCAqLwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50SWQgPSBudWxsOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBTZXQgbG9vcCB0byBlbmQgKi8KICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRJZCA9IG51bGw7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KSgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvKiBPdGhlciBHcm91cHMgKi8KCiAgICAgICAgICAgICAgICAvKiBHcm9zcyBQcm9maXQgKi8KCgogICAgICAgICAgICAgICAgcmV2ZW51ZSA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuUkVWRU5VRSksIGNvc3RPZlNhbGUgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLkNPR1MpLCBncm9zc1Byb2ZpdCA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuR1JPU1NfUFJPRklUKTsKICAgICAgICAgICAgICAgIC8qIEVCSVREQSAqLwoKICAgICAgICAgICAgICAgIHNhbGFyeUJlbmVmaXQgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLlNBTEFSWV9CRU5FRklUKSwgc2FsZU1hcmtldGluZyA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuU0FMRV9NQVJLRVRJTkcpLCByZXNlYXJjaFByb2R1Y3REZXZlbG9wbWVudCA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuUkVTRUFSQ0hfUFJPRFVDVF9ERVZFTE9QTUVOVCksIGxlZ2FsUHJvZmVzc2lvbmFsRmVlID0gX3RoaXMyLmdldEVudHJ5KGVudHJpZXMsIEFjY291bnRUeXBlQ29kZS5MRUdBTF9QUk9GRVNTSU9OQUxfRkVFKSwgZ2VuZXJhbEFkbWluRXhwZW5zZXMgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLkdFTkVSQUxfQURNSU5fRVhQRU5TRSksIG9wZXJhdGluZ0V4cGVuc2VzID0gX3RoaXMyLmdldEVudHJ5KGVudHJpZXMsIEFjY291bnRUeXBlQ29kZS5PUEVSQVRJTkdfRVhQRU5TRSksIG90aGVyUmV2ZW51ZSA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuT1RIRVJfUkVWRU5VRSksIG9wZXJhdGluZ0luY29tZUVCSVREQSA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuT1BFUkFUSU5HX0lOQ09NRV9FQklUREEpOwogICAgICAgICAgICAgICAgLyogRUJJVCAqLwoKICAgICAgICAgICAgICAgIGRlcHJlY2lhdGlvbiA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuREVQUkVDSUFUSU9OKSwgb3RoZXJFeHBlbnNlcyA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuT1RIRVJfRVhQRU5TRSksIGVhcm5pbmdCZWZvcmVJbnRlcmVzdEFuZFRheEVCSVQgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLkVBUk5JTkdfQkVGT1JFX0lOVEVSRVNUX0FORF9UQVhfRUJJVCk7CiAgICAgICAgICAgICAgICAvKiBQcm9maXQgQmVmb3JlIFRheCAqLwoKICAgICAgICAgICAgICAgIGZpbmFuY2luZ0Nvc3QgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLkZJTkFOQ0lOR19DT1NUKSwgcHJvZml0QmVmb3JlVGF4ID0gX3RoaXMyLmdldEVudHJ5KGVudHJpZXMsIEFjY291bnRUeXBlQ29kZS5QUk9GSVRfQkVGT1JFX1RBWCk7CiAgICAgICAgICAgICAgICAvKiBQcm9maXQgRm9yIFRoZSBQZXJpb2QgKi8KCiAgICAgICAgICAgICAgICB0YXhSZWxhdGVkRXhwZW5zZXMgPSBfdGhpczIuZ2V0RW50cnkoZW50cmllcywgQWNjb3VudFR5cGVDb2RlLlRBWCksIHByb2ZpdEZvclRoZVBlcmlvZCA9IF90aGlzMi5nZXRFbnRyeShlbnRyaWVzLCBBY2NvdW50VHlwZUNvZGUuUFJPRklUX0ZPUl9USEVfUEVSSU9EKTsKICAgICAgICAgICAgICAgIC8qIENhbGN1bGF0ZSBCdWRnZXQgQW1vdW50ICovCgogICAgICAgICAgICAgICAgZ3Jvc3NQcm9maXQuYnVkZ2V0QW1vdW50ID0gcmV2ZW51ZS5idWRnZXRBbW91bnQgLSBjb3N0T2ZTYWxlLmJ1ZGdldEFtb3VudDsKICAgICAgICAgICAgICAgIG9wZXJhdGluZ0V4cGVuc2VzLmJ1ZGdldEFtb3VudCA9IHNhbGFyeUJlbmVmaXQuYnVkZ2V0QW1vdW50ICsgc2FsZU1hcmtldGluZy5idWRnZXRBbW91bnQgKyByZXNlYXJjaFByb2R1Y3REZXZlbG9wbWVudC5idWRnZXRBbW91bnQgKyBsZWdhbFByb2Zlc3Npb25hbEZlZS5idWRnZXRBbW91bnQgKyBnZW5lcmFsQWRtaW5FeHBlbnNlcy5idWRnZXRBbW91bnQ7CiAgICAgICAgICAgICAgICBvcGVyYXRpbmdJbmNvbWVFQklUREEuYnVkZ2V0QW1vdW50ID0gZ3Jvc3NQcm9maXQuYnVkZ2V0QW1vdW50ICsgb3RoZXJSZXZlbnVlLmJ1ZGdldEFtb3VudCAtIG9wZXJhdGluZ0V4cGVuc2VzLmJ1ZGdldEFtb3VudDsKICAgICAgICAgICAgICAgIGVhcm5pbmdCZWZvcmVJbnRlcmVzdEFuZFRheEVCSVQuYnVkZ2V0QW1vdW50ID0gb3BlcmF0aW5nSW5jb21lRUJJVERBLmJ1ZGdldEFtb3VudCAtIGRlcHJlY2lhdGlvbi5idWRnZXRBbW91bnQgLSBvdGhlckV4cGVuc2VzLmJ1ZGdldEFtb3VudDsKICAgICAgICAgICAgICAgIHByb2ZpdEJlZm9yZVRheC5idWRnZXRBbW91bnQgPSBlYXJuaW5nQmVmb3JlSW50ZXJlc3RBbmRUYXhFQklULmJ1ZGdldEFtb3VudCAtIGZpbmFuY2luZ0Nvc3QuYnVkZ2V0QW1vdW50OwogICAgICAgICAgICAgICAgcHJvZml0Rm9yVGhlUGVyaW9kLmJ1ZGdldEFtb3VudCA9IHByb2ZpdEJlZm9yZVRheC5idWRnZXRBbW91bnQgLSB0YXhSZWxhdGVkRXhwZW5zZXMuYnVkZ2V0QW1vdW50OwogICAgICAgICAgICAgICAgLyogQ2FsY3VsYXRlIFNlZ21lbnQgQW1vdW50ICovCgogICAgICAgICAgICAgICAgZm9yIChfaTQgPSAwOyBfaTQgPCBfdGhpczIuc2VnbWVudElkcy5sZW5ndGg7IF9pNCsrKSB7CiAgICAgICAgICAgICAgICAgIGdyb3NzUHJvZml0WyJzIiArIF9pNF0gPSByZXZlbnVlWyJzIiArIF9pNF0gLSBjb3N0T2ZTYWxlWyJzIiArIF9pNF07CiAgICAgICAgICAgICAgICAgIG9wZXJhdGluZ0V4cGVuc2VzWyJzIiArIF9pNF0gPSBzYWxhcnlCZW5lZml0WyJzIiArIF9pNF0gKyBzYWxlTWFya2V0aW5nWyJzIiArIF9pNF0gKyByZXNlYXJjaFByb2R1Y3REZXZlbG9wbWVudFsicyIgKyBfaTRdICsgbGVnYWxQcm9mZXNzaW9uYWxGZWVbInMiICsgX2k0XSArIGdlbmVyYWxBZG1pbkV4cGVuc2VzWyJzIiArIF9pNF07CiAgICAgICAgICAgICAgICAgIG9wZXJhdGluZ0luY29tZUVCSVREQVsicyIgKyBfaTRdID0gZ3Jvc3NQcm9maXRbInMiICsgX2k0XSArIG90aGVyUmV2ZW51ZVsicyIgKyBfaTRdIC0gb3BlcmF0aW5nRXhwZW5zZXNbInMiICsgX2k0XTsKICAgICAgICAgICAgICAgICAgZWFybmluZ0JlZm9yZUludGVyZXN0QW5kVGF4RUJJVFsicyIgKyBfaTRdID0gb3BlcmF0aW5nSW5jb21lRUJJVERBWyJzIiArIF9pNF0gLSBkZXByZWNpYXRpb25bInMiICsgX2k0XSAtIG90aGVyRXhwZW5zZXNbInMiICsgX2k0XTsKICAgICAgICAgICAgICAgICAgcHJvZml0QmVmb3JlVGF4WyJzIiArIF9pNF0gPSBlYXJuaW5nQmVmb3JlSW50ZXJlc3RBbmRUYXhFQklUWyJzIiArIF9pNF0gLSBmaW5hbmNpbmdDb3N0WyJzIiArIF9pNF07CiAgICAgICAgICAgICAgICAgIHByb2ZpdEZvclRoZVBlcmlvZFsicyIgKyBfaTRdID0gcHJvZml0QmVmb3JlVGF4WyJzIiArIF9pNF0gLSB0YXhSZWxhdGVkRXhwZW5zZXNbInMiICsgX2k0XTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8qIEZpbmQgUGVyY2VudGFnZSAqLwoKCiAgICAgICAgICAgICAgICBlbnRyaWVzLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9pNSA9IDA7IF9pNSA8IF90aGlzMi5zZWdtZW50SWRzLmxlbmd0aDsgX2k1KyspIHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZVsicCIgKyBfaTVdID0gX3RoaXMyLmZpbmRQZXJjZW50YWdlKHZhbHVlWyJzIiArIF9pNV0sIHZhbHVlLmJ1ZGdldEFtb3VudCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgLyogQklORCBTVEFUTUVOVCAqLwoKICAgICAgICAgICAgICAgIF90aGlzMi5zdGF0ZW1lbnRMaXN0ID0gZW50cmllczsKCiAgICAgICAgICAgICAgICBfdGhpczIuZ2VuZXJhdGVDb2x1bW4oKTsKCiAgICAgICAgICAgICAgICBfdGhpczIuc2hvd0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSAzMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRFbnRyeTogZnVuY3Rpb24gZ2V0RW50cnkoZW50cmllcywgaWQpIHsKICAgICAgdmFyIGVudHJ5ID0gZW50cmllcy5maW5kKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgcmV0dXJuIGkudXVpZCA9PT0gaWQ7CiAgICAgIH0pOwoKICAgICAgaWYgKCFlbnRyeSkgewogICAgICAgIGVudHJ5ID0gbmV3IFN0YXRlbWVudE9mUHJvZml0T3JMb3NzTW9kZWwoKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRJZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGVudHJ5WyJzIiArIGldID0gMDsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBlbnRyeTsKICAgIH0sCiAgICBmaW5kUGVyY2VudGFnZTogZnVuY3Rpb24gZmluZFBlcmNlbnRhZ2UodmFsdWUxLCB2YWx1ZTIpIHsKICAgICAgdmFyIHJlc3VsdCA9IDA7CgogICAgICBpZiAodmFsdWUyICE9PSAwKSB7CiAgICAgICAgcmVzdWx0ID0gdmFsdWUxIC8gdmFsdWUyOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKCiAgICAvKiBPbiBkYXRhYm91bmQgKi8KICAgIG9uRGF0YUJvdW5kOiBmdW5jdGlvbiBvbkRhdGFCb3VuZChlKSB7CiAgICAgIHZhciBoZWFkZXJzID0gZS5zZW5kZXIudGhlYWQuY2hpbGRyZW4oKTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaGVhZGVycy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciB0aCA9IGtlbmRvLmpRdWVyeShoZWFkZXJzW2ldKTsKICAgICAgICB0aC5jc3MoImZvbnQtd2VpZ2h0IiwgImJvbGQiKTsKICAgICAgICB0aC5jc3MoInRleHQtYWxpZ24iLCAiY2VudGVyIik7CiAgICAgIH0KCiAgICAgIHZhciByb3dzID0gZS5zZW5kZXIudGJvZHkuY2hpbGRyZW4oKTsKCiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcm93cy5sZW5ndGg7IGorKykgewogICAgICAgIHZhciByb3cgPSBrZW5kby5qUXVlcnkocm93c1tqXSk7CiAgICAgICAgdmFyIGRhdGFJdGVtID0gZS5zZW5kZXIuZGF0YUl0ZW0ocm93KTsKICAgICAgICAvKiBBbW91bnQgYWxpZ24gcmlnaHQgKi8KCiAgICAgICAgcm93LmNzcygidGV4dC1hbGlnbiIsICJyaWdodCIpOwogICAgICAgIC8qIFBhcmVudCBpbiBib2xkICovCgogICAgICAgIGlmIChkYXRhSXRlbS5nZXQoImhhc0NoaWxkcmVuIikgfHwgZGF0YUl0ZW0udXVpZCA+PSAxMDApIHsKICAgICAgICAgIHJvdy5jc3MoImZvbnQtd2VpZ2h0IiwgImJvbGQiKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyBHZW5lcmF0ZSBDb2x1bW5zCiAgICBnZW5lcmF0ZUNvbHVtbjogZnVuY3Rpb24gZ2VuZXJhdGVDb2x1bW4oKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGhlYWRlckF0dHJpYnV0ZXMgPSB7CiAgICAgICAgY2xhc3M6ICJ0YWJsZS1oZWFkZXItY2VsbCIsCiAgICAgICAgc3R5bGU6ICJ0ZXh0LWFsaWduOiBjZW50ZXI7cGFkZGluZy1yaWdodDogMzVweDsgZm9udC1zaXplOiAxNHB4IgogICAgICB9LAogICAgICAgICAgYXR0cmlidXRlcyA9IHsKICAgICAgICBjbGFzczogInRhYmxlLWNlbGwiLAogICAgICAgIHN0eWxlOiAidGV4dC1hbGlnbjogcmlnaHQ7IGZvbnQtc2l6ZTogMTRweCIKICAgICAgfTsKICAgICAgdmFyIGNvbHVtbnMgPSBbewogICAgICAgIGZpZWxkOiB0aGlzLmZpZWxkTmFtZSwKICAgICAgICB0aXRsZTogaTE4bi50KCJhY2NvdW50IiksCiAgICAgICAgdGVtcGxhdGU6IHRoaXMubmFtZVRtcGwsCiAgICAgICAgbG9ja2VkOiB0cnVlLAogICAgICAgIHdpZHRoOiA0NTAKICAgICAgfSwgewogICAgICAgIGZpZWxkOiAiYnVkZ2V0QW1vdW50IiwKICAgICAgICB0aXRsZTogaTE4bi50KCJidWRnZXQiKSwKICAgICAgICBmb3JtYXQ6ICJ7MDpufSIsCiAgICAgICAgd2lkdGg6IDIwMCwKICAgICAgICBoZWFkZXJBdHRyaWJ1dGVzOiBoZWFkZXJBdHRyaWJ1dGVzLAogICAgICAgIGF0dHJpYnV0ZXM6IGF0dHJpYnV0ZXMKICAgICAgfV07CiAgICAgIC8qIFNldCBDb2x1bW4gU2VnbWVudHMgKi8KCiAgICAgIHZhciBfbG9vcDMgPSBmdW5jdGlvbiBfbG9vcDMoaSkgewogICAgICAgIC8qIFNlZ21lbnQgKi8KICAgICAgICB2YXIgc2VnbWVudCA9IF90aGlzMy4kc3RvcmUuc3RhdGUuc2VnbWVudHMubGlzdC5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS5pZCA9PT0gX3RoaXMzLnNlZ21lbnRJZHNbaV07CiAgICAgICAgfSk7CgogICAgICAgIGNvbHVtbnMucHVzaCh7CiAgICAgICAgICB0aXRsZTogc2VnbWVudC5uYW1lLAogICAgICAgICAgaGVhZGVyQXR0cmlidXRlczogaGVhZGVyQXR0cmlidXRlcywKICAgICAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgICAgIGZpZWxkOiAicyIgKyBpLAogICAgICAgICAgICB0aXRsZTogaTE4bi50KCJhY3R1YWxfYW1vdW50IiksCiAgICAgICAgICAgIGZvcm1hdDogInswOm59IiwKICAgICAgICAgICAgd2lkdGg6IDIwMCwKICAgICAgICAgICAgaGVhZGVyQXR0cmlidXRlczogaGVhZGVyQXR0cmlidXRlcywKICAgICAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcwogICAgICAgICAgfSwgewogICAgICAgICAgICBmaWVsZDogInAiICsgaSwKICAgICAgICAgICAgdGl0bGU6ICIlIiwKICAgICAgICAgICAgZm9ybWF0OiAiezA6cH0iLAogICAgICAgICAgICB3aWR0aDogMTAwLAogICAgICAgICAgICBoZWFkZXJBdHRyaWJ1dGVzOiBoZWFkZXJBdHRyaWJ1dGVzLAogICAgICAgICAgICBhdHRyaWJ1dGVzOiBhdHRyaWJ1dGVzCiAgICAgICAgICB9XQogICAgICAgIH0pOwogICAgICB9OwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRJZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICBfbG9vcDMoaSk7CiAgICAgIH0KCiAgICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7CiAgICB9LAogICAgbmFtZVRtcGw6IGZ1bmN0aW9uIG5hbWVUbXBsKGRhdGFJdGVtKSB7CiAgICAgIC8qIE5hbWUgaW4gbGFuZ3VhZ2UgKi8KICAgICAgdmFyIG5hbWUgPSBkYXRhSXRlbS5uYW1lOwoKICAgICAgaWYgKHRoaXMucmVwb3J0aW5nTGFuZ3VhZ2UgPT09ICJsb2NhbCIpIHsKICAgICAgICBuYW1lID0gZGF0YUl0ZW0ubG9jYWxfbmFtZTsKICAgICAgfQogICAgICAvKiBEZWZpbmUgcmVzdWx0ICovCgoKICAgICAgdmFyIHJlc3VsdCA9ICI8c3Bhbj4iLmNvbmNhdChkYXRhSXRlbS5udW1iZXIsICIgLSAiKS5jb25jYXQobmFtZSwgIjwvc3Bhbj4iKTsKICAgICAgLyogVG9wIExldmVsICovCgogICAgICBpZiAoZGF0YUl0ZW0ucGFyZW50SWQgPT09IG51bGwpIHsKICAgICAgICByZXN1bHQgPSAiPHNwYW4gc3R5bGU9J2ZvbnQtd2VpZ2h0OiBib2xkZXI7Jz4iLmNvbmNhdChuYW1lLCAiPC9zcGFuPiIpOwogICAgICB9CiAgICAgIC8qIFBhcmVudCBMZXZlbCAqLwoKCiAgICAgIGlmIChkYXRhSXRlbS5oYXNDaGlsZHJlbiAmJiBkYXRhSXRlbS5udW1iZXIubGVuZ3RoID4gMykgewogICAgICAgIHJlc3VsdCA9ICI8c3BhbiBzdHlsZT0nZm9udC13ZWlnaHQ6IGJvbGRlcjsnPiIuY29uY2F0KGRhdGFJdGVtLm51bWJlciwgIiAtICIpLmNvbmNhdChuYW1lLCAiPC9zcGFuPiIpOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIC8vIE9uIFJlcG9yaW50IExhbmd1YWdlIENoYW5nZXMKICAgIG9uUmVwb3J0aW5nTGFuZ3VhZ2VDaGFuZ2VzOiBmdW5jdGlvbiBvblJlcG9ydGluZ0xhbmd1YWdlQ2hhbmdlcygpIHsKICAgICAgdGhpcy5maWVsZE5hbWUgPSAibmFtZSI7CgogICAgICBpZiAodGhpcy5yZXBvcnRpbmdMYW5ndWFnZSA9PT0gImxvY2FsIikgewogICAgICAgIHRoaXMuZmllbGROYW1lID0gImxvY2FsX25hbWUiOwogICAgICB9IC8vIEdlbmVyYXRlIGNvbHVtbiB3aXRoIG5ldyBsYW5ndWFnZQoKCiAgICAgIHRoaXMuZ2VuZXJhdGVDb2x1bW4oKTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiBtYXBTdGF0ZSh7CiAgICBhY2NvdW50czogZnVuY3Rpb24gYWNjb3VudHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmFjY291bnRpbmcuYWNjb3VudHM7CiAgICB9CiAgfSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9Cn07"},{"version":3,"sources":["ConsolidatedBudgetPerformance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <!-- Title -->\n        <v-row>\n            <v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('consolidated_budget_performance_report')}}</h3>\n                <p class=\"mb-0\">{{$t('consolidated_budget_performance_dec')}}</p>\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"pb-1\">\n                <app-reporting-language \n                    :initLanguage=\"reportingLanguage\" \n                    @emitLanguage=\"reportingLanguage = $event\" \n                    @onChanged=\"onReportingLanguageChanges\" />\n            </v-col>\n        </v-row>\n\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('fiscal_year')}}:</label>\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('from')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"startMonth\" \n                    @emitMonthOf=\"startMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('to')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"endMonth\" \n                    @emitMonthOf=\"endMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('budgets')}}:</label>\n                <budget-list-item-group \n                    :initBudgets=\"selectedBudgets\"\n                    :initFiscalYear=\"fiscalDate.uuid\" \n                    @emitBudgets=\"selectedBudgets = $event\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <v-btn\n                    class=\"white--text\"\n                    color=\"primary\"\n                    @click=\"search\"\n                >\n                    <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                </v-btn>\n            </v-col>\n        </v-row>\n        \n        <!-- Grid -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <treelistdatasource \n                        ref=\"statementDS\"\n                        :data=\"statementList\"\n                        :sort=\"sortDefinition\"\n                        :schema-model=\"model\" />\n\n                    <treelist \n                        ref=\"statementTreeList\"\n                        data-source-ref=\"statementDS\"\n                        :resizable=\"true\"\n                        :columns=\"columns\"\n                        :dataBound=\"onDataBound\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import AccountModel from \"@/scripts/model/Account.js\";\n    import FiscalDateModel from \"@/scripts/model/FiscalDate\";\n    import StatementOfProfitOrLossModel from \"@/scripts/model/StatementOfProfitOrLoss\";\n\n    /* TreeList */\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n    \n    /* Vuex */\n    import { mapState } from 'vuex';\n\n    const incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            \"app-month-of-picker\": () => import('@/components/kendo_templates/MonthOfPicker'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n            'budget-list-item-group': () => import('@/components/dropdownlist/BudgetListItemGroup'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            selectedBudgets: [],\n            segmentIds: [],\n            statements : [],\n            statementList : [],\n            startMonth: '',\n            endMonth: '',\n            minMonth : '',\n            maxMonth : '',\n            /* Fiscal Date */\n            fiscalDate: new FiscalDateModel(),\n            /* Kendo */\n            columns : [],\n            sortDefinition : [\n                { field: \"order\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n\t\t\tmodel: {\n                id: \"uuid\",\n                expanded: true\n            },\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n            // LoadingMe\n            showLoading: false,\n        }),\n        methods:{\n            validating(){\n                let isValid = true;\n\n                if(this.fiscalDate.uuid === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_fiscal_year\"));\n                }\n\n                if(this.startMonth === '' || this.endMonth === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_from_to_month\"));\n                }\n\n                if(this.selectedBudgets.length === 0){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_budgets\"));\n                }\n\n                return isValid;\n            },\n            /* Search */\n            search () {\n                if(this.validating()){\n                    let endMonth = new Date(this.endMonth),\n                        lastDay = new Date(endMonth.getFullYear(), endMonth.getMonth()+1, 0);\n\n                    let sdate = kendo.toString(new Date(this.startMonth), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                        edate = kendo.toString(lastDay, 'yyyy-MM-dd') + 'T23:59:59.999Z';\n\n                    /* Segment Ids */\n                    let segmentIds = [];\n                    this.$store.state.budgets.list.forEach(value => {\n                        if(~this.selectedBudgets.indexOf(value.uuid)) {\n                            segmentIds.push(value.segment_uuid);\n                        }\n                    });\n                    /* Remove Duplicate */\n                    this.segmentIds = [...new Set(segmentIds)];\n                    \n                    // Empty datasource\n                    let ds = this.$refs.statementDS.kendoWidget();\n                    ds.data([]);\n                    \n                    // Query Income Statement\n                    this.showLoading = true;\n                    incomeStatementHandler.getBySegments(sdate, edate, this.segmentIds)\n                    .then(res => {\n                        if(res){\n                            this.statements = res;\n                            this.bindData();\n                        }else{\n                            this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                        }\n                    })\n                    .finally(()=>{\n                        // this.showLoading = false;\n                    });\n                }\n\t\t\t},\n            async bindData () {\n                let g = {}, childIds = [];\n\n                /* Generate Months */\n                let fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\", \"yyyy-MM\");\n\n                /* Month Index */\n                let startMonthIndex = fiscalMonths.indexOf(this.startMonth),\n                    endMonthIndex = fiscalMonths.indexOf(this.endMonth);\n\n                let minMonthIndex = startMonthIndex, maxMonthIndex = endMonthIndex;\n                if(startMonthIndex > endMonthIndex){\n                    minMonthIndex = endMonthIndex, maxMonthIndex = startMonthIndex;\n                }\n\n                // Load Account List\n                await this.$store.dispatch('accounting/getAccounts'); \n\n                /* Loop all budgets */\n                for (let i = 0; i < this.selectedBudgets.length; i++) {\n                    const budget = this.$store.state.budgets.list.find((item) => item.uuid === this.selectedBudgets[i]);\n\n                    /* Budget lines */\n                    budget.lines.forEach(value => {\n                        /* Get Account */\n                        let account = this.accounts.find((item) => item.uuid === value.account_uuid);\n                        \n                        /* Order */\n                        let order = account.type_code;\n                        if(account.type_code === AccountTypeCode.OTHER_REVENUE){\n                            order = OrderNumberPL[account.type_code];\n                        }\n\n                        /* GROUPING */\n                        /* Top Level Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new StatementOfProfitOrLossModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.account_type.local_name,\n                                order : order,\n                            });\n                        }\n                        \n                        /* Parent Level */\n                        let thisAccountParentId = \"\";\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            let currentParentAccount = new AccountModel(account.parent_account), counter = 0;\n                            while (currentParentAccount.number !== \"\") {\n                                /* Get account by uuid or banhji_account_number */\n                                let accountParent = new AccountModel();\n                                if(currentParentAccount.uuid !== \"\"){/* Get by uuid */\n                                    accountParent = new AccountModel(this.accounts.find((item) => item.uuid === currentParentAccount.uuid));\n                                }else{/* Get by banhji_account_number because default data has no uuid */\n                                    if(currentParentAccount.banhji_account_number !== \"\"){\n                                        accountParent = new AccountModel(this.accounts.find((item) => item.banhji_account_number === currentParentAccount.banhji_account_number));\n                                    }\n                                }\n\n                                /* Set This Account Parent Id */\n                                if(counter === 0){\n                                    thisAccountParentId = accountParent.uuid;\n                                }\n\n                                /* Find Next Parent */\n                                let nextParent = new AccountModel();\n                                if(accountParent.hasOwnProperty(\"parent_account\")){\n                                    let parentOfAccountParent = new AccountModel(accountParent.parent_account);\n                                    if(parentOfAccountParent.number !== \"\"){\n                                        if(parentOfAccountParent.uuid !== \"\"){/* Get by uuid */\n                                            nextParent = this.accounts.find((item) => item.uuid === parentOfAccountParent.uuid);\n                                        }else{/* Get by banhji_account_number because default data has no uuid */\n                                            if(parentOfAccountParent.banhji_account_number !== \"\"){\n                                                nextParent = this.accounts.find((item) => item.banhji_account_number === parentOfAccountParent.banhji_account_number);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                /* Set Parent Id */\n                                let parentId = accountParent.type_code;\n                                if(nextParent.number !== \"\"){\n                                    parentId = nextParent.uuid;\n\n                                    /* Set next parent account */\n                                    Object.assign(currentParentAccount, nextParent);\n                                }else{\n                                    /* Set loop to end */\n                                    currentParentAccount.number = \"\";\n                                }\n\n                                /* Add Parent Level */\n                                g[accountParent.uuid] = new StatementOfProfitOrLossModel({\n                                    uuid : accountParent.uuid,\n                                    number : accountParent.number,\n                                    name : accountParent.name,\n                                    local_name : accountParent.local_name,\n                                    parentId : parentId,\n                                    account : accountParent,\n                                    order : order,\n                                });\n\n                                /* Increase Counter By 1 */\n                                counter++;\n                            }/* End While Loop */\n                        }\n\n                        /* Child Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new StatementOfProfitOrLossModel({\n                                uuid : account.uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                account : account,\n                                order : order,\n                            });\n                        }\n\n                        /* Budget Amount */\n                        let budgetAmount = 0;\n                        for (let j = 0; j < 12; j++) {\n                            if(j >= minMonthIndex && j <= maxMonthIndex){\n                                let nature = 1;\n                                if(account.account_type.nature.toLowerCase() === \"cr\"){\n                                    nature = -1;\n                                }\n                                budgetAmount += kendo.parseFloat(value.monthly_amount[j].amount) * nature;\n                            }\n                        }\n\n                        /* Set Parent Id Or Self Parent */\n                        let childId = account.uuid;\n                        if(thisAccountParentId !== \"\"){/* Child Level */\n                            g[account.uuid].parentId = thisAccountParentId;\n                            g[account.uuid].budgetAmount = budgetAmount;\n                        }else{/* Child As Parent */\n                            g[account.uuid].parentId = account.type_code; /* Self As Parent */\n\n                            if(budgetAmount !== 0){\n                                childId = account.number;\n\n                                /* Self As Child With Balance */\n                                if(!g[account.number]){\n                                    g[account.number] = new StatementOfProfitOrLossModel({\n                                        uuid : account.number,\n                                        number : account.number,\n                                        name : account.name,\n                                        local_name : account.local_name,\n                                        parentId : account.uuid,\n                                        account : account,\n                                        budgetAmount : budgetAmount,\n                                        order : order,\n                                    });\n                                }\n                            }\n                        }\n\n                        /* Child Id */\n                        childIds.push(childId);\n                    });\n                }\n\n                /* ACTUAL */\n                /* Define Segments */\n                for (let key in g){\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        g[key][\"s\"+i] = 0;\n                    }\n                }\n                /* Sum Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    this.statements[i].forEach(value => {\n                        if(g[value.accountUUID]){\n                            g[value.accountUUID][\"s\"+i] += kendo.parseFloat(value.balance);\n                        }\n                        \n                        /* Other Groups */\n                        if(value.account_type_number >= 100 && value.account_type_number <= 105){\n                            g[value.account_type_number] = new StatementOfProfitOrLossModel({\n                                uuid: value.account_type_number,\n                                name: value.name,\n                                local_name: value.local_name,\n                                order: OrderNumberPL[value.account_type_number],\n                            });\n                        }\n                    });\n                }\n                \n                /* Parse Object Array */\n                let entries = Object.values(g);\n                \n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    parent.budgetAmount += entry.budgetAmount;\n\n                                    /* Define Segments */\n                                    for (let j = 0; j < this.segmentIds.length; j++) {\n                                        parent[\"s\"+j] += entry[\"s\"+j];\n                                    }\n\n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n\n                /* Other Groups */\n                /* Gross Profit */\n                let revenue = this.getEntry(entries, AccountTypeCode.REVENUE),\n                    costOfSale = this.getEntry(entries, AccountTypeCode.COGS),\n                    grossProfit = this.getEntry(entries, AccountTypeCode.GROSS_PROFIT);\n\n                /* EBITDA */\n                let salaryBenefit = this.getEntry(entries, AccountTypeCode.SALARY_BENEFIT),\n                    saleMarketing = this.getEntry(entries, AccountTypeCode.SALE_MARKETING),\n                    researchProductDevelopment = this.getEntry(entries, AccountTypeCode.RESEARCH_PRODUCT_DEVELOPMENT),\n                    legalProfessionalFee = this.getEntry(entries, AccountTypeCode.LEGAL_PROFESSIONAL_FEE),\n                    generalAdminExpenses = this.getEntry(entries, AccountTypeCode.GENERAL_ADMIN_EXPENSE),\n                    operatingExpenses = this.getEntry(entries, AccountTypeCode.OPERATING_EXPENSE),\n                    otherRevenue = this.getEntry(entries, AccountTypeCode.OTHER_REVENUE),\n                    operatingIncomeEBITDA = this.getEntry(entries, AccountTypeCode.OPERATING_INCOME_EBITDA);\n\n                /* EBIT */\n                let depreciation = this.getEntry(entries, AccountTypeCode.DEPRECIATION),\n                    otherExpenses = this.getEntry(entries, AccountTypeCode.OTHER_EXPENSE),\n                    earningBeforeInterestAndTaxEBIT = this.getEntry(entries, AccountTypeCode.EARNING_BEFORE_INTEREST_AND_TAX_EBIT);\n\n                /* Profit Before Tax */\n                let financingCost = this.getEntry(entries, AccountTypeCode.FINANCING_COST),\n                    profitBeforeTax = this.getEntry(entries, AccountTypeCode.PROFIT_BEFORE_TAX);\n\n                /* Profit For The Period */\n                let taxRelatedExpenses = this.getEntry(entries, AccountTypeCode.TAX),\n                    profitForThePeriod = this.getEntry(entries, AccountTypeCode.PROFIT_FOR_THE_PERIOD);\n                    \n                /* Calculate Budget Amount */\n                grossProfit.budgetAmount = revenue.budgetAmount - costOfSale.budgetAmount;\n                operatingExpenses.budgetAmount = salaryBenefit.budgetAmount + saleMarketing.budgetAmount + researchProductDevelopment.budgetAmount + legalProfessionalFee.budgetAmount + generalAdminExpenses.budgetAmount;\n                operatingIncomeEBITDA.budgetAmount = (grossProfit.budgetAmount + otherRevenue.budgetAmount) - operatingExpenses.budgetAmount;\n                earningBeforeInterestAndTaxEBIT.budgetAmount = operatingIncomeEBITDA.budgetAmount - depreciation.budgetAmount - otherExpenses.budgetAmount;\n                profitBeforeTax.budgetAmount = earningBeforeInterestAndTaxEBIT.budgetAmount - financingCost.budgetAmount;\n                profitForThePeriod.budgetAmount = profitBeforeTax.budgetAmount - taxRelatedExpenses.budgetAmount;\n\n                /* Calculate Segment Amount */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    grossProfit[\"s\"+i] = revenue[\"s\"+i] - costOfSale[\"s\"+i];\n                    operatingExpenses[\"s\"+i] = salaryBenefit[\"s\"+i] + saleMarketing[\"s\"+i] + researchProductDevelopment[\"s\"+i] + legalProfessionalFee[\"s\"+i] + generalAdminExpenses[\"s\"+i];\n                    operatingIncomeEBITDA[\"s\"+i] = (grossProfit[\"s\"+i] + otherRevenue[\"s\"+i]) - operatingExpenses[\"s\"+i];\n                    earningBeforeInterestAndTaxEBIT[\"s\"+i] = operatingIncomeEBITDA[\"s\"+i] - depreciation[\"s\"+i] - otherExpenses[\"s\"+i];\n                    profitBeforeTax[\"s\"+i] = earningBeforeInterestAndTaxEBIT[\"s\"+i] - financingCost[\"s\"+i];\n                    profitForThePeriod[\"s\"+i] = profitBeforeTax[\"s\"+i] - taxRelatedExpenses[\"s\"+i];\n                }\n\n                /* Find Percentage */\n                entries.forEach(value => {\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        value[\"p\"+i] = this.findPercentage(value[\"s\"+i], value.budgetAmount);\n                    }\n                });\n                \n                /* BIND STATMENT */\n                this.statementList = entries;\n                \n                this.generateColumn();\n\n                this.showLoading = false;\n\t\t\t},\n            getEntry(entries, id){\n                let entry = entries.find(i=>i.uuid === id);\n\n                if(!entry){\n                    entry = new StatementOfProfitOrLossModel();\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        entry[\"s\"+i] = 0;\n                    }\n                }\n\n                return entry;\n            },\n            findPercentage (value1, value2) {\n                let result = 0;\n                if(value2 !== 0){\n                    result = value1 / value2;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    row.css(\"text-align\", \"right\");\n\n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.uuid >= 100){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            // Generate Columns\n\t\t\tgenerateColumn() {\n                let headerAttributes = {\n                        class: \"table-header-cell\",\n                        style: \"text-align: center;padding-right: 35px; font-size: 14px\",\n                    },\n                    attributes = {\n                        class: \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\",\n                    };\n\n                let columns = [\n                    {\n                        field: this.fieldName,\n                        title: i18n.t(\"account\"),\n                        template: this.nameTmpl,\n                        locked: true,\n                        width: 450,\n                    },\n                    {\n                        field: \"budgetAmount\",\n                        title: i18n.t(\"budget\"),\n                        format: \"{0:n}\",\n                        width: 200,\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    }\n                ];\n\n                /* Set Column Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    /* Segment */\n                    let segment = this.$store.state.segments.list.find(\n                        (item) => item.id === this.segmentIds[i]\n                    );\n\n                    columns.push({\n                        title: segment.name,\n                        headerAttributes: headerAttributes,\n                        columns:[\n                            {\n                                field: \"s\" + i,\n                                title: i18n.t(\"actual_amount\"),\n                                format: \"{0:n}\",\n                                width: 200,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            },\n                            {\n                                field: \"p\" + i,\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width: 100,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n                    });\n                }\n\n                this.columns = columns;\n            },\n            nameTmpl(dataItem){\n                /* Name in language */\n                let name = dataItem.name;\n                if(this.reportingLanguage === \"local\"){\n                    name = dataItem.local_name;\n                }\n\n                /* Define result */\n                let result = `<span>${dataItem.number} - ${name}</span>`;\n\n                /* Top Level */\n                if(dataItem.parentId === null){\n                    result = `<span style='font-weight: bolder;'>${name}</span>`;\n                }\n\n                /* Parent Level */\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    result = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n                }\n\n                return result;\n            },\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                }\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n        },\n        computed: mapState({\n            accounts: state => state.accounting.accounts\n        }),\n        mounted () {\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th{\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"],"sourceRoot":"src/views/budgeting/budgets"}]}