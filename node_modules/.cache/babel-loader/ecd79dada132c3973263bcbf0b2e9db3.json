{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_financial_position/StatementOfFinancialPositionBySegments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_financial_position/StatementOfFinancialPositionBySegments.vue","mtime":1642155812619},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatementOfFinancialPositionBySegments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n      <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n        <v-row>\n          <v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n            <v-row>\n              <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                <label class=\"label pt-5\">{{ $t(\"as_of\") }}</label>\n                <app-datepicker\n                  :initialDate=\"asOfDate\"\n                  @emitDate=\"asOfDate = $event\"\n                />\n              </v-col>\n              <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                <label class=\"label\">{{ $t(\"segment\") }}</label>\n                <app-segment-list-item-group\n                  :initSegment=\"selectedSegmentIds\"\n                  @emitSegment=\"selectedSegmentIds = $event\"\n                />\n              </v-col>\n              <v-col sm=\"4\" cols=\"12\" class=\"pt-7\">\n                <v-btn class=\"white--text\" color=\"primary\" @click=\"search\">\n                  <i\n                    class=\"b-search\"\n                    style=\"font-size: 18px; color: #fff !important\"\n                  />\n                </v-btn>\n              </v-col>\n            </v-row>\n          </v-col>\n          <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n            <app-reporting-language\n              :initLanguage=\"reportingLanguage\"\n              @emitLanguage=\"reportingLanguage = $event\"\n            />\n          </v-col>\n        </v-row>\n\n        <!-- Card -->\n        <v-row class=\"mt-1\">\n          <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n            <v-card\n              outlined\n              dense\n              class=\"pa-3 rounded-4 no_border white--text\"\n              color=\"third\"\n              height=\"60px\"\n            >\n              <h3 class=\"text-left flex-1 text-uppercase font_12 py-0\">\n                {{ $t(\"asset\") }}\n              </h3>\n              <h3 class=\"text-right flex-1 font_20\">\n                {{ Number(totalAsset).toLocaleString() }}\n              </h3>\n            </v-card>\n          </v-col>\n          <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n            <v-card\n              outlined\n              dense\n              class=\"pa-3 rounded-4 no_border white--text\"\n              color=\"third\"\n              height=\"60px\"\n            >\n              <h3 class=\"text-left flex-1 font_12 text-uppercase\">\n                {{ $t(\"liabilities_and_equity\") }}\n              </h3>\n              <h3 class=\"text-right flex-1 font_20\">\n                {{ Number(totalLiabilityAndEquity).toLocaleString() }}\n              </h3>\n            </v-card>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <kendo-datasource\n              ref=\"balanceSheetDS\"\n              :data=\"statementFPList\"\n              :schema=\"schemaDefinition\"\n              :group=\"groupDefinition\"\n              :aggregate=\"aggregateDefinition\"\n            />\n\n            <kendo-grid\n              id=\"gridSFP\"\n              class=\"custom_grid\"\n              :data-source-ref=\"'balanceSheetDS'\"\n              :change=\"onGridChanges\"\n              :selectable=\"true\"\n              :persistSelection=\"true\"\n              :sortable=\"true\"\n              :column-menu=\"true\"\n              :reorderable=\"true\"\n              :resizable=\"true\"\n              :noRecords=\"true\"\n              :toolbar=\"['excel']\"\n              :excel-file-name=\"'balanceSheetReport.xlsx'\"\n              :excel-filterable=\"true\"\n              :columns=\"columns\"\n            />\n          </v-col>\n        </v-row>\n\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"false\"\n          :myLoading=\"true\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { mapState } from \"vuex\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { balanceSheetHandler } = require(\"@/scripts/AppHandlers\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-datepicker\": () =>\n      import(\"@/components/custom_templates/DatePickerComponent\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-segment-list-item-group\": () =>\n      import(\"@/components/dropdownlist/SegmentListItemGroup\"),\n  },\n  data: () => ({\n    asOfDate: new Date().toISOString().substr(0, 10),\n    statementFP: [],\n    statementFPList: [],\n    selectedSegmentIds: [],\n    totalAsset: 0,\n    totalLiabilityAndEquity: 0,\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    // LoadingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    groupDefinition: [],\n    aggregateDefinition: [],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    async loadData() {\n      // Call List\n      await this.$store.dispatch(\"segments/getList\");\n    },\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSFP\").data(\"kendoGrid\");\n      let selectedItem = grid.dataItem(grid.select());\n\n      let asOf = new Date(this.asOfDate);\n\n      /* if day = 1 need to minus 1 month */\n      if (asOf.getDate() === 1) {\n        asOf.setMonth(asOf.getMonth() - 1);\n      }\n      asOf.setDate(1);\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedItem.accountUUID,\n          start_date: kendo.toString(asOf, \"yyyy-MM-dd\"),\n          end_date: this.asOfDate,\n        },\n      });\n    },\n    // Search\n    search() {\n      // Empty dataSource\n      let ds = this.$refs.balanceSheetDS.kendoWidget();\n      ds.data([]);\n\n      if (this.selectedSegmentIds.length > 0) {\n        let asOfDate = new Date(this.asOfDate);\n\n        // Query\n        this.showLoading = true;\n        balanceSheetHandler\n          .getBySegments(\n            kendo.toString(asOfDate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n            this.selectedSegmentIds\n          )\n          .then((res) => {\n            if (res) {\n              this.statementFP = res;\n              this.bindData();\n            }\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        Helper.alertErrorMsg(\"Please select segment\");\n      }\n    },\n    /* Bind Data */\n    bindData() {\n      let entries = {},\n        totalAsset = 0,\n        totalLiabilityAndEquity = 0;\n\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        this.statementFP[i].forEach((value) => {\n          let entry = value;\n\n          // Order\n          if (entry.groupNature.toLowerCase() === \"equity\") {\n            // Equity\n            entry.order = entry.account_type_number * 100;\n          } else {\n            entry.order = entry.account_type_number;\n          }\n\n          // Sum Asset, Liabilities and Equtity\n          if (entry.groupNature.toLowerCase() === \"asset\") {\n            // Asset\n            totalAsset += entry.balance;\n          } else {\n            // Liability and Equity\n            // Covert Cr side to normal\n            entry.balance = entry.balance * -1;\n            totalLiabilityAndEquity += entry.balance;\n          }\n\n          // Group Nature local name\n          entry.group_nature_local_name = this.localTranslation(\n            entry.groupNature\n          );\n\n          // Statement Group local name\n          entry.statement_group_local_name = this.localTranslation(\n            entry.statementGroup\n          );\n\n          /* Grouping */\n          let groupName =\n            String(value.accountUUID) + String(value.account_type_number);\n          if (entries[groupName]) {\n            entries[groupName][\"s\" + i] = value.balance;\n          } else {\n            entries[groupName] = entry;\n\n            /* Add all segments to columns */\n            for (let j = 0; j < 50; j++) {\n              entries[groupName][\"s\" + j] = 0;\n            }\n\n            entries[groupName][\"s\" + i] = value.balance;\n          }\n        });\n      }\n\n      this.totalAsset = totalAsset;\n      this.totalLiabilityAndEquity = totalLiabilityAndEquity;\n\n      this.statementFPList = Object.values(entries);\n      this.generateColumn();\n    },\n    // Transalate to local language\n    localTranslation(lang) {\n      let word = lang;\n\n      if (lang.toLowerCase() === \"asset\") {\n        word = \"ទ្រព្យសកម្ម\";\n      } else if (lang.toLowerCase() === \"current asset\") {\n        word = \"ទ្រព្យសកម្មរយៈពេលខ្លី\";\n      } else if (lang.toLowerCase() === \"non-current asset\") {\n        word = \"ទ្រព្យសកម្មរយៈពេលវែង\";\n      } else if (lang.toLowerCase() === \"liabilities\") {\n        word = \"បំណុល\";\n      } else if (lang.toLowerCase() === \"current liabilities\") {\n        word = \"បំណុលរយៈពេលខ្លី\";\n      } else if (lang.toLowerCase() === \"non-current liabilities\") {\n        word = \"បំណុលរយៈពេលវែង\";\n      } else if (lang.toLowerCase() === \"equity\") {\n        word = \"ដើមទុន\";\n      } else if (lang.toLowerCase() === \"retained earning\") {\n        word = \"ប្រាក់ចំណេញរក្សាទុក\";\n      }\n\n      return word;\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    statementGroupHeaderTmpl(dataItem) {\n      let name = dataItem.value;\n\n      if (this.reportingLanguage === \"local\") {\n        name = this.localTranslation(name);\n      }\n\n      return name;\n    },\n    natureGroupHeaderTmpl(dataItem) {\n      let name = dataItem.value;\n\n      if (this.reportingLanguage === \"local\") {\n        name = this.localTranslation(name);\n      }\n\n      return name;\n    },\n    generateColumn() {\n      let columns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          locked: true,\n          width: 300,\n          template: this.accountTmpl,\n        },\n        {\n          field: \"type\",\n          title: \"TYPE\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n        },\n        {\n          field: \"statementGroup\",\n          title: \"STATEMENT GROUP\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.statementGroupHeaderTmpl,\n        },\n        {\n          field: \"groupNature\",\n          title: \"NATURE\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.natureGroupHeaderTmpl,\n        },\n      ];\n\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      /* Set Column Segments */\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        /* Segment */\n        let segment = this.segments.find(\n          (item) => item.id === this.selectedSegmentIds[i]\n        );\n\n        /* Column Segment */\n        columns.push({\n          field: \"s\" + i,\n          title: segment.name,\n          format: \"{0:#,##0.##;(#,##0.##)}\",\n          width: 200,\n          aggregates: \"['sum']\",\n          groupHeaderColumnTemplate:\n            \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n          headerAttributes: headerAttributes,\n          attributes: attributes,\n        });\n      }\n\n      this.columns = columns;\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n      }\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      /* Aggregate Defintion */\n      let aggregateDefinition = [];\n      for (let i = 0; i < 50; i++) {\n        aggregateDefinition.push({ field: \"s\" + i, aggregate: \"sum\" });\n      }\n      this.aggregateDefinition = aggregateDefinition;\n\n      this.groupDefinition = [\n        {\n          field: \"groupNature\",\n          aggregates: this.aggregateDefinition,\n          compare: function (a, b) {\n            if (a.items[0].order === b.items[0].order) {\n              return 0;\n            } else if (a.items[0].order > b.items[0].order) {\n              return 1;\n            } else {\n              return -1;\n            }\n          },\n        },\n        { field: \"statementGroup\", aggregates: this.aggregateDefinition },\n        {\n          field: \"type\",\n          aggregates: this.aggregateDefinition,\n          compare: function (a, b) {\n            if (\n              a.items[0].account_type_number === b.items[0].account_type_number\n            ) {\n              return 0;\n            } else if (\n              a.items[0].account_type_number > b.items[0].account_type_number\n            ) {\n              return 1;\n            } else {\n              return -1;\n            }\n          },\n        },\n      ];\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: mapState({\n    segments: (state) => state.segments.list,\n    appType() {\n      return dataStore.productType;\n    },\n  }),\n  created() {\n    this.loadData();\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.reports_list {\n  width: 100%;\n  background-color: #fff;\n  padding: 20px 20px 5px;\n}\n.report_filter {\n  background-color: #f8f8f9;\n  padding: 0 20px 5px 20px;\n}\n.dv_mt {\n  margin-top: 20px;\n}\n.dv_mt8 {\n  margin-top: 30px;\n}\n.report_block .v-card.third {\n  border: none;\n  box-shadow: none;\n  color: #fff;\n  text-transform: uppercase;\n}\n.report_block .v-card.third p.text {\n  text-align: left;\n  font-size: 16px;\n}\n.report_block .v-card.third p.number {\n  text-align: center;\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 0;\n}\n.report_block .v-card.bg_gray {\n  background-color: #f8f8f9;\n  border: none;\n  box-shadow: none;\n  color: #000;\n  float: left;\n  width: 100%;\n}\n.report_block .v-card.bg_gray p span.text {\n  width: 25%;\n}\n.report_block .v-card.bg_gray p span.number {\n  width: 70%;\n  font-size: 19px;\n  font-weight: 700;\n  padding: 7px 0 0 0;\n  text-align: right;\n}\n@media (max-width: 576px) {\n  .dv_mt,\n  .dv_mt8 {\n    margin-top: 0;\n  }\n  .reports_list {\n    margin-top: 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/accounting/reports/statement_financial_position"}]}