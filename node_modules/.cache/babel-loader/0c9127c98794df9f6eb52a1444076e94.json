{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Uom.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Uom.js","mtime":1638499442998},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCBrZW5kbyBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGlVcmwuanMnKTsKCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGFpbmVyLCBvcHRpb25zKSB7CiAgLy8gRGVmaW5kIG9yZGVyaW5nIGJ5IG5hbWUKICB2YXIgY29tcGFyZSA9IGZ1bmN0aW9uIGNvbXBhcmUoYSwgYikgewogICAgaWYgKGEuaXRlbXNbMF0ubmFtZSA9PT0gYi5pdGVtc1swXS5uYW1lKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIGlmIChhLml0ZW1zWzBdLm5hbWUgPiBiLml0ZW1zWzBdLm5hbWUpIHsKICAgICAgcmV0dXJuIDE7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gLTE7CiAgICB9CiAgfTsgLy8gRGVmaW5kIGRlZmF1bHQgZ3JvdXAKCgogIHZhciBncm91cCA9IHsKICAgIGZpZWxkOiAiY2F0ZWdvcnkubmFtZSIsCiAgICBjb21wYXJlOiBjb21wYXJlCiAgfTsgLy8gVXNlIGxvY2FsIGRhdGEKCiAgdmFyIGRzID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICBkYXRhOiBzdG9yZS5zdGF0ZS51bml0T2ZNZWFzdXJlbWVudHMubGlzdCwKICAgIGdyb3VwOiBncm91cAogIH0pOyAvLyBEZWZpbmRlIGRyb3Bkb3dubGlzdAoKICB2YXIgZGRsID0ga2VuZG8ualF1ZXJ5KCc8aW5wdXQgbmFtZT0iJyArIG9wdGlvbnMuZmllbGQgKyAnIi8+JykuYXBwZW5kVG8oY29udGFpbmVyKS5rZW5kb0Ryb3BEb3duTGlzdCh7CiAgICBhdXRvQmluZDogdHJ1ZSwKICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgIGhlaWdodDogNDAwLAogICAgZmlsdGVyOiAic3RhcnRzd2l0aCIsCiAgICBkYXRhVGV4dEZpZWxkOiAibmFtZSIsCiAgICBkYXRhVmFsdWVGaWVsZDogImlkIiwKICAgIG9wdGlvbkxhYmVsOiAiLS0tIFNlbGVjdCAtLS0iLAogICAgZGF0YVNvdXJjZTogZHMKICB9KS5kYXRhKCJrZW5kb0Ryb3BEb3duTGlzdCIpOyAvLyBVc2UgcmVtb3RlIGRhdGEKCiAgaWYgKCFzdG9yZS5zdGF0ZS51bml0T2ZNZWFzdXJlbWVudHMuaXNMb2FkZWQpIHsKICAgIHZhciByZW1vdGVEUyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgICB0cmFuc3BvcnQ6IHsKICAgICAgICByZWFkOiB7CiAgICAgICAgICB1cmw6IGFwaVVybC5wcm9kdWN0LnVvbV9nZXQKICAgICAgICB9LAogICAgICAgIGRhdGFUeXBlOiAianNvbiIKICAgICAgfSwKICAgICAgc2NoZW1hOiB7CiAgICAgICAgbW9kZWw6IHsKICAgICAgICAgIGlkOiAiaWQiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHJlc3BvbnNlKSB7CiAgICAgICAgICAvKiBBZGQgdG8gc3RvcmUgKi8KICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCd1bml0T2ZNZWFzdXJlbWVudHMvYWRkTGlzdCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgfQogICAgICB9LAogICAgICBncm91cDogZ3JvdXAKICAgIH0pOwogICAgZGRsLnNldERhdGFTb3VyY2UocmVtb3RlRFMpOwogIH0KCiAgcmV0dXJuIGRkbDsKfSk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Uom.js"],"names":["kendo","store","apiUrl","require","container","options","compare","a","b","items","name","group","field","ds","data","DataSource","state","unitOfMeasurements","list","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","filter","dataTextField","dataValueField","optionLabel","dataSource","isLoaded","remoteDS","transport","read","url","product","uom_get","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AAEA,gBAAe,UAACC,SAAD,EAAYC,OAAZ,EAAwB;AACnC;AACA,MAAIC,OAAO,GAAG,SAAVA,OAAU,CAASC,CAAT,EAAYC,CAAZ,EAAe;AACzB,QAAID,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWC,IAAX,KAAoBF,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWC,IAAnC,EAAyC;AACrC,aAAO,CAAP;AACH,KAFD,MAEO,IAAIH,CAAC,CAACE,KAAF,CAAQ,CAAR,EAAWC,IAAX,GAAkBF,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAWC,IAAjC,EAAuC;AAC1C,aAAO,CAAP;AACH,KAFM,MAEA;AACH,aAAO,CAAC,CAAR;AACH;AACJ,GARD,CAFmC,CAYnC;;;AACA,MAAIC,KAAK,GAAG;AACRC,IAAAA,KAAK,EAAE,eADC;AAERN,IAAAA,OAAO,EAAEA;AAFD,GAAZ,CAbmC,CAkBnC;;AACA,MAAIO,EAAE,GAAG,IAAIb,KAAK,CAACc,IAAN,CAAWC,UAAf,CAA0B;AAC/BD,IAAAA,IAAI,EAAEb,KAAK,CAACe,KAAN,CAAYC,kBAAZ,CAA+BC,IADN;AAE/BP,IAAAA,KAAK,EAAEA;AAFwB,GAA1B,CAAT,CAnBmC,CAwBnC;;AACA,MAAIQ,GAAG,GAAGnB,KAAK,CAACoB,MAAN,CAAa,kBAAkBf,OAAO,CAACO,KAA1B,GAAkC,KAA/C,EACDS,QADC,CACQjB,SADR,EAEDkB,iBAFC,CAEiB;AACfC,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,SAAS,EAAE,IAFI;AAGfC,IAAAA,MAAM,EAAE,GAHO;AAIfC,IAAAA,MAAM,EAAC,YAJQ;AAKfC,IAAAA,aAAa,EAAE,MALA;AAMfC,IAAAA,cAAc,EAAE,IAND;AAOfC,IAAAA,WAAW,EAAE,gBAPE;AAQfC,IAAAA,UAAU,EAAEjB;AARG,GAFjB,EAWCC,IAXD,CAWM,mBAXN,CAAV,CAzBmC,CAsCnC;;AACA,MAAG,CAACb,KAAK,CAACe,KAAN,CAAYC,kBAAZ,CAA+Bc,QAAnC,EAA4C;AACxC,QAAIC,QAAQ,GAAG,IAAIhC,KAAK,CAACc,IAAN,CAAWC,UAAf,CAA0B;AACrCkB,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFC,UAAAA,GAAG,EAAEjC,MAAM,CAACkC,OAAP,CAAeC;AADlB,SADC;AAIPC,QAAAA,QAAQ,EAAE;AAJH,OAD0B;AAOrCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE;AACHC,UAAAA,EAAE,EAAE;AADD,SADH;AAIJ3B,QAAAA,IAAI,EAAE,cAAC4B,QAAD,EAAc;AAChB;AACAzC,UAAAA,KAAK,CAAC0C,QAAN,CAAe,4BAAf,EAA6CD,QAAQ,CAAC5B,IAAtD;AAEA,iBAAO4B,QAAQ,CAAC5B,IAAhB;AACH;AATG,OAP6B;AAkBrCH,MAAAA,KAAK,EAAEA;AAlB8B,KAA1B,CAAf;AAqBAQ,IAAAA,GAAG,CAACyB,aAAJ,CAAkBZ,QAAlB;AACH;;AAED,SAAOb,GAAP;AACH,CAjED","sourcesContent":["import kendo from '@progress/kendo-ui';\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Defind ordering by name\n    let compare = function(a, b) {\n        if (a.items[0].name === b.items[0].name) {\n            return 0;\n        } else if (a.items[0].name > b.items[0].name) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: \"category.name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.unitOfMeasurements.list,\n        group: group,\n    })\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"name\",\n                dataValueField: \"id\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n    \n    // Use remote data\n    if(!store.state.unitOfMeasurements.isLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.product.uom_get,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"id\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('unitOfMeasurements/addList', response.data);\n                    \n                    return response.data;\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}