{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/UOMDropDownList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/UOMDropDownList.vue","mtime":1638499442948},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLnRvLWpzb24uanMiOwovLwovLwovLwovLwovLwovLwppbXBvcnQga2VuZG8gZnJvbSAiQHByb2dyZXNzL2tlbmRvLXVpIjsKaW1wb3J0IHsgVW9tTW9kZWwgfSBmcm9tICJAL3NjcmlwdHMvbW9kZWwvQXBwTW9kZWxzIjsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaS9wcm9kdWN0Jyk7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1VPTURyb3BEb3duTGlzdCcsCiAgY29tcG9uZW50czoge30sCiAgcHJvcHM6IHsKICAgIGluaXRVT006IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdW9tOiBuZXcgVW9tTW9kZWwoe30pLAogICAgICB1b21zOiBbXSwKICAgICAgdHlwZTogJycsCiAgICAgIHVybDogYXBpVXJsLnVvbV9nZXQsCiAgICAgIGlkOiAnZGRsVU9NXycgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwKQogICAgfTsKICB9LAogIC8vIGNvbXB1dGVkOiBtYXBTdGF0ZSh7CiAgLy8gICAgIHNlZ21lbnRzOiBzdGF0ZSA9PiBzdGF0ZS5zZWdtZW50cy5hbGwKICAvLyB9KSwKICBtZXRob2RzOiB7CiAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoZXYpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHNlbGVjdGVkSW5kZXgsIHNlbGVjdGVkSXRlbTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoZXYpIHsKICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJbmRleCA9IGV2LnNlbmRlci5zZWxlY3QoKTsKICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRJdGVtID0gZXYuc2VuZGVyLmRhdGFJdGVtKHNlbGVjdGVkSW5kZXgpLnRvSlNPTigpOwogICAgICAgICAgICAgICAgICBfdGhpcy51b20gPSBuZXcgVW9tTW9kZWwoc2VsZWN0ZWRJdGVtKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzLiRlbWl0KCdvbkNoYW5nZScsIF90aGlzLnVvbSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBiaW5kRGF0YTogZnVuY3Rpb24gYmluZERhdGEodXJsKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAga2VuZG8ualF1ZXJ5KCcjJyArIHRoaXMuaWQpLmtlbmRvRHJvcERvd25MaXN0KHsKICAgICAgICBkYXRhVGV4dEZpZWxkOiAibmFtZSIsCiAgICAgICAgZGF0YVZhbHVlRmllbGQ6ICJpZCIsCiAgICAgICAgZGF0YVNvdXJjZTogbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICAgICAgICB0cmFuc3BvcnQ6IHsKICAgICAgICAgICAgcmVhZDogewogICAgICAgICAgICAgIHVybDogdXJsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRhdGFUeXBlOiAianNvbiIKICAgICAgICAgIH0sCiAgICAgICAgICBzY2hlbWE6IHsKICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICBpZDogImlkIgogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdmFyIHJvdyA9IHJlc3BvbnNlLmRhdGFbMF07CgogICAgICAgICAgICAgICAgX3RoaXMyLiRlbWl0KCdvbkNoYW5nZScsIHJvdyk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGdyb3VwOiB7CiAgICAgICAgICAgIGZpZWxkOiAnY2F0ZWdvcnkubmFtZScKICAgICAgICAgIH0KICAgICAgICB9KSwKICAgICAgICBjaGFuZ2U6IHRoaXMub25DaGFuZ2UsCiAgICAgICAgaW5kZXg6IDEsCiAgICAgICAgZmlsdGVyOiAnY29udGFpbnMnLAogICAgICAgIG9wdGlvbkxhYmVsOiAnLS0gU2VsZWN0IC0tJwogICAgICB9KTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBpbml0VU9NOiBmdW5jdGlvbiBpbml0VU9NKCkgewogICAgICB0aGlzLnVvbSA9IHRoaXMuaW5pdFVPTTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7Ly8gdGhpcy5sb2FkRGF0YSh0aGlzLnVybCk7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpczMuYmluZERhdGEoX3RoaXMzLnVybCk7CiAgICAgICAgICAgICAgLyogSW5pdGlhbCBvYmogKi8KCgogICAgICAgICAgICAgIF90aGlzMy51b20gPSBfdGhpczMuaW5pdFVPTTsgLy8gdGhpcy50eXBlID0gdGhpcy5pbml0VHlwZTsKICAgICAgICAgICAgICAvLyB0aGlzLiRlbWl0KCdvbkNoYW5nZScsIHRoaXMucG1PcHRpb24pOwogICAgICAgICAgICAgIC8vIGNyZWF0ZSBEcm9wRG93bkxpc3QgZnJvbSBpbnB1dCBIVE1MIGVsZW1lbnQKICAgICAgICAgICAgICAvLyBhd2FpdCB0aGlzLmxvYWREYXRhKCcnLCB0aGlzLnN1cEJhc2VVcmwpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["UOMDropDownList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <input :id=\"id\" style=\"width: 100%; margin-top: 4px\"/>\n    </div>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport {UomModel} from \"@/scripts/model/AppModels\";\n\nconst apiUrl = require('@/api/product');\nexport default {\n    name: 'UOMDropDownList',\n    components: {},\n    props: {\n        initUOM: {\n            type: Object,\n        }\n    },\n    data() {\n        return {\n            uom: new UomModel({}),\n            uoms: [],\n            type: '',\n            url: apiUrl.uom_get,\n            id: 'ddlUOM_' + Math.floor(Math.random() * 1000)\n        }\n    },\n    // computed: mapState({\n    //     segments: state => state.segments.all\n    // }),\n    methods: {\n        async onChange(ev) {\n            if (ev) {\n                const selectedIndex = ev.sender.select();\n                const selectedItem = ev.sender.dataItem(selectedIndex).toJSON();\n                this.uom = new UomModel(selectedItem);\n                this.$emit('onChange', this.uom);\n            }\n        },\n        bindData(url) {\n            kendo.jQuery('#' + this.id).kendoDropDownList({\n                dataTextField: \"name\",\n                dataValueField: \"id\",\n                dataSource: new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                        },\n                        dataType: \"json\",\n                    },\n                    schema: {\n                        model: {\n                            id: \"id\"\n                        },\n                        data: (response) => {\n                            if (response.data.length > 0) {\n                                const row = response.data[0]\n                                this.$emit('onChange', row);\n                            }\n                            return response.data;\n                        },\n                    },\n                    group: {field: 'category.name'}\n                }),\n                change: this.onChange,\n                index: 1,\n                filter: 'contains',\n                optionLabel: '-- Select --'\n            });\n        },\n    },\n    watch: {\n        initUOM() {\n            this.uom = this.initUOM;\n        },\n    },\n    async created() {\n        // this.loadData(this.url);\n    },\n    async mounted() {\n        this.bindData(this.url);\n        /* Initial obj */\n        this.uom = this.initUOM;\n        // this.type = this.initType;\n        // this.$emit('onChange', this.pmOption);\n        // create DropDownList from input HTML element\n        // await this.loadData('', this.supBaseUrl);\n    }\n}\n</script>"],"sourceRoot":"src/components/dropdownlist"}]}