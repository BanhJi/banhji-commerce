{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/InsightNpo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/InsightNpo.vue","mtime":1638499443187},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InsightNpo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA,SAAA,IAAA,QAAA,QAAA;AACA,SAAA,KAAA,QAAA,oCAAA;AACA,OAAA,KAAA,MAAA,oBAAA;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,uDAAA,CAAA;;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,SAAA,EAAA;AAAA,aAAA,8BAAA;AAAA;AAFA,GADA;AAKA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,MAAA,8BAAA,EAAA,KAFA;AAGA,MAAA,aAAA,EAAA,CAHA;AAIA,MAAA,WAAA,EAAA,CAJA;AAKA,MAAA,oBAAA,EAAA,CALA;AAMA,MAAA,OAAA,EAAA,CANA;AAOA,MAAA,SAAA,EAAA,CAPA;AAQA,MAAA,YAAA,EAAA,CARA;AAWA,MAAA,MAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,UAAA,EAAA,YAFA;AAGA,QAAA,IAAA,EAAA,OAHA;AAIA,QAAA,IAAA,EAAA,CACA;AAAA,UAAA,KAAA,EAAA,KAAA;AAAA,UAAA,UAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,KAAA,EAAA,IAAA;AAAA,UAAA,UAAA,EAAA;AAAA,SAFA,EAGA;AAAA,UAAA,KAAA,EAAA,IAAA;AAAA,UAAA,UAAA,EAAA;AAAA,SAHA,EAIA;AAAA,UAAA,KAAA,EAAA,IAAA;AAAA,UAAA,UAAA,EAAA;AAAA,SAJA,CAJA;AAUA;AACA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA;AAZA,OADA,CAXA;AA8BA,MAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA;AAFA,OA9BA;AAkCA;AACA,MAAA,UAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,MAFA;AAGA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OADA,EAOA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,IAAA,EAAA,UAFA;AAGA,QAAA,IAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAHA;AAIA,QAAA,KAAA,EAAA;AAJA,OAPA,CAnCA;AAiDA,MAAA,eAAA,EAAA,CACA,IAAA,CAAA,CAAA,CAAA,KAAA,CADA,EAEA,IAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA,IAAA,CAAA,CAAA,CAAA,KAAA,CAHA,EAIA,IAAA,CAAA,CAAA,CAAA,KAAA,CAJA,EAKA,IAAA,CAAA,CAAA,CAAA,KAAA,CALA,EAMA,IAAA,CAAA,CAAA,CAAA,KAAA,CANA,EAOA,IAAA,CAAA,CAAA,CAAA,KAAA,CAPA,EAQA,IAAA,CAAA,CAAA,CAAA,KAAA,CARA,EASA,IAAA,CAAA,CAAA,CAAA,KAAA,CATA,EAUA,IAAA,CAAA,CAAA,CAAA,KAAA,CAVA,EAWA,IAAA,CAAA,CAAA,CAAA,KAAA,CAXA,EAYA,IAAA,CAAA,CAAA,CAAA,KAAA,CAZA,CAjDA;AA+DA,MAAA,SAAA,EAAA;AACA,QAAA,UAAA,EAAA,aADA;AAEA,QAAA,MAAA,EAAA;AAFA,OA/DA;AAmEA,MAAA,cAAA,EAAA,CACA;AACA,QAAA,GAAA,EAAA,IADA;AAEA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA;AADA;AAHA,OADA,CAnEA;AA4EA;AACA,MAAA,aAAA,EAAA,2BA7EA;AA8EA,MAAA,eAAA,EAAA,6BA9EA;AA+EA,MAAA,cAAA,EAAA;AACA,QAAA,UAAA,EAAA,aADA;AAEA,QAAA,MAAA,EAAA;AAFA,OA/EA;AAmFA,MAAA,gBAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,UAAA,EAAA,GAFA;AAGA,QAAA,IAAA,EAAA,CACA;AACA,UAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SADA,EAMA;AACA,UAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,iBAAA,CADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SANA,EAWA;AACA,UAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,YAAA,CADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAXA,EAgBA;AACA,UAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,WAAA,CADA;AAEA,UAAA,KAAA,EAAA,EAFA;AAGA,UAAA,KAAA,EAAA;AAHA,SAhBA;AAHA,OADA,CAnFA;AA+GA,MAAA,IAAA,EAAA,IAAA,IAAA,GAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CA/GA;AAgHA,MAAA,eAAA,EAAA,CAhHA;AAiHA,MAAA,aAAA,EAAA,IAjHA;AAkHA,MAAA,WAAA,EAAA,EAlHA;AAmHA,MAAA,WAAA,EAAA,EAnHA;AAoHA,MAAA,iBAAA,EAAA,CApHA;AAqHA,MAAA,gBAAA,EAAA,CArHA;AAsHA,MAAA,QAAA,EAAA,CAtHA;AAuHA,MAAA,WAAA,EAAA,CAvHA;AAyHA,MAAA,sBAAA,EAAA,KAzHA;AA0HA,MAAA,kBAAA,EAAA,KA1HA;AA2HA,MAAA,mBAAA,EAAA,KA3HA;AA4HA,MAAA,gBAAA,EAAA,KA5HA;AA6HA,MAAA,uBAAA,EAAA,KA7HA;AA8HA,MAAA,oBAAA,EAAA,KA9HA;AA+HA,MAAA,cAAA,EAAA,CA/HA;AAgIA,MAAA,gBAAA,EAAA,CAhIA;AAiIA,MAAA,eAAA,EAAA,CAjIA;AAkIA,MAAA,sBAAA,EAAA,CAlIA;AAmIA,MAAA,YAAA,EAAA,EAnIA;AAqIA,MAAA,YAAA,EAAA,EArIA;AAsIA,MAAA,qBAAA,EAAA,EAtIA;AAuIA,MAAA,uBAAA,EAAA,EAvIA;AAyIA,MAAA,mBAAA,EAAA,CAzIA;AA0IA,MAAA,kBAAA,EAAA,CA1IA;AA2IA,MAAA,eAAA,EAAA;AA3IA,KAAA;AAAA,GALA;AAkJA,EAAA,OAAA;AAAA,2EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,eAAA,EADA;;AAAA;AAAA;AAAA,qBAEA,KAAA,mCAAA,EAFA;;AAAA;AAAA;AAAA,qBAGA,KAAA,gBAAA,EAHA;;AAAA;AAAA;AAAA,qBAIA,KAAA,kBAAA,EAJA;;AAAA;AAAA;AAAA,qBAKA,KAAA,qBAAA,EALA;;AAAA;AAAA;AAAA,qBAMA,KAAA,yBAAA,EANA;;AAAA;AAAA;AAAA,qBAOA,KAAA,2BAAA,EAPA;;AAAA;AAAA;AAAA,qBAQA,KAAA,4BAAA,EARA;;AAAA;AAAA;AAAA,qBASA,KAAA,4BAAA,EATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlJA;AA6JA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,eAAA,EADA;;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,mCAAA,EAFA;;AAAA;AAAA;AAAA,uBAGA,KAAA,CAAA,gBAAA,EAHA;;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,kBAAA,EAJA;;AAAA;AAAA;AAAA,uBAKA,KAAA,CAAA,qBAAA,EALA;;AAAA;AAAA;AAAA,uBAMA,KAAA,CAAA,yBAAA,EANA;;AAAA;AAAA;AAAA,uBAOA,KAAA,CAAA,2BAAA,EAPA;;AAAA;AAAA;AAAA,uBAQA,KAAA,CAAA,4BAAA,EARA;;AAAA;AAAA;AAAA,uBASA,KAAA,CAAA,4BAAA,EATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,KAXA;AAYA,IAAA,YAZA,wBAYA,KAZA,EAYA,MAZA,EAYA;AACA,aAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA;AACA,KAdA;AAeA,IAAA,sBAfA,kCAeA,KAfA,EAeA,MAfA,EAeA;AACA,aAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAA,MAAA,CAAA;AACA,KAjBA;AAkBA,IAAA,eAlBA,6BAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA,GAAA,oBAAA;AACA,oBAAA,MAAA,CAAA,sBAAA,GAAA,IAAA;AACA,oBAAA,cAAA,CAAA,yBAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,wBAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,KAAA;AACA,wBAAA,MAAA,CAAA,aAAA,GAAA,QAAA,CAAA,aAAA;AACA,wBAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,aAAA;AACA,4BAAA,WAAA,GAAA,QAAA,CAAA,eAAA;AACA,wBAAA,MAAA,CAAA,mBAAA,GAAA,WAAA,CAAA,IAAA;AACA,wBAAA,MAAA,CAAA,eAAA,GAAA,MAAA,CAAA,YAAA,CACA,QAAA,CAAA,WADA,EAEA,QAAA,CAAA,aAFA,CAAA;AAIA,wBAAA,MAAA,CAAA,sBAAA,GAAA,KAAA;AACA;AACA,qBAdA;AAeA,mBApBA,EAoBA,EApBA,CAAA;AAqBA,iBAtBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA,KA1CA;AA2CA,IAAA,mCA3CA,iDA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,mBAAA,GAAA,IAAA;AACA,oBAAA,cAAA,CACA,mCADA,CACA,SADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,mBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,MAAA,CAAA,iBAAA,GAAA,QAAA,CAAA,iBAAA;AACA,wBAAA,MAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,gBAAA;AACA,wBAAA,MAAA,CAAA,WAAA,GAAA,QAAA,CAAA,WAAA;AACA;AACA,qBAVA;AAWA,mBAhBA,EAgBA,EAhBA,CAAA;AAiBA,iBAlBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA,KA/DA;AAgEA,IAAA,gBAhEA,8BAgEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,kBAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CAAA,eAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,kBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,MAAA,CAAA,cAAA,GAAA,QAAA,CAAA,gBAAA,IAAA,CAAA;AACA,wBAAA,MAAA,CAAA,gBAAA,GAAA,QAAA,CAAA,SAAA,IAAA,CAAA;AACA,wBAAA,MAAA,CAAA,eAAA,GAAA,QAAA,CAAA,QAAA,IAAA,CAAA;AACA,wBAAA,MAAA,CAAA,sBAAA,GAAA,QAAA,CAAA,eAAA,IAAA,CAAA;AACA,wBAAA,MAAA,CAAA,aAAA,GAAA,QAAA,CAAA,aAAA;AACA,wBAAA,MAAA,CAAA,YAAA,GAAA,QAAA,CAAA,YAAA,IAAA,EAAA,CARA,CASA;AACA;AACA,qBAZA;AAaA,mBAlBA,EAkBA,EAlBA,CAAA;AAmBA,iBApBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA,KAtFA;AAuFA,IAAA,kBAvFA,gCAuFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,oBAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CAAA,iBAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,oBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,4BAAA,MAAA,GAAA,QAAA,CAAA,QAAA,IAAA,CAAA;AACA,4BAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CAAA,CAAA,QAAA,GAAA,MAAA,GAAA,CAAA;AACA,4BAAA,QAAA,GAAA,QAAA,CACA,MAAA,MAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,SAAA,EAAA,GAAA,CADA,CAAA;AAGA,wBAAA,MAAA,CAAA,MAAA,GAAA,CACA;AACA,0BAAA,KAAA,EAAA,OADA;AAEA,0BAAA,UAAA,EAAA,YAFA;AAGA,0BAAA,IAAA,EAAA,OAHA;AAIA,0BAAA,IAAA,EAAA,QAAA,CAAA,MAAA,IAAA,EAJA;AAKA,0BAAA,MAAA,EAAA;AACA,4BAAA,KAAA,EAAA;AADA;AALA,yBADA,CAAA;AAWA,wBAAA,MAAA,CAAA,eAAA,GAAA,CACA;AACA,0BAAA,GAAA,EAAA,CAAA,QAAA,CAAA,QAAA,IAAA,CAAA,IAAA,QADA;AAEA,0BAAA,IAAA,EAAA;AACA,4BAAA,OAAA,EAAA;AADA,2BAFA;AAKA,0BAAA,cAAA,EAAA;AACA,4BAAA,OAAA,EAAA;AADA,2BALA;AAQA,0BAAA,MAAA,EAAA;AACA,4BAAA,OAAA,EAAA,IADA;AAEA,4BAAA,IAAA,EAAA;AAFA;AARA,yBADA,CAAA;AAeA;AACA,qBApCA;AAqCA,mBA1CA,EA0CA,EA1CA,CAAA;AA2CA,iBA5CA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA,KArIA;AAsIA,IAAA,qBAtIA,mCAsIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,uBAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,uBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,4BAAA,OAAA,GAAA,QAAA,CAAA,WAAA,IAAA,EAAA;AACA,wBAAA,MAAA,CAAA,YAAA,GAAA,OAAA,CAAA,IAAA,IAAA,EAAA;AACA,wBAAA,MAAA,CAAA,qBAAA,GAAA,QAAA,CAAA,cAAA,IAAA,CAAA;AACA,wBAAA,MAAA,CAAA,uBAAA,GAAA,QAAA,CAAA,cAAA,IAAA,CAAA;AACA,4BAAA,WAAA,GAAA,QAAA,CAAA,WAAA,IAAA,EAAA;AACA,4BAAA,SAAA,GAAA,EAAA;AACA,4BAAA,MAAA,GAAA,CACA,SADA,EAEA,SAFA,EAGA,SAHA,EAIA,WAJA,EAKA,SALA,EAMA,SANA,EAOA,SAPA,EAQA,SARA,EASA,SATA,CAAA;AAWA,4BAAA,KAAA,GAAA,CAAA;AACA,wBAAA,WAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,0BAAA,SAAA,CAAA,IAAA,CAAA;AACA,4BAAA,QAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CADA;AAEA,4BAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CACA,CAAA,CAAA,gBADA,EAEA,QAAA,CAAA,aAFA,CAFA;AAMA,4BAAA,KAAA,EAAA,MAAA,CAAA,KAAA;AANA,2BAAA;AAQA,0BAAA,KAAA,IAAA,CAAA;;AACA,8BAAA,KAAA,GAAA,MAAA,CAAA,MAAA,EAAA;AACA,4BAAA,KAAA,GAAA,CAAA;AACA;AACA,yBAbA;AAcA,wBAAA,MAAA,CAAA,gBAAA,GAAA,CACA;AACA,0BAAA,IAAA,EAAA,KADA;AAEA,0BAAA,UAAA,EAAA,GAFA;AAGA,0BAAA,IAAA,EAAA;AAHA,yBADA,CAAA;AAOA,uBA1CA,MA0CA;AACA,wBAAA,MAAA,CAAA,uBAAA,GAAA,KAAA;AACA;AACA,qBA9CA;AA+CA,mBApDA,EAoDA,EApDA,CAAA;AAqDA,iBAtDA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwDA,KA9LA;AA+LA,IAAA,yBA/LA,uCA+LA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CACA,4BADA,CACA,SADA,EAEA,IAFA,CAEA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,4BAAA,OAAA,GAAA,QAAA,CAAA,OAAA,IAAA,EAAA;AACA,4BAAA,OAAA,GAAA,QAAA,CAAA,OAAA,IAAA,EAAA;AACA,4BAAA,MAAA,GAAA,QAAA,CAAA,GAAA,IAAA,CAAA;AACA,4BAAA,SAAA,GAAA,QAAA,CAAA,MAAA,CAAA,CAAA,QAAA,GAAA,MAAA,GAAA,CAAA;AACA,4BAAA,QAAA,GAAA,QAAA,CACA,MAAA,MAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,SAAA,EAAA,GAAA,CADA,CAAA;AAGA,wBAAA,MAAA,CAAA,UAAA,GAAA,CACA;AACA,0BAAA,IAAA,EAAA,MADA;AAEA,0BAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAFA;AAGA,0BAAA,IAAA,EAAA,OAHA;AAIA,0BAAA,KAAA,EAAA;AAJA,yBADA,EAOA;AACA,0BAAA,IAAA,EAAA,MADA;AAEA,0BAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,SAAA,CAFA;AAGA,0BAAA,IAAA,EAAA,OAHA;AAIA,0BAAA,KAAA,EAAA;AAJA,yBAPA,CAAA;AAcA,wBAAA,MAAA,CAAA,cAAA,GAAA,CACA;AACA,0BAAA,GAAA,EAAA,MAAA,GAAA,QADA;AAEA,0BAAA,MAAA,EAAA;AACA,4BAAA,MAAA,EAAA;AADA;AAFA,yBADA,CAAA;AAQA;AACA,qBApCA;AAqCA,mBA1CA,EA0CA,EA1CA,CAAA;AA2CA,iBA5CA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8CA,KA7OA;AA+OA,IAAA,2BA/OA,yCA+OA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,YAAA,GAAA,IAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,cAAA,CAAA,2BAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,MAAA,CAAA,mBAAA,GAAA,QAAA,CAAA,mBAAA;AACA,wBAAA,MAAA,CAAA,kBAAA,GAAA,QAAA,CAAA,kBAAA;AACA,wBAAA,MAAA,CAAA,YAAA,GAAA,KAAA;AACA;AACA,qBAPA;AAQA,mBAZA,EAYA,EAZA,CAAA;AAaA,iBAdA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,KAhQA;AAkQA,IAAA,4BAlQA,0CAkQA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,MAAA,CAAA,IAAA;AACA,oBAAA,MAAA,CAAA,gBAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CAAA,uBAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,gBAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,MAAA,CAAA,eAAA,GAAA,QAAA,CAAA,eAAA,IAAA,CAAA;AACA;AACA,qBANA;AAOA,mBAZA,EAYA,EAZA,CAAA;AAaA,iBAdA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAlRA;AAmRA,IAAA,4BAnRA,0CAmRA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,SAAA,GAAA,EAAA;AACA,oBAAA,SAAA,GAAA,WAAA,OAAA,CAAA,IAAA;AACA,oBAAA,OAAA,CAAA,8BAAA,GAAA,IAAA;AACA,oBAAA,gBAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,0BAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,OAAA,CAAA,8BAAA,GAAA,KAAA;AACA,4BAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA,wBAAA,OAAA,CAAA,aAAA,GAAA,QAAA,CAAA,aAAA,IAAA,CAAA;AACA,wBAAA,OAAA,CAAA,WAAA,GAAA,QAAA,CAAA,aAAA,IAAA,CAAA;AACA,wBAAA,OAAA,CAAA,oBAAA,GAAA,QAAA,CAAA,oBAAA,IAAA,CAAA;AACA,wBAAA,OAAA,CAAA,OAAA,GAAA,QAAA,CAAA,OAAA,IAAA,CAAA;AACA,wBAAA,OAAA,CAAA,SAAA,GAAA,QAAA,CAAA,SAAA,IAAA,CAAA;AACA,wBAAA,OAAA,CAAA,YAAA,GAAA,QAAA,CAAA,WAAA,IAAA,CAAA;AACA,uBATA,MASA;AACA,wBAAA,OAAA,CAAA,8BAAA,GAAA,KAAA;AACA;AACA,qBAbA;AAcA,mBAnBA,EAmBA,EAnBA,CAAA;AAoBA,iBArBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AA1SA,GA7JA;AAycA,EAAA,QAAA,EAAA;AAzcA,CAAA","sourcesContent":["<template>\n  <v-row class=\"\">\n    <v-col class=\"pb-0 pt-4\" sm=\"12\" cols=\"12\">\n      <v-row>\n        <v-col class=\"py-md-0 px-md-2\" sm=\"12\" cols=\"12\">\n          <v-card\n            outlined\n            dense\n            color=\"white\"\n            class=\"pa-4 pb-0 no_border\"\n            min-height=\"360px\"\n          >\n            <v-row>\n              <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                <h3\n                  class=\"font_20\"\n                  :class=\"{ line_28: this.$i18n.locale == 'kh' }\"\n                >\n                  {{ $t(\"fund_receipt\") }}\n                </h3>\n                <p class=\"mb-2\">\n                  {{ $t(\"for_current_year\") }}\n                </p>\n              </v-col>\n            </v-row>\n            <LoadingMe\n              :isLoading=\"showLoadingGraph\"\n              :fullPage=\"false\"\n              :myLoading=\"true\"\n              :type=\"'loading'\"\n            />\n            <chart\n              ref=\"chart\"\n              :legend-position=\"'bottom'\"\n              :legend-visible=\"false\"\n              :tooltip=\"tooltip\"\n              :series=\"seriesLine\"\n              :chartArea=\"chartArea\"\n              :category-axis-categories=\"categories_line\"\n              :value-axis=\"valueAxis_line\"\n              :theme=\"'sass'\"\n            />\n          </v-card>\n        </v-col>\n      </v-row>\n      <v-row class=\"mt-0\">\n        <v-col class=\"py-0 pr-md-2\" sm=\"4\" cols=\"12\">\n          <v-card\n            outlined\n            dense\n            class=\"pa-4 mt-4 no_border\"\n            min-height=\"267px\"\n            color=\"grayBg\"\n          >\n            <h3 class=\"font_20\" :class=\"{ line_34: this.$i18n.locale == 'kh' }\">\n              {{ $t(\"fund_receipts\") }}\n            </h3>\n            <p class=\"mb-0\">\n              {{ $t(\"by_types\") }}\n            </p>\n\n            <LoadingMe\n              :isLoading=\"showLoadingSaleAnalysis\"\n              :fullPage=\"false\"\n              :myLoading=\"true\"\n              :type=\"'loading'\"\n            >\n            </LoadingMe>\n\n            <chart\n              ref=\"chart\"\n              :legend-visible=\"false\"\n              :series-defaults-labels-visible=\"false\"\n              :series=\"saleChannelChart\"\n              :tooltip-template=\"tooltipTemplate\"\n              :chartArea=\"chartAreaChart\"\n              :tooltip-visible=\"true\"\n              :theme=\"'sass'\"\n            />\n          </v-card>\n        </v-col>\n        <v-col class=\"py-0 px-md-2\" sm=\"4\" cols=\"12\">\n          <v-card\n            outlined\n            dense\n            class=\"pa-4 mt-4 no_border\"\n            min-height=\"300px\"\n            color=\"grayBg\"\n          >\n            <v-row>\n              <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                <h3\n                  class=\"font_20\"\n                  :class=\"{ line_34: this.$i18n.locale == 'kh' }\"\n                >\n                  {{ $t(\"fund_receipts\") }}\n                </h3>\n                <p class=\"mb-3\">\n                  {{ $t(\"by_donors\") }}\n                </p>\n                <LoadingMe\n                  :isLoading=\"showLoadingSaleFunel\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"\n                  :type=\"'loading'\"\n                >\n                </LoadingMe>\n                <v-simple-table class=\"add_bg\">\n                  <template>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-left\" style=\"width: 50%\">\n                          <span class=\"niradei_medium font_14 grey--text\">\n                            {{ $t(\"total_contracts\") }}\n                          </span>\n                        </td>\n                        <td class=\"text-right\">\n                          <span class=\"niradei_heavy font_18 dark_grey\">\n                            50,000\n                          </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\" style=\"width: 50%\">\n                          <span class=\"niradei_medium font_14 grey--text\">\n                            {{ $t(\"total_receipts\") }}\n                          </span>\n                        </td>\n                        <td class=\"text-right\">\n                          <span class=\"niradei_heavy font_18 dark_grey\">\n                            25,000\n                          </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\" style=\"width: 50%\">\n                          <span class=\"niradei_medium font_14 grey--text\">\n                            {{ $t(\"receipts\") }}\n                          </span>\n                        </td>\n                        <td class=\"text-right\">\n                          <span class=\"niradei_heavy font_18 dark_grey\">\n                            50%\n                          </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\" style=\"width: 50%\">\n                          <span class=\"niradei_medium font_14 grey--text\">\n                            {{ $t(\"remaining\") }}\n                          </span>\n                        </td>\n                        <td class=\"text-right\">\n                          <span class=\"niradei_heavy font_18 grey--text\">\n                            25,000\n                          </span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </template>\n                </v-simple-table>\n              </v-col>\n            </v-row>\n          </v-card>\n        </v-col>\n        <v-col class=\"py-0 pl-md-2\" sm=\"4\" cols=\"12\">\n          <v-card\n            outlined\n            dense\n            class=\"pa-4 mt-4 no_border\"\n            min-height=\"300\"\n            color=\"grayBg\"\n          >\n            <h3 class=\"font_20\">{{ $t(\"project_ratio\") }}</h3>\n            <p class=\"mb-3\">\n              {{ $t(\"for_current_year\") }}\n            </p>\n             <v-simple-table class=\"add_bg\">\n                <LoadingMe\n                  :isLoading=\"showLoadingServiceProjectRatio\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"\n                  :type=\"'loading'\"\n                />\n                <template>\n                  <tbody>\n                    <tr>\n                      <td class=\"text-leftpy-1\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"total_active_projects\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          000\n                        </span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"text-left\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"average_fund_per_project\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          20,0000\n                        </span>\n                      </td>\n                    </tr>     \n                    <tr>\n                      <td class=\"text-left\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"total_fund\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          10,000\n                        </span>\n                      </td>\n                    </tr>\n                    <!-- <tr>\n                      <td class=\"text-left pl-0 py-1\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"average_revenue_per_customer\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{\n                            numberFormat(avgRevenuePerProject, decimalFormat)\n                          }}\n                        </span>\n                      </td>\n                    </tr> -->\n                 \n                    <tr>\n                      <td class=\"text-left py-1\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"project_delivery\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 grey--text\">\n                          {{ delivered }} %\n                        </span>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td class=\"text-left  py-1\" style=\"width: 50%\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"project_overrun\") }}\n                        </span>\n                      </td>\n                      <td class=\"text-right\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ overrun }} %\n                        </span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport { i18n } from \"@/i18n\";\nimport { Chart } from \"@progress/kendo-charts-vue-wrapper\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst dashboardHandler = require(\"@/scripts/dashboard/customer/handler/dashboardHandler\");\nexport default {\n  components: {\n    chart: Chart,\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  data: () => ({\n    //funnel chart\n    showLoadingServiceProjectRatio: false,\n    bidToWinRatio: 0,\n    openProject: 0,\n    avgRevenuePerProject: 0,\n    overrun: 0,\n    delivered: 0,\n    openProjects: 0,\n\n\n    funnel: [\n      {\n        field: \"value\",\n        colorField: \"chartColor\",\n        name: \"Total\",\n        data: [\n          { value: \"100\", chartColor: \"#c80000\" },\n          { value: \"70\", chartColor: \"#f44336\" },\n          { value: \"50\", chartColor: \"#ED1A3A\" },\n          { value: \"50\", chartColor: \"#ED1A3A\" },\n        ],\n        //     '100', '70', '50'],\n        // color: ['#00b050','#92d050','#212a35'],\n        border: {\n          width: 0,\n        },\n      },\n    ],\n\n    tooltip: {\n      visible: true,\n      template: \"#= series.name #: #= kendo.toString(value, `n2`) #\",\n    },\n    // line chart\n    seriesLine: [\n      {\n        type: \"line\",\n        name: \"Sale\",\n        data: [4, 2, 6, 8, 2, 8, 4, 2, 6, 8, 2, 8],\n        color: \"#4d4848\",\n      },\n      {\n        type: \"line\",\n        name: \"Purchase\",\n        data: [1, 6, 9, 5, 4, 5, 4, 2, 6, 8, 2, 8],\n        color: \"#c80000\",\n      },\n    ],\n    categories_line: [\n      i18n.t(\"jan\"),\n      i18n.t(\"feb\"),\n      i18n.t(\"mar\"),\n      i18n.t(\"apr\"),\n      i18n.t(\"may\"),\n      i18n.t(\"jun\"),\n      i18n.t(\"jul\"),\n      i18n.t(\"aug\"),\n      i18n.t(\"sep\"),\n      i18n.t(\"oct\"),\n      i18n.t(\"nov\"),\n      i18n.t(\"dec\"),\n    ],\n    chartArea: {\n      background: \"transparent\",\n      height: 280,\n    },\n    valueAxis_line: [\n      {\n        max: 1000,\n        // visible: false,\n        labels: {\n          format: \"{0}\",\n        },\n      },\n    ],\n    // pie chart\n    labelTemplate: \"#= category # #= value #%\",\n    tooltipTemplate: \"#= category # : #= value #%\",\n    chartAreaChart: {\n      background: \"transparent\",\n      height: 224,\n    },\n    saleChannelChart: [\n      {\n        type: \"pie\",\n        startAngle: 180,\n        data: [\n          {\n            category: i18n.t(\"credit_card\"),\n            value: 22,\n            color: \"#c80000\",\n          },\n          {\n            category: i18n.t(\"working_capital\"),\n            value: 45,\n            color: \"#f44336\",\n          },\n          {\n            category: i18n.t(\"investment\"),\n            value: 11,\n            color: \"#d85604\",\n          },\n          {\n            category: i18n.t(\"overdraft\"),\n            value: 22,\n            color: \"#e88d14\",\n          },\n        ],\n      },\n    ],\n    asOf: new Date().toISOString().substr(0, 10),\n    expectedBalance: 0,\n    decimalFormat: \"n2\",\n    lastUpdated: \"\",\n    expectedDue: [],\n    customerAsOfCount: 0,\n    overDueThisWeeks: 0,\n    inActive: 0,\n    newCustomer: 0,\n\n    showLoadingExpectedDue: false,\n    showLoadingRevenue: false,\n    showLoadingCustomer: false,\n    showLoadingGraph: false,\n    showLoadingSaleAnalysis: false,\n    showLoadingSaleFunel: false,\n    revenueBalance: 0,\n    revenueCustomers: 0,\n    revenueInvoices: 0,\n    revenueValuePerInvoice: 0,\n    baseCurrency: \"\",\n\n    mostTermUsed: \"\",\n    avgRevenuePerCustomer: \"\",\n    saleOrderInvoiceToRatio: \"\",\n\n    dueThisWeekPExpense: 0,\n    dueThisWeekInvoice: 0,\n    overCreditLimit: 0,\n  }),\n  mounted: async function() {\n    await this.loadExpectedDue();\n    await this.dashboardReceivableOverviewCustomer();\n    await this.dashboardRevenue();\n    await this.dashboardSaleFunel();\n    await this.dashboardSaleAnalysis();\n    await this.dashboardSalePaymentGraph();\n    await this.dashboardReceivableOverview();\n    await this.dashboardSaleOverCreditLimit();\n    await this.dashboardServiceProjectRatio();\n  },\n  methods: {\n    async reloadData() {\n      await this.loadExpectedDue();\n      await this.dashboardReceivableOverviewCustomer();\n      await this.dashboardRevenue();\n      await this.dashboardSaleFunel();\n      await this.dashboardSaleAnalysis();\n      await this.dashboardSalePaymentGraph();\n      await this.dashboardReceivableOverview();\n      await this.dashboardSaleOverCreditLimit();\n      await this.dashboardServiceProjectRatio()\n    },\n    numberFormat(value, format) {\n      return kendo.toString(value, format);\n    },\n    numberFormatNoCurrency(value, format) {\n      return kendo.toString(value, format);\n    },\n    async loadExpectedDue() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf + \"&type=expected_due\";\n          this.showLoadingExpectedDue = true;\n          billingHandler.wcpReceivableOverviewList(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              const response = res.data.data[0];\n              this.expectedDue = response.lines;\n              this.decimalFormat = response.decimalFormat;\n              this.lastUpdated = response.lastUpdatedAt;\n              const paymentTerm = response.paymentTermUsed;\n              this.mostPaymentTermUsed = paymentTerm.name;\n              this.expectedBalance = this.numberFormat(\n                response.openBalance,\n                response.decimalFormat\n              );\n              this.showLoadingExpectedDue = false;\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardReceivableOverviewCustomer() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingCustomer = true;\n          billingHandler\n            .dashboardReceivableOverviewCustomer(strFilter)\n            .then((res) => {\n              if (res.data.statusCode === 200) {\n                this.showLoadingCustomer = false;\n                const response = res.data.data;\n                this.customerAsOfCount = response.customerAsOfCount;\n                this.overDueThisWeeks = response.overDueThisWeeks;\n                this.newCustomer = response.newCustomer;\n              }\n            });\n        }, 10);\n      });\n    },\n    async dashboardRevenue() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingRevenue = true;\n          dashboardHandler.customerRevenue(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingRevenue = false;\n              const response = res.data.data;\n              this.revenueBalance = response.exchangeSubtotal || 0;\n              this.revenueCustomers = response.customers || 0;\n              this.revenueInvoices = response.invoices || 0;\n              this.revenueValuePerInvoice = response.valuePerInvoice || 0;\n              this.decimalFormat = response.decimalFormat;\n              this.baseCurrency = response.baseCurrency || \"\";\n              // window.console.log('response', response)\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardSaleFunel() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingSaleFunel = true;\n          dashboardHandler.customerSaleFunel(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingSaleFunel = false;\n              const response = res.data.data;\n              const maxAxe = response.maxValue || 0;\n              const axeLength = parseInt(maxAxe).toString().length - 1;\n              const axeIncre = parseInt(\n                \"1\" + String(1).padStart(axeLength, \"0\")\n              );\n              this.funnel = [\n                {\n                  field: \"value\",\n                  colorField: \"chartColor\",\n                  name: \"Total\",\n                  data: response.series || [],\n                  border: {\n                    width: 0,\n                  },\n                },\n              ];\n              this.valueAxisFunnel = [\n                {\n                  max: (response.maxValue || 0) + axeIncre,\n                  line: {\n                    visible: false,\n                  },\n                  minorGridLines: {\n                    visible: false,\n                  },\n                  labels: {\n                    visible: true,\n                    font: \"10px\",\n                  },\n                },\n              ];\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardSaleAnalysis() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingSaleAnalysis = true;\n          dashboardHandler.customerSaleAnalysis(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingSaleAnalysis = false;\n              const response = res.data.data;\n              const topTerm = response.topTermUsed || {};\n              this.mostTermUsed = topTerm.name || \"\";\n              this.avgRevenuePerCustomer = response.averageRevenue || 0;\n              this.saleOrderInvoiceToRatio = response.saleOrderRatio || 0;\n              const saleChannel = response.saleChannel || [];\n              let dataChart = [];\n              const colors = [\n                \"#c80000\",\n                \"#642828\",\n                \"#f44336\",\n                \"#522D2DFF\",\n                \"#d85604\",\n                \"#ED1A3A\",\n                \"#7a4141\",\n                \"#e88d14\",\n                \"#f1aa45\",\n              ];\n              let index = 0;\n              saleChannel.forEach((j) => {\n                dataChart.push({\n                  category: i18n.t(j.name),\n                  value: kendo.toString(\n                    j.saleChannelRatio,\n                    response.decimalFormat\n                  ),\n                  color: colors[index],\n                });\n                index += 1;\n                if (index > colors.length) {\n                  index = 0;\n                }\n              });\n              this.saleChannelChart = [\n                {\n                  type: \"pie\",\n                  startAngle: 180,\n                  data: dataChart,\n                },\n              ];\n            } else {\n              this.showLoadingSaleAnalysis = false;\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardSalePaymentGraph() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingGraph = true;\n          dashboardHandler\n            .customerBalanceNPaymentGraph(strFilter)\n            .then((res) => {\n              if (res.data.statusCode === 200) {\n                this.showLoadingGraph = false;\n                const response = res.data.data;\n                const balance = response.balance || [];\n                const payment = response.payment || [];\n                const maxAxe = response.max || 0;\n                const axeLength = parseInt(maxAxe).toString().length - 1;\n                const axeIncre = parseInt(\n                  \"1\" + String(1).padStart(axeLength, \"0\")\n                );\n                this.seriesLine = [\n                  {\n                    type: \"line\",\n                    name: i18n.t(\"balance\"),\n                    data: balance,\n                    color: \"#4d4848\",\n                  },\n                  {\n                    type: \"line\",\n                    name: i18n.t(\"payment\"),\n                    data: payment,\n                    color: \"#c80000\",\n                  },\n                ];\n                this.valueAxis_line = [\n                  {\n                    max: maxAxe + axeIncre,\n                    labels: {\n                      format: \"{0}\",\n                    },\n                  },\n                ];\n              }\n            });\n        }, 10);\n      });\n    },\n\n    async dashboardReceivableOverview() {\n      this.showLoading2 = true;\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          billingHandler.dashboardReceivableOverview(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              const response = res.data.data;\n              this.dueThisWeekPExpense = response.dueThisWeekPExpense;\n              this.dueThisWeekInvoice = response.dueThisWeekInvoice;\n              this.showLoading2 = false;\n            }\n          });\n        }, 10);\n      });\n    },\n\n    async dashboardSaleOverCreditLimit() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingGraph = true;\n          dashboardHandler.customerOverCreditLimit(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingGraph = false;\n              const response = res.data.data;\n              this.overCreditLimit = response.overCreditLimit || 0;\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardServiceProjectRatio() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingServiceProjectRatio = true;\n          dashboardHandler.serviceProjectRatio(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingServiceProjectRatio = false;\n              const response = res.data.data;\n              this.bidToWinRatio = response.bidToWinRatio || 0;\n              this.openProject = response.bidToWinRatio || 0;\n              this.avgRevenuePerProject = response.avgRevenuePerProject || 0;\n              this.overrun = response.overrun || 0;\n              this.delivered = response.delivered || 0;\n              this.openProjects = response.openProject || 0;\n            } else {\n              this.showLoadingServiceProjectRatio = false;\n            }\n          });\n        }, 10);\n      });\n    },\n  },\n  computed: {},\n};\n</script>\n<style scoped>\n.theme--light.v-data-table {\n  background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 38px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n/*.h_kchart.k-chart{*/\n/*    height: 250px !important;*/\n/*}*/\n.k-chart {\n  height: 160px;\n  font-family: \"Niradei-Medium\", serif !important;\n}\n\n.dark_grey {\n  color: #7e7a7a;\n}\n\n.line_16 {\n  line-height: 20px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"],"sourceRoot":"src/views/customers"}]}