{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/paymentOptionHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/paymentOptionHandler.js","mtime":1638499443047},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktYWNjb3VudGluZy13ZWItbW9kdWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKS5kZWZhdWx0OwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIik7Cgp2YXIgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwoKdmFyIGFwaVVybCA9IHJlcXVpcmUoJy4uL2FwaVVybC5qcycpOyAvLyBzYXZlCgoKbW9kdWxlLmV4cG9ydHMuY3JlYXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShkYXRhKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoYXBpVXJsLnNldHRpbmcucGF5bWVudF9vcHRpb25fcG9zdCwgZGF0YSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gR0VUIExJU1QgQlkgREFXSU5FCgoKbW9kdWxlLmV4cG9ydHMuZ2V0QWxsID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgdmFyIHN0ckZpbHRlciwKICAgICAgcmVzcG9uc2UsCiAgICAgIF9hcmdzMiA9IGFyZ3VtZW50czsKICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgd2hpbGUgKDEpIHsKICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgc3RyRmlsdGVyID0gX2FyZ3MyLmxlbmd0aCA+IDAgJiYgX2FyZ3MyWzBdICE9PSB1bmRlZmluZWQgPyBfYXJnczJbMF0gOiAnJzsKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLnNldHRpbmcucGF5bWVudF9vcHRpb25fZ2V0ICsgc3RyRmlsdGVyKTsKCiAgICAgICAgY2FzZSA0OgogICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgIGNhc2UgODoKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gODsKICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0Mi50MCk7CgogICAgICAgIGNhc2UgMTE6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgOF1dKTsKfSkpOyAvLyBHZXQgTGlzdAoKbW9kdWxlLmV4cG9ydHMubGlzdCA9IC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogIHZhciBzdHJGaWx0ZXIsCiAgICAgIHJlc3BvbnNlLAogICAgICBfYXJnczMgPSBhcmd1bWVudHM7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIHN0ckZpbHRlciA9IF9hcmdzMy5sZW5ndGggPiAwICYmIF9hcmdzM1swXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3MzWzBdIDogJyc7CiAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5zZXR0aW5nLnBheW1lbnRfb3B0aW9uX2dldCArIHN0ckZpbHRlcik7CgogICAgICAgIGNhc2UgNDoKICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICBjYXNlIDg6CiAgICAgICAgICBfY29udGV4dDMucHJldiA9IDg7CiAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDMudDApOwoKICAgICAgICBjYXNlIDExOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDhdXSk7Cn0pKTsgLy8gRGV0YWlsCgptb2R1bGUuZXhwb3J0cy5kZXRhaWwgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICB2YXIgc3RyRmlsdGVyLAogICAgICByZXNwb25zZSwKICAgICAgX2FyZ3M0ID0gYXJndW1lbnRzOwogIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBzdHJGaWx0ZXIgPSBfYXJnczQubGVuZ3RoID4gMCAmJiBfYXJnczRbMF0gIT09IHVuZGVmaW5lZCA/IF9hcmdzNFswXSA6ICcnOwogICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuc2V0dGluZy5wYXltZW50X29wdGlvbl9kZXRhaWwgKyBzdHJGaWx0ZXIpOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgY2FzZSA4OgogICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA4OwogICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgY2FzZSAxMToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCA4XV0pOwp9KSk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/paymentOptionHandler.js"],"names":["axios","require","apiUrl","module","exports","create","data","post","setting","payment_option_post","response","window","console","error","getAll","strFilter","get","payment_option_get","list","detail","payment_option_detail"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAAtB,C,CAEA;;;AACAE,MAAM,CAACC,OAAP,CAAeC,MAAf;AAAA,qEAAwB,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEON,KAAK,CAACO,IAAN,CAAWL,MAAM,CAACM,OAAP,CAAeC,mBAA1B,EAA+CH,IAA/C,CAFP;;AAAA;AAEVI,YAAAA,QAFU;AAAA,6CAGTA,QAHS;;AAAA;AAAA;AAAA;AAKhBC,YAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CASA;;;AACAV,MAAM,CAACC,OAAP,CAAeU,MAAf,wEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,SAAP,8DAAmB,EAAnB;AAAA;AAAA;AAAA,iBAEOf,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACM,OAAP,CAAeS,kBAAf,GAAoCF,SAA9C,CAFP;;AAAA;AAEVL,UAAAA,QAFU;AAAA,4CAITA,QAJS;;AAAA;AAAA;AAAA;AAMhBC,UAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,G,CAUA;;AACAV,MAAM,CAACC,OAAP,CAAec,IAAf,wEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBH,UAAAA,SAAhB,8DAA4B,EAA5B;AAAA;AAAA;AAAA,iBAESf,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACM,OAAP,CAAeS,kBAAf,GAAoCF,SAA9C,CAFT;;AAAA;AAERL,UAAAA,QAFQ;AAAA,4CAIPA,QAJO;;AAAA;AAAA;AAAA;AAMdC,UAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB,G,CAUA;;AACAV,MAAM,CAACC,OAAP,CAAee,MAAf,wEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBJ,UAAAA,SAAhB,8DAA4B,EAA5B;AAAA;AAAA;AAAA,iBAEOf,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACM,OAAP,CAAeY,qBAAf,GAAuCL,SAAjD,CAFP;;AAAA;AAEVL,UAAAA,QAFU;AAAA,4CAITA,QAJS;;AAAA;AAAA;AAAA;AAMhBC,UAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["const axios = require('axios');\nconst apiUrl = require('../apiUrl.js');\n\n// save\nmodule.exports.create = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.setting.payment_option_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// GET LIST BY DAWINE\nmodule.exports.getAll = async (strFilter = '') => {\n    try {\n        const response = await axios.get(apiUrl.setting.payment_option_get + strFilter);\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// Get List\nmodule.exports.list = async function (strFilter = '') {\n    try {\n        const response = await axios.get(apiUrl.setting.payment_option_get + strFilter)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// Detail\nmodule.exports.detail = async function (strFilter = '') {\n    try {\n        const response = await axios.get(apiUrl.setting.payment_option_detail + strFilter)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}"]}]}