{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/store/modules/segments.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/store/modules/segments.js","mtime":1638499443072},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWFjY291bnRpbmctd2ViLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKCnZhciBzZWdtZW50SGFuZGxlciA9IHJlcXVpcmUoJ0Avc2NyaXB0cy9zZWdtZW50SGFuZGxlcicpOyAvLyBpbml0aWFsIHN0YXRlCgoKdmFyIHN0YXRlID0gZnVuY3Rpb24gc3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIGxpc3Q6IFtdLAogICAgaXNMb2FkZWQ6IGZhbHNlCiAgfTsKfTsgLy8gZ2V0dGVycwoKCnZhciBnZXR0ZXJzID0ge307IC8vIGFjdGlvbnMKCnZhciBhY3Rpb25zID0gewogIGdldExpc3Q6IGZ1bmN0aW9uIGdldExpc3QoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLCBjb21taXQgPSBfcmVmLmNvbW1pdDsKCiAgICAgICAgICAgICAgaWYgKHN0YXRlLmlzTG9hZGVkKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHNlZ21lbnRIYW5kbGVyLmdldEFsbCgpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBjb21taXQoInNldExpc3QiLCByZXNwb25zZS5kYXRhLmRhdGEpOwogICAgICAgICAgICAgIGNvbW1pdCgic2V0TG9hZGVkIiwgdHJ1ZSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgc3RhdGUubGlzdCk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBhZGRTZWdtZW50czogZnVuY3Rpb24gYWRkU2VnbWVudHMoX3JlZjIsIGxpc3QpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICBjb21taXQoInNldExpc3QiLCBsaXN0KTsKICAgIGNvbW1pdCgic2V0TG9hZGVkIiwgdHJ1ZSk7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0TGlzdDogZnVuY3Rpb24gc2V0TGlzdChzdGF0ZSwgbGlzdCkgewogICAgc3RhdGUubGlzdCA9IGxpc3Q7CiAgfSwKICBzZXRMb2FkZWQ6IGZ1bmN0aW9uIHNldExvYWRlZChzdGF0ZSwgc3RhdHVzKSB7CiAgICBzdGF0ZS5pc0xvYWRlZCA9IHN0YXR1czsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBnZXR0ZXJzOiBnZXR0ZXJzLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMKfTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/store/modules/segments.js"],"names":["segmentHandler","require","state","list","isLoaded","getters","actions","getList","commit","getAll","response","data","addSegments","mutations","setList","setLoaded","status","namespaced"],"mappings":";;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,0BAAD,CAA9B,C,CAEA;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,QAAQ,EAAE;AAFO,GAAP;AAAA,CAAd,C,CAKA;;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACNC,EAAAA,OADM,yBACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBL,cAAAA,KAAiB,QAAjBA,KAAiB,EAAVM,MAAU,QAAVA,MAAU;;AAAA,kBAC1BN,KAAK,CAACE,QADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAELJ,cAAc,CAACS,MAAf,EAFK;;AAAA;AAEtBC,cAAAA,QAFsB;AAG1BF,cAAAA,MAAM,CAAC,SAAD,EAAYE,QAAQ,CAACC,IAAT,CAAcA,IAA1B,CAAN;AACAH,cAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;;AAJ0B;AAAA,+CAOvBN,KAAK,CAACC,IAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjC,GATW;AAUZS,EAAAA,WAVY,8BAUYT,IAVZ,EAUkB;AAAA,QAAhBK,MAAgB,SAAhBA,MAAgB;AAC1BA,IAAAA,MAAM,CAAC,SAAD,EAAYL,IAAZ,CAAN;AACAK,IAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACH;AAbW,CAAhB,C,CAgBA;;AACA,IAAMK,SAAS,GAAG;AACdC,EAAAA,OADc,mBACLZ,KADK,EACEC,IADF,EACQ;AAClBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,GAHa;AAIdY,EAAAA,SAJc,qBAIHb,KAJG,EAIIc,MAJJ,EAIY;AACtBd,IAAAA,KAAK,CAACE,QAAN,GAAiBY,MAAjB;AACH;AANa,CAAlB;AASA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbf,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA,OAJa;AAKbO,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["const segmentHandler = require('@/scripts/segmentHandler');\n\n// initial state\nconst state = () => ({\n    list: [],\n    isLoaded: false,\n})\n\n// getters\nconst getters = {}\n\n// actions\nconst actions = {\n    async getList ({ state, commit }) {\n        if(!state.isLoaded){\n            let response = await segmentHandler.getAll();\n            commit(\"setList\", response.data.data);\n            commit(\"setLoaded\", true);\n        }\n\n        return state.list;\n    },\n    addSegments({ commit }, list) {\n        commit(\"setList\", list);\n        commit(\"setLoaded\", true);\n    },\n}\n\n// mutations\nconst mutations = {\n    setList (state, list) {\n        state.list = list\n    },\n    setLoaded (state, status) {\n        state.isLoaded = status\n    },\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}