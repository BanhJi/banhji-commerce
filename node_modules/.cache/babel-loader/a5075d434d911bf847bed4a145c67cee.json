{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Finalize.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Finalize.vue","mtime":1638499443261},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Finalize.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row>\n                <v-col sm=\"8\" cols=\"12\" class=\"pb-0\">\n                    <h3 class=\"text-uppercase\">{{$t('finalize')}}</h3>\n                    <p>{{$t('finalize_payroll_desc')}}</p>\n                </v-col>\n                <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                \n                    <kendo-datasource ref=\"dataSourcePayDay\"\n                        :data=\"payDates\"/>\n                    <kendo-grid id=\"gridPayDay\" class=\"grid-function\"\n                        :data-source-ref=\"'dataSourcePayDay'\"\n                        :editable=\"true\"\n                        :scrollable-virtual=\"true\">\n                        <kendo-grid-column\n                            :title=\"$t('No.')\"\n                            :width=\"70\"\n                            readonly\n                            :template=\"rowNumberTmpl\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :field=\"'payDate'\"\n                            :title=\"$t('pay_date')\"\n                            :width=\"120\"\n                            :template=\"'<span>#= kendo.toString(new Date(payDate), `dd-MM-yyyy`)#</span>'\"\n                            :editor=\"ServiceDateEditor\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                         <kendo-grid-column\n                            :width=\"100\"\n                            :command=\"{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus' }\"\n                            :title=\"$t('action')\"\n                            :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"\n                            :attributes=\"{style: 'text-align: center'}\"/>\n                    </kendo-grid>\n                    <v-row>\n                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                            <v-btn\n                                color=\"primary\"\n                                class=\"float-left btn_plus mr-2\"\n                                @click=\"addRow\">\n                                <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\" class=\"mt-1\">\n            <v-simple-table class=\"attachment_table\">\n                <template v-slot:default>\n                    <thead>\n                        <tr>\n                            <th>{{$t('sl_no')}} </th>\n                            <th>{{$t('current_month')}} </th>\n                            <th>{{$t('previous_month')}} </th>\n                            <th>{{$t('variance')}} </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Month</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.monthOf }}</td>\n                            <td style=\"text-align: right;\">{{ payrollPrevious.monthOf}}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Number of Employee</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.totalEmployee }}</td>\n                            <td style=\"text-align: right;\">{{ payrollPrevious.totalEmployee }}</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.totalEmployee - payrollPrevious.totalEmployee }}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Gross Salary</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalGross)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalGross)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalGross - payrollPrevious.totalGross)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Deduction</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalDeduction)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalDeduction)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalDeduction - payrollPrevious.totalDeduction)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Benefits</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalBenefits) }}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollPrevious.totalBenefits) }}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalBenefits - payrollPrevious.totalBenefits) }}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Tax Payment</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxPaymentUS)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalTaxPaymentUS)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxPaymentUS - payrollPrevious.totalTaxPaymentUS)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Tax Benefit</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxBenefit)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalTaxBenefit)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxBenefit - payrollPrevious.totalTaxBenefit)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Net Salary</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalNetSalary)}}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollPrevious.totalNetSalary)}}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalNetSalary - payrollPrevious.totalNetSalary)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Net Pay</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalNetPay)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalNetPay)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalNetPay - payrollPrevious.totalNetPay)}}</td>\n                        </tr>\n                        <!-- <tr>\n                            <td></td>\n                            <td>Download Salary Register</td>\n                            <td>Download Salary Register</td>\n                            <td>\n                                <v-btn width=\"160\" color=\"primary\" @click=\"downloadPayslip\"\n                                    class=\" white--text float-right text-capitalize ml-5\">\n                                    {{ $t('download_payslip') }}\n                                </v-btn>\n                            </td>\n                        </tr> -->\n                    </tbody>\n                </template>\n            </v-simple-table>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\" type=\"loading\"/>\n    </v-row>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    import Helper from \"@/helper.js\";\n    import {JournalModel,\n    JournalEntryModel,\n    AccountModel,\n\tCurrencyModel,} from \"@/scripts/model/AppModels\";\n    import  jsPDF  from \"jspdf\";\n    const $ = require(\"jquery\")\n    const { EntityType, } = require(\"@/scripts/default_setup/Collections\");\n    const settingsHandler = require(\"@/scripts/settingsHandler\")\n    const payrollHandler = require(\"@/scripts/payrollHandler\")\n    const accountHandler = require(\"@/scripts/handler/accounting/account\");\n    const cookieJS = require(\"@/cookie.js\");\n    const cookie = cookieJS.getCookie();\n    export default {\n        props:['propFinalize'],\n        data: () =>({\n            journal: new JournalModel(),\n            journal_date: \"\",\n            dialogm: false,\n            showLoading: true,\n            payrollFinal: {\n                monthOf: '',\n                totalEmployee: 0,\n                totalGross: 0,\n                totalDeduction: 0,\n                totalBenefits: 0,\n                totalTaxPaymentUS: 0,\n                totalTaxBenefit: 0,\n                totalNetSalary: 0,\n                totalNetPay: 0,\n                taxBenefit: 0,\n            },\n            payrollPrevious: {\n                monthOf: '',\n                totalEmployee: 0,\n                totalGross: 0,\n                totalDeduction: 0,\n                totalBenefits: 0,\n                totalTaxBenefit: 0,\n                totalTaxPaymentUS: 0,\n                totalNetSalary: 0,\n                totalNetPay: 0,\n                taxBenefit: 0,\n            },\n            account: {},\n            journal_data: [],\n            payroll_data: {},\n            journalLine: [],\n            taxPayble: {},\n            accountBenefit: {},\n            accBenefit: {},\n            resultJournals: {},\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            payDates: [],\n            suffix: {},\n            prefix_format: ''\n        }),\n        components: {\n            LoadingMe: () => import(`@/components/Loading`)\n        },\n        methods:{\n            numberFormat(value){\n                return kendo.toString( kendo.parseFloat(value),\"n2\")\n            },\n            loadPayrollList(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true;\n                        payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                this.showLoading = true\n                                const resultPay = res.data.data[0]\n                                const prefix = resultPay.payNumber\n                                // window.console.log('resultPay', resultPay)\n                                const lastNumber = this.zeroPad(parseInt(0), prefix.format)\n                                this.prefix_format = (prefix.abbr + prefix.numberSeparator + prefix.structure + prefix.numberSeparator + lastNumber + '@' + prefix.sequcencing)\n                                let monthOF =  kendo.toString(new Date(new Date(resultPay.monthOf).setMonth(new Date(resultPay.monthOf).getMonth() - 1)),'yyyy-MM-dd')\n                                this.loadPayrollPrevious(monthOF)\n                                this.loadPayrollItem(resultPay)\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            loadPayrollItem(result){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        payrollHandler.getPayrollItem(result.id).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let resutl_item = res.data.data\n                                this.payrollFinal = result\n                                this.payrolls = resutl_item\n                                this.loadSuccess(res.data.statusCode)\n                                this.loadAccount()\n                                this.showLoading = false\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            loadPayrollPrevious(monthOF){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getPayrollPrevious(monthOF).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.payrollPrevious = result[0]\n                                }\n                                this.changMonthOf = false\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            loadPrefixes() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        settingsHandler.getPrefixes().then(res => {\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.prefixList = result.filter(p => p.type =='pay_slip')\n                                    this.prefix = this.prefixList[0]\n                                    this.payNumber = this.prefix\n                                }\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            zeroPad(num, places) {\n                return String(num).padStart(places, '0')\n            },\n            result(){\n                let dataResult =    this.payrolls;\n                let currency   =    this.payrollFinal.currency;\n                let monthOf    =    this.payrollFinal.monthOf;\n                let month_of   =    kendo.toString(new Date(monthOf), \"y\")\n                let segmentAR = []\n                dataResult.forEach(o=>{\n                    const segment           = o.segment\n                    segment.forEach(n=> {\n                        n['currency']               = currency,\n                        n['netPay']                 = (o.netPay * n.percentage)/100,\n                        n['taxBenefit']             = (o.taxBenefit * n.percentage)/100,\n                        n['taxSalaryUS']            = (o.taxSalaryUS * n.percentage)/100,\n                        n['totalBenefit']           = (o.totalBenefit * n.percentage)/100,\n                        n['payrollLiabilitie']      = o.payrollLiabilitie,\n                        n['taxBenefitExchange']     = (o.taxBenefitExchange * n.percentage)/100,\n                        n['salaryExchange']         = (o.salaryExchange * n.percentage)/100,\n                        n['taxSalary']              = (o.taxSalary * n.percentage)/100,\n                        n['benefitExchange']        = (o.benefitExchange * n.percentage)/100,\n                        segmentAR.push(n)\n                    })\n                })\n                let calculateSalary     = segmentAR.map(i=>{\n                    return {\n                        salary:             i.Salary,\n                        percentage:         i.percentage,\n                        netPay :            i.netPay,\n                        taxBenefit:         i.taxBenefit,\n                        taxSalary:          i.taxSalaryUS,\n                        totalBenefit:       i.totalBenefit,\n                        taxBenefitExchange: i.taxBenefitExchange,\n                        salaryExchange:     i.salaryExchange,\n                        benefitExchange:    i.taxBenefitExchange,\n                        component:          i.component,\n                        salaryAccount:      i.salaryAccount,\n                        currency:           i.currency,\n                        payrollLiabilitie:  i.payrollLiabilitie,\n                    }\n                })\n                let helper = {}\n                let resultSegment   = calculateSalary.reduce(function(r, o){\n                    let key = o.component.id + '-' + o.component.name;\n                    if(!helper[key]) {\n                        helper[key] = Object.assign({}, o); // create a copy of o\n                        r.push(helper[key]);\n                    } else {\n                        helper[key].percentage          += parseFloat(o.percentage);\n                        helper[key].salary              += parseFloat(o.salary);\n                        helper[key].netPay              += parseFloat(o.netPay);\n                        helper[key].taxBenefit          += parseFloat(o.taxBenefit);\n                        helper[key].taxSalary           += parseFloat(o.taxSalary);\n                        helper[key].totalBenefit        += parseFloat(o.totalBenefit);\n                        helper[key].taxBenefitExchange  += parseFloat(o.taxBenefitExchange),\n                        helper[key].salaryExchange      += parseFloat(o.salaryExchange),\n                        helper[key].benefitExchange     += parseFloat(o.benefitExchange)\n                    }\n                    return r;\n                },[]);\n                let journals        =[];\n                let taxPayble       = this.taxPayble\n                let accountBenefit  = this.accountBenefit\n                let accBenefit      = this.accBenefit\n                resultSegment.forEach(function(p){\n                    journals.push(\n                        new JournalEntryModel({\n                            description:          p.salaryAccount.name + ' for '+ month_of,\n                            account:              new AccountModel(p.salaryAccount),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.salary, // dr\n                            class_1_uuid:         p.component.id          \n                        }),\n                        new JournalEntryModel({\n                            description:          p.payrollLiabilitie.name + ' for '+ month_of,\n                            account:              new AccountModel(p.payrollLiabilitie),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.netPay * -1, // cr\n                            class_1_uuid:         p.component.id\n                        }),\n                        new JournalEntryModel({\n                            description:          taxPayble.name + ' for '+ month_of,\n                            account:              new AccountModel(taxPayble),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.taxSalary * -1, // cr,\n                            class_1_uuid:         p.component.id\n                        }),\n                    )\n                    if(p.taxBenefit > 0 && p.totalBenefit > 0){\n                        journals.push(\n                            new JournalEntryModel({\n                                description:          accountBenefit.name + ' for '+ month_of,\n                                account:              new AccountModel(accountBenefit),\n                                currency:             new CurrencyModel(p.currency),\n                                exchange_rate:        1,\n                                amount:               p.totalBenefit, // dr,\n                                class_1_uuid:         p.component.id\n                            }),\n                            new JournalEntryModel({\n                                description:          accBenefit.name + ' for '+ month_of,\n                                account:              new AccountModel(accBenefit),\n                                exchange_rate:        1,\n                                currency:             new CurrencyModel(p.currency),\n                                amount:               p.taxBenefit * -1, // cr,\n                                class_1_uuid:         p.component.id\n                            }),\n                        )\n                    }\n                })\n                this.payrollAccount = resultSegment\n                this.journalLine = journals\n                if(this.payrollAccount && this.journalLine){\n                    this.calculateJournal()\n                }\n            },\n            saveFinalize(){\n                let ds = this.$refs.dataSourcePayDay.kendoWidget();\n                let dataSource = ds.data().map(index=>{\n                    return {\n                        payDate:           kendo.toString(new Date(index.payDate),\"yyyy-MM-dd\")\n                    }\n                })\n                if(this.journal_data.length > 0){\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve('resolved');\n                            let data ={\n                                id:                       this.$route.params.id,\n                                status:                   1, \n                                final:                    'done',\n                                monthOf:                  this.payrollFinal.monthOf,\n                                year:                     kendo.toString(new Date(this.payrollFinal.monthOf),'yyyy'),\n                                created:                  this.payrollFinal.created,\n                                date:                     this.payrollFinal.date,\n                                type:                     this.payrollFinal.type,\n                                currency:                 this.payrollFinal.currency,\n                                exchangeRate:             this.payrollFinal.exchangeRate,\n                                payrollReferenceNumber:   this.payrollFinal.referenceNumber,\n                                payrollList:              this.payrolls,\n                                lastNumber:               this.lastNumber,\n                                payslip:                  {\n                                    abbr:                 this.prefix.abbr,\n                                    structure:            this.prefix.structure,\n                                    date:                 this.payrollFinal.monthOf,\n                                    type:                 this.prefix.type,\n                                    format:               this.prefix.format,\n                                    numberSeparator:      this.prefix.numberSeparator,\n                                    pkId:                 \"par-\",\n                                    suffix:               this.prefix.suffix\n                                },\n                                paymentSchedule:          dataSource,\n                                loggedUser:               this.loggedUser,\n                                raw_journal:              this.journal_data\n                            }\n                            this.showLoading = true;\n                            // window.console.log(111,data)\n                            payrollHandler.createPayroll(data).then(response => {\n                                this.showLoading = true\n                                if (response.data.statusCode === 201) {\n                                    this.$snotify.success('Success')\n                                    this.loadSuccess(response.data.statusCode)\n                                    window.history.go(-1)\n                                }\n                            }).catch(e => {\n                                this.$snotify.error('Something went wrong')\n                                this.errors.push(e)\n                            })\n                        }, 300);\n                    })   \n                }else{\n                    this.$snotify.error('Something went wrong')\n                }\n            },\n            loadSuccess(data){\n                this.$emit('headline',data)\n            },\n            downloadPayslip(){\n                var doc = new jsPDF();\n                var specialElementHandlers = {\n                    '#pdfPay': function(){\n                    return true;\n                    },\n                    '.controls': function(){\n                    return true;\n                    }\n                };\n                doc.fromHTML($('.pdfPay').get(0), 15, 15, {\n                    'width': 170, \n                    'elementHandlers': specialElementHandlers\n                });\n\n                doc.save('Generated.pdf');\n            },\n            calculateJournal(){\n                let payrollAcc      =  this.payrollAccount\n                let journals        = this.journalLine\n                let payrollFinal    = this.payrollFinal\n                let prefix_format   = this.prefix_format\n                let journal_        = []\n                let journalRe       = []\n                payrollAcc.forEach(function(pa){\n                    let line = journals.filter(r => r.class_1_uuid === pa.component.id ) \n                    journal_.push(new JournalModel({\n                        description:                  pa.payrollLiabilitie.name ? pa.payrollLiabilitie.name: 'Payroll & Employee Benefit Liabilities',\n                        number:                       payrollFinal.referenceNumber,\n                        journal_date:                 Helper.toISODate(new Date()),\n                        month_of:                     Helper.toISODate(new Date(payrollFinal.monthOf).toISOString().substr(0, 7)),//'2021-02-01',   \n                        journal_type:                 EntityType.AUTO_JOURNAL,\n                        transaction_type:             'Payroll',\n                        referral_transaction_uuid:    payrollFinal.id,\n                        journal_entries:              line,\n                        segment_uuid:                 pa.component.id ? pa.component.id: '',\n                        location_uuid:                payrollFinal.location.id ? payrollFinal.location.id: '',\n                        prefix_format:                prefix_format //\"PA-2111-00000@Year\"\n                    }))\n                })\n                let journalUuid     = ''\n                let created_date    = ''\n                let oldJournal      = []\n                journal_.forEach(index =>{\n                    if(this.resultJournals.length > 0){\n                        let resultJournals = this.resultJournals\n                        oldJournal = resultJournals.filter(i => i.segment_uuid === index.segment_uuid)\n                        if(oldJournal.length > 0){\n                            journalUuid     = oldJournal[0].uuid\n                            created_date    = oldJournal[0].created_date\n                        }\n                    }\n                    journalRe.push(new JournalModel({\n                        description:                index.description,                 \n                        number:                     index.number,     \n                        journal_date:               index.journal_date,        \n                        month_of:                   index.month_of,                    \n                        journal_type:               index.journal_type,               \n                        transaction_type:           index.transaction_type,            \n                        referral_transaction_uuid:  index.referral_transaction_uuid,  \n                        journal_entries:            index.journal_entries,     \n                        segment_uuid:               index.segment_uuid,  \n                        location_uuid:              index.location_uuid,\n                        prefix_format:              index.prefix_format,\n                        created_date:               created_date, \n                        uuid:                       journalUuid\n                    }))\n                })\n                this.journal_data = journalRe\n                // window.console.log('journal_data', this.journal_data)\n            },\n            loadAccount(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        accountHandler.getAll().then(res => {\n                            this.showLoading = true;\n                            if(res){\n                                this.showLoading = false;\n                                let acountList = res.data\n                                let salaryExpence = acountList.filter(t => t.number == '634010');\n                                this.salaryExpence = salaryExpence[0]\n\n                                let taxPayble = acountList.filter(t => t.number == '221020');\n                                this.taxPayble = taxPayble[0]\n                                let accountBenefit = acountList.filter(t => t.number == '634020');\n                                this.accountBenefit = accountBenefit[0]\n\n                                let accBenefit = acountList.filter(t => t.number == '221040');\n                                this.accBenefit = accBenefit[0]\n\n                                let benefitPayble = acountList.filter(t => t.number == '221040');\n                                this.benefitPayble = benefitPayble[0]\n                                this.result()\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            async goBack(){\n                window.history.go(-1)\n            },\n            async loadJournal(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        payrollHandler.getPayrollJournal(this.$route.params.id).then(res => {\n                            if (res.statusCode === 200) {\n                                this.resultJournals =  res.data\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            ServiceDateEditor(container, options) {\n                kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                    .appendTo(container)\n                    .kendoDatePicker();\n            },\n            rowNumberTmpl(dataItem) {\n                var ds = this.$refs.dataSourcePayDay.kendoWidget(),\n                    index = ds.indexOf(dataItem);\n                return index + 1;\n            },\n            addRow() {\n                let ds = this.$refs.dataSourcePayDay.kendoWidget(),\n                    total = ds.total();\n                ds.insert(total,{\n                    payDate: new Date()\n                });\n            },\n            removeRow(e) {\n                e.preventDefault();\n                const grid = kendo.jQuery(\"#gridPayDay\").data(\"kendoGrid\"),\n                    dataSource = grid.dataSource,\n                    dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n                if (dataSource.total() > 1) {\n                    dataSource.remove(dataItem);\n                }\n            }\n        },\n        async mounted(){\n            await this.addRow()\n            await this.loadPayrollList()\n            await this.loadPrefixes()\n            await this.loadJournal()\n        },\n        watch: {\n            propFinalize() {\n                if (this.propFinalize !== undefined) {\n                    this.loadPayrollList()\n                    this.loadPrefixes()\n                    this.loadAccount()\n                }\n            }\n        }\n    }\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"],"sourceRoot":"src/views/payroll/payroll_run"}]}