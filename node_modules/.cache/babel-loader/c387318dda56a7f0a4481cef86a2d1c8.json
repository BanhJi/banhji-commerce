{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/account/AccountGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/account/AccountGroup.vue","mtime":1638499443086},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AccountGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row class=\"mt-0\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\" >\n            <h2 class=\"mb-0 font_20\">{{$t('account_group')}}</h2>\n            <!-- <v-dialog v-model=\"dialogm2\" max-width=\"700px\">\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn class=\"white--text float-right text-capitalize\" color=\"primary\" v-on=\"on\" @click=\"onNewClick\">\n                        {{$t('create_new')}}\n                    </v-btn>\n                </template>\n                <v-card>\n                    <v-card-title>{{$t('account_group')}}</v-card-title>\n                    <v-icon class=\"btn_close\" @click=\"dialogm2 = false\">close</v-icon>\n                    <v-divider/>\n                    <v-card-text style=\"height: 240px; background-color: #EDF1F5; color: #333;\">\n                        <v-row>\n                            <v-col sm=\"6\" cols=\"12\" class=\"\">\n                                <label class=\"label\">{{$t('account_type')}}</label>\n                                <p class=\"text_tip\">The nature of account and use for reporting purpose</p>\n                                <v-select class=\" mb-5\"\n                                          id=\"acc_type_selector\"\n                                          :items=\"account_type_datasource\"\n                                          item-text=\"name\"\n                                          item-value=\"selected_acctount_type\"\n                                          v-model=\"selected_acctount_type\"\n                                          outlined\n                                          return-object\n                                          @change=\"OnAccountTypeSelectedChange()\"\n                                >\n                                </v-select>\n                                <label class=\"label\">{{$t('account_group_name')}}</label>\n                                <p class=\"text_tip\">A short name of the account group</p>\n                                <v-text-field class=\"\"\n                                              outlined\n                                              tage=\"Account Group Name\"\n                                              placeholder=\"\"\n                                              v-model=\"account_group.name\"/>\n                            </v-col>\n                            <v-col sm=\"6\" cols=\"12\" class=\"\">\n                                <label class=\"label\">{{$t('local_name_optional')}}</label>\n                                <p class=\"text_tip\">{{$t('local_name_of_the_account_group')}}</p>\n                                <v-textarea class=\"\"\n                                            label=\"\"\n                                            outlined\n                                            rows=\"5\"\n                                            v-model=\"account_group.local_name\">\n\n                                </v-textarea>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                    <v-divider/>\n                    <v-card-actions class=\"function_footer\">\n                        <v-btn class=\"btn_cancel float-left\" @click=\"dialogm2 = false\">{{$t('cancel')}}</v-btn>\n                        <v-btn class=\"btn_save_new float-right\" @click.native=\"OnSaveClick(true,option)\">{{$t('save_new')}}\n                        </v-btn>\n                        <v-btn class=\"btn_save_close float-right\" @click.native=\"OnSaveClick(false,option)\">{{$t('save_close')}}\n                        </v-btn>\n                    </v-card-actions>\n\n                </v-card>\n            </v-dialog> -->\n\n            <p class=\"mb-3\">{{$t('account_group_desc')}}</p>\n            <v-data-table class=\"attachment_table\"\n                          :headers=\"headers\"\n                          :items=\"accountGroupList\"\n                          @click:row=\"onEditClick\"\n                          sort-by=\"code\">\n                <!-- <template v-slot:[`item.actions`]>\n                    <v-btn class=\"btn_edit_setting\"  @click=\"dialogm2=true\">\n                        <v-icon class=\"white--text\" size=\"14\">mdi-pen</v-icon>\n                        <span class=\"capitalize ml-1 white--text font_14\">{{$t('edit')}}</span>\n                    </v-btn>\n                </template> -->\n                \n                 <template slot=\"no-data\">\n                    <LoadingMe \n                        :isLoading =\"compeletLoading\" \n                        :fullPage  =\"isFullpage\" \n                        :myLoading =\"true\"/>\n                </template>\n\n                <!--                <template v-slot:no-data>-->\n                <!--                    <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>-->\n                <!--                </template>-->\n            \n            </v-data-table>\n        </v-col>\n        <v-snackbar\n            v-model=\"snackbar\"\n            :bottom=\"y === 'bottom'\"\n            :color=\"color\"\n            :left=\"x === 'left'\"\n            :right=\"x === 'right'\"\n            :timeout=\"timeout\"\n            :top=\"y === 'top'\"\n        >\n            {{ textStatus }}\n        </v-snackbar>\n    </v-row>\n</template>\n\n<script>\n    const axios = require('axios')\n    const apiUrl = require('@/apiUrl.js')\n    \n    /* Cookie */\n    const cookieJS = require(\"@/cookie.js\");\n    const { instituteId } = cookieJS.getCookie();\n\n    import { i18n } from '@/i18n'\n    import LoadingMe from '@/components/Loading'\n    export default {\n        components: {\n            LoadingMe\n        },\n        data: () => ({\n            dialogm1: '',\n            dialogm2: false,\n            compeletLoading: true,\n            isFullpage     : false,\n            snackbar: false,\n            textStatus: 'Success',\n            color: '#3DA72E',\n            timeout: 6000,\n            x: 'right',\n            y: 'top',\n            account_type_datasource: [],\n            selected_acctount_type: {\n                name: '',\n                nature: '',\n                statement_group: '',\n                number: 0,\n            },\n            account_group: {\n                name: '',\n                account_type: undefined,\n                local_name: '',\n                description: '',\n                institute_id: instituteId,\n                uuid: ''\n            },\n            headers: [\n                {text: i18n.t('code'), value: 'code', sortable: true,  align: 'start ',},\n                {\n                    text: i18n.t('name'),\n                    align: 'start tb_name_td',\n                    sortable: false,\n                    value: 'name',\n                },\n                {text: i18n.t('local_name'), value: 'local_name', sortable: false,  align: 'start ',},\n                {text: i18n.t('account_type'), value: 'account_type', sortable: false, align: 'start d-none'},\n                {text:  i18n.t('account_type'), value: 'account_type.name', sortable: false,  align: 'start',},\n                // {text: i18n.t('action'), value: 'actions', sortable: false,  align: 'start',},\n            ],\n            editedIndex: -1,\n            editedItem: {\n                name: '',\n                local_name: 0,\n                description: 0,\n                account_type: 0,\n            },\n            defaultItem: {\n                name: '',\n                local_name: 0,\n                description: 0,\n                account_type: 0,\n            },\n            accountGroupList: [],\n            option: 1\n        }),\n        props: {},\n        computed: {},\n        watch: {\n            dialogm2(val) {\n                val || this.close()\n            },\n        },\n        created() {\n        },\n        methods: {\n            async loadAccountGroupList() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        axios.get(apiUrl.account_groups)\n                            .then(res => {\n                                //eslint-disable-next-line no-console\n                                // console.log(res.data)\n                                this.accountGroupList = res.data\n                                this.compeletLoading = false\n                            })\n                    }, 500);\n                })\n            },\n            async onEditClick(value) {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        //eslint-disable-next-line no-console\n                        console.log(value)\n                        this.account_group = value\n                        this.selected_acctount_type = this.account_group.account_type\n                        this.option = 2\n                    }, 500);\n                })\n            },\n            onNewClick() {\n                this.option = 1\n                this.clear()\n            },\n            OnSaveClick(isNew, option) {\n                //eslint-disable-next-line no-console\n                let self = this\n                let url, method = ''\n                if (option === 1) { // Create\n                    url = apiUrl.account_groups\n                    method = 'post'\n                } else if (option === 2) { // Update\n                    url = apiUrl.account_groups + `/${self.account_group.uuid}/update`\n                    method = 'post'\n                }\n                //eslint-disable-next-line no-console\n                console.log(self);\n                // this.isFullpage = true\n                axios({\n                    method: method,\n                    url: url,\n                    data: self.account_group\n                })\n                    .then(function (response) {\n                        if (response.status === 200) {\n                            self.snackbar = true\n                            self.textStatus = \"Success\"\n                            self.color      = \"#3DA72E\"\n                            if (isNew === true) {\n                                // clreat form\n                                self.dialogm2 = true\n                                self.clear()\n                                self.loadAccountGroupList()\n                            } else {\n                                //close form.\n                                self.dialogm2 = false\n                                self.clear()\n                                self.loadAccountGroupList()\n                            }\n                        }\n                    })\n                    .catch(function (error) {\n                        self.snackbar = true\n                        self.textStatus = \"Failed\"\n                        self.color      = \"#EF5350\"\n                        //eslint-disable-next-line no-console\n                        console.log(error)\n                    });\n\n            },\n            OnAccountTypeSelectedChange: function () {\n                this.account_group.account_type = this.selected_acctount_type\n                //eslint-disable-next-line no-console\n                // console.log(this.account_group);\n            },\n            editItem(item) {\n                this.editedIndex = this.desserts.indexOf(item)\n                this.editedItem = Object.assign({}, item)\n                this.dialogm2 = true\n            },\n            deleteItem(item) {\n                const index = this.desserts.indexOf(item)\n                confirm('Are you sure you want to delete this item?') && this.desserts.splice(index, 1)\n            },\n            close() {\n                this.dialogm2 = false\n                this.$nextTick(() => {\n                    this.editedItem = Object.assign({}, this.defaultItem)\n                    this.editedIndex = -1\n                })\n            },\n            clear() {\n                this.account_group.name = ''\n                this.account_group.account_type = ''\n                this.account_group.institute_id = ''\n                this.account_group.local_name = ''\n                this.account_group.uuid = ''\n            },\n            save() {\n                if (this.editedIndex > -1) {\n                    Object.assign(this.desserts[this.editedIndex], this.editedItem)\n                } else {\n                    this.desserts.push(this.editedItem)\n                }\n                this.close()\n            },\n        },\n        beforeCreate() {\n            // get the account type.\n            axios.get(apiUrl.account_type_list_get)\n                .then(res => {\n                    this.account_type_datasource = res.data\n                })\n        },\n        mounted: async function () {\n            this.loadAccountGroupList()\n        }\n    };\n</script>\n<style scoped>\n    .acc_group header {\n        height: 10px !important;\n    }\n\n    table.acc_group tr td {\n        border-bottom: 1px solid #ccc;\n        padding: 8px;\n        vertical-align: middle;\n    }\n\n    table.acc_group tr td:first-child {\n        font-weight: 700;\n    }\n\n    table.acc_group tr td:last-child {\n        text-align: center;\n    }\n\n    .v-card__actions .v-btn.v-btn {\n        padding: 0 16px;\n    }\n\n    .function_footer {\n        padding: 15px;\n        display: inline-block;\n    }\n\n    .exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > td{\n        color: #000 !important;\n        padding: 5px !important;\n    }\n    .exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:not(.v-data-table__mobile-row){\n        border-top: 1px solid #000 !important;\n        border-bottom: 0;\n    }\n    .exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:last-child td{\n        border-bottom: 1px solid #000 !important;\n    }\n    .text-start{\n       text-align: left !important;\n    }\n\n\n    @media (max-width: 576px) {\n\n    }\n</style>"],"sourceRoot":"src/views/accounting/account"}]}