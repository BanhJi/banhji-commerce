{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js","mtime":1638499442997},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0IGtlbmRvIGZyb20gJ0Bwcm9ncmVzcy9rZW5kby11aSc7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaVVybC5qcycpOwoKZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIChjb250YWluZXIsIG9wdGlvbnMpIHsKICAvLyBEZWZpbmQgb3JkZXJpbmcgYnkgdHlwZSBudW1iZXIKICB2YXIgY29tcGFyZSA9IGZ1bmN0aW9uIGNvbXBhcmUoYSwgYikgewogICAgaWYgKGEuaXRlbXNbMF0udGF4VHlwZS50eXBlSWQgPT09IGIuaXRlbXNbMF0udGF4VHlwZS50eXBlSWQpIHsKICAgICAgcmV0dXJuIDA7CiAgICB9IGVsc2UgaWYgKGEuaXRlbXNbMF0udGF4VHlwZS50eXBlSWQgPiBiLml0ZW1zWzBdLnRheFR5cGUudHlwZUlkKSB7CiAgICAgIHJldHVybiAxOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIC0xOwogICAgfQogIH07IC8vIERlZmluZCBkZWZhdWx0IGdyb3VwCgoKICB2YXIgZ3JvdXAgPSB7CiAgICBmaWVsZDogInRheFR5cGUubmFtZSIsCiAgICBjb21wYXJlOiBjb21wYXJlCiAgfTsgLy8gVXNlIGxvY2FsIGRhdGEKCiAgdmFyIGRzID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICBkYXRhOiBzdG9yZS5zdGF0ZS50YXhlcy5saXN0LmZpbHRlcihmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlLnRyYW5zYWN0aW9uVHlwZS50b0xvd2VyQ2FzZSgpID09PSAicHVyY2hhc2UiOwogICAgfSksCiAgICBncm91cDogZ3JvdXAKICB9KTsgLy8gRGVmaW5lIGRyb3Bkb3dubGlzdAoKICB2YXIgZGRsID0ga2VuZG8ualF1ZXJ5KCc8aW5wdXQgbmFtZT0iJyArIG9wdGlvbnMuZmllbGQgKyAnIi8+JykuYXBwZW5kVG8oY29udGFpbmVyKS5rZW5kb0Ryb3BEb3duTGlzdCh7CiAgICBhdXRvQmluZDogdHJ1ZSwKICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgIGhlaWdodDogNDAwLAogICAgZmlsdGVyOiAic3RhcnRzd2l0aCIsCiAgICBkYXRhVGV4dEZpZWxkOiAiZGVmYXVsdFRheCIsCiAgICBkYXRhVmFsdWVGaWVsZDogImlkIiwKICAgIG9wdGlvbkxhYmVsOiAiLS0tIFNlbGVjdCAtLS0iLAogICAgZGF0YVNvdXJjZTogZHMKICB9KS5kYXRhKCJrZW5kb0Ryb3BEb3duTGlzdCIpOyAvLyBVc2UgcmVtb3RlIGRhdGEKCiAgaWYgKCFzdG9yZS5zdGF0ZS50YXhlcy5pc0xvYWRlZCkgewogICAgdmFyIHJlbW90ZURTID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICAgIHRyYW5zcG9ydDogewogICAgICAgIHJlYWQ6IHsKICAgICAgICAgIHVybDogYXBpVXJsLnRheF9zZXR0aW5nLnRheF9saXN0X2dldAogICAgICAgIH0sCiAgICAgICAgZGF0YVR5cGU6ICJqc29uIgogICAgICB9LAogICAgICBzY2hlbWE6IHsKICAgICAgICBtb2RlbDogewogICAgICAgICAgaWQ6ICJpZCIKICAgICAgICB9LAogICAgICAgIGRhdGE6IGZ1bmN0aW9uIGRhdGEocmVzcG9uc2UpIHsKICAgICAgICAgIC8qIEFkZCB0byBzdG9yZSAqLwogICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ3RheGVzL2FkZExpc3QnLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhLmZpbHRlcihmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgcmV0dXJuIHZhbHVlLnRyYW5zYWN0aW9uVHlwZS50b0xvd2VyQ2FzZSgpID09PSAicHVyY2hhc2UiOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LAogICAgICBncm91cDogZ3JvdXAKICAgIH0pOwogICAgZGRsLnNldERhdGFTb3VyY2UocmVtb3RlRFMpOwogIH0KCiAgcmV0dXJuIGRkbDsKfSk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PurchaseTax.js"],"names":["kendo","store","apiUrl","require","container","options","compare","a","b","items","taxType","typeId","group","field","ds","data","DataSource","state","taxes","list","filter","value","transactionType","toLowerCase","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","dataTextField","dataValueField","optionLabel","dataSource","isLoaded","remoteDS","transport","read","url","tax_setting","tax_list_get","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"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","sourcesContent":["import kendo from '@progress/kendo-ui';\n\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Defind ordering by type number\n    let compare = function(a, b) {\n        if (a.items[0].taxType.typeId === b.items[0].taxType.typeId) {\n            return 0;\n        } else if (a.items[0].taxType.typeId > b.items[0].taxType.typeId) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: \"taxType.name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.taxes.list.filter(value => value.transactionType.toLowerCase() === \"purchase\"),\n        group: group,\n    })\n\n    // Define dropdownlist\n    let ddl = kendo.jQuery('<input name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"defaultTax\",\n                dataValueField: \"id\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n    \n    // Use remote data\n    if(!store.state.taxes.isLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.tax_setting.tax_list_get,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"id\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('taxes/addList', response.data);\n                    \n                    return response.data.filter(value => value.transactionType.toLowerCase() === \"purchase\");\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}