{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/memberHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/memberHandler.js","mtime":1638499442999},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/memberHandler.js"],"names":["axios","require","apiUrl","unknown","module","exports","gender","error","window","console","list","get","member","member_get","response","id","member_getOne","create","data","post","member_post","search","member_search","upload","createSavingAccount","saving_account_post","getSavingAccountById","saving_account_getByMember","getDepositAccountById","saving_deposit_getByAccount","createSavingDeposit","saving_deposit_post","createSavingWithdraw","saving_withdraw_post","getLastNumber","lastnumber"],"mappings":"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","sourcesContent":["const axios = require('axios')\nconst apiUrl = require('../apiUrl.js')\nconst unknown = require('../api/unknown')\n\n// Gender\nmodule.exports.gender = function () {\n    try {\n        const gender = unknown.gender\n        // const response = await axios.get(unknown.gender)\n\n        return gender\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// // Center\n// module.exports.center = async function (customerTypeId, customerGroupId, search) {\n//     try {\n//         let response = []\n//         if (search !== '' && search !== null && search !== 'null') {\n//             response = await axios.get(apiUrl.customer.customer_center + '/' + customerTypeId + '/center/' + customerGroupId + '/' + search)\n//             return response\n//         } else {\n//             response = await axios.get(apiUrl.customer.customer_center + '/' + customerTypeId + '/center/' + customerGroupId)\n//             return response\n//         }\n//     } catch (error) {\n//         window.console.error(error)\n//     }\n// }\n\n// List\nmodule.exports.list = async function () {\n    try {\n        const response = await axios.get(apiUrl.member.member_get)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// Get One\nmodule.exports.get = async function (id) {\n    try {\n        const response = await axios.get(apiUrl.member.member_getOne + id)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// save\nmodule.exports.create = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.member.member_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// Search\nmodule.exports.search = function () {\n    try {\n        const response = apiUrl.member.member_search\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// upload\nmodule.exports.upload = async (data) => {\n    try {\n        const response = await axios.post(\"https://ck3f4yltlf.execute-api.ap-southeast-1.amazonaws.com/dev/v1/uploads/file/upload\", data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// saving account\n// save\nmodule.exports.createSavingAccount = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.member.saving_account_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\nmodule.exports.getSavingAccountById = async function (id) {\n    try {\n        const response = await axios.get(apiUrl.member.saving_account_getByMember + id)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\nmodule.exports.getDepositAccountById = async function (id) {\n    try {\n        const response = await axios.get(apiUrl.member.saving_deposit_getByAccount + id)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\nmodule.exports.createSavingDeposit = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.member.saving_deposit_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\nmodule.exports.createSavingWithdraw = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.member.saving_withdraw_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//last number\nmodule.exports.getLastNumber = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.member.lastnumber, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n"]}]}