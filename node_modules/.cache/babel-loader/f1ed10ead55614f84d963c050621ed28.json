{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/Attachment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/Attachment.vue","mtime":1641438291801},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Attachment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row class=\"white\">\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <p class=\"mb-2 grey--text font_14\">{{$t('file_type')}} [PDF, JPG, JPEG, TIFF, PNG, GIF]</p>\n            <template>\n                <v-file-input\n                    v-model=\"files\"\n                    @change=\"onFileChange\"\n                    accept=\"image/jpg, image/jpeg, application/pdf\"\n                    :placeholder=\"$t('attachments')\"\n                    single\n                    prepend-icon=\"mdi-paperclip\">\n                    <template v-slot:selection=\"{ text }\">\n                        <v-chip small label color=\"primary\">\n                            {{ text }}\n                        </v-chip>\n                    </template>\n                </v-file-input>\n                <v-text-field\n                    v-model=\"fileDesc\"\n                    outlined\n                    :placeholder=\"$t('description')\"\n                    clearable/>\n            </template>\n                <v-btn\n                    color=\"primary\"\n                    class=\"text-capitalize white--text\"\n                    @click=\"uploadFile\">\n                    <v-icon size=\"15\" class=\"mr-2\">fa-check</v-icon>{{ $t(\"upload\") }}\n                </v-btn> \n                <template>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        type=\"loading\"\n                        :myLoading=\"true\"/>\n                    <kendo-datasource\n                        ref=\"attachmentDS\"\n                        :data=\"attachmentList\"/>\n                        <kendo-grid\n                            id=\"gridAttachment\"\n                            class=\"grid-function\"\n                            :data-source-ref=\"'attachmentDS'\"\n                            :editable=\"false\"\n                            :scrollable-virtual=\"true\">\n                            <kendo-grid-column\n                                :field=\"''\"\n                                :title=\"$t('open')\"\n                                :width=\"70\"\n                                :template=\"fileUrl\"\n                                :attributes=\"{ style: 'text-align: center' }\"\n                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                            <kendo-grid-column\n                                :field=\"'fileName'\"\n                                :title=\"$t('file_name')\"\n                                :width=\"250\"\n                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                            <kendo-grid-column\n                                :field=\"'description'\"\n                                :title=\"$t('description')\"\n                                :width=\"250\"\n                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                            <kendo-grid-column\n                                :field=\"'fileType'\"\n                                :title=\"$t('file_type')\"\n                                :width=\"150\"\n                                :headerAttributes=\"{style:'background-color: #EDF1F5, color: green !important'}\"/>\n                            <kendo-grid-column\n                                :field=\"'size'\"\n                                :title=\"$t('size')\"\n                                :width=\"150\"\n                                :template=\"byteToMB\"\n                                :headerAttributes=\"{style:'background-color: #EDF1F5, color: green !important'}\"/>\n                            <kendo-grid-column\n                                :field=\"'createdAt'\"\n                                :title=\"$t('date')\"\n                                :width=\"120\"\n                                :template=\"'<span>#= kendo.toString(new Date(createdAt), dateFormat)#</span>'\"\n                                :headerAttributes=\"{style:'background-color: #EDF1F5, color: green !important'}\"/>\n                            <kendo-grid-column\n                                :field=\"''\"\n                                :title=\"$t('action')\"\n                                :width=\"100\"\n                                :visible=\"true\"\n                                :command=\"[{iconClass: 'k-icon k-i-delete', text: ' ', click: deletedFunction }]\"\n                                :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"\n                                :attributes=\"{ style: 'text-align: center'}\"/>\n                        </kendo-grid>\n                </template>\n        </v-col>\n    </v-row>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    import {i18n} from \"@/i18n\";\n    const billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\n    export default {\n        name: \"\",\n        props: ['initAccount'],\n        components: {\n            LoadingMe: () => import(`@/components/Loading`),\n        },\n        data() {\n            return {\n                showLoading: false,\n                files: [],\n                attachments: [],\n                attachment: {},\n                fileDesc: '',\n                attachmentList: []\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                window.console.log('e',e)\n                this.$emit('initData', this.attachment);\n                if (e) {\n                    this.fileDesc = e.name;\n                    this.fileName = e.name;\n                    this.fileSize = e.size;\n                    this.fileType = e.type;\n                    let input = this.files;\n                    // Ensure that you have a file before attempting to read it\n                    if (input) {\n                        let reader = new FileReader();\n                        // Define a callback function to run, when FileReader finishes its job\n                        reader.onloadend = (e) => {\n                            // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                            // Read image as base64 and set to imageData\n                            this.imgFile = e.target.result;\n                        };\n                        // Start the reader job - read file as a data url (base64 format)\n                        reader.readAsBinaryString(input);\n                        this.src = URL.createObjectURL(input);\n                    }\n                }\n            },\n            uploadFile(){\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        if (this.imgFile) {\n                            const id = this.attachment.uuid || \"\";\n                            const name = this.attachment.name || \"\";\n                            let data = {\n                                file: this.imgFile,\n                                info: {\n                                    name: this.fileName,\n                                    description: this.fileDesc,\n                                    size: this.fileSize,\n                                    type: this.fileType,\n                                },\n                                type: \"Account\",\n                                id: id,\n                                name: name,\n                            };\n                            this.showLoading = true;\n                            if(id !==''){\n                                billingHandler.attachment(data).then((res) => {\n                                    if (res.data.statusCode === 201) {\n                                        this.showLoading = false;\n                                        this.imgFile = null;\n                                        this.src = \"\";\n                                        this.fileDesc = \"\";\n                                        this.fileName = \"\";\n                                        this.fileSize = 0;\n                                        this.fileType = \"\";\n                                        this.files      = []\n                                        this.$snotify.success(\"Success\");\n                                        this.loadAttachment();\n                                        // // this.txnList = JSON.parse(JSON.stringify(res.data.data))\n                                        // // window.console.log('transactions', this.txnList)\n                                    }\n                                });\n                            }else{\n                                this.showLoading = false;\n                                this.$snotify.error(\"Please check again!\");\n                            }\n                        } else {\n                            this.showLoading = false;\n                            this.$snotify.error(\"Please browse to upload image\");\n                        }\n                    }, 10);\n                });\n            },\n            async loadAttachment() {\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        // if (this.$route.params.hasOwnProperty('id')) {\n                        this.showLoadingAtch = true;\n                        const strFilter = \"?id=\" + this.attachment.uuid;\n                        billingHandler.attachmentList(strFilter).then((res) => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoadingAtch = false;\n                                this.attachmentList = res.data.data;\n                            }\n                        });\n                        // }\n                    }, 10);\n                });\n            },\n            fileUrl(dataItem) {\n                if (dataItem.fileUrl) {\n                    return `<a target=\"_blank\" style=\"color:#ED1A3A !important\" href=\"${dataItem.fileUrl}\"><span>Open</span></a>`;\n                }\n                return ``;\n            },\n            byteToMB(dataItem) {\n                const FileSize = dataItem.size || 0; // in MiB\n                const marker = 1024; // Change to 1000 if required\n                const decimal = 3; // Change as required\n                const kiloBytes = marker; // One Kilobyte is 1024 bytes\n                const megaBytes = marker * marker; // One MB is 1024 KB\n                const gigaBytes = marker * marker * marker; // One GB is 1024 MB\n                // const teraBytes = marker * marker * marker * marker; // One TB is 1024 GB\n\n                // return bytes if less than a KB\n                if (FileSize < kiloBytes) {\n                    return FileSize + \" Bytes\";\n                }\n                // return KB if less than a MB\n                else if (FileSize < megaBytes) {\n                    return (FileSize / kiloBytes).toFixed(decimal) + \" KB\";\n                }\n                // return MB if less than a GB\n                else if (FileSize < gigaBytes) {\n                    return (FileSize / megaBytes).toFixed(decimal) + \" MB\";\n                }\n                // return GB if less than a TB\n                else {\n                    return (FileSize / gigaBytes).toFixed(decimal) + \" GB\";\n                }\n\n                /* var FileSize = file.files[0].size / 1024 / 1024; // in MiB\n                    if (FileSize > 2) {\n                        alert('File size exceeds 2 MiB');\n                        // $(file).val(''); //for clearing with Jquery\n                    } else {\n                                alert('File size' + FileSize);\n                    } */\n            },\n            deletedFunction(e){\n                this.$swal({\n                    title: i18n.t(\"msg_title_warning\"),\n                    text: i18n.t(\"msg_deleted\"),\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    cancelButtonText: i18n.t(\"cancel\"),\n                    confirmButtonColor: \"#4d4848\",\n                    cancelButtonColor: \"#ED1A3A\",\n                    confirmButtonText: i18n.t(\"discard\"),\n                }).then((result) => {\n                    if (result.value) {\n                        e.preventDefault();\n                        let grid = kendo.jQuery(\"#gridAttachment\").data(\"kendoGrid\");\n                        let dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n                        window.console.log('dataItem', dataItem)\n                        let params = {\n                            id: dataItem.attachId,\n                            key: dataItem.key\n                        }\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve(\"resolved\");\n                                this.showLoadingAtch = true;\n                                billingHandler.attachmentDelete(params).then((res) => {\n                                    if (res.data.statusCode === 200) {\n                                        this.showLoadingAtch = false;\n                                        this.loadAttachment()\n                                    }\n                                });\n                                // }\n                            }, 10);\n                        });\n                    }\n                });\n            }\n        },\n        watch: {\n            initAccount () {\n                this.attachment = this.initAccount;\n                this.loadAttachment()\n            },\n        },\n        mounted () {\n            this.loadAttachment()\n            this.attachment = this.initAccount;\n        }\n    }\n</script>\n<style scoped>\n</style>"],"sourceRoot":"src/components"}]}