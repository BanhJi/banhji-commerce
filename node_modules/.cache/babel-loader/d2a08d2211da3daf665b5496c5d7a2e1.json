{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/banking/collection/ConnectCollectionAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/banking/collection/ConnectCollectionAccount.vue","mtime":1638499443129},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConnectCollectionAccount.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-card outlined dense class=\"no_border\">\n                            <h2 class=\"mb-0\">{{ $t('connect_collection_account') }}</h2>\n                            <v-icon\n                                @click=\"onClose\"\n                                style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                class=\"float-right\"\n                            >close\n                            </v-icon>\n                        </v-card>\n                        <v-card outlined dense class=\"px-5 py-2\" color=\"grayBg\">\n                            <LoadingMe\n                                :isLoading=\"showLoading\"\n                                :fullPage=\"false\"\n                                :myLoading=\"true\">\n                            </LoadingMe>\n                            <v-row v-if=\"!bankClick && !connectBankSuccess\">\n                                <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                    <h3 class=\"primary--text font_20\">{{ $t('connect_to_partner_financial') }}</h3>\n                                    <p class=\"my-2 dark--text\">{{ $t('connect_to_partner_financial_desc') }}</p>\n                                    <v-row>\n                                        <v-col sm=\"6\" cols=\"12\">\n                                            <v-card outlined dense class=\"pa-2 grayBg\" height=\"225px\">\n                                                <v-img class=\"ma-auto\" width=\"60%\" src=\"@/assets/images/002.png\"/>\n                                                <p class=\"text-center mb-0 mt-3\">{{ $t('online_payments') }}</p>\n                                            </v-card>\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"12\">\n                                            <v-card outlined dense class=\"pa-2 grayBg \" height=\"225px\">\n                                                <v-img class=\"ma-auto\" width=\"60%\" src=\"@/assets/images/003.png\"/>\n                                                <p class=\"text-center mb-0 mt-3\">{{ $t('proximity_payment') }}</p>\n                                            </v-card>\n                                        </v-col>\n                                    </v-row>\n                                </v-col>\n\n                                <v-col sm=\"6\" cols=\"12\" class=\"py-2\">\n                                    <p class=\"my-2\">{{ $t('please_select_financial_to_connect') }}</p>\n                                    <v-row>\n                                        <v-col sm=\"3\" cols=\"12\" v-for=\"item in banks\" v-bind:key=\"item.id\">\n                                            <v-card elevation=\"0\" color=\"white\" class=\"shadow_hover\" min-height=\"100px\">\n                                                <v-img @click=\"onBankClick(item)\" class=\" ma-auto \" width=\"100%\"\n                                                       v-bind:src=\"item.image\"/>\n                                            </v-card>\n                                        </v-col>\n                                    </v-row>\n                                </v-col>\n                            </v-row>\n                            <v-row v-else-if=\"bankClick && !connectBankSuccess\">\n                                <v-col cols=\"12\" class=\"pb-0\">\n                                    <v-btn color=\"primary\" class=\"white--text\" @click=\"onBackToConnect\">\n                                        <v-icon size=\"13\" class=\"mr-2\">fa fa-arrow-left</v-icon>\n                                        {{ $t('back') }}\n                                    </v-btn>\n                                </v-col>\n                                <v-col cols=\"12\" sm=\"12\">\n                                    <BankConnection :info=\"info\">\n                                        <template v-slot:account>\n                                            <v-form\n                                                ref=\"form\"\n                                                v-model=\"valid\"\n                                                lazy-validation\n                                            >\n                                                <label class=\"label\">{{ $t('nature') }}</label>\n                                                <p class=\"text_tip mb-0 mt-1\">{{ $t('nature_customer_desc') }}</p>\n                                                <v-select class=\"mt-4 \"\n                                                          multiple=\"multiple\"\n                                                          :items=\"account\"\n                                                          :item-text=\"item =>`${item.number} - ${item.name}`\"\n                                                          item-value=\"id\"\n                                                          v-model=\"mSelectedAccount\"\n                                                          :rules=\"[v => !!v || 'Item is required']\"\n                                                          required\n                                                          tage=\"Nature\"\n                                                          outlined\n                                                          return-object/>\n                                                <v-btn width=\"100%\" color=\"primary\" class=\" mt-4 white--text \"\n                                                       @click=\"onConnectClick\">\n                                                    <v-icon size=\"13\" class=\"mr-2 white--text\">fa fa-lock</v-icon>\n                                                    <span\n                                                        class=\"white--text text-capitalize\">{{\n                                                            $t('connect_collection_account')\n                                                        }}</span>\n                                                </v-btn>\n                                            </v-form>\n                                        </template>\n                                    </BankConnection>\n                                </v-col>\n                            </v-row>\n                            <v-row v-else-if=\"connectBankSuccess\">\n                                <v-col class=\"\" min-height=\"500\">\n                                    <h2 class=\"primary--text text-center d-block font_4em my-10 mt-16 fade-in\">\n                                        {{ $t('congratulation') }}</h2>\n                                    <p class=\"text-center mb-0 font_20\">{{ $t('your_collection_account') }}</p>\n                                </v-col>\n                            </v-row>\n                            <p class=\"text-center mb-2\">\n                                <v-icon size=\"13\" class=\"third--text mr-2 white--text\">fa fa-lock</v-icon>\n                                {{ $t('at_banhJi_the_privacy') }}\n                            </p>\n                        </v-card>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport BankPaymentModel from \"@/scripts/model/BankPayment\";\n\nconst bankHandler = require(\"@/scripts/bankHandler\")\nconst bankAccountHandler = require(\"@/scripts/bankAccountHandler\")\nconst otherHandler = require(\"@/scripts/otherHandler\")\nconst bankPaymentHandler = require(\"@/scripts/bankPaymentHandler\")\nconst bankPaymentModel = new BankPaymentModel({})\nimport {uuid} from 'vue-uuid'\n\nexport default {\n    name: 'ConnectedAccount',\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        BankConnection: () => import(`@/components/BankConnection`)\n    },\n    data: () => ({\n        bankClick: false,\n        valid: true,\n        connectBankSuccess: false,\n        connectLoading: false,\n        account: [],\n        dialogM3: false,\n        mSelectedAccount: [],\n        showLoading: false,\n        isLoaded: false,\n        info: {},\n        bankPayment: bankPaymentModel,\n        banks: [],\n        bankPartners: [],\n        bankAccount: [],\n    }),\n    methods: {\n        async loadBankPartner() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    otherHandler.bankParner().then(res => {\n                        this.bankPartners = res\n                        this.showLoading = false\n                        // window.console.log(this.bankPartners, 'partner')\n                    })\n                }, 300);\n            })\n        },\n        async loadBankAccount() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    bankAccountHandler.getAll().then(res => {\n                        this.bankAccount = res.data\n                        this.loadAllBanks()\n                        this.showLoading = false\n                    })\n                }, 300);\n            })\n        },\n        loadAllBanks() {\n            new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        bankHandler.getAll().then(res => {\n                            this.banks = []\n                            const data = res.data.filter(m => {\n                                return (m.is_deleted === 0 && m.hasOwnProperty('partner_id'))\n                            })\n                            data.filter(m => {\n                                this.bankPartners.forEach(n => {\n                                    if (n.id === m.partner_id) {\n                                        m['image'] = n.image\n                                        m['order'] = n.order\n                                        this.banks.push(m)\n                                    }\n                                })\n                                m['bankAccount'] = this.bankAccount.filter(l => l.bank.uuid === m.uuid).map(k => {\n                                    return {\n                                        id: k.uuid,\n                                        name: k.name,\n                                        number: k.number,\n                                        type: k.type,\n                                        currency: k.currency,\n                                        account: {\n                                            id: k.account.uuid,\n                                            name: k.account.name,\n                                            local_name: k.account.local_name,\n                                            number: k.account.number,\n                                            is_taxable: k.account.is_taxable,\n                                            banhjiAccCode: k.account.banhjiAccCode,\n                                            group_code: k.account.group_code,\n                                            parent_account: k.account.parent_account,\n                                            type_code: k.account.type_code,\n                                            account_type: k.account.account_type\n                                        }\n                                    }\n                                })\n                            })\n                            this.banks\n                                .sort(function (a, b) {\n                                    return a.order - b.order\n                                })\n                            this.showLoading = false\n                            // window.console.log(this.banks)\n                        })\n                    }, 300)\n                }\n            )\n        },\n        onBankClick(bank) {\n            this.info = bank\n            this.bankClick = true\n            const data = {\n                id: this.info.partner_id,\n                status: 'Connected',\n            }\n            this.account = bank.bankAccount\n            // window.console.log('bank Info', this.account)\n            bankPaymentHandler.connectedBankAccount(data).then(response => {\n                if (response.data.statusCode === 200) {\n                    const connectedAcc = response.data.data\n                    this.mSelectedAccount = connectedAcc\n                }\n            })\n\n\n        },\n        onBackToConnect() {\n            this.bankClick = false\n        },\n        onConnectClick() {\n            if (this.mSelectedAccount === '') {\n                this.$refs.form.validate()\n            } else {\n                this.connectLoading = true\n                setTimeout(() => {\n                    this.onSaveClose()\n                }, 300);\n            }\n        },\n        onCloseModelConnect() {\n            this.connectBankSuccess = false\n            this.bankClick = false\n            this.dialogM3 = false\n        },\n        onClose() {\n            this.connectBankSuccess = false\n            this.bankClick = false\n            this.dialogM3 = false\n            this.$router.push({\n                name: 'Banking', params: {\n                    data: this.connectedBankAccountList\n                }\n            })\n\n\n        },\n        async onSaveClose() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    let selectedAcc = this.mSelectedAccount\n                    selectedAcc.forEach(m => {\n                        if (!m.hasOwnProperty('id')) {\n                            m['id'] = 'bca-' + uuid.v1()\n                        }\n                    })\n                    const data = {\n                        id: this.info.partner_id,\n                        bank: this.info,\n                        connectedAccount: selectedAcc,\n                        status: \"Connected\",\n                        type: 'Bill Payment',\n                        enabled: true,\n                    }\n                    // window.console.log(data, '--')\n                    bankPaymentHandler.create(data).then(res => {\n                        if (res.data.statusCode === 201) {\n                            this.showLoading = false\n                            this.connectedBankAccountList = res.data.data\n                            this.connectBankSuccess = true\n                            this.connectLoading = false\n                        }\n\n                    })\n                }, 300)\n            })\n        },\n    },\n    mounted: async function () {\n        await this.loadBankAccount()\n        await this.loadBankPartner()\n    },\n    watch: {\n        '$route': 'loadBankAccount'\n    }\n}\n</script>\n<style scoped>\n.function_content {\n    padding: 10px 25px 25px;\n    border-bottom: 0;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1080px !important;\n    }\n}\n\n@media (max-width: 576px) {\n\n}\n</style>"],"sourceRoot":"src/views/banking/collection"}]}