{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/currency/handler/currencyHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/currency/handler/currencyHandler.js","mtime":1638499442977},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktY29tbWVyY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciIpLmRlZmF1bHQ7CgpyZXF1aXJlKCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiKTsKCnZhciBiYXNlSGFuZGxlciA9IHJlcXVpcmUoJ0Avc2NyaXB0cy9iYXNlSGFuZGxlci5qcycpOwoKdmFyIGFwaVVybCA9IHJlcXVpcmUoJ0AvYXBpVXJsJyk7Cgp2YXIgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwoKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKCk7IC8vIGNvbnN0IGN1cnJlbmN5VHlwZSA9IHsKLy8gICAgIEZVTkNUSU9OQUxfQ1VSUkVOQ1k6ICdmdW4tYycsCi8vICAgICBUUkFOU0FDVElPTl9DVVJSRU5DWTogJ3R4bi1jJywKLy8gICAgIFJFUE9SVElOR19DVVJSRU5DWTogJ3JwdC1jJywKLy8gICAgIFRBWF9FWENIQU5HRV9DVVJSRU5DWTogJ3RheC1jJywKLy8gfQovLyBHRVQgTElTVAoKbW9kdWxlLmV4cG9ydHMuZ2V0QWxsID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICB2YXIgcmVzcG9uc2U7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICB3aGlsZSAoMSkgewogICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgY2FzZSAwOgogICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLmN1cnJlbmN5LmN1cnJlbmN5X2dldCArICdmdW4tYycpOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgIGNhc2UgNzoKICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgY2FzZSAxMDoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKfSkpOyAvLyBHRVQgSlNPTiBGSUxFCgptb2R1bGUuZXhwb3J0cy5nZXRKc29uID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBpbnN0YW5jZS5nZXQoYXBpVXJsLmN1cnJlbmN5LmN1cnJlbmN5X2pzb24pOwoKICAgICAgICBjYXNlIDM6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQyLnNlbnQpOwoKICAgICAgICBjYXNlIDY6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDY7CiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICBjYXNlIDk6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICB9CiAgICB9CiAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgNl1dKTsKfSkpOyAvLyBhY3RpdmUgY3VycmVuY3kgb3IgZnVuY3Rpb25hbCBjdXJyZW5jeSB0aGF0IGFsbG93ZWQgYnkgY29tcGFueQoKbW9kdWxlLmV4cG9ydHMuZ2V0ID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBiYXNlSGFuZGxlci5nZXQoYXBpVXJsLmN1cnJlbmN5LmN1cnJlbmN5X2dldCk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDMuc2VudCk7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNjsKICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgwKTsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0My50MCk7CgogICAgICAgIGNhc2UgOToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA2XV0pOwp9KSk7IC8vIGFjdGl2ZSBjdXJyZW5jeSBvciBmdW5jdGlvbmFsIGN1cnJlbmN5IHRoYXQgYWxsb3dlZCBieSBjb21wYW55Cgptb2R1bGUuZXhwb3J0cy5saXN0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KHR5cGUpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5jdXJyZW5jeS5jdXJyZW5jeV9nZXQgKyB0eXBlKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDQuc2VudCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDZdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vCgoKbW9kdWxlLmV4cG9ydHMucmVwb3J0aW5nUGVyaW9kID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KHR5cGUsIGZ5KSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuY3VycmVuY3kucmVwb3J0aW5nX3BlcmlvZF9nZXQgKyB0eXBlICsgJy8nICsgZnkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NS5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQ1LnQwID0gX2NvbnRleHQ1WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDUudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gQ3JlYXRlIEN1cnJlbmN5CgoKbW9kdWxlLmV4cG9ydHMuY3JlYXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KGRhdGEpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVcmwuY3VycmVuY3kuY3VycmVuY3lfcG9zdCwgZGF0YSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ2LnNlbnQpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dDYudDAgPSBfY29udGV4dDZbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0Ni50MCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNiwgbnVsbCwgW1swLCA2XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDQpIHsKICAgIHJldHVybiBfcmVmNi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gZ2V0IGxhc3QgcmF0ZSBvZiB0cmFuc2FjdGlvbiBDdXJyZW5jeQovLyBjdXJyZW5jeT90eXBlPXR4bi1jJmRhdGU9MjAyMS0wMi0yNSZjb2RlPUtIUgoKCm1vZHVsZS5leHBvcnRzLmdldExhc3RFeGNoYW5nZVJhdGVCeURhdGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoZGF0ZSkgewogICAgdmFyIGNvZGUsCiAgICAgICAgcGFyYW1zLAogICAgICAgIHJlc3BvbnNlLAogICAgICAgIF9hcmdzNyA9IGFyZ3VtZW50czsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDcucHJldiA9IF9jb250ZXh0Ny5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvZGUgPSBfYXJnczcubGVuZ3RoID4gMSAmJiBfYXJnczdbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmdzN1sxXSA6ICcnOwogICAgICAgICAgICBfY29udGV4dDcucHJldiA9IDE7CiAgICAgICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgICAgICB0eXBlOiAndHhuLWMnLAogICAgICAgICAgICAgIGRhdGU6IGRhdGUKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGlmIChjb2RlICE9PSAnJykgewogICAgICAgICAgICAgIHBhcmFtcy5jb2RlID0gY29kZTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5jdXJyZW5jeS5leGNoYW5nZV9yYXRlLCB7CiAgICAgICAgICAgICAgcGFyYW1zOiBwYXJhbXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ny5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIF9jb250ZXh0Ny5wcmV2ID0gMTA7CiAgICAgICAgICAgIF9jb250ZXh0Ny50MCA9IF9jb250ZXh0N1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ3LnQwKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNywgbnVsbCwgW1sxLCAxMF1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g1KSB7CiAgICByZXR1cm4gX3JlZjcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgptb2R1bGUuZXhwb3J0cy5nZXRMYXN0RXhjaGFuZ2VSYXRlVGF4QnlEYXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjggPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KGRhdGUsIGNvZGUpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ4Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5jdXJyZW5jeS5leGNoYW5nZV9yYXRlLCB7CiAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAndGF4LWMnLAogICAgICAgICAgICAgICAgZGF0ZTogZGF0ZSwKICAgICAgICAgICAgICAgIGNvZGU6IGNvZGUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDguc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ4LnQwID0gX2NvbnRleHQ4WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDgudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU4LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NiwgX3g3KSB7CiAgICByZXR1cm4gX3JlZjguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/currency/handler/currencyHandler.js"],"names":["baseHandler","require","apiUrl","axios","instance","create","module","exports","getAll","get","currency","currency_get","response","window","console","error","getJson","currency_json","list","type","reportingPeriod","fy","reporting_period_get","data","post","currency_post","getLastExchangeRateByDate","date","code","params","exchange_rate","getLastExchangeRateTaxByDate"],"mappings":"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","sourcesContent":["const baseHandler = require('@/scripts/baseHandler.js')\nconst apiUrl = require('@/apiUrl')\n\nconst axios = require('axios')\nconst instance = axios.create();\n\n// const currencyType = {\n//     FUNCTIONAL_CURRENCY: 'fun-c',\n//     TRANSACTION_CURRENCY: 'txn-c',\n//     REPORTING_CURRENCY: 'rpt-c',\n//     TAX_EXCHANGE_CURRENCY: 'tax-c',\n// }\n\n// GET LIST\nmodule.exports.getAll = async () => {\n    try {\n        const response = await axios.get(apiUrl.currency.currency_get + 'fun-c');\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET JSON FILE\nmodule.exports.getJson = async () => {\n    try {\n        return await instance.get(apiUrl.currency.currency_json);\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// active currency or functional currency that allowed by company\nmodule.exports.get = async function () {\n    try {\n        return await baseHandler.get(apiUrl.currency.currency_get)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// active currency or functional currency that allowed by company\nmodule.exports.list = async function (type) {\n    try {\n        return await axios.get(apiUrl.currency.currency_get + type)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//\nmodule.exports.reportingPeriod = async function (type, fy) {\n    try {\n        return await axios.get(apiUrl.currency.reporting_period_get + type + '/' + fy)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// Create Currency\nmodule.exports.create = async (data) => {\n    try {\n        return await axios.post(apiUrl.currency.currency_post, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// get last rate of transaction Currency\n// currency?type=txn-c&date=2021-02-25&code=KHR\nmodule.exports.getLastExchangeRateByDate = async (date, code='') => {\n    try {\n        let params = {\n            type: 'txn-c',\n            date: date\n        }\n\n        if(code !== ''){\n            params.code = code;\n        }\n\n        const response = await axios.get(apiUrl.currency.exchange_rate, {\n            params: params\n        })\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\nmodule.exports.getLastExchangeRateTaxByDate = async (date, code) => {\n    try {\n        const response = await axios.get(apiUrl.currency.exchange_rate, {\n            params: {\n                type: 'tax-c',\n                date: date,\n                code: code,\n            }\n        })\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n"]}]}