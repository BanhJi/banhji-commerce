{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Input.vue","mtime":1640595536837},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Input.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row style=\"margin-bottom: -40px;\">\n                <v-col sm=\"3\">\n                    <label class=\"label\">{{$t('for_the_month_of')}}</label>\n                    <month-picker :initialMonth=\"monthOf\" @emitMonth=\"monthOf = $event\" @onChanged=\"monthOfChange\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <v-row class=\"my-3 mr-0\" style=\"padding-top: 12px;\">\n                        <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                            <div class=\"code_text text-bold\">{{prefix.abbr}}</div>\n                        </v-col>\n                        <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                            <v-text-field class=\" custom-border \"\n                                v-model=\"number\"\n                                outlined\n                                :rules=\"[v => !!v || 'Number is required']\"\n                                required\n                                readonly/>\n                        </v-col>\n                        <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                            <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                @click=\"generateNumber\">mdi-qrcode\n                            </v-icon>\n                        </v-col>\n                    </v-row>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label class=\"label\">{{$t('Date')}}</label>\n                    <date-picker :initialDate=\"date\" @emitDate=\"date = $event\"/>\n                </v-col>\n                <v-col sm=\"3\" style=\"text-align: center;\">\n                    <p>{{$t('approved_exch_rate_month')}}</p>\n                    <h2 class=\"primary--text\">{{numberFormat(exchangeRate)}}</h2>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col sm=\"3\">\n                    <label>{{$t('employee_group')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :items=\"employeeGroups\"\n                        :item-text=\"item =>`${item.groupCode} - ${item.groupName}`\"\n                        item-value=\"id\"\n                        :disabled=\"disabledG\"\n                        v-model=\"employeeGroup\"\n                        @change=\"employeeGroupChange\"\n                        clearable\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('business_unit_branch')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabledL\"\n                        :items=\"location\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"locationSelected\"\n                        @change=\"locationChange\"\n                        tage=\"Business Unit/Branch\"\n                        return-object\n                        clearable/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('department')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabled\"\n                        :loading=\"loading\"\n                        :items=\"departments\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"department\"\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('nature_of_the_contract')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabled\"\n                        :items=\"natureContracts\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"natureContract\"\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-select class=\"mt-1\"\n                        id=\"acc_type_selector\"\n                        :items=\"natureInput\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"natureInputSelected\"\n                        @change=\"ChangeNature\"\n                        outlined\n                        clearable/>\n                </v-col>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-dialog v-model=\"dialogm\" max-width=\"1080px\">\n                        <template v-slot:activator=\"{ on }\">\n                            <!-- <v-card-text :class=\"{'setCardHeight': setCardHeight,'setCardHeightOther': !setCardHeight}\"> -->\n                                <!-- <div v-if=\"natureInputSelected === 'Timecard'\" > -->\n                                    <v-btn :disabled=\"btnEnabled\"  color=\"primary\" style=\"width: 100%;\" class=\"float-right text-capitalize\" v-on=\"on\">\n                                        {{$t('import_timecard')}}\n                                    </v-btn>\n                                <!-- </div> -->\n                            <!-- </v-card-text> -->\n                        </template>\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{$t('import_data')}}</v-card-title>\n                                <v-icon  @click=\"dialogm = false\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content\">\n                                <v-row>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-2\">{{$t('location')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                    <v-select class=\"mt-1\"\n                                        outlined\n                                        :items=\"location\"\n                                        item-text=\"name\"\n                                        item-value=\"id\"\n                                        v-model=\"locationSelected\"\n                                        tage=\"Business Unit/Branch\"\n                                        return-object/>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-2\">{{$t('segment')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                        <v-select class=\"mt-1\"\n                                        id=\"acc_type_selector\"\n                                        :items=\"segment\"\n                                        item-text=\"name\"\n                                        item-value=\"id\"\n                                        v-model=\"segmentSelected\"\n                                        outlined\n                                        return-object/>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-3\">{{$t('month_of')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                        <month-picker :initialMonth=\"monthOf\" @emitMonth=\"monthOf = $event\"/>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <p>Download file format for import</p>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <v-btn color=\"secondary\" class=\" white--text float-right text-capitalize mr-5\" @click=\"downloadTimeCard\">\n                                            {{$t('file_format')}}\n                                        </v-btn>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <p>Or start importing if you are ready</p>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <upload-excel-component :on-success=\"handleSuccess\" :before-upload=\"beforeUpload\" />\n                                        </v-col>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col cols=\"12\">\n                                        <kendo-datasource ref=\"dataSourceInput\"\n                                            :data=\"tableData\"/>\n                                        <kendo-grid id=\"gridTimecard\" class=\"grid-function\"\n                                            :data-source-ref=\"'dataSourceInput'\"\n                                            :editable=\"false\"\n                                            :scrollable-virtual=\"true\">\n                                            <kendo-grid-column\n                                                :field=\"'date'\"\n                                                :title=\"$t('date')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(date),`yyyy-MM-dd`)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'employeeId'\"\n                                                :title=\"$t('employee_id')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= employeeId#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'employeeName'\"\n                                                :title=\"$t('employee_name')\"\n                                                :width=\"120\"\n                                                :template=\"'<span>#= employeeName#</span>'\"\n                                                readonly\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'timeTable'\"\n                                                :title=\"$t('time_table')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= timeTable#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'clockedIn'\"\n                                                :title=\"$t('clocked_in')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(clockedIn), timeFormat)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'clockedOut'\"\n                                                :title=\"$t('clocked_out')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(clockedOut), timeFormat)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeWeekend'\"\n                                                :title=\"$t('over_time_weekend')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeWeekend#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeHoliday'\"\n                                                :title=\"$t('over_time_holiday')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeHoliday#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeNight'\"\n                                                :title=\"$t('over_time_night')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeNight#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'work_time'\"\n                                                :title=\"$t('work_time')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= workTime ? workTime: 0#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                        </kendo-grid>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                            <v-card-actions class=\"modal_footer\">\n                                <v-btn class=\"btn_cancel\" @click=\"dialogm = false\">{{$t('cancel')}}</v-btn>\n                                <v-btn color=\"primary\" class=\"white--text capitalize\" @click=\"onSaveClose\">\n                                    {{$t('confirm_report')}}\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-col>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-btn style=\"width: 100%;\" color=\"primary\" @click=\"search()\" class=\" white--text float-right text-capitalize\">\n                        {{$t('search')}}\n                    </v-btn>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\">\n            <kendo-datasource ref=\"dataSourceTimeCard\"\n                :data=\"timeCardLine\"\n                :sort=\"sort\"/>\n            <kendo-grid id=\"gridInput\" class=\"grid-function\"\n                :data-source-ref=\"'dataSourceTimeCard'\"\n                :editable=\"false\"\n                :scrollable-virtual=\"true\"\n                :column-menu=\"false\">\n                <kendo-grid-column\n                    :field=\"'employeeId'\"\n                    :title=\"$t('employee_id')\"\n                    :template=\"'<span>#= employeeId#</span>'\"\n                    readonly\n                    :width=\"150\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'employeeName'\"\n                    :title=\"$t('employee_name')\"\n                    readonly\n                    :width=\"200\"\n                    :template=\"'<span>#= employeeName#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'workDay'\"\n                    :title=\"$t('workDay')\"\n                    readonly\n                    :width=\"120\"\n                    :template=\"'<span>#= workDay#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'paidHours'\"\n                    :title=\"$t('work_hours')\"\n                    readonly\n                    :width=\"120\"\n                    :template=\"'<span>#= paidHours#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeWeekend'\"\n                    :title=\"$t('over_time_weekend')\"\n                    readonly\n                    :template=\"'<span>#= overTimeWeekend#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeNight'\"\n                    :title=\"$t('over_time_night')\"\n                    readonly\n                    :template=\"'<span>#= overTimeNight || 0#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeHoliday'\"\n                    :title=\"$t('over_time_holiday')\"\n                    readonly\n                    :template=\"'<span>#= overTimeHoliday#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n            </kendo-grid>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"  type=\"loading\"/>\n    </v-row>\n</template>\n<script>\nimport UploadExcelComponent from '@/components/upload_excel/TimeCard.vue';\nimport kendo from \"@progress/kendo-ui\";\nimport TimeCardLine from \"@/scripts/model/TimeCardLine\";\nimport EmployeeModel from '@/scripts/model/Employee'\nimport TimeCard from \"@/scripts/model/TimeCard\";\nimport PayrollRun from \"@/scripts/model/PayrollRun\";\nimport PayrollList from \"@/scripts/model/PayrollList\"\n\nconst instituteHandler = require(\"@/scripts/instituteHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nconst axios \t= require('axios');\nconst timeCardLineModel = new TimeCardLine({})\nconst employeeModel = new EmployeeModel({})\nconst timeCardModel = new TimeCard({})\nconst payrollRunModel = new PayrollRun({})\nconst employeeHandler = require(\"@/scripts/employeeHandler\")\nconst payrollHandler = require(\"@/scripts/payrollHandler\")\nconst locationHandler = require(\"@/scripts/locationHandler\")\nconst settingsHandler = require(\"@/scripts/settingsHandler\")\nconst currencyType = {\n    FUNCTIONAL_CURRENCY: 'fun-c',\n    TRANSACTION_CURRENCY: 'txn-c',\n    REPORTING_CURRENCY: 'rpt-c',\n    TAX_EXCHANGE_CURRENCY: 'tax-c',\n}\n\n/* Cookie */\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\n\nexport default {\n    props:['propInput'],\n    data: () =>({\n        loading: false,\n        disabled: true,\n        disabledL: false,\n        disabledG: false,\n        showLoading: true,\n        journal_date: \"\",\n        dialogm: false,\n        tableData: [],\n        tableHeader: [],\n        dateFormat: timeCardLineModel.dateFormat,\n        timeFormat: timeCardLineModel.timeFormat,\n        employeeData: [],\n        monthOf: '',\n        date: new Date().toISOString().substr(0, 10),\n        location: [],\n        segment: [],\n        employee: employeeModel,\n        timeCard: timeCardModel,\n        payrollRun: payrollRunModel,\n        locationSelected: '',\n        segmentSelected: '',\n        setCardHeight: false,\n        natureInput:[\n            {name: 'Timesheet'},\n            {name: 'Timecard'},\n            {name: 'Fixed'}\n        ],\n        timeCardLine: [],\n        recordList: [],\n        natureInputSelected:'Fixed',\n        number: '',\n        prefix: '',\n        payNumber: {},\n        result: {},\n        exchangeRate: {},\n        btnEnabled: true,\n        sort:[\n            { field: 'employeeId', dir: 'asc' }\n        ],\n        period: {},\n        loggedUser: {\n            id: cookie.creator,\n            name: cookie.email\n        },\n        baseCurrency: {},\n        departments: [],\n        department: \"\",\n        natureContracts:[\n            {id: \"fixed_duration_contract\", name: \"Fixed Duration Contract\"},\n            {id: \"undetermined_duration_contract\", name: \"Undetermined Duration Contract\"},\n            {id: \"contractd\", name: \"Contracted\"}\n        ],\n        natureContract: \"\",\n        employeeGroups: [],\n        employeeGroup: \"\"\n    }),\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        'upload-excel-component':UploadExcelComponent,\n        'month-picker' : ()=> import('@/components/custom_templates/MonthPicker'),\n        'date-picker' : ()=> import('@/components/custom_templates/DatePickerComponent')\n    },\n    methods: {\n        numberFormat(value){\n            let rate = value.rate\n            return kendo.toString( kendo.parseFloat(1/rate),`n0`)\n        },\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        ChangeNature() {\n            if (this.natureInputSelected === 'Timecard') {\n                this.btnEnabled = false\n            }else {\n                this.btnEnabled = true\n            }\n        },\n        monthOfChange(){\n            this.generateNumber()\n        },\n        beforeUpload(file) {\n            const isLt1M = file.size / 1024 / 1024 < 1\n            if (isLt1M) {\n                return true\n            }\n            this.$message({\n                message: 'Please do not upload files larger than 1m in size.',\n                type: 'warning'\n            })\n            return false\n        },\n        handleSuccess({ results, header }) {\n            results.forEach(element => {\n                var utc_days  = Math.floor(element.date - 25569);\n                var utc_value = utc_days * 86400;                                        \n                var date_info = new Date(utc_value * 1000);\n                var fractional_day = element.date - Math.floor(element.date) + 0.0000001;\n                var total_seconds = Math.floor(86400 * fractional_day);\n                var seconds = total_seconds % 60;\n                total_seconds -= seconds;\n                var hours = Math.floor(total_seconds / (60 * 60));\n                var minutes = Math.floor(total_seconds / 60) % 60;\n                var current_datetime =  new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);\n                element.date    = current_datetime\n                element.dateFormat = this.dateFormat\n                var utc_days_time_in  = Math.floor(element.clockedIn - 25569);\n                var utc_value_time_in = utc_days_time_in * 86400;                                        \n                var date_info_time_in = new Date(utc_value_time_in * 1000);\n                var fractional_time_in = element.clockedIn - Math.floor(element.clockedIn) + 0.0000001;\n                var total_seconds_time_in = Math.floor(86400 * fractional_time_in);\n                var seconds_time_in = total_seconds_time_in % 60;\n                total_seconds_time_in -= seconds_time_in;\n                var hours_time_in = Math.floor(total_seconds_time_in / (60 * 60));\n                var minutes_time_in = Math.floor(total_seconds_time_in / 60) % 60;\n                var current_time_in =  new Date(date_info_time_in.getFullYear(), date_info_time_in.getMonth(), date_info_time_in.getDate(), hours_time_in, minutes_time_in, seconds_time_in);\n                element.clockedIn    = current_time_in\n\n                var utc_days_time_out  = Math.floor(element.clockedOut - 25569);\n                var utc_value_time_out = utc_days_time_out * 86400;                                        \n                var date_info_time_out = new Date(utc_value_time_out * 1000);\n                var fractional_time_out = element.clockedOut - Math.floor(element.clockedOut) + 0.0000001;\n                var total_seconds_time_out = Math.floor(86400 * fractional_time_out);\n                var seconds_time_out = total_seconds_time_out % 60;\n                total_seconds_time_out -= seconds_time_out;\n                var hours_time_out = Math.floor(total_seconds_time_out / (60 * 60));\n                var minutes_time_out = Math.floor(total_seconds_time_out / 60) % 60;\n                var current_time_out =  new Date(date_info_time_out.getFullYear(), date_info_time_out.getMonth(), date_info_time_out.getDate(), hours_time_out, minutes_time_out, seconds_time_out);\n                element.clockedOut    = current_time_out\n                element.timeFormat  = this.timeFormat\n            });\n            this.tableData = results\n            this.tableHeader = header\n        },\n        onSaveClose(){\n            this.autoCalculate()\n            this.groupBy()\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let dataTimeCard = {\n                        id:                       this.timeCard.id ? this.timeCard.id : '',\n                        monthOf:                  kendo.toString(new Date(this.monthOf),'yyyy-MM-dd'),\n                        timeCardLine:             this.timeCardLine,\n                        totalWork:                this.totalWork,\n                        totalOverTimeWeekend:     this.totalOverTimeWeekend,\n                        totalOverTimeHoliday:     this.totalOverTimeHoliday,\n                        totalOverTimeNight:       this.totalOverTimeNight,\n                        location:                 this.locationSelected,\n                        locationId:               this.locationSelected.id,\n                        segment:                  this.segmentSelected,\n                        segmentId:                this.segmentSelected.id,\n                        period:                   this.period,\n                    };\n                    payrollHandler.createTimeCard(dataTimeCard).then(response => {\n                        if (response.data.statusCode === 201) {\n                            this.$snotify.success('Success')\n                            this.close()\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n                }, 300);\n            })\n        },\n        autoCalculate() {\n            let ds = this.$refs.dataSourceInput.kendoWidget(),\n            // specificWorks = [],\n            totalWork = 0,\n            totalOverTimeWeekend = 0,\n            totalOverTimeHoliday = 0,\n            totalOverTimeNight   = 0;\n            ds.data().forEach(value => {\n                totalWork += kendo.parseFloat(value.workTime)\n                totalOverTimeWeekend += kendo.parseFloat(value.overTimeWeekend)\n                totalOverTimeHoliday += kendo.parseFloat(value.overTimeHoliday)\n                totalOverTimeNight   += kendo.parseFloat(value.overTimeNight)\n            })\n            this.totalWork              = totalWork\n            this.totalOverTimeWeekend   = totalOverTimeWeekend\n            this.totalOverTimeHoliday   = totalOverTimeHoliday\n            this.totalOverTimeNight     = totalOverTimeNight\n        },\n        groupBy() {\n            let ds = this.$refs.dataSourceInput.kendoWidget();\n            let helper = {};\n            let result = ds.data().reduce(function(r, o) {\n                let key = o.date + '-' + o.employeeId;\n                if(!helper[key]) {\n                    helper[key] = Object.assign({}, o); // create a copy of o\n                    r.push(helper[key]);\n                } else {\n                    helper[key].workTime += o.workTime;\n                }\n                return r;\n            }, []);\n            let lastResult = {}\n            let employees = this.employees\n            let last_result = result.reduce(function(m, n) {\n                let key = n.employeeId\n                if(!lastResult[key]) {\n                    lastResult[key] = Object.assign({}, n); // create a copy of o\n                    m.push(lastResult[key]);\n                } else {\n                    employees.forEach(function(em) {\n                        if(key == em.employeeId){\n                            lastResult[key].workTime += n.workTime;\n                            lastResult[key].employeeUuid  = em.id;\n                        }\n                    });\n                }\n                return m;\n            }, []);\n            let timeCardLine =  last_result.map(n=>{\n                return new TimeCardLine(n)\n            })\n            this.timeCardLine = timeCardLine\n        },\n        async loadEmployee(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employees = []\n                    employeeHandler.center().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.employees = res.data.data\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        close() {\n            this.dialogm = false\n        },\n        async loadLocation() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    locationHandler.list().then(res => {\n                        if(res.data.statusCode === 200){\n                            this.location = res.data.data\n                        }\n                        \n                    })\n                }, 300);\n            })\n        },\n        async loadSegment() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getSeg().then(res => {\n                        if(res.data.statusCode === 200){\n                            this.segment = res.data.data        \n                        }\n                    })\n                }, 300);\n            })\n        },\n        filterEmployee(){\n            if(this.natureInputSelected == \"Fixed\"){\n                let result = this.recordList.filter(n =>n.salaryType ==\"Monthly\" && n.applyOvertime == false);\n                let timeCardList = result.map(index =>{\n                    let bank = index.employee.bank\n                    return {\n                        employeeUuid:               index.employee.id ? index.employee.id: '',\n                        salary:                     parseFloat(index.salary),\n                        employeeId:                 index.employeeId,\n                        bank:                       {\n                            bankName:       bank.bankName,\n                            bankUuid:       bank.id || '',\n                            bankAccount:    index.employee.bankAccount\n                        } ,\n                        employeeName:               index.employee.firstName +' '+ index.employee.lastName,\n                        natureEmployee:             index.employee.natureEmployee,\n                        payrollLiabilitie:          index.employee.payrollLiabilitie,\n                        paymentMethod:              index.employee.paymentMethod,\n                        spouseNatureEmployee:       index.employee.spouseNatureEmployee,\n                        workingStatus:              index.employee.workingStatus,\n                        spouseGender:               index.employee.spouseGender,\n                        gender:                     index.employee.gender,\n                        noOfChildren:               index.employee.noOfChildren,\n                        overTimeHoliday:            0,\n                        overTimeWeekend:            0,\n                        overTimeNight:              0,\n                        workDay:                    0,\n                        workTime:                   0,\n                        benefit:                    index.benefit,\n                        totalBenefit:               0 ,\n                        currency:                   index.currency ? index.currency: {},\n                        location:                   index.location,\n                        segment:                    index.segment,\n                        salaryType:                 index.salaryType.name,\n                        startingTime:               index.startingTime,\n                        position:                   index.position,\n                        natureContract:             index.natureContract,\n                        earning:                    parseFloat(index.salary),\n                        paidHours:                  0,\n                        deduction:                  0,\n                        netPay:                     0,\n                    }\n                })\n                this.timeCardLine = timeCardList\n                window.console.log('timeCardList', this.timeCardLine)\n                this.showLoading = false;\n            }else{\n                let param =  {\n                    'monthOf':      kendo.toString( new Date(this.monthOf),'yyyy-MM-dd'),\n                    'selectTime':   this.natureInputSelected\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        payrollHandler.getTimeCard(param).then(res => {\n                            if(res.data.statusCode === 200){\n                                let result = res.data.data;\n                                if(result.length > 0){\n                                    if(result[0].timeCardLine.length > 0){\n                                        window.console.log()\n                                        let result_timecard = result[0].timeCardLine;\n                                        let result_record = []\n                                        if(this.employeeGroup){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.employeeGroup == n.group);\n                                        }else if(this.locationSelected.id){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.locationSelected.id == n.location.id);\n                                        }else if(this.department){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.department == n.department.id);\n                                        }else if(this.natureContract){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.natureContract == n.natureContract.id);\n                                        }else{\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true);\n                                        }\n                                        let timeCardList = [];\n                                        result_timecard.forEach(function(tc) {\n                                            let time_employeeId = tc.employeeId;\n                                            let totalBenefit = 0;\n                                            let deduction = 0;\n                                            let netPay = 0;\n                                            const re =  result_record.filter(m => m.employeeId ===  time_employeeId).map(item =>{\n                                                item.benefit.forEach(function(b){\n                                                    if(b.amount){\n                                                        totalBenefit += parseFloat(b.amount)\n                                                    }\n                                                }) \n                                                let payrollLiabilitie       =  item.employee.payrollLiabilitie\n                                                let period = result[0].period\n                                                let overTimeNight = tc.overTimeNight * parseFloat(period.overtimeNight)\n                                                let overTimeWeekend = tc.overTimeWeekend * parseFloat(period.overtimeForWeekend)\n                                                let overTimeHoliday = tc.overTimeHoliday * parseFloat(period.overtimeForNationalHoliday)\n                                                let totalHours = tc.workTime + overTimeNight + overTimeWeekend + overTimeHoliday\n                                                let totaloverTime = overTimeNight + overTimeWeekend + overTimeHoliday\n                                                let workDay = tc.workTime / parseFloat(period.hourPerDay)\n                                                let salaryAmount = 0\n                                                let salary = parseFloat(item.salary)\n                                                if(item.salaryType == \"Monthly\"){\n                                                    let salaryHours = salary / (parseFloat(period.hourPerDay) * parseFloat(period.workingDay)) \n                                                    salaryAmount = salary + (salaryHours * totaloverTime)\n                                                }else{\n                                                    salaryAmount = salary * totalHours\n                                                }\n                                                let bank = item.employee.bank\n                                                return {\n                                                    employeeUuid:               item.employee.id ? item.employee.id: '',\n                                                    salary:                     salaryAmount,\n                                                    employeeId:                 tc.employeeId,\n                                                    bank:                       {\n                                                        bankName:       bank.bankName,\n                                                        bankUuid:       bank.id || '',\n                                                        bankAccount:    item.employee.bankAccount\n                                                    },\n                                                    spouseNatureEmployee:       item.employee.spouseNatureEmployee,\n                                                    workingStatus:              item.employee.workingStatus,\n                                                    spouseGender:               item.employee.spouseGender,\n                                                    gender:                     item.employee.gender,\n                                                    employeeName:               item.employee.firstName +' '+   item.employee.lastName,\n                                                    natureEmployee:             item.employee.natureEmployee,\n                                                    noOfChildren:               item.employee.noOfChildren,\n                                                    payrollLiabilitie:          payrollLiabilitie,\n                                                    paymentMethod:              item.employee.paymentMethod,\n                                                    overTimeHoliday:            tc.overTimeHoliday,\n                                                    overTimeWeekend:            tc.overTimeWeekend,\n                                                    overTimeNight:              tc.overTimeNight,\n                                                    workDay:                    workDay || 0,\n                                                    paidHours:                  tc.workTime,\n                                                    totalWorkinghours:          tc.workTime,\n                                                    currency:                   tc.currency ? tc.currency: {},\n                                                    totalBenefit:               parseFloat(totalBenefit) ,\n                                                    location:                   item.location,\n                                                    segment:                    item.segment,\n                                                    salaryType:                 item.salaryType.name,\n                                                    startingTime:               item.startingTime,\n                                                    position:                   item.position,\n                                                    natureContract:             item.natureContract,\n                                                    earning:                    parseFloat(item.salary) + parseFloat(totalBenefit),\n                                                    deduction:                  deduction,\n                                                    netPay:                     netPay,\n                                                }\n                                            })\n                                            if(re.length >0){\n                                                timeCardList.push(re[0])\n                                            }\n                                        });\n                                        this.timeCardLine = timeCardList\n                                        this.showLoading = false\n                                    }else{\n                                        let result_record = []\n                                        if(this.employeeGroup){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.employeeGroup == n.group);\n                                        }else if(this.locationSelected.id){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.locationSelected.id == n.location.id);\n                                        }else if(this.department){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.department == n.department.id);\n                                        }else if(this.natureContract){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.natureContract == n.natureContract.id);\n                                        }else{\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true);\n                                        }\n                                        let timesheet = []\n                                        result.forEach(function(tc) {\n                                            window.console.log(tc.employee.id)\n                                            let time_employee_id = tc.employee.id;\n                                            let totalBenefit = 0;\n                                            let deduction = 0;\n                                            let netPay = 0;\n                                            let period = tc.period\n                                            // let totalHours = 0\n                                            const re =  result_record.filter(m => m.employee_id ===  time_employee_id).map(item =>{\n                                                item.benefit.forEach(function(b){\n                                                    if(b.amount){\n                                                        totalBenefit += parseFloat(b.amount)\n                                                    }\n                                                })\n                                                let overTimeNight = tc.overTimeNight * parseFloat(period.overtimeNight)\n                                                let overtimeHoursWeekend = tc.overtimeHoursWeekend * parseFloat(period.overtimeForWeekend)\n                                                let overtimeHoursHoliday = tc.overtimeHoursHoliday * parseFloat(period.overtimeForNationalHoliday)\n                                                let totalHours = tc.workingHours + overTimeNight + overtimeHoursWeekend + overtimeHoursHoliday\n                                                let workDay = tc.workingHours /parseFloat(tc.period.hourPerDay)\n                                                let totaloverTime = overTimeNight + overtimeHoursWeekend + overtimeHoursHoliday\n                                                let salary = parseFloat(item.salary)\n                                                let salaryAmount = 0\n                                                if(item.salaryType == \"Monthly\"){\n                                                    let salaryHours = salary / (parseFloat(tc.period.hourPerDay) * parseFloat(tc.period.workingDay)) \n                                                    salaryAmount = salary + (salaryHours * totaloverTime)\n                                                }else{\n                                                    salaryAmount = salary * totalHours\n                                                }\n                                                let bank = tc.employee.bank\n                                                return {\n                                                    employeeUuid:       tc.employee.id,\n                                                    salary:             salaryAmount,\n                                                    employeeId:         tc.employee.employeeId,\n                                                    gender:             tc.employee.gender,\n                                                    employee:           tc.employee,\n                                                    payrollLiabilitie:  tc.employee.payrollLiabilitie,\n                                                    bank:                       {\n                                                        bankName:       bank.bankName,\n                                                        bankUuid:       bank.id,\n                                                        bankAccount:    tc.employee.bankAccount\n                                                    },\n                                                    spouseNatureEmployee:tc.employee.spouseNatureEmployee,\n                                                    workingStatus:      tc.employee.workingStatus,\n                                                    spouseGender:       tc.employee.spouseGender,\n                                                    paymentMethod:      tc.employee.paymentMethod,\n                                                    natureEmployee:     tc.employee.natureEmployee,\n                                                    noOfChildren:       tc.employee.noOfChildren,\n                                                    employeeName:       tc.employee.firstName +' '+   tc.employee.lastName,\n                                                    overTimeHoliday:    tc.overtimeHoursHoliday,\n                                                    overTimeWeekend:    tc.overtimeHoursWeekend,\n                                                    overTimeNight:      tc.overTimeNight,\n                                                    paidHours:          tc.workingHours,\n                                                    workingHours:       tc.workingHours,\n                                                    period:             tc.period,\n                                                    workDay:            workDay || 0,\n                                                    benefit:            item.benefit,\n                                                    totalBenefit:       parseFloat(totalBenefit),\n                                                    totalWorkinghours:  parseFloat(totalHours),\n                                                    segment:            item.segment,\n                                                    location:           item.location,\n                                                    salaryType:         item.salaryType.name,\n                                                    startingTime:       item.startingTime,\n                                                    position:           item.position,\n                                                    currency:           item.currency ? item.currency: {},\n                                                    natureContract:     item.natureContract,\n                                                    earning:            parseFloat(item.salary) + parseFloat(totalBenefit),\n                                                    deduction:          deduction,\n                                                    netPay:             netPay,\n                                                }\n                                            })\n                                            window.console.log('re',re)\n                                            if(re.length > 0){\n                                                timesheet.push(re[0])\n                                            }\n                                        })\n                                        this.timeCardLine = timesheet\n                                        this.showLoading = false;\n                                    }\n                                }else{\n                                    this.timeCardLine = []\n                                    this.showLoading = false;\n                                }\n                            }\n                        })\n                    }, 300);\n                })\n            }\n        },\n        async search(){\n            let location_id = ''\n            if(this.locationSelected){\n                location_id = this.locationSelected.id\n            }\n            let param ={\n                status:             1,\n                location_id:        location_id || \"\",\n                department_id:      this.department,\n                natureContract_id:  this.natureContract,\n                employeeGroup_id:   this.employeeGroup || ''\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    employeeHandler.getRecord(param).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            this.recordList = res.data.data\n                            this.showLoading = true;\n                            this.filterEmployee()\n                        }\n                    })\n                }, 300);\n            })\n        },\n        saveNext(){\n            let ds = this.$refs.dataSourceTimeCard.kendoWidget()\n            let totalEmployee = 0;\n            ds.data().forEach(value => {\n                if(value){\n                    totalEmployee += 1\n                }\n            })\n            this.totalEmployee = totalEmployee\n            let dataSource = ds.data()\n            this.payrollList = dataSource.map(index=>{\n                return new PayrollList({\n                    applyOvertime:      index.applyOvertime,\n                    date:               this.date,\n                    benefit:            index.benefit || '',\n                    // employee:           index.employee,\n                    bank:               index.bank,\n                    employeeId:         index.employeeId,\n                    employee_id:        index.employee_id,\n                    employeeUuid:       index.employeeUuid,\n                    employeeName:       index.employeeName,\n                    gender:             index.gender,\n                    location:           index.location,\n                    natureRecord:       index.natureRecord,\n                    natureEmployee:     index.natureEmployee,\n                    natureSalary:       index.natureSalary,\n                    overTime:           index.overTime,\n                    position:           index.position,\n                    salary:             index.salary,\n                    salary1:            index.salary,\n                    salaryType:         index.salaryType,\n                    totalBenefit:       index.totalBenefit,\n                    segment:            index.segment ? index.segment: [],\n                    startingTime:       index.startingTime,\n                    status:             index.status,\n                    workDay:            index.workDay,\n                    currency:           index.currency,\n                    period:             index.period,\n                    overTimeHoliday:    index.overTimeHoliday,\n                    overTimeWeekend:    index.overTimeWeekend,\n                    overTimeNight:      index.overTimeNight,\n                    workingHours:       index.workingHours,\n                    totalWorkinghours:  index.totalWorkinghours,\n                    paidHours:          index.paidHours,\n                    paymentMethod:      index.paymentMethod,\n                    payrollLiabilitie:  index.payrollLiabilitie,\n                    natureContract:     index.natureContract,\n                    spouseNatureEmployee:index.spouseNatureEmployee,\n                    workingStatus:      index.workingStatus,\n                    spouseGender:       index.spouseGender,\n                    noOfChildren:       index.noOfChildren      \n                })\n            })\n            if(this.payrollList.length > 0 && this.baseCurrency && this.exchangeRate.rate){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = new PayrollRun({\n                            id:                   this.$route.params.id,\n                            location:             this.locationSelected,\n                            monthOf:              kendo.toString(new Date(this.monthOf),'yyyy-MM-dd'),\n                            sequcencing:          parseInt(kendo.toString(new Date(this.monthOf),'yyyy')),\n                            totalEmployee:        this.totalEmployee,\n                            currency:             this.baseCurrency,\n                            exchangeRate:         this.exchangeRate,\n                            date:                 kendo.toString(new Date(this.date),'yyyy-MM-dd'),\n                            payNumber:            this.payNumber,\n                            number:               this.number,\n                            created:              kendo.toString(new Date(),'yyyy-MM-dd'),\n                            lastNumber:           this.lastNumber,\n                            abbr:                 this.payNumber.abbr,\n                            type:                 'payroll',\n                            natureInput:          this.natureInputSelected,\n                            referenceNumber:      this.payNumber.abbr+this.payNumber.numberSeparator + this.number,\n                            payrollList:          this.payrollList,\n                            step:                 2,      \n                            department:           this.department,\n                            natureContract:       this.natureContract,\n                            employeeGroup:        this.employeeGroup,\n                            loggedUser:           this.loggedUser, \n                        });\n                        this.showLoading = true\n                        window.console.log('data_____',data)\n                        payrollHandler.createPayroll(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.$snotify.success('Success')\n                                this.loadSuccess(response.data.statusCode)\n                                this.close()\n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }, 300);\n                })\n            }else{\n                if(!this.exchangeRate.rate){\n                    this.$snotify.error('Exchange rate not found! please check again')\n                }\n                if(this.payrollList.length == 0){\n                    this.$snotify.error('Data not found please check again')\n                }\n            }\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        async loadPayrollList(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            window.console.log('Rannnnn', res)\n                            const resultPay = res.data.data\n                            if(resultPay.length > 0){                            \n                                this.result = resultPay[0]\n                                this.loadPayrollItem(this.result)\n                                // this.date = resultPay.date\n                                if(this.result.monthOf !== ''){\n                                    this.monthOf = kendo.toString(new Date(this.result.monthOf), \"yyyy-MM\")\n                                    this.generateNumber()\n                                }\n                                this.locationSelected = this.result.location\n                                this.employeeGroup = this.result.employeeGroup\n                                if(this.employeeGroup !== \"\"){\n                                    this.disabledL = true\n                                }\n                            }\n                            this.showLoading = false;\n                        }\n                    })\n                }, 300);\n            })\n        },\n        loadPayrollItem(result){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    payrollHandler.getPayrollItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            let resutl_item = res.data.data\n                            this.timeCardLine = resutl_item\n                            this.showLoading = false\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        loadPrefixes() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getPrefixes().then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.prefixList = result.filter(p => p.type =='payroll')\n                            this.prefix = this.prefixList[0]\n                            this.payNumber = this.prefix\n                        }\n                    })\n                }, 300)\n            })\n        },\n        generateNumber() {\n            let resultNumber = this.result\n            if(resultNumber.number){\n                this.number     = resultNumber.number\n                this.lastNumber = resultNumber.lastNumber\n                this.payNumber  = resultNumber.payNumber\n            }else{\n                let montOf_format = kendo.toString(new Date(this.monthOf),'yyyy-MM-dd');\n                if(montOf_format == \"\"){\n                    let month_year = kendo.toString(new Date(),'yyyy-MM-dd')\n                    montOf_format = month_year.setDate(1)\n                }\n                let sequcencing = ''\n                if(this.payNumber.sequcencing ==\"Year\"){\n                    sequcencing = new Date(montOf_format).toISOString().substr(0, 4)\n                }else if(this.payNumber.sequcencing ==\"Month\"){\n                    sequcencing = new Date(montOf_format).toISOString().substr(0, 7)\n                }else{\n                    sequcencing = ''\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            abbr:           this.payNumber.abbr,\n                            structure:      this.payNumber.structure,\n                            date:           montOf_format,\n                            type:           'payroll',\n                            pkId:           'par-',\n                            sequcencing:    sequcencing\n                        }\n                        window\n                        payrollHandler.getPrefixNumber(data).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                const result = res.data.data\n                                const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                this.number = number\n                                this.lastNumber = lastNumber\n                                this.showLoading = false;\n                            }\n                        })\n                    }, 300);\n                })\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        downloadTimeCard(){\n            axios.get('https://s3.ap-southeast-1.amazonaws.com/images.banhji/files/Timecard.xlsx', {\n            // If you forget this, your download will be corrupt.\n                responseType: 'blob'\n            }).then((response) => {\n                const link = document.createElement('a');\n                link.href = window.URL.createObjectURL(\n                    new Blob([response.data])\n                );\n                link.setAttribute('download', 'Timecard.xlsx');\n                document.body.appendChild(link);\n                link.click();\n            }); \n        },\n        async loadBaseCurrency() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    instituteHandler.getOneCompany(cookie.instituteId).then(res => {\n                        this.baseCurrency = res.baseCurrency\n                    })\n                    resolve('resolved');\n                }, 200);\n            });\n        },\n        async loadLastExchangeRate(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    let getDate = new Date()\n                    let date_tax_payroll = new Date(getDate.getFullYear(), getDate.getMonth(), 15);\n                    let date = kendo.toString(new Date(date_tax_payroll),'yyyy-MM-dd')\n                    window.console.log(date)\n                    let code = 'KHR'\n                    if (code !== undefined || code !== '') {\n                        this.showLoading = true\n                        currencyHandler.getLastExchangeRateTaxByDate(date, code).then(res => {\n                            if (res.data.statusCode === 200) {\n                                window.console.log(1,res.data)\n                                this.showLoading = false\n                                this.exchangeRate = res.data.data[0]\n                            }\n                        })\n                    }\n\n                }, 300)\n            })\n        },\n        async loadCurrencyData(type) {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    currencyHandler.list(type).then(response => {\n                        if (response.data.statusCode === 200) {\n                            if (type === currencyType.FUNCTIONAL_CURRENCY) {\n                                this.funcCurrencyList = response.data.data\n                            } else if (type === currencyType.TRANSACTION_CURRENCY) {\n                                this.currencyList = response.data.data\n                            }\n                            this.showLoading = false\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        goBack(){\n            let payroll_id = this.$route.params.id\n            if(payroll_id && this.result.step == 1){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        payrollHandler.deleteTransactions(payroll_id).then(response => {\n                            if (response.statusCode === 200) {\n                                this.loadPayrollList()\n                                this.showLoading = false\n                                window.history.go(-1)\n                            }\n                        })\n                    },300)\n                })\n            }else{\n                window.history.go(-1)\n            }\n        },\n        async loadPeriod(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getPeriiod().then(res => {\n                        this.period = res[0]\n                    })\n                }, 300);\n            })\n        },\n        locationChange(){\n            let location = this.locationSelected\n            window.console.log('location',location)\n            if(location !== null){\n                this.disabledG = true\n                this.loading = true\n                this.disabled = false\n                window.console.log(1, location)\n                this.loadDepartment(location.id)\n            }else{\n                this.department = \"\"\n                this.natureContract = \"\"\n                this.disabledG = false\n                this.disabled = true\n                this.loading = false \n                \n\n                window.console.log(2, location)\n            }\n        },\n        async loadDepartment(location_id){\n            let param = {\n                location_id: location_id\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getDepartment(param).then(res => {\n                        this.departments = res\n                        if(this.departments.length > 0){\n                            this.loading = false\n                        }\n                    })\n                }, 300);\n            })\n        },\n        async loadGroup(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getGroup().then(res => {\n                        this.employeeGroups = res.data\n                    })\n                }, 300);\n            })\n        },\n        employeeGroupChange (){\n            if(this.employeeGroup){\n                this.disabledL = true\n            }else{\n                this.disabledL = false\n            }\n        }\n    },\n    async mounted() {\n        await this.loadPeriod()\n        await this.loadPayrollList()\n        await this.loadEmployee()\n        await this.loadLocation()\n        await this.loadSegment()\n        // await this.loadRecord()\n        await this.loadPrefixes()\n        await this.loadBaseCurrency()\n        await this.loadLastExchangeRate()\n        await this.loadGroup()\n        await this.loadCurrencyData(currencyType.TRANSACTION_CURRENCY)\n    },\n    watch: {\n        propInput(){\n            if (this.propInput !== undefined) {\n                this.loadPayrollList()\n                this.loadLastExchangeRate()\n            }\n        }\n    },\n}\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"],"sourceRoot":"src/views/payroll/payroll_run"}]}