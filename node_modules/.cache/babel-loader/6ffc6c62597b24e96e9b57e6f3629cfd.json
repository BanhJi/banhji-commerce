{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/services_projects/items/services_items/Images.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/services_projects/items/services_items/Images.vue","mtime":1638499443303},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWFjY291bnRpbmctd2ViLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC1zZWFyY2gtcGFyYW1zLmpzIjsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBzZXJ2aWNlSXRlbUhhbmRsZXIgPSByZXF1aXJlKCJAL3NjcmlwdHMvc2VydmljZUl0ZW1IYW5kbGVyIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnc2VydmljZSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzcmM6ICcnLAogICAgICB1cmw6ICdodHRwczovL3MzLWFwLXNvdXRoZWFzdC0xLmFtYXpvbmF3cy5jb20vaW1hZ2VzLmJhbmhqaS8nLAogICAgICBpbWdQcmV2aWV3OiAnJywKICAgICAgZmlsZVNpemVSdWxlczogW2Z1bmN0aW9uIChmaWxlcykgewogICAgICAgIHJldHVybiAhZmlsZXMgfHwgIWZpbGVzLnNvbWUoZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgICAgIHJldHVybiBmaWxlLnNpemUgPiAxMDI0ICogMTAyNDsKICAgICAgICB9KSB8fCAnSW1hZ2Ugc2l6ZSBzaG91bGQgYmUgbGVzcyB0aGFuIDEgTUIhJzsKICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblVwZGF0ZTogZnVuY3Rpb24gb25VcGRhdGUoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ29uVXBkYXRlJywgdGhpcy5zZXJ2aWNlID8gdGhpcy5zZXJ2aWNlIDoge30pOwogICAgfSwKICAgIHByZXZpZXc6IGZ1bmN0aW9uIHByZXZpZXcoaW1nKSB7CiAgICAgIGlmICh0aGlzLnNlcnZpY2UpIHsKICAgICAgICBpZiAodGhpcy5zZXJ2aWNlLmlkKSB7CiAgICAgICAgICB0aGlzLmltZ1ByZXZpZXcgPSB0aGlzLnVybCArIGltZy5iaWdUaHVtYjsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbWdQcmV2aWV3ID0gJyc7CiAgICAgIH0KICAgIH0sCiAgICBkZWZhdWx0UHJldmlldzogZnVuY3Rpb24gZGVmYXVsdFByZXZpZXcoKSB7CiAgICAgIGlmICh0aGlzLnNlcnZpY2UpIHsKICAgICAgICBpZiAodGhpcy5zZXJ2aWNlLmlkKSB7CiAgICAgICAgICAvLyB3aW5kb3cuY29uc29sZS5sb2codGhpcy5wcm9kdWN0LmltYWdlcy5kZWZhdWx0LmJpZ1RodW1iKQogICAgICAgICAgdGhpcy5pbWdQcmV2aWV3ID0gdGhpcy51cmwgKyB0aGlzLnNlcnZpY2UuaW1hZ2VzLmRlZmF1bHQuYmlnVGh1bWI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9ICcnOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmltZ1ByZXZpZXcgPSAnJzsKICAgICAgfQogICAgfSwKICAgIG9uRmlsZUNoYW5nZTogZnVuY3Rpb24gb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpbnB1dCA9IGUudGFyZ2V0OyAvLyBFbnN1cmUgdGhhdCB5b3UgaGF2ZSBhIGZpbGUgYmVmb3JlIGF0dGVtcHRpbmcgdG8gcmVhZCBpdAoKICAgICAgaWYgKGlucHV0LmZpbGVzICYmIGlucHV0LmZpbGVzWzBdKSB7CiAgICAgICAgaWYgKGlucHV0LmZpbGVzWzBdLnNpemUgPiAxMDI0ICogMTAyNCkgewogICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgYWxlcnQoJ0ZpbGUgdG9vIGJpZyAoPiAxTUIpJyk7CiAgICAgICAgICB0aGlzLnNyYyA9ICcnOwogICAgICAgICAgdGhpcy5pbWdGaWxlID0gJyc7CiAgICAgICAgICB0aGlzLiRyZWZzLmZpbGVVcGxvYWQudmFsdWUgPSBudWxsOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyBjcmVhdGUgYSBuZXcgRmlsZVJlYWRlciB0byByZWFkIHRoaXMgaW1hZ2UgYW5kIGNvbnZlcnQgdG8gYmFzZTY0IGZvcm1hdAogICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7IC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIHJ1biwgd2hlbiBGaWxlUmVhZGVyIGZpbmlzaGVzIGl0cyBqb2IKCiAgICAgICAgICByZWFkZXIub25sb2FkZW5kID0gZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgLy8gTm90ZTogYXJyb3cgZnVuY3Rpb24gdXNlZCBoZXJlLCBzbyB0aGF0ICJ0aGlzLmltYWdlRGF0YSIgcmVmZXJzIHRvIHRoZSBpbWFnZURhdGEgb2YgVnVlIGNvbXBvbmVudAogICAgICAgICAgICAvLyBSZWFkIGltYWdlIGFzIGJhc2U2NCBhbmQgc2V0IHRvIGltYWdlRGF0YQogICAgICAgICAgICBfdGhpcy5pbWdGaWxlID0gZS50YXJnZXQucmVzdWx0OwogICAgICAgICAgfTsgLy8gU3RhcnQgdGhlIHJlYWRlciBqb2IgLSByZWFkIGZpbGUgYXMgYSBkYXRhIHVybCAoYmFzZTY0IGZvcm1hdCkKCgogICAgICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhpbnB1dC5maWxlc1swXSk7CiAgICAgICAgICB0aGlzLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZS50YXJnZXQuZmlsZXNbMF0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHVwbG9hZEltYWdlOiBmdW5jdGlvbiB1cGxvYWRJbWFnZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJyk7CgogICAgICAgICAgICAgICAgICAgIGlmIChfdGhpczIuaW1nRmlsZSkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBfdGhpczIuc2VydmljZS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgZmlsZTogX3RoaXMyLmltZ0ZpbGUKICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlSXRlbUhhbmRsZXIudXBsb2FkKGRhdGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN0YXR1c0NvZGUgPT09IDIwMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuc2VydmljZSA9IHJlc3BvbnNlLmRhdGEuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzMi4kZW1pdCgnb25VcGRhdGUnLCByZXNwb25zZS5kYXRhLmRhdGEpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIuJHNub3RpZnkuc3VjY2VzcygnU3VjY2VzcycpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIuZXJyb3JzLnB1c2goZSk7CiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLiRzbm90aWZ5LmVycm9yKCdQbGVhc2UgYnJvd3NlIHRvIHVwbG9hZCBpbWFnZScpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwgMTAwKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgYnRuRW5hYmxlZDogZnVuY3Rpb24gYnRuRW5hYmxlZCgpIHsKICAgICAgaWYgKHRoaXMuc2VydmljZSkgewogICAgICAgIHJldHVybiAhdGhpcy5zZXJ2aWNlLmlkOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGRlZmF1bHRUaHVtYjogZnVuY3Rpb24gZGVmYXVsdFRodW1iKCkgewogICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7CiAgICAgICAgaWYgKHRoaXMuc2VydmljZS5pZCkgewogICAgICAgICAgcmV0dXJuIHRoaXMudXJsICsgdGhpcy5zZXJ2aWNlLmltYWdlcy5kZWZhdWx0LnRodW1iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIGdhbGxlcnlUaHVtYjogZnVuY3Rpb24gZ2FsbGVyeVRodW1iKCkgewogICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7CiAgICAgICAgaWYgKHRoaXMuc2VydmljZS5pZCkgewogICAgICAgICAgcmV0dXJuIHRoaXMuc2VydmljZS5pbWFnZXMuZ2FsbGVyeTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuIHt9OwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBkZWZhdWx0VGh1bWI6IGZ1bmN0aW9uIGRlZmF1bHRUaHVtYigpIHsKICAgICAgaWYgKHRoaXMuc2VydmljZSkgewogICAgICAgIGlmICh0aGlzLnNlcnZpY2UuaWQpIHsKICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9IHRoaXMudXJsICsgdGhpcy5zZXJ2aWNlLmltYWdlcy5kZWZhdWx0LmJpZ1RodW1iOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmltZ1ByZXZpZXcgPSAnJzsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbWdQcmV2aWV3ID0gJyc7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["Images.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" sm=\"12\" class=\" pt-0\">\n            <v-row>\n                <v-col sm=\"7\" class=\"py-0\">\n                    <p class=\"font_18 mb-0 mt-3\">{{ service.name }}</p>\n                </v-col>\n                <v-col sm=\"5\" class=\"py-0\">\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"image\"\n                        :rules=\"fileSizeRules\"\n                        accept=\".png, .jpg, .jpeg\"\n                        ref=\"fileUpload\"\n                        @change=\"onFileChange\"/>\n                </v-col>\n            </v-row>\n            <v-divider/>\n            <v-row>\n                <v-col sm=\"5\" style=\"height: 400px; overflow: hidden; overflow-x: auto;\n                overflow-y: scroll; white-space: nowrap; \">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-3\">\n                            <v-img v-bind:src=\"`${defaultThumb}`\" style=\"width:70%;\" @click=\"defaultPreview\"/>\n                        </v-col>\n                    </v-row>\n                    <v-row v-for=\"img in galleryThumb\" v-bind:key=\"img.thumb\">\n                        <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-3\">\n                            <v-img v-bind:src=\"url + `${img.thumb}`\" style=\"width:70%;\" @click=\"preview(img)\"/>\n                        </v-col>\n                    </v-row>\n                </v-col>\n\n                <v-col sm=\"7\" cols=\"12\" class=\"pb-0\">\n                    <v-img :src=\"imgPreview\"/>\n                    <p class=\"mb-0 text-center font_16\">\n                        <v-icon size=\"13\" class=\"mr-2 primary--text\">fa fa-check</v-icon>\n                        {{ $t('default_image') }}\n                    </p>\n                    <p class=\"mt-4 text-center text-grey\">{{ $t('hint_you_can') }}</p>\n                </v-col>\n\n            </v-row>\n            <v-divider class=\"mb-3\"/>\n            <v-row>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                </v-col>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                    <v-btn color=\"primary\" :disabled=\"btnEnabled\" class=\"px-3  white--text text-capitalize\"\n                           @click=\"uploadImage\">\n                        {{ $t('upload') }}\n                    </v-btn>\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nconst serviceItemHandler = require(\"@/scripts/serviceItemHandler\")\nexport default {\n    props: ['service'],\n    data: () => ({\n        src: '',\n        url: 'https://s3-ap-southeast-1.amazonaws.com/images.banhji/',\n        imgPreview: '',\n        fileSizeRules: [\n            files => !files || !files.some(file => file.size > 1024 * 1024) || 'Image size should be less than 1 MB!'\n        ]\n    }),\n    methods: {\n        onUpdate() {\n            this.$emit('onUpdate', this.service ? this.service : {})\n        },\n        preview(img) {\n            if (this.service) {\n                if (this.service.id) {\n                    this.imgPreview = this.url + img.bigThumb\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        },\n        defaultPreview() {\n            if (this.service) {\n                if (this.service.id) {\n                    // window.console.log(this.product.images.default.bigThumb)\n                    this.imgPreview = this.url + this.service.images.default.bigThumb\n                } else {\n                    this.imgPreview = ''\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        },\n        onFileChange(e) {\n            let input = e.target\n            // Ensure that you have a file before attempting to read it\n            if (input.files && input.files[0]) {\n                if (input.files[0].size > 1024 * 1024) {\n                    e.preventDefault();\n                    alert('File too big (> 1MB)');\n                    this.src = ''\n                    this.imgFile = ''\n                    this.$refs.fileUpload.value = null;\n                } else {\n                    // create a new FileReader to read this image and convert to base64 format\n                    let reader = new FileReader()\n                    // Define a callback function to run, when FileReader finishes its job\n                    reader.onloadend = (e) => {\n                        // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                        // Read image as base64 and set to imageData\n                        this.imgFile = e.target.result\n                    }\n                    // Start the reader job - read file as a data url (base64 format)\n                    reader.readAsBinaryString(input.files[0])\n                    this.src = URL.createObjectURL(e.target.files[0])\n                }\n            }\n        },\n        async uploadImage() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    if (this.imgFile) {\n                        let data = {\n                            id: this.service.id,\n                            file: this.imgFile\n                        }\n                        serviceItemHandler.upload(data).then(response => {\n                            if (response.data.statusCode === 201) {\n                                // this.service = response.data.data\n                                this.$emit('onUpdate', response.data.data)\n                                this.$snotify.success('Success')\n                            }\n                        }).catch(e => {\n                            this.errors.push(e)\n                        })\n                    } else {\n                        this.$snotify.error('Please browse to upload image')\n                    }\n                }, 100)\n            })\n        }\n    },\n    computed: {\n        btnEnabled() {\n            if (this.service) {\n                return !this.service.id;\n            } else {\n                return false\n            }\n\n        },\n        defaultThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    return this.url + this.service.images.default.thumb\n                } else {\n                    return {}\n                }\n            } else {\n                return {}\n            }\n\n        },\n        galleryThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    return this.service.images.gallery\n                } else {\n                    return {}\n                }\n            } else {\n                return {}\n            }\n\n        }\n    },\n    watch: {\n        defaultThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    this.imgPreview = this.url + this.service.images.default.bigThumb\n                } else {\n                    this.imgPreview = ''\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        }\n    }\n}\n</script>"],"sourceRoot":"src/views/services_projects/items/services_items"}]}