{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/supplierHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/supplierHandler.js","mtime":1638499443066},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktY29tbWVyY2Uvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciIpLmRlZmF1bHQ7CgpyZXF1aXJlKCJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2guanMiKTsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJyk7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnLi4vYXBpVXJsLmpzJyk7Cgp2YXIgdW5rbm93biA9IHJlcXVpcmUoJy4uL2FwaS91bmtub3duJyk7IC8vIEdlbmRlcgoKCm1vZHVsZS5leHBvcnRzLmdlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB0cnkgewogICAgdmFyIGdlbmRlciA9IHVua25vd24uZ2VuZGVyOwogICAgcmV0dXJuIGdlbmRlcjsKICB9IGNhdGNoIChlcnJvcikgewogICAgd2luZG93LmNvbnNvbGUuZXJyb3IoZXJyb3IpOwogIH0KfTsgLy8gU2VhcmNoCgoKbW9kdWxlLmV4cG9ydHMuc2VhcmNoID0gZnVuY3Rpb24gKCkgewogIHRyeSB7CiAgICB2YXIgcmVzcG9uc2UgPSBhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfc2VhcmNoOwogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICB3aW5kb3cuY29uc29sZS5lcnJvcihlcnJvcik7CiAgfQp9OyAvLyBDZW50ZXIKCgptb2R1bGUuZXhwb3J0cy5jZW50ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHN1cHBsaWVyVHlwZUlkLCBzZWFyY2gpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgIHJlc3BvbnNlID0gW107CgogICAgICAgICAgICBpZiAoIShzZWFyY2ggIT09ICcnICYmIHNlYXJjaCAhPT0gbnVsbCAmJiBzZWFyY2ggIT09ICdudWxsJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLnN1cHBsaWVyLnN1cHBsaWVyX2NlbnRlciArICcvJyArIHN1cHBsaWVyVHlwZUlkICsgJy9jZW50ZXIvJyArIHNlYXJjaCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfY2VudGVyICsgJy8nICsgc3VwcGxpZXJUeXBlSWQgKyAnL2NlbnRlcicpOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE1OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgY2FzZSAxODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDE1XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTsgLy8gTGlzdAoKCm1vZHVsZS5leHBvcnRzLmxpc3QgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICB2YXIgcmVzcG9uc2U7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLnN1cHBsaWVyLnN1cHBsaWVyX2dldCk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICBjYXNlIDEwOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDddXSk7Cn0pKTsKCm1vZHVsZS5leHBvcnRzLnVybCA9IGZ1bmN0aW9uICgpIHsKICB0cnkgewogICAgcmV0dXJuIGFwaVVybC5zdXBwbGllci5zdXBwbGllcl9jZW50ZXIgKyAnL3VuZGVmaW5lZC9jZW50ZXInOwogIH0gY2F0Y2ggKGVycm9yKSB7CiAgICB3aW5kb3cuY29uc29sZS5lcnJvcihlcnJvcik7CiAgfQp9OyAvLyBHRVQgTElTVCBCWSBEQVdJTkUKCgptb2R1bGUuZXhwb3J0cy5nZXRBbGwgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICB2YXIgcmVzcG9uc2U7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLnN1cHBsaWVyLnN1cHBsaWVyX2dldCk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICBjYXNlIDc6CiAgICAgICAgICBfY29udGV4dDMucHJldiA9IDc7CiAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDMudDApOwoKICAgICAgICBjYXNlIDEwOgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgfQogICAgfQogIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDddXSk7Cn0pKTsgLy8gR2V0IE9uZQoKbW9kdWxlLmV4cG9ydHMuZ2V0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGlkKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfZ2V0T25lICsgaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDQudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94MykgewogICAgcmV0dXJuIF9yZWY0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvLyBzYXZlCgoKbW9kdWxlLmV4cG9ydHMuY3JlYXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KGRhdGEpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfcG9zdCwgZGF0YSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDUudDAgPSBfY29udGV4dDVbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0NS50MCk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g0KSB7CiAgICByZXR1cm4gX3JlZjUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIFNlYXJjaCBEcm9wZG93bgoKCm1vZHVsZS5leHBvcnRzLnNlYXJjaFZlbmRvciA9IC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KCkgewogIHZhciBzdHJGaWx0ZXIsCiAgICAgIHJlc3BvbnNlLAogICAgICBfYXJnczYgPSBhcmd1bWVudHM7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIHN0ckZpbHRlciA9IF9hcmdzNi5sZW5ndGggPiAwICYmIF9hcmdzNlswXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3M2WzBdIDogJyc7CiAgICAgICAgICBfY29udGV4dDYucHJldiA9IDE7CiAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDQ7CiAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5zdXBwbGllci5zdXBwbGllcl9zZWFyY2ggKyBzdHJGaWx0ZXIpOwoKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ni5zZW50OwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgY2FzZSA4OgogICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSA4OwogICAgICAgICAgX2NvbnRleHQ2LnQwID0gX2NvbnRleHQ2WyJjYXRjaCJdKDEpOwogICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ2LnQwKTsKCiAgICAgICAgY2FzZSAxMToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlNiwgbnVsbCwgW1sxLCA4XV0pOwp9KSk7Cgptb2R1bGUuZXhwb3J0cy5kaXJlY3RvcnkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcodmFsKSB7CiAgICB2YXIgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDcucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfZGlyZWN0b3J5LCB7CiAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICBzZWFyY2g6IHZhbC5zZWFyY2gsCiAgICAgICAgICAgICAgICB0eXBlOiB2YWwudHlwZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ny5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQ3LnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDcudDAgPSBfY29udGV4dDdbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0Ny50MCk7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTcsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g1KSB7CiAgICByZXR1cm4gX3JlZjcuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgptb2R1bGUuZXhwb3J0cy5pbXBvcnRDcmVhdGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmOCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTgoZGF0YSkgewogICAgdmFyIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU4JChfY29udGV4dDgpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ4LnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KGFwaVVybC5zdXBwbGllci5pbXBvcnRDcmVhdGUsIGRhdGEpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDguc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQ4LnQwID0gX2NvbnRleHQ4WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDgudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ4LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU4LCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NikgewogICAgcmV0dXJuIF9yZWY4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvL3RvZG86IHN1cHBsaWVyIGF1dG8gbnVtYmVyIGdlbmVyYXRlCgoKbW9kdWxlLmV4cG9ydHMubGFzdE51bWJlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWY5ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOShzdHJGaWx0ZXIpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOSQoX2NvbnRleHQ5KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ5Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVcmwuc3VwcGxpZXIuY3VzdG9tZXJfbGFzdE51bWJlciwgc3RyRmlsdGVyKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDkuc2VudCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDkucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0OS50MCA9IF9jb250ZXh0OVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ5LnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU5LCBudWxsLCBbWzAsIDZdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NykgewogICAgcmV0dXJuIF9yZWY5LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvL3RvZG86IGNoZWNrIHN1cHBsaWVyIGhhcyB0cmFuc2FjdGlvbiAsIGNhbiBiZSBkZWxldGUKCgptb2R1bGUuZXhwb3J0cy5oYXNUeG4gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMTAgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMChzdHJGaWx0ZXIpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTAucHJldiA9IF9jb250ZXh0MTAubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDEwLnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5zdXBwbGllci5oYXNfdHhuICsgc3RyRmlsdGVyKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQxMC5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0MTAucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0MTAudDAgPSBfY29udGV4dDEwWyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDEwLnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMTAsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g4KSB7CiAgICByZXR1cm4gX3JlZjEwLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOyAvL3RvZG86IHVwZGF0ZSBzdGF0dXMgc3VwcGxpZXIgdG8gZGVsZXRlCgoKbW9kdWxlLmV4cG9ydHMudXBkYXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjExID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTEoc3RyRmlsdGVyKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTExJChfY29udGV4dDExKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDExLnByZXYgPSBfY29udGV4dDExLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQxMS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnB1dChhcGlVcmwuc3VwcGxpZXIuc3VwcGxpZXJfcHV0LCBzdHJGaWx0ZXIpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTEuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDExLnNlbnQpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQxMS5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQxMS50MCA9IF9jb250ZXh0MTFbImNhdGNoIl0oMCk7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0MTEudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUxMSwgbnVsbCwgW1swLCA2XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDkpIHsKICAgIHJldHVybiBfcmVmMTEuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/scripts/supplierHandler.js"],"names":["axios","require","apiUrl","unknown","module","exports","gender","error","window","console","search","response","supplier","supplier_search","center","supplierTypeId","get","supplier_center","list","supplier_get","url","getAll","id","supplier_getOne","create","data","post","supplier_post","searchVendor","strFilter","directory","val","supplier_directory","params","type","importCreate","lastNumber","customer_lastNumber","hasTxn","has_txn","update","put","supplier_put"],"mappings":";;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAAvB,C,CAEA;;;AACAG,MAAM,CAACC,OAAP,CAAeC,MAAf,GAAwB,YAAY;AAChC,MAAI;AACA,QAAMA,MAAM,GAAGH,OAAO,CAACG,MAAvB;AACA,WAAOA,MAAP;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,CAAqBA,KAArB;AACH;AACJ,CAPD,C,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAeK,MAAf,GAAwB,YAAY;AAChC,MAAI;AACA,QAAMC,QAAQ,GAAGT,MAAM,CAACU,QAAP,CAAgBC,eAAjC;AACA,WAAOF,QAAP;AACH,GAHD,CAGE,OAAOJ,KAAP,EAAc;AACZC,IAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,CAAqBA,KAArB;AACH;AACJ,CAPD,C,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAeS,MAAf;AAAA,qEAAwB,iBAAgBC,cAAhB,EAAgCL,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,YAAAA,QAFY,GAED,EAFC;;AAAA,kBAGZD,MAAM,KAAK,EAAX,IAAiBA,MAAM,KAAK,IAA5B,IAAoCA,MAAM,KAAK,MAHnC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAIKV,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBK,eAAhB,GAAkC,GAAlC,GAAwCF,cAAxC,GAAyD,UAAzD,GAAsEL,MAAhF,CAJL;;AAAA;AAIZC,YAAAA,QAJY;AAAA,6CAKLA,QALK;;AAAA;AAAA;AAAA,mBAOKX,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBK,eAAhB,GAAkC,GAAlC,GAAwCF,cAAxC,GAAyD,SAAnE,CAPL;;AAAA;AAOZJ,YAAAA,QAPY;AAAA,6CAQLA,QARK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAWhBH,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAcA;;;AACAH,MAAM,CAACC,OAAP,CAAea,IAAf,wEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAESlB,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBO,YAA1B,CAFT;;AAAA;AAERR,UAAAA,QAFQ;AAAA,4CAIPA,QAJO;;AAAA;AAAA;AAAA;AAMdH,UAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAUAH,MAAM,CAACC,OAAP,CAAee,GAAf,GAAqB,YAAY;AAC7B,MAAI;AACA,WAAOlB,MAAM,CAACU,QAAP,CAAgBK,eAAhB,GAAkC,mBAAzC;AACH,GAFD,CAEE,OAAOV,KAAP,EAAc;AACZC,IAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf,CAAqBA,KAArB;AACH;AACJ,CAND,C,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAegB,MAAf,wEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEOrB,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBO,YAA1B,CAFP;;AAAA;AAEVR,UAAAA,QAFU;AAAA,4CAITA,QAJS;;AAAA;AAAA;AAAA;AAMhBH,UAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,G,CASA;;AACAH,MAAM,CAACC,OAAP,CAAeW,GAAf;AAAA,sEAAqB,kBAAgBM,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUtB,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBW,eAAhB,GAAkCD,EAA5C,CAFV;;AAAA;AAEPX,YAAAA,QAFO;AAAA,8CAINA,QAJM;;AAAA;AAAA;AAAA;AAMbH,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,I,CAUA;;;AACAH,MAAM,CAACC,OAAP,CAAemB,MAAf;AAAA,sEAAwB,kBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEOzB,KAAK,CAAC0B,IAAN,CAAWxB,MAAM,CAACU,QAAP,CAAgBe,aAA3B,EAA0CF,IAA1C,CAFP;;AAAA;AAEVd,YAAAA,QAFU;AAAA,8CAGTA,QAHS;;AAAA;AAAA;AAAA;AAKhBH,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAeuB,YAAf,wEAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,SAAP,8DAAmB,EAAnB;AAAA;AAAA;AAAA,iBAEC7B,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBC,eAAhB,GAAkCgB,SAA5C,CAFD;;AAAA;AAEhBlB,UAAAA,QAFgB;AAAA,4CAGfA,QAHe;;AAAA;AAAA;AAAA;AAKtBH,UAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;;AASAH,MAAM,CAACC,OAAP,CAAeyB,SAAf;AAAA,sEAA2B,kBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE/B,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgBoB,kBAA1B,EAA8C;AAC/DC,cAAAA,MAAM,EAAE;AACJvB,gBAAAA,MAAM,EAAEqB,GAAG,CAACrB,MADR;AAEJwB,gBAAAA,IAAI,EAAEH,GAAG,CAACG;AAFN;AADuD,aAA9C,CAFF;;AAAA;AAEfvB,YAAAA,QAFe;AAAA,8CAQZA,QARY;;AAAA;AAAA;AAAA;AAUnBH,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AAVmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAaAH,MAAM,CAACC,OAAP,CAAe8B,YAAf;AAAA,sEAA8B,kBAAOV,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECzB,KAAK,CAAC0B,IAAN,CAAWxB,MAAM,CAACU,QAAP,CAAgBuB,YAA3B,EAAyCV,IAAzC,CAFD;;AAAA;AAEhBd,YAAAA,QAFgB;AAAA,8CAGfA,QAHe;;AAAA;AAAA;AAAA;AAKtBH,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AALsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAe+B,UAAf;AAAA,sEAA4B,kBAAOP,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEP7B,KAAK,CAAC0B,IAAN,CAAWxB,MAAM,CAACU,QAAP,CAAgByB,mBAA3B,EAAgDR,SAAhD,CAFO;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIpBrB,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AAJoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAeiC,MAAf;AAAA,uEAAwB,mBAAOT,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEH7B,KAAK,CAACgB,GAAN,CAAUd,MAAM,CAACU,QAAP,CAAgB2B,OAAhB,GAA0BV,SAApC,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBrB,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAH,MAAM,CAACC,OAAP,CAAemC,MAAf;AAAA,uEAAwB,mBAAOX,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEH7B,KAAK,CAACyC,GAAN,CAAUvC,MAAM,CAACU,QAAP,CAAgB8B,YAA1B,EAAwCb,SAAxC,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBrB,YAAAA,MAAM,CAACC,OAAP,CAAeF,KAAf;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const axios = require('axios')\nconst apiUrl = require('../apiUrl.js')\nconst unknown = require('../api/unknown')\n\n// Gender\nmodule.exports.gender = function () {\n    try {\n        const gender = unknown.gender\n        return gender\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// Search\nmodule.exports.search = function () {\n    try {\n        const response = apiUrl.supplier.supplier_search\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// Center\nmodule.exports.center = async function (supplierTypeId, search) {\n    try {\n        let response = []\n        if (search !== '' && search !== null && search !== 'null') {\n            response = await axios.get(apiUrl.supplier.supplier_center + '/' + supplierTypeId + '/center/' + search)\n            return response\n        } else {\n            response = await axios.get(apiUrl.supplier.supplier_center + '/' + supplierTypeId + '/center')\n            return response\n        }\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// List\nmodule.exports.list = async function () {\n    try {\n        const response = await axios.get(apiUrl.supplier.supplier_get)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.url = function () {\n    try {\n        return apiUrl.supplier.supplier_center + '/undefined/center'\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// GET LIST BY DAWINE\nmodule.exports.getAll = async () => {\n    try {\n        const response = await axios.get(apiUrl.supplier.supplier_get);\n\n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n// Get One\nmodule.exports.get = async function (id) {\n    try {\n        const response = await axios.get(apiUrl.supplier.supplier_getOne + id)\n\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// save\nmodule.exports.create = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.supplier.supplier_post, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n// Search Dropdown\nmodule.exports.searchVendor = async (strFilter = '') => {\n    try {\n        const response = await axios.get(apiUrl.supplier.supplier_search + strFilter)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.directory = async function (val) {\n    try {\n        let response = await axios.get(apiUrl.supplier.supplier_directory, {\n            params: {\n                search: val.search,\n                type: val.type\n            }\n        })\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\nmodule.exports.importCreate = async (data) => {\n    try {\n        const response = await axios.post(apiUrl.supplier.importCreate, data)\n        return response\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n//todo: supplier auto number generate\nmodule.exports.lastNumber = async (strFilter) => {\n    try {\n        return await axios.post(apiUrl.supplier.customer_lastNumber, strFilter)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//todo: check supplier has transaction , can be delete\nmodule.exports.hasTxn = async (strFilter) => {\n    try {\n        return await axios.get(apiUrl.supplier.has_txn + strFilter)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n//todo: update status supplier to delete\nmodule.exports.update = async (strFilter) => {\n    try {\n        return await axios.put(apiUrl.supplier.supplier_put, strFilter)\n    } catch (error) {\n        window.console.error(error)\n    }\n}"]}]}