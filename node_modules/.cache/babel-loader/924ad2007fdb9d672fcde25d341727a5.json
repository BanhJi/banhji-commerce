{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/task/TaskTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/task/TaskTypes.vue","mtime":1638499443180},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTG9hZGluZ01lIGZyb20gJ0AvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IFRhc2tUeXBlIGZyb20gIkAvc2NyaXB0cy9tb2RlbC9UYXNrVHlwZSI7Cgp2YXIgdGFza0hhbmRsZXIgPSByZXF1aXJlKCJAL3NjcmlwdHMvdGFza0hhbmRsZXIiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiIiwKICBjb21wb25lbnRzOiB7CiAgICBMb2FkaW5nTWU6IExvYWRpbmdNZSAvLyAnYXBwLWRhdGVwaWNrZXInOiBEYXRlUGlja2VyQ29tcG9uZW50LAogICAgLy8gQmFua0Nvbm5lY3Rpb24sCgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN0YXJ0X2RhdGU6ICIiLAogICAgICBkaWFsb2dNOiAiIiwKICAgICAgZW5kX2RhdGU6ICIiLAogICAgICBkYXRlU29ydGVyczogWydUb2RheScsICdUaGlzIFdlZWsnLCAnVGhpcyBNb250aCcsICdUaGlzIFllYXInXSwKICAgICAgam91cm5hbF9lbnRyaWVzOiBbXSwKICAgICAgLy8gTG9hZGluZ01lCiAgICAgIGNvbXBlbGV0TG9hZGluZzogZmFsc2UsCiAgICAgIGlzTG9hZGVkOiBmYWxzZSwKICAgICAgdGFza1R5cGU6IG5ldyBUYXNrVHlwZSh7fSksCiAgICAgIHRhc2tUeXBlczogW10sCiAgICAgIHRhc2tDYXRlZ29yaWVzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9ubG9hZERpYWxvZzogZnVuY3Rpb24gb25sb2FkRGlhbG9nKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5sb2FkVGFza0NhdGVnb3J5KCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF90aGlzLmRpYWxvZ00gPSB0cnVlOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgc2F2ZVRhc2tUeXBlOiBmdW5jdGlvbiBzYXZlVGFza1R5cGUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMi50YXNrVHlwZS50eXBlcyA9ICd0eXBlJzsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiB0YXNrSGFuZGxlci5zYXZlVGFza1R5cGUoX3RoaXMyLnRhc2tUeXBlKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmxvYWRUYXNrVHlwZSgpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMyLmRpYWxvZ00gPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBsb2FkVGFza1R5cGU6IGZ1bmN0aW9uIGxvYWRUYXNrVHlwZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRhc2tIYW5kbGVyLmdldEFsbFRhc2tUeXBlKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMy50YXNrVHlwZXMgPSByZXM7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbG9hZFRhc2tDYXRlZ29yeTogZnVuY3Rpb24gbG9hZFRhc2tDYXRlZ29yeSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIHRhc2tIYW5kbGVyLmdldEFsbFRhc2tDYXRlZ29yeSgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgICBfdGhpczQudGFza0NhdGVnb3JpZXMgPSByZXM7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczUubG9hZFRhc2tUeXBlKCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNSk7CiAgICB9KSkoKTsKICB9LAogIGNvbXB1dGVkOiB7fQp9Ow=="},{"version":3,"sources":["TaskTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,OAAA,SAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,0BAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,EADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA,CAEA;AACA;;AAHA,GAFA;AAOA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,CAAA,OAAA,EAAA,WAAA,EAAA,YAAA,EAAA,WAAA,CAJA;AAKA,MAAA,eAAA,EAAA,EALA;AAMA;AACA,MAAA,eAAA,EAAA,KAPA;AAQA,MAAA,QAAA,EAAA,KARA;AASA,MAAA,QAAA,EAAA,IAAA,QAAA,CAAA,EAAA,CATA;AAUA,MAAA,SAAA,EAAA,EAVA;AAWA,MAAA,cAAA,EAAA;AAXA,KAAA;AAAA,GAPA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,gBAAA,EADA;;AAAA;AAEA,gBAAA,KAAA,CAAA,OAAA,GAAA,IAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAJA;AAKA,IAAA,YALA,0BAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,GAAA,MAAA;AADA;AAAA,uBAEA,WAAA,CAAA,YAAA,CAAA,MAAA,CAAA,QAAA,EAAA,IAAA,CAAA,YAAA;AACA,kBAAA,MAAA,CAAA,YAAA;;AACA,kBAAA,MAAA,CAAA,OAAA,GAAA,KAAA;AACA,iBAHA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAXA;AAYA,IAAA,YAZA,0BAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,WAAA,CAAA,cAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,SAAA,GAAA,GAAA;AACA,iBAFA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,KAhBA;AAiBA,IAAA,gBAjBA,8BAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,WAAA,CAAA,kBAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,cAAA,GAAA,GAAA;AACA,iBAFA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AArBA,GApBA;AA2CA,EAAA,OA3CA,qBA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,MAAA,CAAA,YAAA,EADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,GA7CA;AA8CA,EAAA,QAAA,EAAA;AA9CA,CAAA","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col cols=\"9\" class=\"pt-0\">\n                        <h2 class=\"mb-0 font_20\">{{ $t('task_types') }}</h2>\n                        <p class=\"mb-0\">{{ $t('task_types_desc') }}</p>\n                    </v-col>\n                    <!-- <v-col cols=\"3\" class=\"\">\n                        <v-btn @click=\"onloadDialog\" color=\"primary\"\n                               class=\"dropdown_transactions white--text float-right text-capitalize\">\n                            {{ $t('new_type') }}\n                        </v-btn>\n                    </v-col> -->\n                </v-row>\n\n                <!-- loading -->\n                <LoadingMe\n                    :isLoading=\"compeletLoading\"\n                    :fullPage=\"false\"\n                    :myLoading=\"true\">\n\n                </LoadingMe>\n\n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <template>\n                            <v-simple-table class=\"attachment_table\">\n                                <template v-slot:default>\n                                    <thead>\n                                    <tr>\n                                        <th>{{ $t('name') }}</th>\n                                        <th>{{ $t('task_categories') }}</th>\n                                        <th>{{ $t('description') }}</th>\n                                        <th>{{ $t('action') }}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr v-for=\"tt in taskTypes\" v-bind:key=\"tt.id\">\n                                        <td class=\"text-bold\">{{ tt.name }}</td>\n                                        <td>{{ tt.category.name }}</td>\n                                        <td>{{ tt.description }}</td>\n                                        <td class=\"text-center\">\n\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </template>\n                            </v-simple-table>\n                        </template>\n                    </v-col>\n                </v-row>\n            </v-card>\n            <v-dialog v-model=\"dialogM\" max-width=\"500px\">\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"task_types\") }}</v-card-title>\n                        <v-icon  @click=\"dialogM = false\">close</v-icon>\n                   </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-row>\n                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                <label class=\"label\">{{ $t(\"name\") }}</label>\n                                <v-text-field v-model=\"taskType.name\" class=\"mt-1\" outlined placeholder=\"\"/>\n                            </v-col>\n                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                <label class=\"label\">{{ $t(\"task_categories\") }}</label>\n                                <v-select :items=\"taskCategories\" return-object item-text=\"name\" item-value=\"id\" v-model=\"taskType.category\" class=\"mt-1\" outlined placeholder=\"\"/>\n                            </v-col>\n                            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                <label class=\"label\">{{ $t(\"description\") }}</label>\n                                <v-textarea v-model=\"taskType.description\" class=\"mt-1\" no-resize height=\"100px\" outlined rows=\"3\"/>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                    <v-divider/>\n                    <v-card-actions class=\"modal_footer\">\n                        <v-btn class=\"btn_cancel\">{{ $t(\"cancel\") }}</v-btn>\n                        <v-btn @click=\"saveTaskType\" class=\"btn_save_close\"\n                        >{{ $t(\"save_close\") }}\n                        </v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from '@/components/Loading'\nimport TaskType from \"@/scripts/model/TaskType\";\nconst taskHandler = require(\"@/scripts/taskHandler\")\nexport default {\n    name: \"\",\n    components: {\n        LoadingMe,\n        // 'app-datepicker': DatePickerComponent,\n        // BankConnection,\n    },\n    data: () => ({\n        start_date: \"\",\n        dialogM: \"\",\n        end_date: \"\",\n        dateSorters: ['Today', 'This Week', 'This Month', 'This Year'],\n        journal_entries: [],\n        // LoadingMe\n        compeletLoading: false,\n        isLoaded: false,\n        taskType: new TaskType({}),\n        taskTypes: [],\n        taskCategories: [],\n    }),\n    methods: {\n        async onloadDialog() {\n            await this.loadTaskCategory()\n            this.dialogM = true\n        },\n        async saveTaskType() {\n            this.taskType.types = 'type'\n            await taskHandler.saveTaskType(this.taskType).then(() => {\n                this.loadTaskType()\n                this.dialogM = false\n            })\n        },\n        async loadTaskType() {\n            await taskHandler.getAllTaskType().then(res => {\n                this.taskTypes = res\n            })\n        },\n        async loadTaskCategory() {\n            await taskHandler.getAllTaskCategory().then(res => {\n                this.taskCategories = res\n            })\n        }\n    },\n    async mounted() {\n        await this.loadTaskType()\n    },\n    computed: {},\n};\n</script>\n<style scoped>\n</style>\n"],"sourceRoot":"src/views/compliance/task"}]}