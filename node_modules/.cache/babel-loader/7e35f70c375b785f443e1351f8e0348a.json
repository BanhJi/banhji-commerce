{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit/VAT.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit/VAT.vue","mtime":1640595536791},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VAT.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-2 px-6\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                            <h2 class=\"mb-0 font_20\">{{ $t('value_added_tax') }}</h2>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table>\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-bold text-uppercase\">{{ $t('description') }}</th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('monthof') }}</th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('code') }}</th>\n                                <th class=\"text-bold text-uppercase text-center\">{{ $t('amount') }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td>{{ $t('tax_credit_carried_from_last_month') }}</td>\n                                <td class=\"\">{{ newMonthOf }}</td>\n                                <td class=\"\">{{ balance.code }}</td>\n                                <td class=\"text-center\">{{ numberFormat(balance.balanceCredit) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('total_amount_input_tax') }}</td>\n                                <td class=\"\">{{ monthOf }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"text-center\">{{ totalAmountPurchase || numberFormat(totalAmountP) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('total_amount_output_tax') }}</td>\n                                <td class=\"\">{{ monthOf }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"text-center\">{{ numberFormat(amountSale) || numberFormat(totalAmountS) }}\n                                </td>\n                            </tr>\n                            <tr v-if=\"tBalance <= 0\">\n                                <td class=\"text-bold\">VAT to be paid</td>\n                                <td class=\"text-bold\">{{ monthOf }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"primary text-center white--text text-bold\">{{ totalBalance }}</td>\n                            </tr>\n                            <tr v-if=\"tBalance > 0\">\n                                <td class=\"text-bold\">(Credit Forward)</td>\n                                <td class=\"text-bold\">{{ monthOf }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"primary text-center text-bold white--text\">{{ totalBalance }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-bold\">{{ $t('vat_refund') }}</td>\n                                <td class=\"text-bold\">{{ monthOf }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"primary text-center white--text text-bold\">{{ numberFormat(vatRefund) }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n            </v-row>\n        </v-col>\n\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nconst purchaseHandler = require(\"@/scripts/compliance/handler/purchaseHandler\")\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n\n        search: {\n            start_date: \"\",\n            end_date: \"\"\n        },\n        balance: {},\n        sales: [],\n        purchases: [],\n        newMonthOf: '',\n        totalAmountP: 0,\n        totalAmountS: 0,\n        totalBalance: 0,\n        tBalance: 0,\n        vatRefund: 0,\n        statusSale: false,\n        statusPurchase: false,\n        vat: {},\n    }),\n    props: ['monthlyReturn', 'amountSale', 'totalAmountPurchase'],\n    watch: {\n        'amountSales': 'calculate',\n        'totalAmountPurchases': 'calculate',\n        'totalAmountP': 'calculate',\n        'totalAmountS': 'calculate',\n        'balanceCredit': 'calculate'\n    },\n    methods: {\n        async onUpdateBalance(credit, payment) {\n            this.$emit('getBalanceVAT', {credit: credit, payment: payment})\n        },\n        async loadBalance() {\n            this.showLoading = true\n            if (this.balance.balanceCredit === undefined) {\n                await this.onloadSale()\n                await this.onloadPurchase()\n                new Promise(resolve => {\n                    setTimeout(async () => {\n                        resolve('resolved');\n                        await this.calculate()\n                        this.showLoading = false\n                    }, 700)\n                })\n            }\n        },\n        async getBalance() {\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.vat.id\n            const monthly = new Date(this.monthlyReturn.monthOf).setMonth(new Date(this.monthlyReturn.monthOf).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            this.newMonthOf = monthOf\n            monthlyReturnHandler.getBalanceVat(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.balance = res.data.data[0]\n                } else {\n                    this.balance = {\n                        balanceCredit: 0,\n                        balancePayment: 0,\n                    }\n                }\n            })\n        },\n        async onloadVat() {\n            await monthlyReturnHandler.getVat().then(res => {\n                this.vat = res.data.data[0]\n            })\n        },\n        async onloadSale() {\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    await saleHandler.getByMrId(this.$route.params.id).then(async res => {\n                        this.sales = res.data.data\n                        await this.onCalculate()\n                    })\n                }, 100)\n            })\n        },\n        async onloadPurchase() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    purchaseHandler.getByMrId(this.$route.params.id).then(async res => {\n                        this.purchases = res.data.data\n                        await this.onCalculate()\n                    })\n                }, 100)\n            })\n        },\n        async onCalculate() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountP = 0,\n                        amountS = 0\n                    if (this.purchases.length > 0 && this.totalAmountPurchases === 0) {\n                        window.console.log('123')\n                        for (let i = 0; i < this.purchases.length; i++) {\n                            if (this.purchases[i].typeProduct.baseAmount !== \"Net\") {\n                                amountP += this.purchases[i].totalVAT\n                            }\n                        }\n                        this.totalAmountP = amountP\n                        window.console.log(amountP)\n                        this.statusPurchase = true\n                        window.console.log(this.totalAmountP, 'P')\n                    }\n                    if (this.sales.length > 0 && this.amountSale === 0) {\n                        window.console.log('987')\n                        for (let i = 0; i < this.sales.length; i++) {\n                            amountS += this.sales[i].totalVAT\n                        }\n                        this.totalAmountS = amountS\n                        this.statusSale = true\n                        window.console.log(this.totalAmountS, 'S')\n                    }\n                }, 100)\n            })\n        },\n        async calculate() {\n            await this.getBalance()\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    window.console.log(this.totalAmountS, this.totalAmountP, 'sale, purchase')\n                    let tBalance = 0, credit = 0, payment = 0\n                    if (this.statusSale && this.statusPurchase) {\n                        this.totalBalance = kendo.parseFloat(this.totalAmountP) + kendo.parseFloat(this.balance.balanceCredit) - kendo.parseFloat(this.totalAmountS)\n                    } else {\n                        window.console.log(this.totalAmountPurchase, this.amountSale, 'b1')\n                        this.totalBalance = kendo.parseFloat(this.totalAmountPurchase) + kendo.parseFloat(this.balance.balanceCredit) - kendo.parseFloat(this.amountSale)\n                    }\n                    this.tBalance = this.totalBalance\n                    if (this.totalBalance < 0) {\n                        tBalance = this.totalBalance * (-1)\n                        payment = this.totalBalance * (-1)\n                        this.totalBalance = `(${this.numberFormat(this.totalBalance * (-1))})`\n                    } else {\n                        credit = this.totalBalance\n                        tBalance = this.totalBalance\n                        this.totalBalance = this.numberFormat(this.totalBalance)\n                    }\n                    window.console.log(this.totalBalance, tBalance, 'total balance')\n                    // await this.addTxn(credit, payment)\n                    await this.onUpdateBalance(credit, payment)\n                }, 500)\n            })\n        },\n        async addTxn(credit, payment) {\n            if (credit >= 0 || payment >= 0) {\n                const data = {\n                    credit: credit,\n                    payment: payment,\n                    monthOf: this.monthlyReturn.monthOf,\n                    type: 'vat monthly',\n                    date: new Date().toJSON()\n                }\n                await monthlyReturnHandler.addTxnVAT(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n                    window.console.log(res)\n                })\n            }\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n2`)\n        },\n        onSearch() {\n            this.search = {\n                'start_date': this.start_date + '-01',\n                'end_date': this.end_date + '-01'\n            }\n        }\n    },\n    async mounted() {\n        window.console.log(this.totalAmountPurchase, 'tAp')\n        await this.onloadVat()\n        await this.loadBalance()\n    },\n    computed: {\n        balanceCredit() {\n            if (this.balance.balanceCredit > 0) {\n                return this.balance.balanceCredit\n            } else {\n                return 0\n            }\n        },\n        monthOf() {\n            if (this.monthlyReturn.id !== undefined) {\n                return this.monthlyReturn.monthOf\n            } else {\n                return ''\n            }\n        },\n        amountSales() {\n            if (this.amountSale !== undefined) {\n                window.console.log(this.amountSale, 'VAT Sale')\n                return this.amountSale\n            } else {\n                return 0\n            }\n        },\n        totalAmountPurchases() {\n            if (this.amountPurchase !== undefined) {\n                window.console.log(this.amountPurchase, 'VAT purchase')\n                return this.amountPurchase\n            } else {\n                return 0\n            }\n        },\n        amountPurchaseExculs() {\n            if (this.amountPurchaseExcul !== undefined) {\n                return this.amountPurchaseExcul\n            } else {\n                return 0\n            }\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'month-picker' : ()=> import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold' !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"],"sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit"}]}