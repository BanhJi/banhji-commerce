{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/insight/BudgetVariances.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/insight/BudgetVariances.vue","mtime":1638499443145},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetVariances.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <LoadingMe\n      type=\"loading\"\n      :isLoading=\"showLoading\"\n      :myLoading=\"true\"\n      :fullPage=\"false\"\n    />\n\n    <v-simple-table>\n      <template>\n        <tbody>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"revenues\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ revenue }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"cost_of_gods_sold\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ cogs }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"operating_expenses\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ operatingExpense }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                EBITDA\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ ebitda }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"net_profit\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ netProfit }}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </template>\n    </v-simple-table>\n  </div>\n</template>\n\n<script>\n// import {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport Helper from \"@/helper.js\";\nimport AccountModel from \"@/scripts/model/Account.js\";\n\nconst BudgetHandler = require(\"@/scripts/handler/workingcapital/budgetHandler\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\nexport default {\n  name: \"BudgetVariances\",\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n  },\n  data: () => ({\n    revenue: 0,\n    cogs: 0,\n    operatingExpense: 0,\n    ebitda: 0,\n    netProfit: 0,\n    // LoadingMe\n    showLoading: false,\n  }),\n  methods: {\n    async loadData() {\n      this.showLoading = true;\n\n      // Load Account List\n      let accounts = await this.$store.dispatch(\"accounting/getAccounts\");\n\n      let totalRevenue = 0,\n        totalActualRevenue = 0,\n        totalCogs = 0,\n        totalActualCogs = 0,\n        totalOptExp = 0,\n        totalActualOptExp = 0,\n        ebitda = 0,\n        actualEbitda = 0;\n\n      /* Set Current Fiscal Date */\n      let currencyFiscalDate = Helper.getFiscalDateByDate(new Date());\n\n      /* Budget */\n      let budgets = await BudgetHandler.getBudgetForConsolidate({\n        params: {\n          fiscal_year_uuid: currencyFiscalDate.uuid,\n        },\n      });\n\n      budgets.data.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          /* Amount */\n          value.amount = value.amount * -1;\n        }\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalRevenue += kendo.parseFloat(value.amount);\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalCogs += kendo.parseFloat(value.amount);\n        }\n\n        /* Operating Expenses */\n        if (\n          ~AccountTypeCode.OPERATING_EXPENSES.indexOf(\n            account.account_type.number\n          )\n        ) {\n          totalOptExp += kendo.parseFloat(value.amount);\n        }\n\n        /* EBITDA */\n        if(account.account_type.number === 32 || account.account_type.number === 40){\n          ebitda += kendo.parseFloat(value.amount);\n        }\n        if(account.account_type.number >= 33 && account.account_type.number <= 38){\n          ebitda -= kendo.parseFloat(value.amount);\n        }\n      });\n      /* End Budget */\n\n      /* Actual Budget */\n      let actuals = await BudgetHandler.getActualBudgetForConsolidate({\n        params: {\n          as_of_date:\n            kendo.toString(new Date(), \"yyyy-MM-dd\") + \"T23:59:59.999Z\", // As Of Date is Today\n          group_by: \"1\",\n        },\n      });\n\n      actuals.data.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.find((item) => item.uuid === value.accountUUID)\n        );\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalActualRevenue += kendo.parseFloat(value.balance);\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalActualCogs += kendo.parseFloat(value.balance);\n        }\n\n        /* Operating Expenses */\n        if (\n          ~AccountTypeCode.OPERATING_EXPENSES.indexOf(\n            account.account_type.number\n          )\n        ) {\n          totalActualOptExp += kendo.parseFloat(value.balance);\n        }\n\n        /* EBITDA */\n        if(account.account_type.number === 32 || account.account_type.number === 40){\n          actualEbitda += kendo.parseFloat(value.balance);\n        }\n        if(account.account_type.number >= 33 && account.account_type.number <= 38){\n          actualEbitda -= kendo.parseFloat(value.balance);\n        }\n      });\n      /* End Actual Budget */\n\n      /* Bind Data */\n      this.revenue = this.findVariancePercentage(\n        totalActualRevenue,\n        totalRevenue\n      );\n      this.cogs = this.findVariancePercentage(totalActualCogs, totalCogs);\n      this.operatingExpense = this.findVariancePercentage(\n        totalActualOptExp,\n        totalOptExp\n      );\n      this.ebitda = this.findVariancePercentage(actualEbitda, ebitda);\n      \n      let netProfit = totalRevenue - (totalCogs + totalOptExp);\n      let netActualProfit =\n        totalActualRevenue - (totalActualCogs + totalActualOptExp);\n      this.netProfit = this.findVariancePercentage(netActualProfit, netProfit);\n\n      this.showLoading = false;\n    },\n    /* Find Variance Percentage */\n    findVariancePercentage(num1, num2) {\n      let amt = 0;\n      if (num2 !== 0) {\n        amt = num1 / num2;\n      }\n\n      return kendo.toString(amt, \"p\");\n    },\n  },\n  mounted() {\n    this.loadData();\n  },\n};\n</script>\n\n<style scoped>\n.theme--light.v-data-table {\n  background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 32px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.v-data-table.average_sale > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 50px !important;\n}\n\n.v-data-table.collection_day\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr\n  > td {\n  height: 42px !important;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr.third:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: #898c8f !important;\n}\n</style>\n"],"sourceRoot":"src/views/budgeting/insight"}]}