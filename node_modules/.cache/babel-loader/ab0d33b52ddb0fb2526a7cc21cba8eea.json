{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue","mtime":1640658755378},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConsolidatedBudgetPerformance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <!-- Title -->\n        <v-row>\n            <v-col sm=\"5\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('consolidated_budget_performance_report')}}</h3>\n                <!-- <p class=\"mb-0\">{{$t('a_detail_breakdown_of_budget_by_months')}}</p> -->\n            </v-col>\n        </v-row>\n\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <label class=\"mb-1\">{{$t('fiscal_year')}}:</label>\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <label class=\"mb-1\">{{$t('from')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"startMonth\" \n                    @emitMonthOf=\"startMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <label class=\"mb-1\">{{$t('to')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"endMonth\" \n                    @emitMonthOf=\"endMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <label class=\"mb-1\">{{$t('budgets')}}:</label>\n                <budget-list-item-group \n                    :initBudgets=\"selectedBudgets\"\n                    :initFiscalYear=\"fiscalDate.uuid\" \n                    @emitBudgets=\"selectedBudgets = $event\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <!-- Reporting Language -->\n                <label class=\"mb-1\">{{$t('language')}}:</label>\n                <app-reporting-language :initLanguage=\"reportingLanguage\" @emitLanguage=\"reportingLanguage = $event\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-13\">\n                <v-btn\n                    class=\"white--text\"\n                    color=\"primary\"\n                    @click=\"search\"\n                >\n                    {{ $t(\"run_report\") }}\n                </v-btn>\n            </v-col>\n        </v-row>\n        \n        <!-- Grid -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <treelistdatasource \n                        ref=\"statementDS\"\n                        :data=\"statementList\"\n                        :sort=\"sortDefinition\"\n                        :schema-model=\"model\" />\n\n                    <treelist \n                        ref=\"statementTreeList\"\n                        data-source-ref=\"statementDS\"\n                        :resizable=\"true\"\n                        :columns=\"columns\"\n                        :dataBound=\"onDataBound\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import AccountModel from \"@/scripts/model/Account.js\";\n    import FiscalDateModel from \"@/scripts/model/FiscalDate.js\";\n    import StatementOfProfitOrLossModel from \"@/scripts/model/StatementOfProfitOrLoss\";\n\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n    \n    const incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            \"app-month-of-picker\": () => import('@/components/kendo_templates/MonthOfPicker'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n            'budget-list-item-group': () => import('@/components/dropdownlist/BudgetListItemGroup'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            selectedBudgets: [],\n            segmentIds: [],\n            statements : [],\n            statementList : [],\n            fiscalDate : new FiscalDateModel(),\n            startMonth: '',\n            endMonth: '',\n            minMonth : '',\n            maxMonth : '',\n            Helper : Helper,\n            columns : [],\n            sortDefinition : [\n                { field: \"order\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n\t\t\tmodel: {\n                id: \"uuid\",\n                expanded: true\n            },\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n\t\t\tfieldType : 'type',\n            totalWord : 'Total',\n            // LoadingMe\n            showLoading: false,\n        }),\n        methods:{\n            validating(){\n                let isValid = true;\n\n                if(this.fiscalDate.id === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_fiscal_year\"));\n                }\n\n                if(this.startMonth === '' || this.endMonth === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_from_to_month\"));\n                }\n\n                if(this.selectedBudgets.length === 0){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_budgets\"));\n                }\n\n                return isValid;\n            },\n            /* Search */\n            search () {\n                if(this.validating()){\n                    let endMonth = new Date(this.endMonth),\n                        lastDay = new Date(endMonth.getFullYear(), endMonth.getMonth()+1, 0);\n\n                    let sdate = kendo.toString(new Date(this.startMonth), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                        edate = kendo.toString(lastDay, 'yyyy-MM-dd') + 'T23:59:59.999Z';\n\n                    /* Segment Ids */\n                    let segmentIds = [];\n                    this.$store.state.budgets.list.forEach(value => {\n                        if(~this.selectedBudgets.indexOf(value.uuid)) {\n                            segmentIds.push(value.segment_uuid);\n                        }\n                    });\n                    /* Remove Duplicate */\n                    this.segmentIds = [...new Set(segmentIds)];\n                    \n                    // Empty datasource\n                    let ds = this.$refs.statementDS.kendoWidget();\n                    ds.data([]);\n                    \n                    // Query Income Statement\n                    this.showLoading = true;\n                    incomeStatementHandler.getBySegments(sdate, edate, this.segmentIds)\n                    .then(res => {\n                        if(res){\n                            this.statements = res;\n                            this.bindData();\n                        }else{\n                            this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                        }\n                    })\n                    .finally(()=>{\n                        // this.showLoading = false;\n                    });\n                }\n\t\t\t},\n            async bindData () {\n                let g = {}, childIds = [];\n\n                /* Generate Months */\n                let fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\", \"yyyy-MM\");\n\n                /* Month Index */\n                let startMonthIndex = fiscalMonths.indexOf(this.startMonth),\n                    endMonthIndex = fiscalMonths.indexOf(this.endMonth);\n\n                let minMonthIndex = startMonthIndex, maxMonthIndex = endMonthIndex;\n                if(startMonthIndex > endMonthIndex){\n                    minMonthIndex = endMonthIndex, maxMonthIndex = startMonthIndex;\n                }\n\n                // Load Account List\n                let accounts = await this.$store.dispatch('accounting/getAccounts'); \n\n                /* Loop all budgets */\n                for (let i = 0; i < this.selectedBudgets.length; i++) {\n                    const budget = this.$store.state.budgets.list.find((item) => item.uuid === this.selectedBudgets[i]);\n\n                    /* Budget lines */\n                    budget.lines.forEach(value => {\n                        /* Get Account */\n                        let account = accounts.find((item) => item.uuid === value.account_uuid);\n                        \n                        /* Child Id */\n                        childIds.push(value.account_uuid);\n\n                        /* Order */\n                        let order = account.type_code;\n                        if(account.type_code === AccountTypeCode.OTHER_REVENUE){\n                            order = OrderNumberPL[account.type_code];\n                        }\n\n                        /* GROUPING TOP LEVEL */\n                        /* Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new StatementOfProfitOrLossModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.local_name,\n                                order : order,\n                            });\n                        }\n                        \n                        /* Parent Account */\n                        let currentParentAccount = new AccountModel(account.parent_account);\n                        while (currentParentAccount.number !== \"\") {\n                            /* Get account by parent number */\n                            let accountParent = accounts.find((item) => item.number === currentParentAccount.number);\n                            \n                            /* Set New Parent Account */\n                            currentParentAccount = new AccountModel(accountParent.parent_account);\n\n                            if(!g[accountParent.number]){\n                                /* First Parent Account Under Top Level */\n                                let parentId = accountParent.type_code;\n\n                                /* Sub Of Parent Account */\n                                if(currentParentAccount.number !== \"\"){\n                                    let parentAccount = accounts.find((item) => item.number === currentParentAccount.number);\n                                    parentId = parentAccount.number;\n                                }\n\n                                g[accountParent.number] = new StatementOfProfitOrLossModel({\n                                    uuid : accountParent.number,\n                                    number : accountParent.number,\n                                    name : accountParent.name,\n                                    local_name : accountParent.local_name,\n                                    parentId : parentId,\n                                    order : order,\n                                });\n                            }\n                        }\n\n                        /* Single Account Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new StatementOfProfitOrLossModel({\n                                uuid : value.account_uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                order : order,\n                            });\n                        }\n\n                        /* Set Parent Id for a single account */\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            if(account.parent_account.number){\n                                g[account.uuid].parentId = account.parent_account.number;\n                            }else{\n                                g[account.uuid].parentId = account.number;\n                            }\n                        }else{\n                            g[account.uuid].parentId = account.number;\n                        }\n\n                        /* Budget Amount */\n                        for (let j = 0; j < 12; j++) {\n                            if(j >= minMonthIndex && j <= maxMonthIndex){\n                                let nature = 1;\n                                if(account.account_type.nature.toLowerCase() === \"cr\"){\n                                    nature = -1;\n                                }\n                                g[account.uuid].budgetAmount += kendo.parseFloat(value.monthly_amount[j].amount) * nature;\n                            }\n                        }\n                    });\n                }\n\n                /* ACTUAL */\n                /* Define Segments */\n                for (let key in g){\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        g[key][\"s\"+i] = 0;\n                    }\n                }\n                /* Sum Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    this.statements[i].forEach(value => {\n                        if(g[value.accountUUID]){\n                            g[value.accountUUID][\"s\"+i] += kendo.parseFloat(value.balance);\n                        }\n                        \n                        /* Other Groups */\n                        if(value.account_type_number >= 100 && value.account_type_number <= 105){\n                            g[value.account_type_number] = new StatementOfProfitOrLossModel({\n                                uuid: value.account_type_number,\n                                name: value.name,\n                                local_name: value.local_name,\n                                order: OrderNumberPL[value.account_type_number],\n                            });\n                        }\n                    });\n                }\n                \n                /* Parse Object Array */\n                let entries = Object.values(g);\n                \n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    parent.budgetAmount += entry.budgetAmount;\n\n                                    /* Define Segments */\n                                    for (let j = 0; j < this.segmentIds.length; j++) {\n                                        parent[\"s\"+j] += entry[\"s\"+j];\n                                    }\n\n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n\n                /* Other Groups */\n                /* Gross Profit */\n                let revenue = this.getEntry(entries, AccountTypeCode.REVENUE),\n                    costOfSale = this.getEntry(entries, AccountTypeCode.COGS),\n                    grossProfit = this.getEntry(entries, AccountTypeCode.GROSS_PROFIT);\n\n                /* EBITDA */\n                let salaryBenefit = this.getEntry(entries, AccountTypeCode.SALARY_BENEFIT),\n                    saleMarketing = this.getEntry(entries, AccountTypeCode.SALE_MARKETING),\n                    researchProductDevelopment = this.getEntry(entries, AccountTypeCode.RESEARCH_PRODUCT_DEVELOPMENT),\n                    legalProfessionalFee = this.getEntry(entries, AccountTypeCode.LEGAL_PROFESSIONAL_FEE),\n                    generalAdminExpenses = this.getEntry(entries, AccountTypeCode.GENERAL_ADMIN_EXPENSE),\n                    operatingExpenses = this.getEntry(entries, AccountTypeCode.OPERATING_EXPENSE),\n                    otherRevenue = this.getEntry(entries, AccountTypeCode.OTHER_REVENUE),\n                    operatingIncomeEBITDA = this.getEntry(entries, AccountTypeCode.OPERATING_INCOME_EBITDA);\n\n                /* EBIT */\n                let depreciation = this.getEntry(entries, AccountTypeCode.DEPRECIATION),\n                    otherExpenses = this.getEntry(entries, AccountTypeCode.OTHER_EXPENSE),\n                    earningBeforeInterestAndTaxEBIT = this.getEntry(entries, AccountTypeCode.EARNING_BEFORE_INTEREST_AND_TAX_EBIT);\n\n                /* Profit Before Tax */\n                let financingCost = this.getEntry(entries, AccountTypeCode.FINANCING_COST),\n                    profitBeforeTax = this.getEntry(entries, AccountTypeCode.PROFIT_BEFORE_TAX);\n\n                /* Profit For The Period */\n                let taxRelatedExpenses = this.getEntry(entries, AccountTypeCode.TAX),\n                    profitForThePeriod = this.getEntry(entries, AccountTypeCode.PROFIT_FOR_THE_PERIOD);\n                    \n                /* Calculate Budget Amount */\n                grossProfit.budgetAmount = revenue.budgetAmount - costOfSale.budgetAmount;\n                operatingExpenses.budgetAmount = salaryBenefit.budgetAmount + saleMarketing.budgetAmount + researchProductDevelopment.budgetAmount + legalProfessionalFee.budgetAmount + generalAdminExpenses.budgetAmount;\n                operatingIncomeEBITDA.budgetAmount = (grossProfit.budgetAmount + otherRevenue.budgetAmount) - operatingExpenses.budgetAmount;\n                earningBeforeInterestAndTaxEBIT.budgetAmount = operatingIncomeEBITDA.budgetAmount - depreciation.budgetAmount - otherExpenses.budgetAmount;\n                profitBeforeTax.budgetAmount = earningBeforeInterestAndTaxEBIT.budgetAmount - financingCost.budgetAmount;\n                profitForThePeriod.budgetAmount = profitBeforeTax.budgetAmount - taxRelatedExpenses.budgetAmount;\n\n                /* Calculate Segment Amount */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    grossProfit[\"s\"+i] = revenue[\"s\"+i] - costOfSale[\"s\"+i];\n                    operatingExpenses[\"s\"+i] = salaryBenefit[\"s\"+i] + saleMarketing[\"s\"+i] + researchProductDevelopment[\"s\"+i] + legalProfessionalFee[\"s\"+i] + generalAdminExpenses[\"s\"+i];\n                    operatingIncomeEBITDA[\"s\"+i] = (grossProfit[\"s\"+i] + otherRevenue[\"s\"+i]) - operatingExpenses[\"s\"+i];\n                    earningBeforeInterestAndTaxEBIT[\"s\"+i] = operatingIncomeEBITDA[\"s\"+i] - depreciation[\"s\"+i] - otherExpenses[\"s\"+i];\n                    profitBeforeTax[\"s\"+i] = earningBeforeInterestAndTaxEBIT[\"s\"+i] - financingCost[\"s\"+i];\n                    profitForThePeriod[\"s\"+i] = profitBeforeTax[\"s\"+i] - taxRelatedExpenses[\"s\"+i];\n                }\n\n                /* Find Percentage */\n                entries.forEach(value => {\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        value[\"p\"+i] = this.findPercentage(value[\"s\"+i], value.budgetAmount);\n                    }\n                });\n                \n                /* BIND STATMENT */\n                this.statementList = entries;\n                \n                this.generateColumn();\n\n                this.showLoading = false;\n\t\t\t},\n            getEntry(entries, id){\n                let entry = entries.find(i=>i.uuid === id);\n\n                if(!entry){\n                    entry = new StatementOfProfitOrLossModel();\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        entry[\"s\"+i] = 0;\n                    }\n                }\n\n                return entry;\n            },\n            findPercentage (value1, value2) {\n                let result = 0;\n                if(value2 !== 0){\n                    result = value1 / value2;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    row.css(\"text-align\", \"right\");\n\n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.uuid >= 100){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            // Generate Columns\n\t\t\tgenerateColumn() {\n                let headerAttributes = {\n                        class: \"table-header-cell\",\n                        style: \"text-align: center;padding-right: 35px; font-size: 14px\",\n                    },\n                    attributes = {\n                        class: \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\",\n                    };\n\n                let columns = [\n                    {\n                        field: this.fieldName,\n                        title: i18n.t(\"account\"),\n                        template: this.nameTmpl,\n                        locked: true,\n                        width: 450,\n                    },\n                    {\n                        field: \"budgetAmount\",\n                        title: i18n.t(\"budget\"),\n                        format: \"{0:n}\",\n                        width: 200,\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    }\n                ];\n\n                /* Set Column Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    /* Segment */\n                    let segment = this.$store.state.segments.list.find(\n                        (item) => item.id === this.segmentIds[i]\n                    );\n\n                    columns.push({\n                        title: segment.name,\n                        headerAttributes: headerAttributes,\n                        columns:[\n                            {\n                                field: \"s\" + i,\n                                title: i18n.t(\"actual_amount\"),\n                                format: \"{0:n}\",\n                                width: 200,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            },\n                            {\n                                field: \"p\" + i,\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width: 100,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n                    });\n                }\n\n                this.columns = columns;\n            },\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                this.fieldType = \"type\";\n                this.totalWord = \"Total\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                    this.fieldType = \"type_local_name\";\n                    this.totalWord = \"សរុប\";\n                }\n                \n                // Generate Group By\n                this.generateGroupBy();\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n            nameTmpl(dataItem){\n                let name = `<span>${dataItem.number} - ${dataItem.name}</span>`;\n\n                if(dataItem.parentId === null){\n                    name = `<span style='font-weight: bolder;'>${dataItem.name}</span>`;\n                }\n\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    name = `<span style='font-weight: bolder;'>${dataItem.number} - ${dataItem.name}</span>`;\n                }\n\n                return name;\n            },\n        },\n        watch : {\n            reportingLanguage: \"onReportingLanguageChanges\"\n        },\n        mounted () {\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th{\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"],"sourceRoot":"src/views/budgeting/budgets"}]}