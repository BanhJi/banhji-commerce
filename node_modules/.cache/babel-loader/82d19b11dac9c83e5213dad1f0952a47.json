{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit/PPI.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit/PPI.vue","mtime":1638499443162},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PPI.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-2 px-6\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row>\n                        <v-col sm=\"8\" cols=\"12\" class=\"py-0\">\n                            <h2 class=\"mb-0 font_20\">{{$t('payment_of_tax_on_income')}}</h2>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table>\n                        <template v-slot:default>\n                            <thead>\n                                <tr>\n                                    <th class=\"text-bold text-uppercase\">{{$t('description')}}</th>\n                                    <th class=\"text-bold text-uppercase\">{{$t('amount_exclusive')}}</th>\n                                    <th class=\"text-bold text-uppercase\">{{$t('monthof')}}</th>\n                                    <th class=\"text-bold text-uppercase\">{{$t('amount')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td>{{$t('prepayment_of_tax_income')}}</td>\n                                <td class=\"text-center\">{{ numberFormat(amountSaleExculs) || numberFormat(amountNet) }}</td>\n                                <td class=\"\">{{ monthOf }}</td>\n                                <td class=\"text-center\">{{ numberFormat(totalAmountNet) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{$t('credit_carried_last_month')}}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ newMonthOf }}</td>\n                                <td class=\"text-center\">{{ numberFormat(balance.balance) }}</td>\n                            </tr>\n\n                            <tr>\n                                <td class=\"text-bold\">PPI to be paid/ (Credit Forward)</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ monthOf }}</td>\n                                <td class=\"primary text-bold white--text text-center\">{{ numberFormat(totalBalance) }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n            </v-row>\n        </v-col>\n\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from '@progress/kendo-ui'\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n\n        search:{\n            start_date: \"\",\n            end_date: \"\"\n        },\n        balance: {},\n        totalBalance: 0,\n        newMonthOf: '',\n        amountNet: 0,\n        totalAmountNet: 0,\n        sales: [],\n        step: 0,\n        ppi: {},\n    }),\n    props: ['monthlyReturn', 'amountSaleExcul'],\n    watch: {'amountSaleExculs': 'onCalculateTax', 'totalAmountNet': 'calculate'},\n    methods: {\n        async loadBalance() {\n            if (this.balance.balance === undefined) {\n                await this.onloadSale()\n                new Promise(resolve => {\n                    setTimeout(async () => {\n                        resolve('resolved');\n                        await this.calculate()\n                        this.showLoading = false\n                    }, 500)\n                })\n            }\n\n        },\n        onUpdate() {\n            this.$emit('onUpdate', this.step)\n        },\n        async onUpdateBalance() {\n            this.$emit('getBalancePPI', {balance: this.totalBalance, credit: this.balance.balance})\n        },\n        async onloadSale() {\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    await saleHandler.getByMrId(this.$route.params.id).then(async res => {\n                        this.sales = res.data.data\n                        let data = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale'))\n                        const allArray = [...this.sales, ...data]\n                        this.sales = allArray.filter((e, i) => allArray.findIndex(o => o.totalSpecificTax === e.totalSpecificTax && o.totalPubTax === e.totalPubTax && o.totalAccomTax === e.totalAccomTax && o.totalVAT === e.totalVAT && o.totalAmountInclusive === e.totalAmountInclusive && o.totalAmountNetVat === e.totalAmountNetVat) === i)\n                        await this.onCalculateTax()\n                    })\n                }, 100)\n            })\n        },\n        async onCalculateTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountS = 0\n                    if (this.amountSaleExculs > 0) {\n                        this.totalAmountNet = this.amountSaleExculs * 0.01\n                    } else {\n                        for (let i = 0; i < this.sales.length; i++) {\n                            amountS += this.sales[i].totalAmountInclusive\n                                + this.sales[i].totalSpecificTax\n                                + this.sales[i].totalPubTax\n                                + this.sales[i].totalAccomTax\n                                + this.sales[i].totalAmountNetVat\n                        }\n                        this.amountNet = this.numberFormat(amountS)\n                        window.console.log(amountS, 'amountS')\n                        this.totalAmountNet = amountS * 0.01\n                    }\n                }, 200)\n            })\n        },\n        numberFormat(value) {\n            return kendo.toString(value, `n2`)\n        },\n        async getBalance() {\n            if (this.ppi.id === undefined) {\n                await this.onloadPPI()\n            }\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.ppi.id\n            const monthly = new Date(this.monthlyReturn.monthOf).setMonth(new Date(this.monthlyReturn.monthOf).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            this.newMonthOf = monthOf\n            monthlyReturnHandler.getBalance(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.balance = res.data.data[0]\n                } else {\n                    this.balance = {\n                        txnBalance: 0,\n                        balance: 0,\n                    }\n                }\n            })\n        },\n        async onloadPPI() {\n            await monthlyReturnHandler.getPpi().then(res => {\n                this.ppi = res.data.data[0]\n            })\n        },\n        async calculate() {\n            await this.getBalance()\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    window.console.log(this.totalAmountNet, 'totalAmount')\n                    window.console.log(this.amountSaleExculs, 'amountSaleExcul')\n                    if (this.totalAmountNet > 0) {\n                        this.totalBalance = kendo.parseFloat(this.totalAmountNet) + kendo.parseFloat(this.balance.balance)\n                    }\n                    // else {\n                    //     this.totalBalance = kendo.parseFloat(this.totalAmount) + kendo.parseFloat(this.balance.balance)\n                    // }\n                    // await this.addTxn(this.totalBalance)\n                    await this.onUpdateBalance()\n                }, 400)\n            })\n        },\n        // async addTxn(amounts) {\n        //     if (amounts >=0) {\n        //         const data = {\n        //             amount: amounts,\n        //             monthOf: this.monthlyReturn.monthOf,\n        //             type: 'ppi monthly',\n        //             date: new Date().toJSON()\n        //         }\n        //         await monthlyReturnHandler.addTxnPPI(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n        //             window.console.log(res)\n        //         })\n        //     }\n        // },\n        onSearch(){\n            this.search = {\n                'start_date': this.start_date + '-01',\n                'end_date': this.end_date + '-01'\n            }\n        }\n    },\n    async mounted() {\n        await this.onloadPPI()\n        await this.loadBalance()\n    },\n    computed: {\n        monthOf() {\n            if (this.monthlyReturn.id !== undefined) {\n                return this.monthlyReturn.monthOf\n            }else {\n                return ''\n            }\n        },\n        amountSaleExculs() {\n            if (this.amountSaleExcul !== undefined) {\n                return this.amountSaleExcul\n            } else {\n                return 0\n            }\n        },\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'month-picker' : ()=> import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n        font-size: 14px;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12);\n        height: 37px !important;\n        color: #000;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: #92d050 !important;\n    }\n\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n        border-top: thin solid #ddd;\n        border-bottom: thin solid #ddd;\n        border-radius: 0 !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .border_top {\n        border-top: thin solid #fff !important;\n    }\n\n    .v-application .primary,\n    .v-application .third {\n        border-color: #fff !important;\n    }\n    .vat{\n        text-transform: uppercase;\n        color: #fff;\n        font-weight: bold;\n        font-family: 'Niradei-Bold' !important;\n    }\n\n    .amount {\n        text-align: right !important;\n    }\n    .head-summary {\n        text-align: right !important;\n    }\n</style>\n"],"sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/confirm/tax_credit"}]}