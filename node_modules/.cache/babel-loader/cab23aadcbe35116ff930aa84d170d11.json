{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/baseHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/baseHandler.js","mtime":1638499442969},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktYWNjb3VudGluZy13ZWItbW9kdWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKS5kZWZhdWx0OwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIik7Cgp2YXIgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOyAvLyBjb25zdCBzdG9yZQk9IHJlcXVpcmUoIi4uL2luc3RpdHV0ZSIpCi8vIEdFVCBCWSBJRAoKCm1vZHVsZS5leHBvcnRzLmdldE9uZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoYmFzZVVybCwgaWQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGJhc2VVcmwgKyAiLyIuY29uY2F0KGlkKSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MikgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIEdFVCBMSVNUCgoKbW9kdWxlLmV4cG9ydHMuZ2V0QWxsID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGJhc2VVcmwpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGJhc2VVcmwpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gzKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIFNBVkUKCgptb2R1bGUuZXhwb3J0cy5zYXZlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGJhc2VVcmwsIGRhdGEpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKGJhc2VVcmwpOyAvLyBzdG9yZS5kZWZhdWx0LmNvbW1pdCh2dWVYS2V5LCBkYXRhKQoKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChiYXNlVXJsLCBkYXRhLCB7CiAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAgICAgICdhY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1IZWFkZXJzJzogJ0NvbnRlbnQtVHlwZSwgQXV0aG9yaXphdGlvbiwgYWNjZXB0JywKICAgICAgICAgICAgICAgICdtZXRob2QnOiAnUE9TVCwgT1BUSU9OUycKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0My5zZW50KTsKCiAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDMudDApOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzAsIDddXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NCwgX3g1KSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7IC8vIGFjdGl2ZSBjdXJyZW5jeSBvciBmdW5jdGlvbmFsIGN1cnJlbmN5IHRoYXQgYWxsb3dlZCBieSBjb21wYW55CgoKbW9kdWxlLmV4cG9ydHMuZ2V0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGJhc2VVcmwpIHsKICAgIHZhciByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGJhc2VVcmwpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEuZGF0YSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDc7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeDYpIHsKICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/baseHandler.js"],"names":["axios","require","module","exports","getOne","baseUrl","id","get","window","console","error","getAll","save","data","log","post","headers","response"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;AACA;;;AACAC,MAAM,CAACC,OAAP,CAAeC,MAAf;AAAA,qEAAwB,iBAAOC,OAAP,EAAgBC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHN,KAAK,CAACO,GAAN,CAAUF,OAAO,cAAOC,EAAP,CAAjB,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBE,YAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAR,MAAM,CAACC,OAAP,CAAeQ,MAAf;AAAA,sEAAwB,kBAAON,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHL,KAAK,CAACO,GAAN,CAAUF,OAAV,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBG,YAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CAQA;;;AACAR,MAAM,CAACC,OAAP,CAAeS,IAAf;AAAA,sEAAsB,kBAAOP,OAAP,EAAgBQ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdL,YAAAA,MAAM,CAACC,OAAP,CAAeK,GAAf,CAAmBT,OAAnB,EAFc,CAGd;;AAHc;AAAA,mBAIDL,KAAK,CAACe,IAAN,CAAWV,OAAX,EAAoBQ,IAApB,EAA0B;AAACG,cAAAA,OAAO,EAAC;AAAC,gCAAgB,kBAAjB;AAAqC,0BAAS,kBAA9C;AAChD,kDAAkC,qCADc;AAEhD,0BAAU;AAFsC;AAAT,aAA1B,CAJC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQdR,YAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA,I,CAaA;;;AACAR,MAAM,CAACC,OAAP,CAAeI,GAAf;AAAA,sEAAqB,kBAAgBF,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUL,KAAK,CAACO,GAAN,CAAUF,OAAV,CAFV;;AAAA;AAEPY,YAAAA,QAFO;AAAA,8CAINA,QAAQ,CAACJ,IAAT,CAAcA,IAJR;;AAAA;AAAA;AAAA;AAMbL,YAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf;;AANa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const axios = require('axios')\n// const store\t= require(\"../institute\")\n// GET BY ID\nmodule.exports.getOne = async (baseUrl, id) => {\n    try {\n        return await axios.get(baseUrl + `/${id}`);\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// GET LIST\nmodule.exports.getAll = async (baseUrl) => {\n    try {\n        return await axios.get(baseUrl)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\n// SAVE\nmodule.exports.save = async (baseUrl, data) => {\n    try {\n        window.console.log(baseUrl);\n        // store.default.commit(vueXKey, data)\n        return await axios.post(baseUrl, data, {headers:{'Content-Type': 'application/json', 'accept':'application/json',\n        'Access-Control-Request-Headers': 'Content-Type, Authorization, accept',\n        'method': 'POST, OPTIONS'}})\n    } catch (error) {\n        window.console.error(error)\n    }\n    \n}\n\n// active currency or functional currency that allowed by company\nmodule.exports.get = async function (baseUrl) {\n    try {\n        const response = await axios.get(baseUrl)\n\n        return response.data.data\n    } catch (error) {\n        window.console.error(error)\n    }\n}"]}]}