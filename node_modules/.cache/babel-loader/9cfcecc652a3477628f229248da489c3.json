{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/RevenueDefferedGrantAccount.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/RevenueDefferedGrantAccount.js","mtime":1638499442997},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBrZW5kbyBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGlVcmwuanMnKTsKCnZhciBBY2NvdW50VHlwZUNvZGUgPSByZXF1aXJlKCJAL3NjcmlwdHMvZGVmYXVsdF9zZXR1cC9BY2NvdW50VHlwZUNvZGUiKTsKCmZ1bmN0aW9uIGZpbHRlckNhc2hBY2NvdW50KGFjY291bnRzKSB7CiAgcmV0dXJuIGFjY291bnRzLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIH5BY2NvdW50VHlwZUNvZGUuUkVWRU5VRV9ERUZGRVJFRF9HUkFOVF9BQ0NPVU5UUy5pbmRleE9mKGl0ZW0uYWNjb3VudF90eXBlLm51bWJlcik7CiAgfSk7Cn0KCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGFpbmVyLCBvcHRpb25zKSB7CiAgLy8gRGVmaW5kIG9yZGVyaW5nIGJ5IG51bWJlcgogIHZhciBjb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZShhLCBiKSB7CiAgICBpZiAoYS5pdGVtc1swXS5udW1iZXIgPT09IGIuaXRlbXNbMF0ubnVtYmVyKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIGlmIChhLml0ZW1zWzBdLm51bWJlciA+IGIuaXRlbXNbMF0ubnVtYmVyKSB7CiAgICAgIHJldHVybiAxOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIC0xOwogICAgfQogIH07IC8vIERlZmluZCBkZWZhdWx0IGdyb3VwCgoKICB2YXIgZ3JvdXAgPSB7CiAgICBmaWVsZDogImFjY291bnRfdHlwZS5uYW1lIiwKICAgIGNvbXBhcmU6IGNvbXBhcmUKICB9OyAvLyBVc2UgbG9jYWwgZGF0YQoKICB2YXIgZHMgPSBuZXcga2VuZG8uZGF0YS5EYXRhU291cmNlKHsKICAgIGRhdGE6IGZpbHRlckNhc2hBY2NvdW50KHN0b3JlLnN0YXRlLmFjY291bnRpbmcuYWNjb3VudHMpLAogICAgZ3JvdXA6IGdyb3VwCiAgfSk7IC8vIERlZmluZGUgZHJvcGRvd25saXN0CgogIHZhciBkZGwgPSBrZW5kby5qUXVlcnkoJzxpbnB1dCByZXF1aXJlZCBuYW1lPSInICsgb3B0aW9ucy5maWVsZCArICciLz4nKS5hcHBlbmRUbyhjb250YWluZXIpLmtlbmRvRHJvcERvd25MaXN0KHsKICAgIGF1dG9CaW5kOiB0cnVlLAogICAgYXV0b1dpZHRoOiB0cnVlLAogICAgaGVpZ2h0OiA0MDAsCiAgICBmaWx0ZXI6ICJzdGFydHN3aXRoIiwKICAgIGRhdGFUZXh0RmllbGQ6ICJuYW1lIiwKICAgIGRhdGFWYWx1ZUZpZWxkOiAidXVpZCIsCiAgICBvcHRpb25MYWJlbDogIi0tLSBTZWxlY3QgLS0tIiwKICAgIGRhdGFTb3VyY2U6IGRzCiAgfSkuZGF0YSgia2VuZG9Ecm9wRG93bkxpc3QiKTsgLy8gVXNlIHJlbW90ZSBkYXRhCgogIGlmIChzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRzLmxlbmd0aCA9PT0gMCkgewogICAgdmFyIHJlbW90ZURTID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICAgIHRyYW5zcG9ydDogewogICAgICAgIHJlYWQ6IHsKICAgICAgICAgIHVybDogYXBpVXJsLmFjY291bnRzCiAgICAgICAgfSwKICAgICAgICBkYXRhVHlwZTogImpzb24iCiAgICAgIH0sCiAgICAgIHNjaGVtYTogewogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICBpZDogInV1aWQiCiAgICAgICAgfSwKICAgICAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKHJlc3BvbnNlKSB7CiAgICAgICAgICAvKiBBZGQgdG8gc3RvcmUgKi8KICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdhY2NvdW50aW5nL3B1dEFjY291bnRzJywgcmVzcG9uc2UpOwogICAgICAgICAgcmV0dXJuIGZpbHRlckNhc2hBY2NvdW50KHJlc3BvbnNlKTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdyb3VwOiBncm91cAogICAgfSk7CiAgICBkZGwuc2V0RGF0YVNvdXJjZShyZW1vdGVEUyk7CiAgfQoKICByZXR1cm4gZGRsOwp9KTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/RevenueDefferedGrantAccount.js"],"names":["kendo","store","apiUrl","require","AccountTypeCode","filterCashAccount","accounts","filter","item","REVENUE_DEFFERED_GRANT_ACCOUNTS","indexOf","account_type","number","container","options","compare","a","b","items","group","field","ds","data","DataSource","state","accounting","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","dataTextField","dataValueField","optionLabel","dataSource","length","remoteDS","transport","read","url","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"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","sourcesContent":["import kendo from '@progress/kendo-ui';\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode\");\n\nfunction filterCashAccount(accounts) {\n    return accounts.filter(item => ~AccountTypeCode.REVENUE_DEFFERED_GRANT_ACCOUNTS.indexOf(item.account_type.number));\n}\n\nexport default (container, options) => {\n    // Defind ordering by number\n    let compare = function(a, b) {\n        if (a.items[0].number === b.items[0].number) {\n            return 0;\n        } else if (a.items[0].number > b.items[0].number) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: \"account_type.name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: filterCashAccount(store.state.accounting.accounts),\n        group: group,\n    })\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"startswith\",\n                dataTextField: \"name\",\n                dataValueField: \"uuid\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n\n    // Use remote data\n    if(store.state.accounting.accounts.length === 0){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.accounts,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"uuid\"\n                },\n                data: function (response) {\n                    /* Add to store */\n                    store.dispatch('accounting/putAccounts', response);\n                    \n                    return filterCashAccount(response);\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n\n    return ddl;\n}"]}]}