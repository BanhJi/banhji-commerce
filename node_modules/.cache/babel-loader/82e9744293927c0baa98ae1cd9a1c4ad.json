{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/components/dropdownlist/UOMDropDownList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/components/dropdownlist/UOMDropDownList.vue","mtime":1638499442948},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWFjY291bnRpbmctd2ViLW1vZHVsZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybC50by1qc29uLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGtlbmRvIGZyb20gIkBwcm9ncmVzcy9rZW5kby11aSI7CmltcG9ydCB7IFVvbU1vZGVsIH0gZnJvbSAiQC9zY3JpcHRzL21vZGVsL0FwcE1vZGVscyI7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGkvcHJvZHVjdCcpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdVT01Ecm9wRG93bkxpc3QnLAogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiB7CiAgICBpbml0VU9NOiB7CiAgICAgIHR5cGU6IE9iamVjdAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVvbTogbmV3IFVvbU1vZGVsKHt9KSwKICAgICAgdW9tczogW10sCiAgICAgIHR5cGU6ICcnLAogICAgICB1cmw6IGFwaVVybC51b21fZ2V0LAogICAgICBpZDogJ2RkbFVPTV8nICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMCkKICAgIH07CiAgfSwKICAvLyBjb21wdXRlZDogbWFwU3RhdGUoewogIC8vICAgICBzZWdtZW50czogc3RhdGUgPT4gc3RhdGUuc2VnbWVudHMuYWxsCiAgLy8gfSksCiAgbWV0aG9kczogewogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGV2KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBzZWxlY3RlZEluZGV4LCBzZWxlY3RlZEl0ZW07CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKGV2KSB7CiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkSW5kZXggPSBldi5zZW5kZXIuc2VsZWN0KCk7CiAgICAgICAgICAgICAgICAgIHNlbGVjdGVkSXRlbSA9IGV2LnNlbmRlci5kYXRhSXRlbShzZWxlY3RlZEluZGV4KS50b0pTT04oKTsKICAgICAgICAgICAgICAgICAgX3RoaXMudW9tID0gbmV3IFVvbU1vZGVsKHNlbGVjdGVkSXRlbSk7CgogICAgICAgICAgICAgICAgICBfdGhpcy4kZW1pdCgnb25DaGFuZ2UnLCBfdGhpcy51b20pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYmluZERhdGE6IGZ1bmN0aW9uIGJpbmREYXRhKHVybCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGtlbmRvLmpRdWVyeSgnIycgKyB0aGlzLmlkKS5rZW5kb0Ryb3BEb3duTGlzdCh7CiAgICAgICAgZGF0YVRleHRGaWVsZDogIm5hbWUiLAogICAgICAgIGRhdGFWYWx1ZUZpZWxkOiAiaWQiLAogICAgICAgIGRhdGFTb3VyY2U6IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgICAgICAgdHJhbnNwb3J0OiB7CiAgICAgICAgICAgIHJlYWQ6IHsKICAgICAgICAgICAgICB1cmw6IHVybAogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhVHlwZTogImpzb24iCiAgICAgICAgICB9LAogICAgICAgICAgc2NoZW1hOiB7CiAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgaWQ6ICJpZCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YShyZXNwb25zZSkgewogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgIHZhciByb3cgPSByZXNwb25zZS5kYXRhWzBdOwoKICAgICAgICAgICAgICAgIF90aGlzMi4kZW1pdCgnb25DaGFuZ2UnLCByb3cpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBncm91cDogewogICAgICAgICAgICBmaWVsZDogJ2NhdGVnb3J5Lm5hbWUnCiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgY2hhbmdlOiB0aGlzLm9uQ2hhbmdlLAogICAgICAgIGluZGV4OiAxLAogICAgICAgIGZpbHRlcjogJ2NvbnRhaW5zJywKICAgICAgICBvcHRpb25MYWJlbDogJy0tIFNlbGVjdCAtLScKICAgICAgfSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgaW5pdFVPTTogZnVuY3Rpb24gaW5pdFVPTSgpIHsKICAgICAgdGhpcy51b20gPSB0aGlzLmluaXRVT007CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgey8vIHRoaXMubG9hZERhdGEodGhpcy51cmwpOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMzLmJpbmREYXRhKF90aGlzMy51cmwpOwogICAgICAgICAgICAgIC8qIEluaXRpYWwgb2JqICovCgoKICAgICAgICAgICAgICBfdGhpczMudW9tID0gX3RoaXMzLmluaXRVT007IC8vIHRoaXMudHlwZSA9IHRoaXMuaW5pdFR5cGU7CiAgICAgICAgICAgICAgLy8gdGhpcy4kZW1pdCgnb25DaGFuZ2UnLCB0aGlzLnBtT3B0aW9uKTsKICAgICAgICAgICAgICAvLyBjcmVhdGUgRHJvcERvd25MaXN0IGZyb20gaW5wdXQgSFRNTCBlbGVtZW50CiAgICAgICAgICAgICAgLy8gYXdhaXQgdGhpcy5sb2FkRGF0YSgnJywgdGhpcy5zdXBCYXNlVXJsKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["UOMDropDownList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <input :id=\"id\" style=\"width: 100%; margin-top: 4px\"/>\n    </div>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport {UomModel} from \"@/scripts/model/AppModels\";\n\nconst apiUrl = require('@/api/product');\nexport default {\n    name: 'UOMDropDownList',\n    components: {},\n    props: {\n        initUOM: {\n            type: Object,\n        }\n    },\n    data() {\n        return {\n            uom: new UomModel({}),\n            uoms: [],\n            type: '',\n            url: apiUrl.uom_get,\n            id: 'ddlUOM_' + Math.floor(Math.random() * 1000)\n        }\n    },\n    // computed: mapState({\n    //     segments: state => state.segments.all\n    // }),\n    methods: {\n        async onChange(ev) {\n            if (ev) {\n                const selectedIndex = ev.sender.select();\n                const selectedItem = ev.sender.dataItem(selectedIndex).toJSON();\n                this.uom = new UomModel(selectedItem);\n                this.$emit('onChange', this.uom);\n            }\n        },\n        bindData(url) {\n            kendo.jQuery('#' + this.id).kendoDropDownList({\n                dataTextField: \"name\",\n                dataValueField: \"id\",\n                dataSource: new kendo.data.DataSource({\n                    transport: {\n                        read: {\n                            url: url,\n                        },\n                        dataType: \"json\",\n                    },\n                    schema: {\n                        model: {\n                            id: \"id\"\n                        },\n                        data: (response) => {\n                            if (response.data.length > 0) {\n                                const row = response.data[0]\n                                this.$emit('onChange', row);\n                            }\n                            return response.data;\n                        },\n                    },\n                    group: {field: 'category.name'}\n                }),\n                change: this.onChange,\n                index: 1,\n                filter: 'contains',\n                optionLabel: '-- Select --'\n            });\n        },\n    },\n    watch: {\n        initUOM() {\n            this.uom = this.initUOM;\n        },\n    },\n    async created() {\n        // this.loadData(this.url);\n    },\n    async mounted() {\n        this.bindData(this.url);\n        /* Initial obj */\n        this.uom = this.initUOM;\n        // this.type = this.initType;\n        // this.$emit('onChange', this.pmOption);\n        // create DropDownList from input HTML element\n        // await this.loadData('', this.supBaseUrl);\n    }\n}\n</script>"],"sourceRoot":"src/components/dropdownlist"}]}