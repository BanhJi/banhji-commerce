{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/BudgetPerformance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/BudgetPerformance.vue","mtime":1640595536787},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetPerformance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <!-- Title -->\n        <v-row>\n            <v-col sm=\"5\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('budget_performance_report')}}</h3>\n                <p class=\"mb-0\">{{$t('a_detail_breakdown_of_budget_by_months')}}</p>\n            </v-col>\n        </v-row>\n\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                    @onChanged=\"onFiscalDateChanges\"\n                />\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n                <app-month-of-picker \n                    :initMonthOf=\"monthOf\" \n                    @emitMonthOf=\"monthOf = $event\"\n                    @onChanged=\"onMonthOfChanges\"\n                    :initMin=\"minMonth\"\n                    :initMax=\"maxMonth\" />\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0 pt-6\">\n                <v-select class=\"mt-1\"\n                    :disabled=\"monthOf === ''\"\n                    placeholder=\"Select Budget\"\n                    @change=\"onChangeBudget\"\n                    v-model=\"budget\"\n                    :loading=\"loadingBudgetList\"\n                    :items=\"budgetList\"\n                    item-text=\"name\"\n                    item-value=\"uuid\"\n                    return-object\n                    clearable\n                    outlined />\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                <!-- Reporting Language -->\n                <label class=\"mb-1\">{{$t('language')}}:</label>\n                <app-reporting-language :initLanguage=\"reportingLanguage\" @emitLanguage=\"reportingLanguage = $event\" />\n            </v-col>\n        </v-row>\n\n        <!-- Summary -->\n        <v-row>\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                            <tr>\n                                <td style=\"width: 45%;font-weight: 900\">{{$t('budget_name')}}:</td>\n                                <td class=\"\">{{ budget.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"segment\") }}:</td>\n                                <td class=\"\" v-if=\"budget.segment\">{{ budget.segment.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"fiscal_year\") }}:</td>\n                                <td class=\"\" v-if=\"budget.fiscal_year\">{{ Helper.formatFiscalDate(budget.fiscal_year.start_date) }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{$t('used_for_consolidation')}}</td>\n                                <td class=\"\">{{ budget.use_consolidation === 1 ? 'Yes' : 'No' }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                               <tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_by.email\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{budget.created_by.email}}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_on\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_date\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ Helper.dateFormat(budget.created_date) }}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_on\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{{ budget.modified_date }}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"\" v-if=\"budget.modified_by.email\">{{budget.modified_by.email}}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n        </v-row>\n        \n        <!-- Grid -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <kendo-datasource ref=\"statementPLDS\"\n                        :data=\"statementPLList\"\n                        :schema=\"schemaDefinition\"\n                        :sort=\"sortDefinition\"\n                        :group=\"groupDefinition\"\n                        :aggregate=\"aggregateDefinition\" />\n\n                    <kendo-grid id=\"incomeStatementGrid\" class=\"custom_grid\" \n                        :data-source-ref=\"'statementPLDS'\"\n                        :dataBound=\"dataBound\"\n                        :sortable=\"true\"\n                        :column-menu=\"false\"\n                        :reorderable=\"true\"\n                        :resizable=\"true\"\n                        :noRecords=\"true\"\n                        :groupable=\"groupable\"\n                        :columns=\"columns\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import SegmentModel from \"@/scripts/model/Segment.js\";\n    import BudgetModel from \"@/scripts/model/Budget.js\";\n    import AccountModel from \"@/scripts/model/Account.js\";\n    \n    const incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            \"app-month-of-picker\": () => import('@/components/kendo_templates/MonthOfPicker'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n        },\n        data: () => ({\n            loadingBudgetList: false,\n            monthOf : '',\n            budget : new BudgetModel(),\n            budgetList : [],\n            incomeStatements : [],\n            statementPLList : [],\n            fiscalDate : null,\n            fiscalMonths : [],\n            minMonth : '',\n            maxMonth : '',\n            Helper : Helper,\n            columns : [],\n            sortDefinition : { field: \"number\", dir: \"asc\" },\n            groupable: {\n                enabled: false,\n                showFooter: true\n            },\n\t\t\tgroupDefinition : [],\n\t\t\taggregateDefinition : [\n\t\t\t\t{ field: \"budget_month\", aggregate: \"sum\" },\n                { field: \"budget_ytd\", aggregate: \"sum\" },\n                { field: \"budget_whole\", aggregate: \"sum\" },\n                { field: \"actual_month\", aggregate: \"sum\" },\n                { field: \"actual_ytd\", aggregate: \"sum\" },\n                { field: \"actual_whole\", aggregate: \"sum\" },\n\t\t\t],\n\t\t\tschemaDefinition\t: {\n\t\t\t\tmodel: { id: \"uuid\" }\n\t\t\t},\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n\t\t\tfieldType : 'type',\n            totalWord : 'Total',\n            // LoadingMe\n            showLoading: false,\n        }),\n        methods:{\n            onFiscalDateChanges(){\n                this.monthOf = '';\n                this.budget = new BudgetModel();\n                this.fiscalMonths = [];\n\n                if(this.fiscalDate !== null){\n                    /* Set Month Range */\n                    this.minMonth = this.fiscalDate.start_date;\n                    this.maxMonth = this.fiscalDate.end_date;\n                    \n                    /* Generate Months */\n                    this.fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\");\n\n                    /* Load Budget */\n                    this.loadBudget();\n                }\n            },\n            onMonthOfChanges () {\n                if(this.incomeStatements.length > 0){\n                    /* Bind Data */\n                    this.bindData();\n                }\n            },\n            async loadBudget(){\n                this.loadingBudgetList = true;\n                let budgets = await this.$store.dispatch('budgets/getList'),\n                    segments = await this.$store.dispatch('segments/getList');\n\n                let budgetList = [];\n                budgets.forEach(value => {\n                    if(value.fiscal_year.uuid === this.fiscalDate.uuid && value.segment_uuid !== ''){\n                        let budget = new BudgetModel(value);\n                        budget.segment = new SegmentModel(segments.find(i => i.id === value.segment_uuid));\n                        budgetList.push(budget);\n                    }\n                });\n                this.budgetList = budgetList;\n                this.loadingBudgetList = false;\n            },\n            /* On Budget Changes */\n            onChangeBudget () {\n                this.search();\n            },\n            /* Search */\n            search () {\n                if(this.budget.uuid !== ''){\n                    let sdate = kendo.toString(new Date(this.fiscalDate.start_date), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                        edate = kendo.toString(new Date(this.fiscalDate.end_date), 'yyyy-MM-dd') + 'T23:59:59.999Z';\n                    \n                    // Empty statementPLDS\n                    let ds = this.$refs.statementPLDS.kendoWidget();\n                    ds.data([]);\n                        \n                    // Query Income Statement\n                    this.showLoading = true;\n                    incomeStatementHandler.getIncomeStatement({\n                        params : {\n                            start_date \t\t: sdate,\n                            end_date \t\t: edate,\n                            group_by \t\t: \"12\",\n                            segment_uuid    : this.budget.segment_uuid,\n                        }\n                    })\n                    .then(res => {\n                        if(res.data){\n                            this.incomeStatements = res.data;\n                            this.bindData();\n                        }\n                    })\n                    .finally(()=>{\n                        // this.showLoading = false;\n                    });\n                }else{\n                    /* Alert Warning */\n                    this.$snotify.warning(i18n.t(\"please_select_budget\"));\n                }\n\t\t\t},\n            async bindData () {\n                let entries = [];\n                let Entry = kendo.data.Model.define({\n                    id: \"uuid\", // the identifier of the model\n                    fields: {\n                        /* Budget */\n                        \"budget_month\": { type: \"number\", defaultValue: 0 },\n                        \"budget_ytd\": { type: \"number\", defaultValue: 0 },\n                        \"budget_whole\": { type: \"number\", defaultValue: 0 },\n\n                        /* Actual */\n                        \"actual_month\": { type: \"number\", defaultValue: 0 },\n                        \"actual_ytd\": { type: \"number\", defaultValue: 0 },\n                        \"actual_whole\": { type: \"number\", defaultValue: 0 },\n\n                        /* Percentage */\n                        \"month_percentage\": { type: \"number\", defaultValue: 0 },\n                        \"ytd_percentage\": { type: \"number\", defaultValue: 0 },\n                        \"whole_percentage\": { type: \"number\", defaultValue: 0 },\n\n                        /* Account Information */\n                        \"name\": { type: \"string\", defaultValue: '' },\n                        \"local_name\": { type: \"string\", defaultValue: '' },\n                        \"type\": { type: \"string\", defaultValue: '' },\n                        \"type_local_name\": { type: \"string\", defaultValue: '' },\n                        \"account_type_number\": { type: \"number\", defaultValue: 0 },\n\n                        /* Other */\n                        \"order\": { type: \"number\", defaultValue: 0 },\n                    }\n                });\n\n                // Load Account List\n                let accounts = await this.$store.dispatch('accounting/getAccounts');\n\n                /* Find index of selected month */\n                let monthOfFormated = kendo.toString(new Date(this.monthOf), \"MMM yyyy\"),\n                    budgetMonthFormated = kendo.toString(new Date(this.monthOf), \"yyyy-MM\");\n\n                let monthOfIndex = this.fiscalMonths.indexOf(monthOfFormated);\n\n                /* Gathering from budget lines */\n                this.budget.lines.forEach(value => {\n                    let entry = new Entry(),\n                        nature = 1; /* Default Naure is Dr = 1 */\n\n                    /* Set Account Information */\n                    let account = new AccountModel(accounts.find(item => item.uuid === value.account_uuid));\n                    entry.uuid = account.uuid;\n                    entry.name = account.name;\n                    entry.local_name = account.local_name;\n                    entry.type = account.account_type.name;\n                    entry.type_local_name = account.account_type.local_name;\n                    entry.account_type_number = account.account_type.number;\n\n                    /* Reverse Nature */\n                    if(account.account_type.nature.toLowerCase() === \"cr\"){\n                        nature = -1;\n                    }\n\n                    /* Order */\n                    if(account.account_type.number === OrderNumberPL.OtherRevenue.number){//Other Revenue\n                        entry.order = OrderNumberPL.OtherRevenue.order;\n                    }else{\n                        entry.order = account.account_type.number;\n                    }\n\n                    /* BUDGET */\n                    /* Budget Whole */\n                    entry.budget_whole = value.amount * nature;\n                    \n                    value.monthly_amount.forEach(mline => {\n                        /* Budget Month */\n                        if(mline.month_of === budgetMonthFormated){\n                            entry.budget_month = mline.amount * nature;\n                        }\n\n                        /* Budget YTD */\n                        if (kendo.toString(new Date(mline.month_of),\"yyyy-MM-dd\") <= kendo.toString(new Date(this.monthOf),\"yyyy-MM-dd\")) {\n                            entry.budget_ytd += mline.amount * nature;\n                        }\n                    });\n\n                    /* ACTUAL */\n                    this.incomeStatements.forEach(plline => {\n                        if(plline.accountUUID === value.account_uuid){\n                            /* Actual Month */\n                            let propertyMonth = NumberInWord[monthOfIndex];// ['zero','one','two',...]\n                            entry.actual_month = plline[propertyMonth];// plline['zero']\n                            \n                            for (let i = 0; i < 12; i++) {\n                                let property = NumberInWord[i];\n\n                                /* Actual YTD */\n                                if(i <= monthOfIndex){\n                                    entry.actual_ytd += plline[property];\n                                }\n\n                                /* Actual Whole */\n                                entry.actual_whole += plline[property];\n                            }\n                        }\n                    });\n\n                    /* Percentage = Actual / Budget */\n                    if(entry.budget_month !== 0){\n                        entry.month_percentage = entry.actual_month / entry.budget_month;\n                    }\n                    if(entry.budget_ytd !== 0){\n                        entry.ytd_percentage = entry.actual_ytd / entry.budget_ytd;\n                    }\n                    if(entry.budget_whole !== 0){\n                        entry.whole_percentage = entry.actual_whole / entry.budget_whole;\n                    }\n\n                    /* Add entry */\n                    entries.push(entry);\n                });\n\n                /* Gathering from budget estimations */\n                this.budget.budget_estimations.forEach(value => {\n                    let entry = new Entry();\n\n                    /* Set Account Information */\n                    entry.uuid = value.accountUUID;\n                    entry.name = value.name;\n                    entry.local_name = value.local_name;\n                    entry.type = value.type;\n                    entry.type_local_name = value.type_local_name;\n                    entry.account_type_number = value.account_type_number;\n\n                    // Order\n                    if(value.account_type_number == OrderNumberPL.GrossProfit.number){// Gross Profit\n                        entry.order = OrderNumberPL.GrossProfit.order;\n                    }else if(value.account_type_number == OrderNumberPL.OtherRevenue.number){// Other Revenue\n                        entry.order = OrderNumberPL.OtherRevenue.order;\n                    }else if(value.account_type_number == OrderNumberPL.OperatingExpense.number){// Operating Expense\n                        entry.order = OrderNumberPL.OperatingExpense.order;\n                    }else if(value.account_type_number == OrderNumberPL.OperatingIncomeEBITDA.number){// Operating Income (EBITDA)\n                        entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n                    }else if(value.account_type_number == OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number){// Earning Before Interest And Tax(EBIT)\n                        entry.order = OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n                    }else if(value.account_type_number == OrderNumberPL.ProfitBeforeTax.number){// Profit Before Tax\n                        entry.order = OrderNumberPL.ProfitBeforeTax.order;\n                    }else if(value.account_type_number == OrderNumberPL.ProfitForThePeriod.number){// Profit For The Period\n                        entry.order = OrderNumberPL.ProfitForThePeriod.order;\n                    }else{\n                        entry.order = value.account_type_number;\n                    }\n\n                    /* BUDGET */\n\n                    /* Budget Month */\n                    let propertyBudgetMonth = NumberInWord[monthOfIndex];// ['zero','one','two',...]\n                    entry.budget_month = value[propertyBudgetMonth];// value['zero']\n\n                    for (let i = 0; i < 12; i++) {\n                        let property = NumberInWord[i];\n\n                        /* Budget YTD */\n                        if(i <= monthOfIndex){\n                            entry.budget_ytd += value[property];\n                        }\n\n                        /* Budget Whole */\n                        entry.budget_whole += value[property];\n                    }\n\n                    /* ACTUAL */\n                    this.incomeStatements.forEach(plline => {\n                        if(plline.account_type_number === value.account_type_number){\n                            /* Actual Month */\n                            let propertyActualMonth = NumberInWord[monthOfIndex];// ['zero','one','two',...]\n                            entry.actual_month = plline[propertyActualMonth];// plline['zero']\n\n                            for (let i = 0; i < 12; i++) {\n                                let property = NumberInWord[i];\n\n                                /* Actual YTD */\n                                if(i <= monthOfIndex){\n                                    entry.actual_ytd += plline[property];\n                                }\n\n                                /* Actual Whole */\n                                entry.actual_whole += plline[property];\n                            }\n                        }\n                    });\n\n                    /* Percentage = Actual / Budget */\n                    if(entry.budget_month !== 0){\n                        entry.month_percentage = entry.actual_month / entry.budget_month;\n                    }\n                    if(entry.budget_ytd !== 0){\n                        entry.ytd_percentage = entry.actual_ytd / entry.budget_ytd;\n                    }\n                    if(entry.budget_whole !== 0){\n                        entry.whole_percentage = entry.actual_whole / entry.budget_whole;\n                    }\n\n                    /* Add entry */\n                    entries.push(entry);\n                });\n\n                /* BIND STATMENT */\n                this.statementPLList = entries;\n                this.generateColumn();\n\t\t\t},\n            /* Databound */\n            dataBound(e) {\n                let grid = e.sender;\n\n\t\t\t\tgrid.dataSource.data().forEach(value => {\n\t\t\t\t\tif(value.account_type_number >= 100){\n\t\t\t\t\t\tlet row = grid.tbody.find(\"tr[data-uid='\" + value.uid + \"']\").prev(\".k-grouping-row\");\n\t\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t\t}\n\t\t\t\t});\n            },\n            // Generate Columns\n\t\t\tgenerateColumn () {\n                let headerAttributes = {\n                        \"class\": \"table-header-cell\",\n                        style: \"text-align: center; font-size: 14px\"\n                    },\n                    subHeaderAttributes = {\n                        \"class\": \"table-header-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    },\n                    attributes = {\n                        \"class\": \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    };\n\n                /* Columns */\n\t\t\t\tlet columns = [\n\t\t\t\t\t{ \n\t\t\t\t\t\tfield: this.fieldName, \n\t\t\t\t\t\ttitle: i18n.t('account'),\n                        groupFooterTemplate: this.totalWord + \" #=value#\",\n\t\t\t\t\t\tlocked: true,\n\t\t\t\t\t\twidth:300\n\t\t\t\t\t},\n\t\t\t\t\t{ \n\t\t\t\t\t\tfield: this.fieldType, \n\t\t\t\t\t\ttitle: \"TYPE\",\n                        hidden: true,\n\t\t\t\t\t\tgroupHeaderTemplate:this.typeGroupHeaderTmpl,\n\t\t\t\t\t\twidth:300 \n\t\t\t\t\t},\n                    /* Selected Month */\n                    { \n\t\t\t\t\t\ttitle: kendo.toString(new Date(this.monthOf), 'MMMM yyyy'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_month\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_month\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"month_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                    /* YTD(up to selected month) */\n                    { \n\t\t\t\t\t\ttitle: i18n.t('ytd_up_to_selected_month'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_ytd\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_ytd\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"ytd_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                    /* Whole Year */\n                    { \n\t\t\t\t\t\ttitle: i18n.t('whole_year'),\n                        headerAttributes : headerAttributes,\n                        columns: [\n                            { \n                                field: \"budget_whole\",\n                                title: i18n.t('budget'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"actual_whole\",\n                                title: i18n.t('actual'),\n                                format: \"{0:n}\",\n                                aggregates: \"['sum']\",\n                                groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            },\n                            { \n                                field: \"whole_percentage\",\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width:150,\n                                headerAttributes: subHeaderAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n\t\t\t\t\t},\n                ]\n\n                /* Set Columns */\n                this.columns = columns;\n\t\t\t},\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                this.fieldType = \"type\";\n                this.totalWord = \"Total\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                    this.fieldType = \"type_local_name\";\n                    this.totalWord = \"សរុប\";\n                }\n                \n                // Generate Group By\n                this.generateGroupBy();\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n            /* Templates */\n            typeGroupHeaderTmpl(dataItem) {\n\t\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\t\tif(this.reportingLanguage === \"local\"){\n\t\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t\t}\n\n\t\t\t\treturn \"<span class='text-bold text-black'>\"+ name +\"</span>\";\n\t\t\t},\n\t\t\t// Generate Group By\n\t\t\tgenerateGroupBy(){\n\t\t\t\tthis.groupDefinition = {\n\t\t\t\t\tfield: this.fieldType, \n\t\t\t\t\taggregates : this.aggregateDefinition,\n\t\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n        },\n        watch : {\n            budget(){// Prevent null error\n                if(this.budget === null){\n                    this.budget = new BudgetModel();\n                }\n            },\n            reportingLanguage () {\n\t\t\t\tthis.onReportingLanguageChanges();\n            },\n        },\n        mounted () {\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Initial Grid Columns\n\t\t\t// this.generateColumn();\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th{\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"],"sourceRoot":"src/views/budgeting/budgets"}]}