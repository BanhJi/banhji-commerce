{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/TaxCredit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/TaxCredit.vue","mtime":1638499443159},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnBhZC1zdGFydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwudG8tanNvbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IExvYWRpbmdNZSBmcm9tICJAL2NvbXBvbmVudHMvTG9hZGluZyI7CmltcG9ydCBrZW5kbyBmcm9tICJAcHJvZ3Jlc3Mva2VuZG8tdWkiOwoKdmFyIG1vbnRobHlSZXR1cm5IYW5kbGVyID0gcmVxdWlyZSgiQC9zY3JpcHRzL2NvbXBsaWFuY2UvaGFuZGxlci9tb250aGx5UmV0dXJuSGFuZGxlciIpOwoKdmFyIHNhbGVIYW5kbGVyID0gcmVxdWlyZSgiQC9zY3JpcHRzL2NvbXBsaWFuY2UvaGFuZGxlci9zYWxlSGFuZGxlciIpOwoKdmFyIHB1cmNoYXNlSGFuZGxlciA9IHJlcXVpcmUoIkAvc2NyaXB0cy9jb21wbGlhbmNlL2hhbmRsZXIvcHVyY2hhc2VIYW5kbGVyIik7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dMb2FkaW5nOiBmYWxzZSwKICAgICAgZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCA3KSwKICAgICAgc2FsZXM6IFtdLAogICAgICBwdXJjaGFzZXM6IFtdLAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICBtb250aE9mOiAnJywKICAgICAgYW1vdW50UFBJOiAnJywKICAgICAgY29kZVZhdDogJycsCiAgICAgIGFtb3VudFZhdDogJycsCiAgICAgIHBwaToge30sCiAgICAgIHZhdDoge30sCiAgICAgIGJhbGFuY2VWYXQ6IHt9LAogICAgICBiYWxhbmNlUHBpOiB7fSwKICAgICAgb2xkQmFsYW5jZVBwaToge30sCiAgICAgIG9sZEJhbGFuY2VWYXQ6IHt9LAogICAgICB0b3RhbEFtb3VudE5ldDogMCwKICAgICAgdG90YWxBbW91bnRQOiAwLAogICAgICB0b3RhbEFtb3VudFM6IDAsCiAgICAgIHZhdFJlZnVuZDogMAogICAgfTsKICB9LAogIHByb3BzOiB7fSwKICBtZXRob2RzOiB7CiAgICBvbkNsb3NlOiBmdW5jdGlvbiBvbkNsb3NlKCkgewogICAgICB0aGlzLm1vbnRoT2YgPSAnJzsKICAgICAgdGhpcy5hbW91bnRWYXQgPSAnJzsKICAgICAgdGhpcy5hbW91bnRQUEkgPSAnJzsKICAgICAgdGhpcy5kaWFsb2cgPSBmYWxzZTsKICAgIH0sCiAgICBvbmxvYWRTYWxlOiBmdW5jdGlvbiBvbmxvYWRTYWxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoIC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCdyZXNvbHZlZCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNhbGVIYW5kbGVyLmdldEJ5TW9udGgoX3RoaXMuZGF0ZSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlcykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnNhbGVzID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLm9uQ2FsY3VsYXRlKCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLm9uQ2FsY3VsYXRlVGF4KCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KCkpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICAgICAgICAgICAgICB9KSksIDEwMCk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgb25sb2FkUHVyY2hhc2U6IGZ1bmN0aW9uIG9ubG9hZFB1cmNoYXNlKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCdyZXNvbHZlZCcpOwogICAgICAgICAgICAgICAgICAgIHB1cmNoYXNlSGFuZGxlci5nZXRCeU1vbnRoKF90aGlzMi5kYXRlKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChyZXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdGhpczIucHVyY2hhc2VzID0gcmVzLmRhdGEuZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5vbkNhbGN1bGF0ZSgpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmMy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICB9KCkpOwogICAgICAgICAgICAgICAgICB9LCAxMDApOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uQ2FsY3VsYXRlOiBmdW5jdGlvbiBvbkNhbGN1bGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDYucHJldiA9IF9jb250ZXh0Ni5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKTsKICAgICAgICAgICAgICAgICAgICB2YXIgYW1vdW50UCA9IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIGFtb3VudFMgPSAwOwoKICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLnB1cmNoYXNlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJzEyMycpOwoKICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMzLnB1cmNoYXNlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICAgICAgICBhbW91bnRQICs9IF90aGlzMy5wdXJjaGFzZXNbaV0udG90YWxWQVQ7CiAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKF90aGlzMy50b3RhbEFtb3VudFAsICdQJyk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBfdGhpczMudG90YWxBbW91bnRQID0gYW1vdW50UDsKCiAgICAgICAgICAgICAgICAgICAgaWYgKF90aGlzMy5zYWxlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJzk4NycpOwoKICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBfdGhpczMuc2FsZXMubGVuZ3RoOyBfaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFtb3VudFMgKz0gX3RoaXMzLnNhbGVzW19pXS50b3RhbFZBVDsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coX3RoaXMzLnRvdGFsQW1vdW50UywgJ1MnKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIF90aGlzMy50b3RhbEFtb3VudFMgPSBhbW91bnRTOwogICAgICAgICAgICAgICAgICB9LCAxMDApOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9ubG9hZFBQSTogZnVuY3Rpb24gb25sb2FkUFBJKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU3KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNyQoX2NvbnRleHQ3KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhseVJldHVybkhhbmRsZXIuZ2V0UHBpKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNC5wcGkgPSByZXMuZGF0YS5kYXRhWzBdOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9ubG9hZFZhdDogZnVuY3Rpb24gb25sb2FkVmF0KCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlOCQoX2NvbnRleHQ4KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0OC5wcmV2ID0gX2NvbnRleHQ4Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhseVJldHVybkhhbmRsZXIuZ2V0VmF0KCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNS52YXQgPSByZXMuZGF0YS5kYXRhWzBdOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0OC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlOCk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uQ2FsY3VsYXRlVGF4OiBmdW5jdGlvbiBvbkNhbGN1bGF0ZVRheCgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlOSgpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTkkKF9jb250ZXh0OSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKTsKICAgICAgICAgICAgICAgICAgICB2YXIgYW1vdW50UyA9IDA7CgogICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXM2LnNhbGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgICBhbW91bnRTICs9IF90aGlzNi5zYWxlc1tpXS50b3RhbEFtb3VudEluY2x1c2l2ZSArIF90aGlzNi5zYWxlc1tpXS50b3RhbFNwZWNpZmljVGF4ICsgX3RoaXM2LnNhbGVzW2ldLnRvdGFsUHViVGF4ICsgX3RoaXM2LnNhbGVzW2ldLnRvdGFsQWNjb21UYXggKyBfdGhpczYuc2FsZXNbaV0udG90YWxBbW91bnROZXRWYXQ7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBfdGhpczYudG90YWxBbW91bnROZXQgPSBhbW91bnRTICogMC4wMTsKICAgICAgICAgICAgICAgICAgfSwgMjAwKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTkpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBnZXRCYWxhbmNlUFBJOiBmdW5jdGlvbiBnZXRCYWxhbmNlUFBJKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMCgpIHsKICAgICAgICB2YXIgYWRkWmVybywgaWQsIG1vbnRobHksIG1vbnRoT2Y7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMCQoX2NvbnRleHQxMCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEwLnByZXYgPSBfY29udGV4dDEwLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBhZGRaZXJvID0gZnVuY3Rpb24gYWRkWmVybyhudW0sIHBsYWNlcykgewogICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKG51bSkucGFkU3RhcnQocGxhY2VzLCAnMCcpOwogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBpZCA9IF90aGlzNy5wcGkuaWQ7CiAgICAgICAgICAgICAgICBtb250aGx5ID0gbmV3IERhdGUoX3RoaXM3LmRhdGUpLnNldE1vbnRoKG5ldyBEYXRlKF90aGlzNy5kYXRlKS5nZXRNb250aCgpKTsKICAgICAgICAgICAgICAgIG1vbnRoT2YgPSBuZXcgRGF0ZShtb250aGx5KS5nZXRGdWxsWWVhcigpICsgJy0nICsgYWRkWmVybyhuZXcgRGF0ZShtb250aGx5KS5nZXRNb250aCgpLCAyKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhseVJldHVybkhhbmRsZXIuZ2V0QmFsYW5jZShpZCwgbW9udGhPZiwgJ21vbnRobHknKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNy5vbGRCYWxhbmNlUHBpID0gcmVzLmRhdGEuZGF0YVswXTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczcub2xkQmFsYW5jZVBwaSA9IHsKICAgICAgICAgICAgICAgICAgICAgIHR4bkJhbGFuY2U6IDAsCiAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlOiAwCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhseVJldHVybkhhbmRsZXIuZ2V0QmFsYW5jZShpZCwgX3RoaXM3LmRhdGUsICdtb250aGx5JykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5kYXRhLmxlbmd0aCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNy5iYWxhbmNlUHBpID0gcmVzLmRhdGEuZGF0YVswXTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczcuYmFsYW5jZVBwaSA9IHsKICAgICAgICAgICAgICAgICAgICAgIHR4bkJhbGFuY2U6IDAsCiAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlOiAwCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEwKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0QmFsYW5jZVZhdDogZnVuY3Rpb24gZ2V0QmFsYW5jZVZhdCgpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTEoKSB7CiAgICAgICAgdmFyIGFkZFplcm8sIGlkLCBtb250aGx5LCBtb250aE9mOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTEkKF9jb250ZXh0MTEpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQxMS5wcmV2ID0gX2NvbnRleHQxMS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgYWRkWmVybyA9IGZ1bmN0aW9uIGFkZFplcm8obnVtLCBwbGFjZXMpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIFN0cmluZyhudW0pLnBhZFN0YXJ0KHBsYWNlcywgJzAnKTsKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgaWQgPSBfdGhpczgudmF0LmlkOwogICAgICAgICAgICAgICAgbW9udGhseSA9IG5ldyBEYXRlKF90aGlzOC5kYXRlKS5zZXRNb250aChuZXcgRGF0ZShfdGhpczguZGF0ZSkuZ2V0TW9udGgoKSk7CiAgICAgICAgICAgICAgICBtb250aE9mID0gbmV3IERhdGUobW9udGhseSkuZ2V0RnVsbFllYXIoKSArICctJyArIGFkZFplcm8obmV3IERhdGUobW9udGhseSkuZ2V0TW9udGgoKSwgMik7CiAgICAgICAgICAgICAgICBfY29udGV4dDExLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRobHlSZXR1cm5IYW5kbGVyLmdldEJhbGFuY2VWYXQoaWQsIG1vbnRoT2YsICdtb250aGx5JykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5kYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczgub2xkQmFsYW5jZVZhdCA9IHJlcy5kYXRhLmRhdGFbMF07CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXM4Lm9sZEJhbGFuY2VWYXQgPSB7CiAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlQ3JlZGl0OiAwLAogICAgICAgICAgICAgICAgICAgICAgYmFsYW5jZVBheW1lbnQ6IDAKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX2NvbnRleHQxMS5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBtb250aGx5UmV0dXJuSGFuZGxlci5nZXRCYWxhbmNlVmF0KGlkLCBfdGhpczguZGF0ZSwgJ21vbnRobHknKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgaWYgKHJlcy5kYXRhLmRhdGEubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzOC5iYWxhbmNlVmF0ID0gcmVzLmRhdGEuZGF0YVswXTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczguYmFsYW5jZVZhdCA9IHsKICAgICAgICAgICAgICAgICAgICAgIGJhbGFuY2VDcmVkaXQ6IDAsCiAgICAgICAgICAgICAgICAgICAgICBiYWxhbmNlUGF5bWVudDogMAogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUxMSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG9uQ3JlYXRlOiBmdW5jdGlvbiBvbkNyZWF0ZSgpIHsKICAgICAgdmFyIF90aGlzOSA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTIoKSB7CiAgICAgICAgdmFyIGRhdGFQUEksIGRhdGFWYXQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMiQoX2NvbnRleHQxMikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczkuc2hvd0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgZGF0YVBQSSA9IHsKICAgICAgICAgICAgICAgICAgYW1vdW50OiBfdGhpczkuYW1vdW50UFBJLAogICAgICAgICAgICAgICAgICBtb250aE9mOiBfdGhpczkubW9udGhPZiwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3BwaSBtb250aGx5JywKICAgICAgICAgICAgICAgICAgaXNEZWZhdWx0OiB0cnVlLAogICAgICAgICAgICAgICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSlNPTigpCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBtb250aGx5UmV0dXJuSGFuZGxlci5hZGRUeG5QUEkoZGF0YVBQSSwgX3RoaXM5Lm1vbnRoT2YsICdtb250aGx5JykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhyZXMpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGRhdGFWYXQgPSB7CiAgICAgICAgICAgICAgICAgIGNyZWRpdDogX3RoaXM5LmFtb3VudFZhdCwKICAgICAgICAgICAgICAgICAgcGF5bWVudDogMCwKICAgICAgICAgICAgICAgICAgY29kZTogX3RoaXM5LmNvZGVWYXQsCiAgICAgICAgICAgICAgICAgIG1vbnRoT2Y6IF90aGlzOS5tb250aE9mLAogICAgICAgICAgICAgICAgICB0eXBlOiAndmF0IG1vbnRobHknLAogICAgICAgICAgICAgICAgICBpc0RlZmF1bHQ6IHRydWUsCiAgICAgICAgICAgICAgICAgIGRhdGU6IG5ldyBEYXRlKCkudG9KU09OKCkKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIG1vbnRobHlSZXR1cm5IYW5kbGVyLmFkZFR4blZBVChkYXRhVmF0LCBfdGhpczkubW9udGhPZiwgJ21vbnRobHknKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX3RoaXM5LnNob3dMb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgICAgX3RoaXM5Lm9uQ2xvc2UoKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvblNlYXJjaDogZnVuY3Rpb24gb25TZWFyY2goKSB7CiAgICAgIHZhciBfdGhpczEwID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMygpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTEzJChfY29udGV4dDEzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTMucHJldiA9IF9jb250ZXh0MTMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF90aGlzMTAuc2hvd0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczEwLm9ubG9hZFB1cmNoYXNlKCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMC5vbmxvYWRTYWxlKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMC5nZXRCYWxhbmNlUFBJKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDk7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMC5nZXRCYWxhbmNlVmF0KCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF90aGlzMTAuc2hvd0xvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTEzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgbW9udGhGb3JtYXQ6IGZ1bmN0aW9uIG1vbnRoRm9ybWF0KGRhdGUpIHsKICAgICAgaWYgKGRhdGUgIT09ICdBbGwgTW9udGhseScpIHsKICAgICAgICByZXR1cm4ga2VuZG8udG9TdHJpbmcobmV3IERhdGUoZGF0ZSksICJNTU1NIHl5eXkiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZGF0ZTsKICAgICAgfQogICAgfSwKICAgIG51bWJlckZvcm1hdDogZnVuY3Rpb24gbnVtYmVyRm9ybWF0KHZhbHVlKSB7CiAgICAgIC8vIHdpbmRvdy5jb25zb2xlLmxvZyh0aGlzLnNhbGVGb3JtQ29udGVudC5kZWNpbWFsLCduaW1vbCcpCiAgICAgIHJldHVybiBrZW5kby50b1N0cmluZyh2YWx1ZSwgIm4yIik7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMTEgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNCgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNCQoX2NvbnRleHQxNCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTQucHJldiA9IF9jb250ZXh0MTQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQxNC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMS5vbmxvYWRWYXQoKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBfdGhpczExLm9ubG9hZFBQSSgpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMTEub25sb2FkU2FsZSgpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMTEub25sb2FkUHVyY2hhc2UoKTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dDE0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMS5nZXRCYWxhbmNlUFBJKCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIF9jb250ZXh0MTQubmV4dCA9IDEyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpczExLmdldEJhbGFuY2VWYXQoKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTE0KTsKICAgIH0pKSgpOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxNSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxNSQoX2NvbnRleHQxNSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTUucHJldiA9IF9jb250ZXh0MTUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTUuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTE1KTsKICAgIH0pKSgpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGlzVmFsaWQ6IGZ1bmN0aW9uIGlzVmFsaWQoKSB7CiAgICAgIHJldHVybiAhdGhpcy5iYWxhbmNlVmF0LmlzRGVmYXVsdCAmJiAhdGhpcy5iYWxhbmNlVmF0LmlzRGVmYXVsdDsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgICdMb2FkaW5nTWUnOiBMb2FkaW5nTWUsCiAgICAnbW9udGgtcGlja2VyJzogZnVuY3Rpb24gbW9udGhQaWNrZXIoKSB7CiAgICAgIHJldHVybiBpbXBvcnQoJ0AvY29tcG9uZW50cy9jdXN0b21fdGVtcGxhdGVzL01vbnRoUGlja2VyJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TaxCredit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                            <h2 class=\"mb-0 font_20\">{{ $t('monthly_tax_balance') }}</h2>\n                            <p class=\"mb-0\">{{ $t('for_the_month_of') }}: <span class=\"text-bold\">{{\n                                    monthFormat(date)\n                                }}</span></p>\n                        </v-col>\n                        <v-col :sm=\"isValid ? 4 : 6\" cols=\"12\" class=\"py-0 d-flex justify-end hide_form_alert\">\n                            <div class=\"d-flex\">\n                                <month-picker :initialMonth=\"date\" @emitMonth=\"date = $event\"/>\n                                <v-btn class=\"ma-1 ml-2\" color=\"primary white--text text-capitalize\"\n                                       @click=\"onSearch\">\n                                    {{ $t('view') }}\n                                </v-btn>\n                            </div>\n                        </v-col>\n                        <v-col v-if=\"isValid\" sm=\"2\" cols=\"12\" class=\"py-1\">\n                            <v-btn @click=\"dialog = true\" class=\"float-right capitalize white--text\" color=\"primary\">\n                                {{ $t('add_new') }}\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table class=\"nomal_table\">\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-bold text-uppercase \">{{ $t('description') }}</th>\n                                <th class=\"text-bold text-uppercase \">{{ $t('code') }}</th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('amount') }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td class=\"text-bold text-uppercase\">{{ $t('prepayment_of_tax_on_income_ppi') }}</td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">{{ $t('prepayment_of_tax_on_income') }}</td>\n                                <td></td>\n                                <td>{{ numberFormat(totalAmountNet) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">{{ $t('credit_carried_last_month') }}</td>\n                                <td></td>\n                                <td>{{ numberFormat(oldBalancePpi.balance) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"third vat\">{{ $t('ppl_be_paid') }}</td>\n                                <td class=\"third vat\"></td>\n                                <td class=\"third vat\">{{ numberFormat(balancePpi.balance) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-bold text-uppercase\">{{ $t('value_added_tax_vat') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('tax_credit_from_last_month') }}</td>\n                                <td class=\"\">{{ oldBalanceVat.code }}</td>\n                                <td class=\"\">{{ numberFormat(oldBalanceVat.balanceCredit) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('current_month_input_tax') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ numberFormat(totalAmountP) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('current_month_output_tax') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ numberFormat(totalAmountS) }}</td>\n                            </tr>\n                            <tr v-if=\"balanceVat.balancePayment > 0\">\n                                <td class=\"third vat\">{{ $t('vat_to_paid') }}</td>\n                                <td class=\"third vat\"></td>\n                                <td class=\"third vat\">{{ numberFormat(balanceVat.balancePayment) }}</td>\n                            </tr>\n                            <tr v-if=\"balanceVat.balanceCredit > 0\">\n                                <td class=\"third vat border_top\">{{ $t('credit_forward') }}</td>\n                                <td class=\"thrid vat border_top\"></td>\n                                <td class=\"third vat border_top\">{{ numberFormat(balanceVat.balanceCredit) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"third vat border_top\">{{ $t('vat_refund') }}</td>\n                                <td class=\"third vat border_top\"></td>\n                                <td class=\"third vat border_top\">{{ numberFormat(vatRefund) }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n                <v-col cols=\"12\">\n                    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{ $t(\"add_tax_credit\") }}</v-card-title>\n                                <v-icon @click=\"onClose\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content\"  >\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"month_of\") }}</label>\n                                        <month-picker :initial-month=\"monthOf\" @emitMonth=\"monthOf = $event\"/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"ppi\") }}</label>\n                                        <v-text-field type=\"number\" v-model=\"amountPPI\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label\">{{ $t(\"code\") }}</label>\n                                        <v-text-field v-model=\"codeVat\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label\">{{ $t(\"vat\") }}</label>\n                                        <v-text-field type=\"number\" v-model=\"amountVat\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                   \n                            <v-card-actions class=\"modal_footer d-flex justify-space-between\">\n                                <v-btn @click=\"onClose\" color=\"primary\"  outlined class=\"black--text capitalize\">{{ $t(\"cancel\") }}</v-btn>\n                                <v-btn @click=\"onCreate\" color=\"primary\" class=\"white--text capitalize\"\n                                >{{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nconst purchaseHandler = require(\"@/scripts/compliance/handler/purchaseHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        date: new Date().toISOString().substr(0, 7),\n        sales: [],\n        purchases: [],\n        dialog: false,\n        monthOf: '',\n        amountPPI: '',\n        codeVat: '',\n        amountVat: '',\n        ppi: {},\n        vat: {},\n        balanceVat: {},\n        balancePpi: {},\n        oldBalancePpi: {},\n        oldBalanceVat: {},\n        totalAmountNet: 0,\n        totalAmountP: 0,\n        totalAmountS: 0,\n        vatRefund: 0,\n    }),\n    props: {},\n    methods: {\n        onClose() {\n            this.monthOf = ''\n            this.amountVat = ''\n            this.amountPPI = ''\n            this.dialog = false\n        },\n        async onloadSale() {\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    await saleHandler.getByMonth(this.date).then(async res => {\n                        this.sales = res.data.data\n                        await this.onCalculate()\n                        await this.onCalculateTax()\n                    })\n                }, 100)\n            })\n        },\n        async onloadPurchase() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    purchaseHandler.getByMonth(this.date).then(async res => {\n                        this.purchases = res.data.data\n                        await this.onCalculate()\n                    })\n                }, 100)\n            })\n\n        },\n        async onCalculate() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountP = 0,\n                        amountS = 0\n                    if (this.purchases.length > 0) {\n                        window.console.log('123')\n                        for (let i = 0; i < this.purchases.length; i++) {\n                            amountP += this.purchases[i].totalVAT\n                        }\n                        window.console.log(this.totalAmountP, 'P')\n                    }\n                    this.totalAmountP = amountP\n                    if (this.sales.length > 0) {\n                        window.console.log('987')\n                        for (let i = 0; i < this.sales.length; i++) {\n                            amountS += this.sales[i].totalVAT\n                        }\n                        window.console.log(this.totalAmountS, 'S')\n                    }\n                    this.totalAmountS = amountS\n                }, 100)\n            })\n        },\n        async onloadPPI() {\n            await monthlyReturnHandler.getPpi().then(res => {\n                this.ppi = res.data.data[0]\n            })\n        },\n        async onloadVat() {\n            await monthlyReturnHandler.getVat().then(res => {\n                this.vat = res.data.data[0]\n            })\n        },\n        async onCalculateTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountS = 0\n                    for (let i = 0; i < this.sales.length; i++) {\n                        amountS += this.sales[i].totalAmountInclusive\n                            + this.sales[i].totalSpecificTax\n                            + this.sales[i].totalPubTax\n                            + this.sales[i].totalAccomTax\n                            + this.sales[i].totalAmountNetVat\n                    }\n                    this.totalAmountNet = amountS * 0.01\n                }, 200)\n            })\n        },\n        async getBalancePPI() {\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.ppi.id\n            const monthly = new Date(this.date).setMonth(new Date(this.date).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            await monthlyReturnHandler.getBalance(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.oldBalancePpi = res.data.data[0]\n                } else {\n                    this.oldBalancePpi = {\n                        txnBalance: 0,\n                        balance: 0,\n                    }\n                }\n            })\n            await monthlyReturnHandler.getBalance(id, this.date, 'monthly').then(res => {\n                if (res.data.data.length) {\n                    this.balancePpi = res.data.data[0]\n                } else {\n                    this.balancePpi = {\n                        txnBalance: 0,\n                        balance: 0,\n                    }\n                }\n            })\n        },\n        async getBalanceVat() {\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.vat.id\n            const monthly = new Date(this.date).setMonth(new Date(this.date).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            await monthlyReturnHandler.getBalanceVat(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.oldBalanceVat = res.data.data[0]\n                } else {\n                    this.oldBalanceVat = {\n                        balanceCredit: 0,\n                        balancePayment: 0,\n                    }\n                }\n            })\n\n            await monthlyReturnHandler.getBalanceVat(id, this.date, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.balanceVat = res.data.data[0]\n                } else {\n                    this.balanceVat = {\n                        balanceCredit: 0,\n                        balancePayment: 0,\n                    }\n                }\n            })\n        },\n        async onCreate() {\n            this.showLoading = true\n            const dataPPI = {\n                amount: this.amountPPI,\n                monthOf: this.monthOf,\n                type: 'ppi monthly',\n                isDefault: true,\n                date: new Date().toJSON()\n            }\n            await monthlyReturnHandler.addTxnPPI(dataPPI, this.monthOf, 'monthly').then(res => {\n                window.console.log(res)\n            })\n            const dataVat = {\n                credit: this.amountVat,\n                payment: 0,\n                code: this.codeVat,\n                monthOf: this.monthOf,\n                type: 'vat monthly',\n                isDefault: true,\n                date: new Date().toJSON()\n            }\n            await monthlyReturnHandler.addTxnVAT(dataVat, this.monthOf, 'monthly').then(res => {\n                window.console.log(res)\n            })\n            this.showLoading = false\n            this.onClose()\n        },\n        async onSearch() {\n            this.showLoading = true\n            await this.onloadPurchase()\n            await this.onloadSale()\n            await this.getBalancePPI()\n            await this.getBalanceVat()\n            this.showLoading = false\n        },\n        monthFormat(date) {\n            if (date !== 'All Monthly') {\n                return kendo.toString(new Date(date), `MMMM yyyy`)\n            } else {\n                return date\n            }\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n2`)\n        },\n    },\n    async mounted() {\n        await this.onloadVat()\n        await this.onloadPPI()\n        await this.onloadSale()\n        await this.onloadPurchase()\n        await this.getBalancePPI()\n        await this.getBalanceVat()\n    },\n    async created() {\n\n    },\n    computed: {\n        isValid() {\n            return !this.balanceVat.isDefault && !this.balanceVat.isDefault;\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        'month-picker': () => import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold', serif !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"],"sourceRoot":"src/views/compliance/monthly_tax"}]}