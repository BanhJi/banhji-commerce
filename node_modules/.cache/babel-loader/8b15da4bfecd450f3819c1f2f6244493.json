{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/handler/accounting/incomeStatementHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/handler/accounting/incomeStatementHandler.js","mtime":1638760538964},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/handler/accounting/incomeStatementHandler.js"],"names":["axios","require","apiUrl","urlPath","income_statement_get","module","exports","getIncomeStatement","params","get","response","window","console","error","getIncomeStatementByProject","projectUuid","getByProjects","startDate","endDate","proIds","requests","proId","start_date","end_date","group_by","request","push","Promise","all","responses","results","i","length","element","data","getBySegments","segIds","segId","segment_uuid","getAccountBalance","accounting_report"],"mappings":"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","sourcesContent":["/* Statement Of Profit Or Loss */\nconst axios = require('axios');\nconst apiUrl = require('@/apiUrl.js');\nconst urlPath = apiUrl.income_statement_get;\n\n// GET\nmodule.exports.getIncomeStatement = async (params) => {\n    try {\n        const response = await axios.get(urlPath, params);\n        \n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET\nmodule.exports.getIncomeStatementByProject = async (params, projectUuid) => {\n    try {\n        const response = await axios.get(urlPath + `/project/${projectUuid}`, params);\n        \n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET BY PROJECT\nmodule.exports.getByProjects = async (startDate, endDate, proIds) => {\n    try {\n        let requests = [];\n        for (const proId of proIds) {\n            let request = await axios.get(urlPath + `/project/${proId}`,{\n                params: {\n                    start_date: startDate,\n                    end_date: endDate,\n                    group_by: \"1\",\n                },\n            })\n\n            /* Add requests */\n            requests.push(request);\n        }\n\n        let responses = await Promise.all(requests);\n\n        let results = [];\n        for (let i = 0; i < proIds.length; i++) {\n            const element = responses[i];\n            results.push(element.data);\n        }\n        return results;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET BY SEGMENTS\nmodule.exports.getBySegments = async (startDate, endDate, segIds) => {\n    try {\n        let requests = [];\n        for (const segId of segIds) {\n            let request = await axios.get(urlPath,{\n                params: {\n                    start_date: startDate,\n                    end_date: endDate,\n                    group_by: \"1\",\n                    segment_uuid: segId,\n                },\n            })\n\n            /* Add requests */\n            requests.push(request);\n        }\n\n        let responses = await Promise.all(requests);\n\n        let results = [];\n        for (let i = 0; i < segIds.length; i++) {\n            const element = responses[i];\n            results.push(element.data);\n        }\n        return results;\n    } catch (error) {\n        window.console.error(error);\n    }\n}\n\n// GET ACCOUNT BALANCE\nmodule.exports.getAccountBalance = async (params) => {\n    try {\n        const response = await axios.get(apiUrl.accounting_report + \"/reports/accountsbalance\", params);\n        \n        return response;\n    } catch (error) {\n        window.console.error(error);\n    }\n}"]}]}