{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/report_npo_ps/peformance/receipts_payments/scriptsPerformance.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/report_npo_ps/peformance/receipts_payments/scriptsPerformance.js","mtime":1639966363964},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/report_npo_ps/peformance/receipts_payments/scriptsPerformance.js"],"names":["kendo","i18n","Helper","mapState","dataStore","require","incomeStatementHandler","OrderNumberPL","components","LoadingMe","data","startDate","endDate","statementPLList","selectedSegmentIds","reportingLanguage","fieldName","fieldType","showLoading","columns","sortDefinition","field","dir","groupDefinition","aggregateDefinition","schemaDefinition","model","id","methods","loadData","$store","dispatch","onGridChanges","grid","jQuery","dataItem","select","$router","push","path","query","account_id","accountUUID","start_date","end_date","search","length","sdate","edate","toString","Date","ds","$refs","statementPLDS","kendoWidget","getBySegments","then","response","statements","bindData","finally","alertErrorMsg","entries","i","forEach","value","entry","account_type_number","GrossProfit","number","order","OtherRevenue","OperatingExpense","OperatingIncomeEBITDA","EarningBeforeInterestAndTaxEBIT","ProfitBeforeTax","ProfitForThePeriod","groupName","String","balance","j","Object","values","generateColumn","accountTmpl","name","local_name","typeGroupHeaderTmpl","items","type","type_local_name","dataBound","e","sender","dataSource","row","tbody","find","uid","prev","collapseGroup","title","t","template","locked","width","hidden","groupHeaderTemplate","headerAttributes","class","style","attributes","segment","segments","item","format","aggregates","groupHeaderColumnTemplate","onReportingLanguageChanges","generateGroupBy","aggregate","compare","a","b","watch","computed","state","list","appType","productType","created","mounted"],"mappings":"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","sourcesContent":["\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { mapState } from \"vuex\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-segment-list-item-group\": () =>\n      import(\"@/components/dropdownlist/SegmentListItemGroup\"),\n  },\n  data: () => ({\n    // Obj\n    startDate: \"\",\n    endDate: \"\",\n    statementPLList: [],\n    selectedSegmentIds: [],\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    // LodingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    sortDefinition: { field: \"number\", dir: \"asc\" },\n    groupDefinition: [],\n    aggregateDefinition: [],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    async loadData() {\n      // Call List\n      await this.$store.dispatch(\"segments/getList\");\n    },\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSPL\").data(\"kendoGrid\");\n      let selectedSegmentIds = grid.dataItem(grid.select());\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedSegmentIds.accountUUID,\n          start_date: this.startDate,\n          end_date: this.endDate,\n        },\n      });\n    },\n    // Search journals\n    search() {\n      if (this.selectedSegmentIds.length > 0) {\n        let sdate = this.startDate,\n          edate = this.endDate;\n\n        if (sdate && edate) {\n          sdate =\n            kendo.toString(new Date(sdate), \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n\n          edate = new Date(edate);\n          edate = kendo.toString(edate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n        } else {\n          sdate = 0;\n          edate = 0;\n        }\n\n        // Empty dataSource\n        let ds = this.$refs.statementPLDS.kendoWidget();\n        ds.data([]);\n\n        // Query\n        this.showLoading = true;\n        incomeStatementHandler\n          .getBySegments(sdate, edate, this.selectedSegmentIds)\n          .then((response) => {\n            this.statements = response;\n            this.bindData();\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        Helper.alertErrorMsg(\"Please select segment\");\n      }\n    },\n    /* Bind Data */\n    async bindData() {\n      let entries = {};\n\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        this.statements[i].forEach((value) => {\n          let entry = value;\n\n          // Order\n          if (value.account_type_number == OrderNumberPL.GrossProfit.number) {\n            // Gross Profit\n            entry.order = OrderNumberPL.GrossProfit.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.OtherRevenue.number\n          ) {\n            // Other Revenue\n            entry.order = OrderNumberPL.OtherRevenue.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.OperatingExpense.number\n          ) {\n            // Operating Expense\n            entry.order = OrderNumberPL.OperatingExpense.order;\n          } else if (\n            value.account_type_number ==\n            OrderNumberPL.OperatingIncomeEBITDA.number\n          ) {\n            // Operating Income (EBITDA)\n            entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n          } else if (\n            value.account_type_number ==\n            OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n          ) {\n            // Earning Before Interest And Tax(EBIT)\n            entry.order = OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.ProfitBeforeTax.number\n          ) {\n            // Profit Before Tax\n            entry.order = OrderNumberPL.ProfitBeforeTax.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.ProfitForThePeriod.number\n          ) {\n            // Profit For The Period\n            entry.order = OrderNumberPL.ProfitForThePeriod.order;\n          } else {\n            entry.order = value.account_type_number;\n          }\n\n          /* Grouping */\n          let groupName =\n            String(value.accountUUID) + String(value.account_type_number);\n          if (entries[groupName]) {\n            entries[groupName][\"s\" + i] = value.balance;\n          } else {\n            entries[groupName] = entry;\n\n            /* Add all segments to columns */\n            for (let j = 0; j < this.selectedSegmentIds.length; j++) {\n              entries[groupName][\"s\" + j] = 0;\n            }\n\n            entries[groupName][\"s\" + i] = value.balance;\n          }\n        });\n      }\n\n      this.statementPLList = Object.values(entries);\n      this.generateColumn();\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    /* Databound */\n    dataBound(e) {\n      let grid = e.sender;\n\n      grid.dataSource.data().forEach((value) => {\n        if (value.account_type_number >= 100) {\n          let row = grid.tbody\n            .find(\"tr[data-uid='\" + value.uid + \"']\")\n            .prev(\".k-grouping-row\");\n          grid.collapseGroup(row);\n        }\n      });\n    },\n    // Generate Columns\n    generateColumn() {\n      let columns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          template: this.accountTmpl,\n          locked: true,\n          width: 300,\n        },\n        {\n          field: this.fieldType,\n          title: \"TYPE\",\n          hidden: true,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n          width: 300,\n        },\n        {\n          field: \"statementGroup\",\n          title: \"STATEMENT GROUP\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n        {\n          field: \"groupNature\",\n          title: \"NATURE\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n      ];\n\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      /* Set Column Segments */\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        /* Segment */\n        let segment = this.segments.find(\n          (item) => item.id === this.selectedSegmentIds[i]\n        );\n\n        /* Column Segment */\n        columns.push({\n          field: \"s\" + i,\n          title: segment.name,\n          format: \"{0:n}\",\n          width: 200,\n          aggregates: \"['sum']\",\n          groupHeaderColumnTemplate:\n            \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n          headerAttributes: headerAttributes,\n          attributes: attributes,\n        });\n      }\n\n      this.columns = columns;\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n      }\n\n      // Generate Group By\n      this.generateGroupBy();\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      /* Aggregate Defintion */\n      let aggregateDefinition = [];\n      for (let i = 0; i < 50; i++) {\n        aggregateDefinition.push({ field: \"s\" + i, aggregate: \"sum\" });\n      }\n      this.aggregateDefinition = aggregateDefinition;\n\n      this.groupDefinition = {\n        field: this.fieldType,\n        aggregates: aggregateDefinition,\n        compare: function (a, b) {\n          if (a.items[0].order === b.items[0].order) {\n            return 0;\n          } else if (a.items[0].order > b.items[0].order) {\n            return 1;\n          } else {\n            return -1;\n          }\n        },\n      };\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: mapState({\n    segments: (state) => state.segments.list,\n    appType() {\n      return dataStore.productType;\n    },\n  }),\n  created() {\n    this.loadData();\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n\n"]}]}