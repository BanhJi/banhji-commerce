{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/new_tax_return/newTaxReturn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/new_tax_return/newTaxReturn.vue","mtime":1640595536796},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["newTaxReturn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuOA,OAAA,SAAA,MAAA,sBAAA;AACA,OAAA,aAAA,MAAA,0CAAA;AACA,SAAA,IAAA,QAAA,QAAA;AACA,OAAA,KAAA,MAAA,oBAAA;AACA,SAAA,IAAA,QAAA,UAAA;AACA,OAAA,iBAAA,MAAA,6BAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,mDAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,0CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,8CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,oDAAA,CAAA;;AACA,IAAA,aAAA,GAAA,IAAA,aAAA,CAAA,EAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA,C,CACA;;;AACA,IAAA,YAAA,GAAA;AACA,EAAA,qBAAA,EAAA;AADA,CAAA,C,CAGA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAEA,EAAA,UAAA,EAAA;AACA,iBAAA,SADA;AAEA;AACA,IAAA,QAAA,EAAA;AAAA,aAAA,OAAA,kBAAA,CAAA;AAAA,KAHA;AAIA,IAAA,SAAA,EAAA;AAAA,aAAA,OAAA,oBAAA,CAAA;AAAA,KAJA;AAKA,IAAA,OAAA,EAAA;AAAA,aAAA,OAAA,sBAAA,CAAA;AAAA,KALA;AAMA,IAAA,QAAA,EAAA;AAAA,aAAA,OAAA,qBAAA,CAAA;AAAA;AANA,GAFA;AAUA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,KAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAMA,MAAA,SAAA,EAAA,EANA;AAOA,MAAA,YAAA,EAAA,EAPA;AAQA,MAAA,KAAA,EAAA,CARA;AASA,MAAA,YAAA,EAAA,CATA;AAUA,MAAA,KAAA,EAAA,KAVA;AAWA,MAAA,SAAA,EAAA,WAXA;AAYA,MAAA,YAAA,EAAA,SAZA;AAaA,MAAA,YAAA,EAAA,OAbA;AAcA,MAAA,YAAA,EAAA,OAdA;AAeA,MAAA,YAAA,EAAA,OAfA;AAgBA,MAAA,OAAA,EAAA,KAhBA;AAiBA;AACA,MAAA,MAAA,EAAA,KAlBA;AAmBA,MAAA,MAAA,EAAA,KAnBA;AAoBA,MAAA,MAAA,EAAA,KApBA;AAqBA,MAAA,UAAA,EAAA,EArBA;AAsBA,MAAA,YAAA,EAAA,EAtBA;AAuBA;AAEA,MAAA,QAAA,EAAA,KAzBA;AA0BA,MAAA,gBAAA,EAAA,EA1BA;AA2BA,MAAA,aAAA,EAAA,aA3BA;AA4BA;AACA,MAAA,cAAA,EAAA,KA7BA;AA+BA,MAAA,QAAA,EAAA,EA/BA;AAgCA,MAAA,KAAA,EAAA,EAhCA;AAiCA,MAAA,SAAA,EAAA,EAjCA;AAkCA,MAAA,QAAA,EAAA,EAlCA;AAmCA,MAAA,YAAA,EAAA,EAnCA;AAoCA,MAAA,UAAA,EAAA,CApCA;AAqCA,MAAA,eAAA,EAAA,CArCA;AAsCA,MAAA,mBAAA,EAAA,CAtCA;AAuCA,MAAA,mBAAA,EAAA,CAvCA;AAwCA,MAAA,SAAA,EAAA,CAxCA;AAyCA,MAAA,YAAA,EAAA,CAzCA;AA0CA,MAAA,aAAA,EAAA,CA1CA;AA2CA,MAAA,WAAA,EAAA,CA3CA;AA4CA,MAAA,eAAA,EAAA,CA5CA;AA6CA,MAAA,OAAA,EAAA,EA7CA;AA8CA,MAAA,OAAA,EAAA,KA9CA;AA+CA,MAAA,UAAA,EAAA,EA/CA;AAgDA,MAAA,UAAA,EAAA,EAhDA;AAiDA,MAAA,QAAA,EAAA,EAjDA;AAkDA,MAAA,YAAA,EAAA,EAlDA;AAmDA,MAAA,OAAA,EAAA,EAnDA;AAoDA,MAAA,UAAA,EAAA,EApDA;AAqDA,MAAA,QAAA,EAAA,KArDA;AAsDA,MAAA,cAAA,EAAA,EAtDA;AAuDA,MAAA,QAAA,EAAA;AAvDA,KAAA;AAAA,GAVA;AAmEA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,aAAA,CAAA,MAAA,KAAA,EAAA,IAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,KAAA,EAAA;AACA,KAHA;AAIA,IAAA,EAJA,gBAIA;AACA,UAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,OAFA,MAEA;AACA,eAAA,EAAA;AACA;AACA,KAVA;AAWA,IAAA,SAXA,uBAWA;AACA,aAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA,KAAA,SAAA,IAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,KAAA,MAAA,IAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,KAAA,MAAA;AACA,KAbA,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AArBA,GAnEA;AA0FA,EAAA,KAAA,EAAA;AACA,UAAA;AADA,GA1FA;AA6FA,EAAA,gBA7FA,4BA6FA,EA7FA,EA6FA,IA7FA,EA6FA,IA7FA,EA6FA;AAAA;;AACA,QAAA,EAAA,CAAA,IAAA,KAAA,cAAA,IAAA,EAAA,CAAA,IAAA,KAAA,UAAA,IAAA,EAAA,CAAA,IAAA,KAAA,qBAAA,EAAA;AACA,MAAA,IAAA;AACA,KAFA,MAEA;AACA,UAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA;;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,KAAA,KAAA;AAAA,OAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA;AACA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,mBAAA,CADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,WAAA,CAFA;AAGA,UAAA,IAAA,EAAA,SAHA;AAIA,UAAA,gBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAJA;AAKA,UAAA,kBAAA,EAAA,SALA;AAMA,UAAA,iBAAA,EAAA,SANA;AAOA,UAAA,cAAA,EAAA,IAPA;AAQA,UAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CARA;AASA,UAAA,gBAAA,EAAA,IATA;AAUA,UAAA,eAAA,EAAA;AAVA,SAAA,EAWA,IAXA,CAWA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,WAAA,IAAA,GAAA,CAAA,WAAA,IAAA,GAAA,CAAA,OAAA,KAAA,QAAA,EAAA;AACA,YAAA,IAAA;;AACA,YAAA,KAAA,CAAA,KAAA;;AACA,YAAA,KAAA,CAAA,UAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,eAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,cAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,SAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,WAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,eAAA,GAAA,CAAA;AACA,WATA,MASA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA;AACA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,SAAA;AACA,SAzBA;AA0BA,OA3BA,MA2BA;AACA,YAAA,KAAA,aAAA,CAAA,QAAA,KAAA,EAAA,IAAA,KAAA,OAAA,EAAA;AACA,eAAA,KAAA,CAAA;AACA,YAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,mBAAA,CADA;AAEA,YAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAFA;AAGA,YAAA,IAAA,EAAA,SAHA;AAIA,YAAA,gBAAA,EAAA,IAJA;AAKA,YAAA,gBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CALA;AAMA,YAAA,kBAAA,EAAA,SANA;AAOA,YAAA,iBAAA,EAAA,SAPA;AAQA,YAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,SAAA;AARA,WAAA,EASA,IATA,CASA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,WAAA,EAAA;AACA,cAAA,IAAA;;AACA,cAAA,KAAA,CAAA,KAAA;;AACA,cAAA,KAAA,CAAA,UAAA,GAAA,CAAA;AACA,cAAA,KAAA,CAAA,eAAA,GAAA,CAAA;AACA,cAAA,KAAA,CAAA,cAAA,GAAA,CAAA;AACA,cAAA,KAAA,CAAA,SAAA,GAAA,CAAA;AACA,cAAA,KAAA,CAAA,WAAA,GAAA,CAAA;AACA,cAAA,KAAA,CAAA,eAAA,GAAA,CAAA;AACA,aATA,MASA;AACA,cAAA,IAAA,CAAA,KAAA,CAAA;AACA;AACA,WAtBA;AAuBA,SAxBA,MAwBA;AACA,UAAA,IAAA;AACA;AACA;AACA;AACA,GA3JA;AA4JA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,oBAAA,CAAA,UAAA,CAAA,MAAA,CAAA,aAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,cAAA;;AACA,sBAAA,GAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA;AACA,iBALA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KARA;AASA,IAAA,gBATA,4BASA,QATA,EASA;AACA,UAAA,KAAA,SAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,aAAA,SAAA,GAAA,QAAA;AACA;AACA,KAbA;AAcA,IAAA,aAdA,yBAcA,OAdA,EAcA;AACA,WAAA,UAAA,GAAA,OAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,CAAA,MAAA,EAAA,KAAA,UAAA,CAAA,OAAA,EAAA,YAAA;AACA,KAjBA;AAkBA,IAAA,aAlBA,yBAkBA,OAlBA,EAkBA;AACA,WAAA,UAAA,GAAA,OAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,EAAA,YAAA;AACA,KArBA;AAsBA,IAAA,UAtBA,sBAsBA,OAtBA,EAsBA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,OAAA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,KAzBA;AA0BA,IAAA,UA1BA,sBA0BA,IA1BA,EA0BA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KA5BA;AA6BA,IAAA,SA7BA,qBA6BA,MA7BA,EA6BA;AACA,WAAA,QAAA,GAAA,MAAA;AACA,KA/BA;AAgCA,IAAA,eAhCA,2BAgCA,IAhCA,EAgCA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAlCA;AAmCA,IAAA,WAnCA,uBAmCA,IAnCA,EAmCA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KArCA;AAsCA,IAAA,kBAtCA,8BAsCA,MAtCA,EAsCA;AACA,WAAA,eAAA,GAAA,MAAA;AACA,KAxCA;AAyCA,IAAA,cAzCA,0BAyCA,MAzCA,EAyCA;AACA,WAAA,WAAA,GAAA,MAAA;AACA,KA3CA;AA4CA,IAAA,kBA5CA,8BA4CA,SA5CA,EA4CA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,wBAAA,EAAA,SAAA;AACA,WAAA,eAAA,GAAA,SAAA;AACA,KA/CA;AAgDA,IAAA,cAhDA,0BAgDA,WAhDA,EAgDA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,yBAAA,EAAA,WAAA;AACA,WAAA,YAAA,GAAA,WAAA;AACA,KAnDA;AAoDA,IAAA,eApDA,2BAoDA,MApDA,EAoDA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,oBAAA,EAAA,MAAA;AACA,WAAA,YAAA,GAAA,MAAA;AACA,KAvDA;AAwDA,IAAA,YAxDA,wBAwDA,MAxDA,EAwDA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,MAAA;AACA,WAAA,aAAA,GAAA,MAAA;AACA,KA3DA;AA4DA,IAAA,gBA5DA,4BA4DA,QA5DA,EA4DA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,sBAAA,EAAA,QAAA;AACA,WAAA,SAAA,GAAA,QAAA;AACA,KA/DA;AAgEA,IAAA,YAhEA,wBAgEA,IAhEA,EAgEA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,IAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,KAnEA;AAoEA,IAAA,YApEA,wBAoEA,MApEA,EAoEA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,MAAA;AACA,WAAA,SAAA,GAAA,MAAA;AACA,KAvEA;AAwEA,IAAA,OAxEA,mBAwEA,IAxEA,EAwEA;AACA,WAAA,KAAA,GAAA,IAAA;;AACA,UAAA,KAAA,YAAA,IAAA,KAAA,KAAA,EAAA;AACA,aAAA,YAAA,GAAA,KAAA,KAAA;AACA;;AACA,WAAA,cAAA,CAAA,KAAA,KAAA;AACA,KA9EA;AA+EA,IAAA,sBA/EA,kCA+EA,MA/EA,EA+EA;AACA,WAAA,mBAAA,GAAA,MAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,mBAAA,EAAA,sBAAA;AACA,KAlFA;AAmFA,IAAA,sBAnFA,kCAmFA,MAnFA,EAmFA;AACA,WAAA,mBAAA,GAAA,MAAA;AACA,KArFA;AAsFA,IAAA,aAtFA,yBAsFA,MAtFA,EAsFA;AACA,WAAA,UAAA,GAAA,MAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,KAAA,UAAA,EAAA,kBAAA;AACA,KAzFA;AA0FA,IAAA,QA1FA,sBA0FA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,IAAA;;AADA,sBAEA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,KAAA,SAAA,IAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,KAAA,SAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGA,MAAA,CAAA,eAAA,EAHA;;AAAA;AAIA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA;AAJA;AAAA;;AAAA;AAKA,oBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,KAAA,SAAA,EAAA;AACA,kBAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA;;AACA,sBAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,sBAAA,IAAA,EAAA,iBADA;AAEA,sBAAA,IAAA,EAAA,yBAAA,MAAA,CAAA,aAAA,CAAA,EAFA;AAGA,sBAAA,MAAA,EAAA;AAAA,wBAAA,EAAA,EAAA,MAAA,CAAA,aAAA,CAAA,EAAA;AAAA,wBAAA,aAAA,EAAA,MAAA,CAAA;AAAA,uBAHA;AAIA,sBAAA,KAAA,EAAA;AAAA,wBAAA,IAAA,EAAA;AAAA;AAJA,qBAAA;AAMA;;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,aAAA,EAAA,WAAA;;AACA,kBAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA,aAAA,CAAA,MAAA;;AACA,kBAAA,IAZA,GAYA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,MAAA,CAAA,aAAA,CAAA,IAAA,GAAA,MAAA,CAAA,aAAA,CAAA,MAAA,GAAA,OAAA,CAAA,CAZA;AAaA,kBAAA,KAbA,GAaA,CAbA;;AAcA,sBAAA,MAAA,CAAA,aAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AACA,oBAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,IAAA;AACA;;AACA,sBAAA,IAAA,GAAA,CAAA,EAAA;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA;;AACA,wBAAA,MAAA,CAAA,aAAA,CAAA,IAAA,GAAA,IAAA,EAAA;AACA,sBAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,IAAA;AACA,qBAFA,MAEA;AACA,sBAAA,KAAA,GAAA,IAAA;AACA;AACA;;AACA,kBAAA,MAAA,CAAA,KAAA,GAAA,KAAA;;AACA,sBAAA,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,KAAA,EAAA;AACA,oBAAA,MAAA,CAAA,YAAA,GAAA,MAAA,CAAA,KAAA;AACA;;AACA,kBAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EA7BA,CA8BA;;;AACA,kBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA;AACA,iBAjCA,MAiCA;AACA,kBAAA,MAAA,CAAA,KAAA;AACA;;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA,KAnIA;AAoIA,IAAA,KApIA,mBAoIA;AACA,WAAA,aAAA,GAAA,IAAA,aAAA,CAAA,EAAA,CAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,KAvIA;AAwIA,IAAA,gBAxIA,4BAwIA,IAxIA,EAwIA,MAxIA,EAwIA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,OAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,WAAA,CAAA,CAAA;AACA,UAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,cAAA,CAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,SAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,OAAA,CAAA,CAAA;;AACA,UAAA,IAAA,KAAA,IAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA;;AACA,UAAA,QAAA,KAAA,IAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,WAAA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA;;AACA,UAAA,WAAA,KAAA,IAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,cAAA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA;;AACA,UAAA,MAAA,KAAA,IAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,SAAA,EAAA,IAAA,CAAA,SAAA,CAAA,EAAA,CAAA;AACA;;AACA,UAAA,IAAA,KAAA,IAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,IAAA,GAAA,MAAA,GAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA;AACA,KA7JA;AA8JA,IAAA,OA9JA,qBA8JA;AAAA;;AACA,UAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,IAAA;AACA,UAAA,SAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,QAAA;AACA,UAAA,WAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,WAAA;;AACA,UAAA,KAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,KAAA,KAAA;AAAA,OAAA,CAAA,IAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,KAAA,KAAA;AAAA,OAAA,CAAA,IAAA,WAAA,CAAA,MAAA,GAAA,CAAA,IAAA,WAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,MAAA,KAAA,KAAA;AAAA,OAAA,CAAA,EAAA;AACA,aAAA,KAAA,CAAA;AACA,UAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,mBAAA,CADA;AAEA,UAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,WAAA,CAFA;AAGA,UAAA,IAAA,EAAA,SAHA;AAIA,UAAA,gBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAJA;AAKA,UAAA,kBAAA,EAAA,SALA;AAMA,UAAA,iBAAA,EAAA,SANA;AAOA,UAAA,cAAA,EAAA,IAPA;AAQA,UAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,OAAA,CARA;AASA,UAAA,gBAAA,EAAA,IATA;AAUA,UAAA,eAAA,EAAA;AAVA,SAAA,EAWA,IAXA,CAWA,UAAA,GAAA,EAAA;AACA,cAAA,GAAA,CAAA,WAAA,IAAA,GAAA,CAAA,WAAA,IAAA,GAAA,CAAA,OAAA,KAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,KAAA;AACA;;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,SAAA;AACA,SAhBA;AAiBA,OAlBA,MAkBA;AACA,YAAA,KAAA,aAAA,CAAA,QAAA,KAAA,EAAA,IAAA,KAAA,OAAA,EAAA;AACA,eAAA,KAAA,CAAA;AACA,YAAA,KAAA,EAAA,IAAA,CAAA,CAAA,CAAA,mBAAA,CADA;AAEA,YAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,aAAA,CAFA;AAGA,YAAA,IAAA,EAAA,SAHA;AAIA,YAAA,gBAAA,EAAA,IAJA;AAKA,YAAA,gBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,QAAA,CALA;AAMA,YAAA,kBAAA,EAAA,SANA;AAOA,YAAA,iBAAA,EAAA,SAPA;AAQA,YAAA,iBAAA,EAAA,IAAA,CAAA,CAAA,CAAA,SAAA;AARA,WAAA,EASA,IATA,CASA,UAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,WAAA,EAAA;AACA,cAAA,MAAA,CAAA,KAAA;AACA;AACA,WAbA;AAcA;AACA,OAvCA,CAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,KAjRA;AAkRA,IAAA,KAlRA,mBAkRA;AACA,WAAA,KAAA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,eAAA,GAAA,CAAA;AACA,WAAA,cAAA,GAAA,CAAA;AACA,WAAA,SAAA,GAAA,CAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,WAAA,eAAA,GAAA,CAAA,CAPA,CAQA;;AACA,UAAA,CAAA,KAAA,OAAA,EAAA;AACA,aAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAEA,OAJA,MAIA;AACA,aAAA,OAAA,GAAA,KAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA;AAEA,KArSA;AAsSA,IAAA,gBAtSA,4BAsSA,IAtSA,EAsSA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,oBAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AACA,oBAAA,eAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,0BAAA,QAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,wBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA;;AACA,4BAAA,IAAA,KAAA,YAAA,CAAA,qBAAA,EAAA;AACA,0BAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,qBAPA,EAOA,KAPA;AAQA;AACA,sBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA;AACA,mBAdA,EAcA,GAdA,CAAA;AAeA,iBAhBA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KAxTA;AAyTA,IAAA,cAzTA,4BAyTA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,IADA,GACA,MAAA,CAAA,aAAA,CAAA,OAAA,GAAA,GAAA,GAAA,IADA;AAEA,gBAAA,IAFA,GAEA,KAFA;AAGA,gBAAA,eAAA,CAAA,4BAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,QAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,UAAA;AACA,iBAHA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAhUA;AAiUA,IAAA,eAjUA,6BAiUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,EAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,oBAAA,oBAAA,CAAA,MAAA,CAAA,EAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,0BAAA;AACA,sBAAA,MAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA;;AACA,0BAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA,EAAA,KAAA,CAAA,EAAA;AACA,wBAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,0BAAA,IAAA,EAAA,iBADA;AAEA,0BAAA,IAAA,EAAA,yBAAA,MAAA,CAAA,aAAA,CAAA,EAFA;AAGA,0BAAA,MAAA,EAAA;AAAA,4BAAA,EAAA,EAAA,MAAA,CAAA,aAAA,CAAA,EAAA;AAAA,4BAAA,aAAA,EAAA,MAAA,CAAA;AAAA,2BAHA;AAIA,0BAAA,KAAA,EAAA;AAAA,4BAAA,IAAA,EAAA;AAAA;AAJA,yBAAA;AAMA;;AACA,sBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,aAAA;;AACA,sBAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,aAAA,CAAA,MAAA;;AACA,sBAAA,MAAA,CAAA,KAAA,GAAA,MAAA,CAAA,aAAA,CAAA,IAAA;;AACA,0BAAA,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,KAAA,EAAA;AACA,wBAAA,MAAA,CAAA,YAAA,GAAA,MAAA,CAAA,KAAA;AACA;;AACA,sBAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,KAAA,EAjBA,CAkBA;;;AACA,sBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AACA,qBApBA;AAqBA,mBAxBA,CAAA;AAyBA,iBA1BA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA,KA7VA;AA8VA,IAAA,WA9VA,yBA8VA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,IAAA;AADA;AAAA,uBAEA,MAAA,CAAA,kBAAA,EAFA;;AAAA;AAAA,qBAGA,MAAA,CAAA,QAHA;AAAA;AAAA;AAAA;;AAIA,gBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,wBAAA;;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,gBAAA,MAAA,CAAA,WAAA,GAAA,KAAA;AANA;;AAAA;AAAA;AAAA,uBASA,MAAA,CAAA,cAAA,EATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAzWA;AA0WA,IAAA,UA1WA,wBA0WA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,aAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,GAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,oBAAA,MAAA,CAAA,gBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,wBAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,sBAAA,MAAA,CAAA,aAAA,CAAA,eAAA,GAAA,MAAA,CAAA,gBAAA,CAAA,CAAA,CAAA;AACA;AACA;AACA,iBAPA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAnXA;AAoXA,IAAA,cApXA,4BAoXA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IAAA,KAAA,SADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,OAAA,CAAA,UAAA,EAFA;;AAAA;AAIA,oBAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,YAAA;AACA,oBAAA,OAAA,CAAA,UAAA,CAAA;AACA,wBAAA,IAAA,GAAA;AACA,sBAAA,IAAA,EAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,IADA;AAEA,sBAAA,SAAA,EAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,SAFA;AAGA,sBAAA,eAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAHA;AAIA,sBAAA,WAAA,EAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,WAJA;AAKA,sBAAA,IAAA,EAAA;AALA,qBAAA;AAOA,oBAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,oBAAA,OAAA,CAAA,aAAA,CAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA,oBAAA,OAAA,CAAA,aAAA,CAAA,WAAA,GAAA,IAAA,CAAA,WAAA;AACA,oBAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,oBAAA,OAAA,CAAA,aAAA,CAAA,eAAA,GAAA,IAAA,CAAA,eAAA;AACA,oBAAA,aAAA,CAAA,UAAA,CAAA,IAAA,EAAA,IAAA;AAAA,yFAAA,kBAAA,QAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oCAAA,QAAA,CAAA,IAAA,CAAA,UAAA,KAAA,GAAA,EAAA;AACA,kCAAA,GADA,GACA,QAAA,CAAA,IAAA,CAAA,IADA;AAEA,kCAAA,UAFA,GAEA,OAAA,CAAA,OAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,MAAA,CAFA;AAGA,kCAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA,GAAA,CAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA,eAAA,CAAA,eAAA,GAAA,UAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,UAAA,GAAA,GAAA,CAAA,MAAA,GAAA,UAAA;AACA,kCAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA,gBAAA,EALA,CAMA;;AAEA,kCAAA,OAAA,CAAA,aAAA,CAAA,EAAA,gBAAA,IAAA,CAAA,EAAA,EAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA;AAAA,oCAAA,EAAA,EAAA,CAAA;AAAA,oCAAA,IAAA,EAAA;AAAA,mCAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,QAAA,GAAA,IAAA,IAAA,GAAA,WAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,UAAA,GAAA,CAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,YAAA,GAAA,IAAA;AACA,kCAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,CAAA;AACA,kCAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,aAAA;;AACA,kCAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,oCAAA,IAAA,EAAA,8BAAA,OAAA,CAAA,aAAA,CAAA,EAAA,CADA;AAEA,oCAAA,IAAA,EAAA,gBAFA;AAGA,oCAAA,MAAA,EAAA;AAAA,sCAAA,EAAA,EAAA,OAAA,CAAA,aAAA,CAAA,EAAA;AAAA,sCAAA,aAAA,EAAA,OAAA,CAAA;AAAA,qCAHA;AAIA,oCAAA,KAAA,EAAA;AAAA,sCAAA,IAAA,EAAA;AAAA;AAJA,mCAAA;;AAMA,kCAAA,OAAA,CAAA,OAAA,GAAA,IAAA;;AACA,sCAAA,OAAA,CAAA,aAAA,CAAA,QAAA,KAAA,EAAA,IAAA,OAAA,CAAA,OAAA,EAAA;AACA,oCAAA,MAAA,CAAA,gBAAA,CAAA,cAAA,EAAA,UAAA,KAAA,EAAA;AACA,sCAAA,KAAA,CAAA,WAAA,GAAA,yCAAA;AACA,qCAFA;AAGA,oCAAA,MAAA,CAAA,mBAAA,CAAA,cAAA,EAAA,UAAA,KAAA,EAAA;AACA,sCAAA,KAAA,CAAA,WAAA,GAAA,EAAA;AACA,qCAFA;AAGA;;AACA,kCAAA,OAAA,CAAA,WAAA,GAAA,KAAA;AACA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAA;;AAAA;AAAA;AAAA;AAAA,yBAiCA,KAjCA,CAiCA,UAAA,CAAA,EAAA;AACA,sBAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;AACA,qBAnCA;AAoCA,oBAAA,OAAA,CAAA,IAAA,GAAA,KAAA;AACA,mBAnDA,EAmDA,GAnDA,CAAA;AAoDA,iBArDA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA,KA9aA;AA+aA,IAAA,OA/aA,mBA+aA,GA/aA,EA+aA,MA/aA,EA+aA;AACA,aAAA,MAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,MAAA,EAAA,GAAA,CAAA;AACA,KAjbA;AAkbA,IAAA,WAlbA,yBAkbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,iBAAA,CAAA,GAAA,CAAA,MAAA,CAAA,WAAA,CAAA,YAAA,EAAA,SAAA,EAAA,YAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KApbA;AAqbA,IAAA,UArbA,wBAqbA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,oBAAA,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,kBAAA,OAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,kBAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,oBAAA,IAAA,EAAA,8BAAA,OAAA,CAAA,aAAA,CAAA,EAAA,CADA;AAEA,oBAAA,IAAA,EAAA,gBAFA;AAGA,oBAAA,MAAA,EAAA;AAAA,sBAAA,EAAA,EAAA,OAAA,CAAA,aAAA,CAAA;AAAA,qBAHA;AAIA,oBAAA,KAAA,EAAA;AAAA,sBAAA,IAAA,EAAA;AAAA;AAJA,mBAAA;;AAMA,kBAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,kBAAA,OAAA,CAAA,WAAA,GAAA,KAAA;AACA,iBAXA,EAWA,KAXA,CAWA,UAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,CAAA,OAAA;AACA,iBAbA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,KApcA;AAqcA,IAAA,SArcA,uBAqcA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,WAAA,GAAA,IAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,OAAA,CAAA,KAAA;AACA,gBAAA,YAHA,GAGA,EAHA;;AAAA,sBAIA,OAAA,CAAA,KAAA,KAAA,CAJA;AAAA;AAAA;AAAA;;AAKA,gBAAA,YAAA,GAAA,OAAA;AALA;AAAA;;AAAA;AAAA,sBAMA,OAAA,CAAA,KAAA,KAAA,CANA;AAAA;AAAA;AAAA;;AAOA,gBAAA,YAAA,GAAA,QAAA;AAPA;AAAA;;AAAA;AAAA,sBAQA,OAAA,CAAA,KAAA,KAAA,CARA;AAAA;AAAA;AAAA;;AASA,gBAAA,YAAA,GAAA,SAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,UAAA,GAAA,OAAA,CAAA,eAAA,CAAA,MAAA;;AACA,oBAAA,OAAA,CAAA,eAAA,CAAA,OAAA,KAAA,SAAA,EAAA;AACA,kBAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA,OAAA;AACA,kBAAA,cAAA,CAAA,MAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,gBAAA;AACA,mBAFA;AAGA;;AAhBA,sBAiBA,OAAA,CAAA,UAAA,CAAA,MAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,GAAA,CAjBA;AAAA;AAAA;AAAA;;AAkBA,gBAAA,IAlBA,GAkBA;AACA,kBAAA,MAAA,EAAA,OAAA,CAAA,UAAA,CAAA,MADA;AAEA,kBAAA,OAAA,EAAA,OAAA,CAAA,UAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAHA;AAIA,kBAAA,IAAA,EAAA,aAJA;AAKA,kBAAA,IAAA,EAAA,IAAA,IAAA,GAAA,MAAA;AALA,iBAlBA;AAAA;AAAA,uBAyBA,oBAAA,CAAA,SAAA,CAAA,IAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,iBAFA,CAzBA;;AAAA;AAAA,sBA6BA,OAAA,CAAA,UAAA,CAAA,OAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,GAAA,CAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CA7BA;AAAA;AAAA;AAAA;;AA8BA,gBAAA,KA9BA,GA8BA;AACA,kBAAA,MAAA,EAAA,OAAA,CAAA,UAAA,CAAA,OADA;AAEA,kBAAA,OAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAFA;AAGA,kBAAA,IAAA,EAAA,aAHA;AAIA,kBAAA,IAAA,EAAA,IAAA,IAAA,GAAA,MAAA;AAJA,iBA9BA;AAAA;AAAA,uBAoCA,oBAAA,CAAA,SAAA,CAAA,KAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,iBAFA,CApCA;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAwCA,OAAA,CAAA,KAAA,KAAA,CAxCA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAyCA,OAAA,CAAA,WAAA,EAzCA;;AAAA;AA0CA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,KAAA,EAAA,OAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,SAAA,EAAA,WAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,YAAA,EAAA,cAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,UAAA;AACA,gBAAA,OA9CA,GA8CA,CA9CA,EA8CA,OA9CA,GA8CA,EA9CA,EA+CA,WA/CA,GA+CA,CA/CA,EA+CA,WA/CA,GA+CA,EA/CA,EAgDA,MAhDA,GAgDA,CAhDA,EAgDA,MAhDA,GAgDA,EAhDA,EAiDA,MAjDA,GAiDA,CAjDA,EAiDA,MAjDA,GAiDA,EAjDA,EAkDA,QAlDA,GAkDA,CAlDA,EAkDA,QAlDA,GAkDA,EAlDA,EAmDA,SAnDA,GAmDA,CAnDA,EAmDA,SAnDA,GAmDA,EAnDA,EAoDA,MApDA,GAoDA,CApDA,EAoDA,MApDA,GAoDA,EApDA;AAqDA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,QAAA,EAAA,YAAA,EAAA,SAAA;AACA,gBAAA,OAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,CAAA,eAAA,KAAA,MAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,WAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,CAAA,eAAA,KAAA,UAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,CAAA,eAAA,KAAA,UAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,SAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;AACA,gBAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,OAAA,CAAA,MAAA,KAAA,CAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,OAAA;;AACA,gBAAA,OAAA,CAAA,KAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,SAAA,KAAA,OAAA,CAAA,EAAA,EAAA;AACA,oBAAA,OAAA,IAAA,CAAA,CAAA,QAAA;AACA;;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,WAAA,CAAA,SAAA,KAAA,QAAA,CAAA,EAAA,EAAA;AACA,oBAAA,QAAA,IAAA,CAAA,CAAA,gBAAA;AACA;;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,MAAA,CAAA,SAAA,KAAA,QAAA,CAAA,EAAA,EAAA;AACA,oBAAA,QAAA,IAAA,CAAA,CAAA,WAAA;AACA;;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,SAAA,KAAA,QAAA,CAAA,EAAA,EAAA;AACA,oBAAA,QAAA,IAAA,CAAA,CAAA,aAAA;AACA;AACA,iBAbA;;AAcA,gBAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,SAAA,KAAA,WAAA,CAAA,EAAA,EAAA;AACA,oBAAA,WAAA,IAAA,CAAA,CAAA,QAAA;AACA;AACA,iBAJA;;AAKA,gBAAA,OAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,SAAA,KAAA,MAAA,CAAA,EAAA,EAAA;AACA,oBAAA,MAAA,IAAA,CAAA,CAAA,QAAA;AACA;AACA,iBAJA;;AAKA,gBAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,kBAAA,SAAA,IAAA,CAAA,CAAA,eAAA;AACA,kBAAA,MAAA,IAAA,CAAA,CAAA,gBAAA;AACA,iBAHA;;AAIA,gBAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA,OAAA;;AACA,oBAAA,OAAA,CAAA,cAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,cAAA,GAAA,CACA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,OAJA;AAKA,oBAAA,MAAA,EAAA,KAAA,CAAA,UAAA,CAAA,OAAA;AALA,mBADA,EAQA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,WAJA;AAKA,oBAAA,MAAA,EAAA,KAAA,CAAA,UAAA,CAAA,WAAA,IAAA,CAAA;AALA,mBARA,EAeA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,MAJA;AAKA,oBAAA,MAAA,EAAA;AALA,mBAfA,EAsBA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,QAJA;AAKA,oBAAA,MAAA,EAAA;AALA,mBAtBA,EA6BA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,MAJA;AAKA,oBAAA,MAAA,EAAA;AALA,mBA7BA,EAoCA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,SAJA;AAKA,oBAAA,MAAA,EAAA;AALA,mBApCA,EA2CA;AACA,oBAAA,EAAA,eAAA,IAAA,CAAA,EAAA,EAAA,CADA;AAEA,oBAAA,aAAA,EAAA,OAAA,CAAA,QAAA,CAAA,IAFA;AAGA,oBAAA,QAAA,EAAA,OAAA,CAAA,QAHA;AAIA,oBAAA,OAAA,EAAA,MAJA;AAKA,oBAAA,MAAA,EAAA;AALA,mBA3CA,CAAA;AAmDA;;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,cAAA,EAAA,gBAAA;AA/IA;AAAA,uBAgJA,oBAAA,CAAA,aAAA,CAAA,OAAA,CAAA,cAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,+BAAA;AACA,iBAFA,CAhJA;;AAAA;AAmJA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,OAAA,EAAA,iBAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,WAAA,EAAA,qBAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,gBAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,kBAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,gBAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAAA,SAAA,EAAA,mBAAA;AACA,gBAAA,YAAA,GAAA,UAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,UAAA,GAAA,OAAA,CAAA,eAAA,CAAA,MAAA;;AACA,oBAAA,OAAA,CAAA,eAAA,CAAA,OAAA,KAAA,SAAA,EAAA;AACA,kBAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA,OAAA;AACA,kBAAA,cAAA,CAAA,MAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,oBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,EAAA,gBAAA;AACA,mBAFA;AAGA;;AAhKA,sBAiKA,OAAA,CAAA,UAAA,CAAA,MAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,GAAA,CAjKA;AAAA;AAAA;AAAA;;AAkKA,gBAAA,MAlKA,GAkKA;AACA,kBAAA,MAAA,EAAA,OAAA,CAAA,UAAA,CAAA,MADA;AAEA,kBAAA,OAAA,EAAA,OAAA,CAAA,UAAA,CAAA,OAFA;AAGA,kBAAA,OAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAHA;AAIA,kBAAA,IAAA,EAAA,aAJA;AAKA,kBAAA,IAAA,EAAA,IAAA,IAAA,GAAA,MAAA;AALA,iBAlKA;AAAA;AAAA,uBAyKA,oBAAA,CAAA,SAAA,CAAA,MAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,iBAFA,CAzKA;;AAAA;AAAA,sBA6KA,OAAA,CAAA,UAAA,CAAA,OAAA,IAAA,OAAA,CAAA,UAAA,CAAA,OAAA,GAAA,CAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,IAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CA7KA;AAAA;AAAA;AAAA;;AA8KA,gBAAA,MA9KA,GA8KA;AACA,kBAAA,MAAA,EAAA,OAAA,CAAA,UAAA,CAAA,OADA;AAEA,kBAAA,OAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAFA;AAGA,kBAAA,IAAA,EAAA,aAHA;AAIA,kBAAA,IAAA,EAAA,IAAA,IAAA,GAAA,MAAA;AAJA,iBA9KA;AAAA;AAAA,uBAoLA,oBAAA,CAAA,SAAA,CAAA,MAAA,EAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,iBAFA,CApLA;;AAAA;AAwLA,gBAAA,OAAA,CAAA,aAAA,CAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA,IAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,YAAA,GAAA,OAAA,CAAA,YAAA,CAAA,IAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,IAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA,IAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,YAAA,GAAA,OAAA,CAAA,QAAA,CAAA,MAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,gBAAA,GAAA,OAAA,CAAA,YAAA,CAAA,MAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,WAAA,GAAA,OAAA,CAAA,OAAA,CAAA,MAAA;AACA,gBAAA,OAAA,CAAA,aAAA,CAAA,cAAA,GAAA,OAAA,CAAA,UAAA,CAAA,MAAA;;AA/LA;AAiMA,gBAAA,OAAA,CAAA,aAAA,CAAA,QAAA,GAAA,YAAA;AACA,gBAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,OAAA,CAAA,aAAA,EAAA,eAAA;AAlMA;AAAA,uBAmMA,oBAAA,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,EAAA,IAAA;AAAA,sFAAA,mBAAA,GAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,4BAAA,OAAA,CAAA,aAAA,GAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AAFA,kCAGA,OAAA,CAAA,KAAA,CAAA,MAAA,GAAA,CAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAIA,WAAA,CAAA,MAAA,CAAA,OAAA,CAAA,KAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,8BAAA,YAAA,CAAA,UAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA,OAAA;AACA,8BAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,6BAHA,CAJA;;AAAA;AAAA,kCASA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CATA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAUA,eAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,8BAAA,YAAA,CAAA,UAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA,WAAA;AACA,8BAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,6BAHA,CAVA;;AAAA;AAAA,kCAeA,OAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAfA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAgBA,kBAAA,CAAA,MAAA,CAAA,OAAA,CAAA,YAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,8BAAA,YAAA,CAAA,UAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA,cAAA;AACA,8BAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,6BAHA,CAhBA;;AAAA;AAAA,kCAqBA,OAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CArBA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAsBA,aAAA,CAAA,MAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,8BAAA,YAAA,CAAA,UAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,GAAA,OAAA,CAAA,aAAA,CAAA,MAAA,GAAA,SAAA;AACA,8BAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,6BAHA,CAtBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA,qBAiCA,KAjCA,CAiCA,UAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,CAAA,OAAA;AACA,iBAnCA,CAnMA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuOA,KA5qBA;AA6qBA,IAAA,SA7qBA,uBA6qBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,OAAA,CAAA,KAAA,IAAA,CADA;AAAA;AAAA;AAAA;;AAEA,gBAAA,OAAA,CAAA,SAAA,GAAA,eAAA;AAFA;AAAA,uBAGA,OAAA,CAAA,SAAA,EAHA;;AAAA;AAAA;AAAA;;AAAA;AAMA,gBAAA,OAAA,CAAA,SAAA,GAAA,cAAA;AACA,gBAAA,OAAA,CAAA,KAAA,GAAA,OAAA,CAAA,KAAA,GAAA,CAAA;;AACA,oBAAA,OAAA,CAAA,YAAA,IAAA,OAAA,CAAA,KAAA,EAAA;AACA,kBAAA,OAAA,CAAA,YAAA,GAAA,OAAA,CAAA,KAAA;AACA;;AACA,gBAAA,OAAA,CAAA,cAAA,CAAA,OAAA,CAAA,KAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KA1rBA;AA2rBA,IAAA,UA3rBA,sBA2rBA,IA3rBA,EA2rBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,OAAA,CAAA,KAAA,KAAA,IADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,sBAIA,IAAA,GAAA,OAAA,CAAA,YAJA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOA,oBAAA,IAAA,KAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,SAAA,GAAA,cAAA;AACA,iBAFA,MAEA;AACA,kBAAA,OAAA,CAAA,SAAA,GAAA,eAAA;AACA;;AACA,gBAAA,OAAA,CAAA,KAAA,GAAA,IAAA;;AACA,gBAAA,OAAA,CAAA,cAAA,CAAA,OAAA,CAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA,KAzsBA;AA0sBA,IAAA,cA1sBA,0BA0sBA,GA1sBA,EA0sBA;AACA,cAAA,GAAA;AACA,aAAA,CAAA;AACA,eAAA,YAAA,GAAA,SAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA;;AACA,aAAA,CAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,SAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA;;AACA,aAAA,CAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,SAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA;;AACA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,OAAA;AACA,eAAA,YAAA,GAAA,SAAA;AACA,eAAA,OAAA,GAAA,IAAA;AACA,eAAA,SAAA,GAAA,eAAA;AACA;AA1BA;AA4BA,KAvuBA;AAwuBA,IAAA,YAxuBA,wBAwuBA,KAxuBA,EAwuBA;AACA;AACA,UAAA,KAAA,IAAA,CAAA,EAAA;AACA,eAAA,KAAA,CAAA,cAAA,EAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA;AACA;AAEA;AAhvBA,GA5JA;AA84BA,EAAA,OA94BA,qBA84BA;AACA,SAAA,WAAA;AACA,GAh5BA;AAi5BA,EAAA,OAj5BA,qBAi5BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,OAAA,CAAA,cAAA,EADA;;AAAA;AAAA;AAAA,qBAGA,OAAA,CAAA,QAAA,EAHA;;AAAA;AAAA;AAAA,qBAIA,OAAA,CAAA,UAAA,EAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAt5BA,CAAA","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t('make_new_monthly_return') }}</h2>\n                                <v-icon\n                                    @click=\"onClose\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n\n                            </v-card>\n\n                            <v-row>\n                                <v-col sm=\"12\" cols=\"12\">\n                                    <div class=\"function_content\">\n                                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                            <div>\n                                                <v-row>\n                                                    <v-col sm=\"4\" class=\"py-0\">\n                                                        <label>{{ $t('for_the_month_of') }}</label>\n                                                        <v-menu\n                                                            v-model=\"menu\"\n                                                            :disabled=\"DateState\"\n                                                            class=\"mt-1\"\n                                                            :close-on-content-click=\"false\"\n                                                            max-width=\"290\">\n                                                            <template v-slot:activator=\"{ on,attrs }\">\n                                                                <v-text-field class=\"disable_alert my-0 mt-1\"\n                                                                              v-model=\"monthlyReturn.monthOf\"\n                                                                              readonly\n                                                                              outlined\n                                                                              :disabled=\"DateState\"\n                                                                              append-icon=\"event\"\n                                                                              v-on=\"on\"\n                                                                              v-bind=\"attrs\"\n                                                                              @click:clear=\"monthlyReturn.monthOf\"\n                                                                              @click:append=\"menu = true\"\n                                                                              required/>\n                                                            </template>\n                                                            <v-date-picker\n                                                                :type=\"'month'\"\n                                                                @change=\"menu = false\"\n                                                                v-model=\"monthlyReturn.monthOf\"\n                                                                no-title\n                                                            />\n                                                        </v-menu>\n                                                    </v-col>\n                                                    <v-col sm=\"5\" class=\"py-0 mt-5 px-0\">\n                                                        <v-btn :disabled=\"DateState\" @click=\"startReturn\"\n                                                               class=\"ma-1 ml-2\"\n                                                               color=\"primary white--text text-capitalize\">\n                                                            {{ $t('start_new_return') }}\n                                                        </v-btn>\n                                                    </v-col>\n                                                </v-row>\n                                            </div>\n                                            <div v-if=\"start_return\">\n                                                <v-divider/>\n                                                <v-card elevation=\"0\" class=\"pa-3 mt-3\" color=\"grayBg\">\n                                                    <v-row>\n                                                        <v-col class=\"py-0\" cols=\"12\" sm=\"4\">\n                                                            <label>{{ $t('submission_id') }}</label>\n                                                            <v-row class=\"pt-1 pb-0\">\n                                                                <v-col sm=\"3\" cols=\"3\" class=\"py-0 pr-0\">\n                                                                    <div class=\"code_text text-uppercase\">\n                                                                        {{ monthlyReturn.abbr }}\n                                                                    </div>\n                                                                </v-col>\n                                                                <v-col sm=\"9\" cols=\"8\" class=\"py-0 pl-0 pr-1\">\n                                                                    <v-text-field\n                                                                        v-model=\"monthlyReturn.number\"\n                                                                        disabled\n                                                                        class=\"custom-border \"\n                                                                        outlined\n                                                                        :rules=\"[(v) => !!v || 'Number is required']\"\n                                                                        required\n                                                                    />\n                                                                </v-col>\n                                                            </v-row>\n                                                        </v-col>\n                                                        <v-col class=\"py-0\" cols=\"12\" sm=\"4\">\n                                                            <p class=\"mb-0 mt-5\">\n                                                                {{ $t('approved_exch_rate_month') }}</p>\n                                                        </v-col>\n                                                        <v-col class=\"py-0\" cols=\"12\" sm=\"4\">\n                                                            <h3 class=\"primary--text font_20 mt-5\">\n                                                                {{ numberFormat(this.$store.state.institute.institute.baseCurrency.code !== 'KHR' ? 1/(currency.rate) : currency.rate) }}</h3>\n                                                        </v-col>\n                                                    </v-row>\n                                                </v-card>\n                                                <v-row>\n                                                    <v-col sm=\"2\" class=\"align-center justify-center d-flex \">\n                                                        <div>\n                                                            <v-card @click=\"ClickSteps(1)\" width=\"44\" height=\"44\"\n                                                                    outlined dense :color=\"activeColor1\"\n                                                                    class=\"pointer  m_auto no_border align-center justify-center d-flex rounded-circle \">\n                                                                <h3 class=\"mt-2 white--text\" style=\"font-size: 24px\">\n                                                                    1</h3>\n                                                            </v-card>\n                                                            <p class=\"text-uppercase mt-2\">{{ $t('input') }}</p>\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"2\" class=\"align-center justify-center d-flex \">\n                                                        <div>\n                                                            <v-card @click=\"ClickSteps(2)\" width=\"44\" height=\"44\"\n                                                                    outlined dense :color=\"activeColor2\"\n                                                                    class=\"pointer m_auto no_border align-center justify-center d-flex rounded-circle \">\n                                                                <h3 class=\"mt-2 white--text\" style=\"font-size: 24px\">\n                                                                    2</h3>\n                                                            </v-card>\n                                                            <p class=\"text-uppercase mt-2\">{{ $t('review') }}</p>\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"2\" class=\"align-center justify-center d-flex \">\n                                                        <div>\n                                                            <v-card @click=\"ClickSteps(3)\" width=\"44\" height=\"44\"\n                                                                    outlined dense :color=\"activeColor3\"\n                                                                    class=\"pointer m_auto  no_border align-center justify-center d-flex rounded-circle \">\n                                                                <h3 class=\"mt-2 white--text\" style=\"font-size: 24px\">\n                                                                    3</h3>\n                                                            </v-card>\n                                                            <p class=\"text-uppercase mt-2\">{{ $t('confirm') }}</p>\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"2\" class=\"align-center justify-center d-flex \">\n                                                        <div>\n                                                            <v-card @click=\"new ClickSteps(4)\" width=\"44\" height=\"44\"\n                                                                    outlined dense :color=\"activeColor4\"\n                                                                    class=\"pointer m_auto  no_border align-center justify-center d-flex rounded-circle \">\n                                                                <h3 class=\"mt-2 white--text\" style=\"font-size: 24px\">\n                                                                    4</h3>\n                                                            </v-card>\n                                                            <p class=\"text-uppercase mt-2\">{{ $t('finalize') }}</p>\n                                                        </div>\n                                                    </v-col>\n                                                </v-row>\n                                                <v-divider/>\n                                                <!-- Body function to input -->\n                                                <div v-show=\"steps===1\">\n                                                    <InputTab :currency=\"currency\" :monthlyReturn=\"monthlyReturn\"\n                                                              @getSale=\"getInputSale\"\n                                                              @getPurchase=\"getInputPurchase\"\n                                                              @getSalary=\"getSalary\"\n                                                              @getWithholding=\"getWithholding\"/>\n                                                </div>\n                                                <!-- Steps 2 Adjustemnt -->\n                                                <div v-show=\"steps===2\">\n                                                    <ReviewTab :monthlyReturn=\"monthlyReturn\"\n                                                               :sale=\"sales\"\n                                                               :currency=\"currency\"\n                                                               :purchase=\"purchases\"\n                                                               :salary=\"salaries\"\n                                                               :withholding=\"withholdings\"\n                                                               @getOtherAmount=\"getOtherAmount\"\n                                                               @getAmountWht=\"getAmountWht\"\n                                                               @getTaxSalary=\"getAmountSalary\"\n                                                               @getTaxBenefit=\"getAmountTax\"\n                                                               @getAmountSaleExcul=\"getAmountSaleExcul\"\n                                                               @getTotalAmountPurchase=\"getTotalAmountPurchase\"\n                                                               @getAmountPurchaseExcul=\"getAmountPurchaseExcul\"\n                                                               @getAmountSale=\"getAmountSale\"\n                                                               :alertForm2=\"AlertValidate2\"/>\n                                                </div>\n                                                <!-- Steps there -->\n                                                <div v-show=\"steps===3\">\n                                                    <Confirm :currency=\"currency\" :monthlyReturn=\"monthlyReturn\"\n                                                             :totalAmountPurchase=\"amountTotalPurchase\"\n                                                             :otherAmount=\"otherAmount\"\n                                                             :amountPurchaseExcul=\"amountPurchaseExcul\"\n                                                             :amountSalary=\"amountSalary\"\n                                                             :amountBenefit=\"amountBenefit\"\n                                                             :amountSaleExcul=\"amountSaleExcul\" :amountSale=\"amountSale\"\n                                                             :amountWht=\"amountWht\" @getStep=\"getStep\"\n                                                             @getTotalAmountPaid=\"getTotalAmountPaid\"\n                                                             @getBalanceVat=\"getBalanceVat\"\n                                                             @getBalancePpi=\"getBalancePpi\"/>\n                                                </div>\n                                                <div v-show=\"steps===4\">\n                                                    <Finalize :sale=\"sales\" :purchase=\"purchases\"\n                                                              :salary=\"salaries\"\n                                                              :withholding=\"withholdings\" :monthlyReturn=\"monthlyReturn\"\n                                                              @getDatePurchase=\"getDatePurchase\"\n                                                              @getPurchase=\"getFinalPurchase\"\n                                                              @getDateWht=\"getDateWht\"\n                                                              @getDateSale=\"getDateSale\"/>\n                                                </div>\n                                            </div>\n                                        </v-form>\n                                    </div>\n                                </v-col>\n                            </v-row>\n                            <div class=\"function_footer px-4\">\n                                <!-- Warning Message -->\n                                <v-btn color=\"black\" class=\"float-left  white--text\">{{\n                                        $t('cancel')\n                                    }}\n                                </v-btn>\n                                <v-btn :disabled=\"!start_return\" class=\"float-right  btn_save_close\"\n                                       @click=\"nextStpes\">\n                                    {{ $t(save_next) }}\n                                </v-btn>\n                                <v-btn v-if=\"steps >= 1 && this.monthlyReturn.number !== ''\" @click=\"saveDraft\"\n                                       class=\"float-right mx-3 capitalize white--text \" color=\"primary\">\n                                    {{ $t('save_draft') }}\n                                </v-btn>\n                            </div>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :type=\"'loading'\"\n                :myLoading=\"true\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport LoadingMe from '@/components/Loading'\nimport MonthlyReturn from \"@/scripts/compliance/model/MonthlyReturn\";\nimport {i18n} from \"@/i18n\";\nimport kendo from '@progress/kendo-ui'\nimport {uuid} from 'vue-uuid'\nimport taxSettingHandler from \"@/scripts/taxSettingHandler\";\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nconst purchaseHandler = require(\"@/scripts/compliance/handler/purchaseHandler\")\nconst salaryHandler = require(\"@/scripts/compliance/handler/salaryHandler\")\nconst withholdingHandler = require(\"@/scripts/compliance/handler/withholdingTaxHandler\")\nconst monthlyReturn = new MonthlyReturn({})\nconst prefixHandler = require(\"@/scripts/compliance/handler/prefixHandler\")\nconst summaryHandler = require(\"@/scripts/compliance/handler/summaryHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nconst apiUrl = require('@/apiUrl')\n// const taxSetting = require('@/store/taxSetting');\nconst currencyType = {\n    TAX_EXCHANGE_CURRENCY: 'tax-c',\n}\n// const axios = require('axios')\nexport default {\n    name: \"TaxReturn\",\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'month-picker': () => import('@/components/custom_templates/MonthPicker'),\n        InputTab: () => import('./input/InputTab'),\n        ReviewTab: () => import('./review/ReviewTab'),\n        Confirm: () => import('./confirm/ConfirmTab'),\n        Finalize: () => import('./finalize/Finalize')\n    },\n    data: () => ({\n        menu: false,\n        templates: [],\n        month: '',\n        showLoading: false,\n        valid: '',\n        bill_date: \"\",\n        journal_date: '',\n        steps: 1,\n        reachTopStep: 0,\n        check: false,\n        save_next: 'save_next',\n        activeColor1: \"primary\",\n        activeColor2: \"third\",\n        activeColor3: \"third\",\n        activeColor4: \"third\",\n        isFinal: false,\n        // third\n        check1: false,\n        check2: false,\n        check3: false,\n        payroll_id: '',\n        loadPayrolls: [],\n        // start_return: false,\n\n        isCreate: false,\n        transactionTypes: [],\n        monthlyReturn: monthlyReturn,\n        // isGetAmount: false,\n        AlertValidate2: false,\n\n        currency: {},\n        sales: [],\n        purchases: [],\n        salaries: [],\n        withholdings: [],\n        amountSale: 0,\n        amountSaleExcul: 0,\n        amountTotalPurchase: 0,\n        amountPurchaseExcul: 0,\n        amountWht: 0,\n        amountSalary: 0,\n        amountBenefit: 0,\n        otherAmount: 0,\n        totalAmountPaid: 0,\n        summary: {},\n        isRoute: false,\n        balanceVat: {},\n        balancePpi: {},\n        dateSale: '',\n        datePurchase: '',\n        dateWht: '',\n        dateSalary: '',\n        statusMr: false,\n        journalSummary: [],\n        listTaxs: []\n    }),\n    computed: {\n        start_return() {\n            return this.monthlyReturn.number !== '' && this.$route.params.id !== '';\n        },\n        id() {\n            if (this.$route.params.id) {\n                return this.$route.params.id\n            } else {\n                return ''\n            }\n        },\n        DateState() {\n            return this.$route.params.id !== undefined || this.$route.query.type === 'edit' || this.$route.query.type === 'view';\n        },\n        // listTaxs: {\n        //     set(listTax) {\n        //         taxSetting.default.commit(\"setListTax\", listTax)\n        //     },\n        //     get() {\n        //         return taxSetting.default.state.listTax\n        //     }\n        // },\n    },\n    watch: {\n        'id': 'initData',\n    },\n    beforeRouteLeave (to, from , next) {\n        if (to.name === 'Add Purchase' || to.name === 'Add Sale' || to.name === 'Add Withholding Tax') {\n            next()\n        } else {\n            const sales = this.$store.state.compliance.sale\n            if (sales.length > 0 && sales.filter(p => p.isSave === false)) {\n                this.$swal({\n                    title: i18n.t('msg_title_warning'),\n                    text: i18n.t('msg_leave'),\n                    icon: \"warning\",\n                    cancelButtonText: i18n.t('force_leave'),\n                    confirmButtonColor: \"#4d4848\",\n                    cancelButtonColor: \"#ED1A3A\",\n                    showDenyButton: true,\n                    confirmButtonText: i18n.t('leave'),\n                    showCancelButton: true,\n                    showCloseButton: true,\n                }).then(res => {\n                    if (res.isConfirmed || res.isDismissed && res.dismiss === 'cancel') {\n                        next()\n                        this.clear()\n                        this.amountSale = 0\n                        this.amountSaleExcul = 0\n                        this.amountPurchase = 0\n                        this.amountWht = 0\n                        this.otherAmount = 0\n                        this.totalAmountPaid = 0\n                    } else {\n                        next(false)\n                    }\n                    window.console.log(res, 'discard')\n                })\n            } else {\n                if (this.monthlyReturn.progress === '' && this.isRoute) {\n                    this.$swal({\n                        title: i18n.t('msg_title_warning'),\n                        text: i18n.t('msg_discard'),\n                        icon: \"warning\",\n                        showCancelButton: true,\n                        cancelButtonText: i18n.t('cancel'),\n                        confirmButtonColor: \"#4d4848\",\n                        cancelButtonColor: \"#ED1A3A\",\n                        confirmButtonText: i18n.t('discard'),\n                    }).then(res => {\n                        if (res.isConfirmed) {\n                            next()\n                            this.clear()\n                            this.amountSale = 0\n                            this.amountSaleExcul = 0\n                            this.amountPurchase = 0\n                            this.amountWht = 0\n                            this.otherAmount = 0\n                            this.totalAmountPaid = 0\n                        } else {\n                            next(false)\n                        }\n                    })\n                } else {\n                    next()\n                }\n            }\n        }\n    },\n    methods: {\n        async checkMonthlyReturn() {\n            monthlyReturnHandler.getByMonth(this.monthlyReturn.monthOf).then(res => {\n                window.console.log(res, 'get month123')\n                if (res.data.data === 1) {\n                    this.statusMr = true\n                }\n            })\n        },\n        getFinalPurchase(purchase) {\n            if (this.purchases.length === 0) {\n                this.purchases = purchase\n            }\n        },\n        getBalanceVat(balance) {\n            this.balanceVat = balance\n            window.console.log(this.balanceVat.credit, this.balanceVat.payment, 'balanceVat')\n        },\n        getBalancePpi(balance) {\n            this.balancePpi = balance\n            window.console.log(this.balancePpi, 'balancePpi')\n        },\n        getSummary(summary) {\n            window.console.log('new tax tab summary', summary)\n            this.summary = summary\n        },\n        getDateWht(date) {\n            this.dateWht = date\n        },\n        getSalary(salary) {\n            this.salaries = salary\n        },\n        getDatePurchase(date) {\n            this.datePurchase = date\n        },\n        getDateSale(date) {\n            this.dateSale = date\n        },\n        getTotalAmountPaid(amount) {\n            this.totalAmountPaid = amount\n        },\n        getOtherAmount(amount) {\n            this.otherAmount = amount\n        },\n        getAmountSaleExcul(saleExcul) {\n            window.console.log('new tax tab sale excul', saleExcul)\n            this.amountSaleExcul = saleExcul\n        },\n        getWithholding(withholding) {\n            window.console.log('new tax tab withholding', withholding)\n            this.withholdings = withholding\n        },\n        getAmountSalary(amount) {\n            window.console.log('new tax tab salary', amount)\n            this.amountSalary = amount\n        },\n        getAmountTax(amount) {\n            window.console.log('new tax tab benefit', amount)\n            this.amountBenefit = amount\n        },\n        getInputPurchase(purchase) {\n            window.console.log('new tax tab purchase', purchase)\n            this.purchases = purchase\n        },\n        getInputSale(sale) {\n            window.console.log('new tax tab sale', sale)\n            this.sales = sale\n        },\n        getAmountWht(amount) {\n            window.console.log('new tax tab wht', amount)\n            this.amountWht = amount\n        },\n        getStep(step) {\n            this.steps = step\n            if (this.reachTopStep <= this.steps) {\n                this.reachTopStep = this.steps\n            }\n            this.stepsCondition(this.steps)\n        },\n        getTotalAmountPurchase(amount) {\n            this.amountTotalPurchase = amount\n            window.console.log(this.amountTotalPurchase, 'New Tax Tab Purchase')\n        },\n        getAmountPurchaseExcul(amount) {\n            this.amountPurchaseExcul = amount\n        },\n        getAmountSale(amount) {\n            this.amountSale = amount\n            window.console.log(this.amountSale, 'New Tax Tab Sale')\n        },\n        async initData() {\n            this.showLoading = true\n            if (this.$route.params.id !== undefined && this.$route.params.monthlyReturn === undefined) {\n                await this.onLoadOneReturn()\n                window.console.log(this.steps)\n            } else if (this.$route.params.monthlyReturn !== undefined) {\n                this.monthlyReturn = this.$route.params.monthlyReturn\n                if (this.monthlyReturn.status.id === 2) {\n                    this.$router.push({\n                        name: 'View Tax Return',\n                        path: 'view_monthly_return/' + this.monthlyReturn.id,\n                        params: {id: this.monthlyReturn.id, monthlyReturn: this.monthlyReturn},\n                        query: {type: 'view'}\n                    })\n                }\n                window.console.log(this.monthlyReturn, 'dafasdf34')\n                this.initLocalStorage(this.monthlyReturn.abbr, this.monthlyReturn.number)\n                const step = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step'))\n                let steps = 1\n                if (this.monthlyReturn.step !== '') {\n                    steps = this.monthlyReturn.step\n                }\n                if (step > 0) {\n                    window.console.log('step12', step)\n                    if (this.monthlyReturn.step > step) {\n                        steps = this.monthlyReturn.step\n                    } else {\n                        steps = step\n                    }\n                }\n                this.steps = steps\n                if (this.reachTopStep <= this.steps) {\n                    this.reachTopStep = this.steps\n                }\n                this.stepsCondition(this.steps)\n                // this.start_return = true\n                this.showLoading = false\n                window.console.log(this.steps)\n            } else {\n                this.clear()\n            }\n        },\n        clear() {\n            this.monthlyReturn = new MonthlyReturn({})\n            this.showLoading = false\n        },\n        initLocalStorage(abbr, number) {\n            const sale = JSON.parse(localStorage.getItem(abbr + number + '&Sale'))\n            const purchase = JSON.parse(localStorage.getItem(abbr + number + '&Purchase'))\n            const withholding = JSON.parse(localStorage.getItem(abbr + number + '&Withholding'))\n            const salary = JSON.parse(localStorage.getItem(abbr + number + '&Salary'))\n            const step = JSON.parse(localStorage.getItem(abbr + number + '&Step'))\n            if (sale === null) {\n                localStorage.setItem(abbr + number + '&Sale', JSON.stringify([]))\n            }\n            if (purchase === null) {\n                localStorage.setItem(abbr + number + '&Purchase', JSON.stringify([]))\n            }\n            if (withholding === null) {\n                localStorage.setItem(abbr + number + '&Withholding', JSON.stringify([]))\n            }\n            if (salary === null) {\n                localStorage.setItem(abbr + number + '&Salary', JSON.stringify([]))\n            }\n            if (step === null) {\n                localStorage.setItem(abbr + number + '&Step', JSON.stringify(1))\n            }\n        },\n        onClose() {\n            const sales = this.$store.state.compliance.sale\n            const purchases = this.$store.state.compliance.purchase\n            const withholding = this.$store.state.compliance.withholding\n            if (sales.length > 0 && sales.filter(p => p.isSave === false) || purchases.length > 0 && purchases.filter(p => p.isSave === false) || withholding.length > 0 && withholding.filter(p => p.isSave === false)) {\n                this.$swal({\n                    title: i18n.t('msg_title_warning'),\n                    text: i18n.t('msg_leave'),\n                    icon: \"warning\",\n                    cancelButtonText: i18n.t('force_leave'),\n                    confirmButtonColor: \"#4d4848\",\n                    cancelButtonColor: \"#ED1A3A\",\n                    showDenyButton: true,\n                    confirmButtonText: i18n.t('leave'),\n                    showCancelButton: true,\n                    showCloseButton: true,\n                }).then(res => {\n                    if (res.isConfirmed || res.isDismissed && res.dismiss === 'cancel') {\n                        this.clean()\n                    }\n                    window.console.log(res, 'discard')\n                })\n            } else {\n                if (this.monthlyReturn.progress === '' && this.isRoute) {\n                    this.$swal({\n                        title: i18n.t('msg_title_warning'),\n                        text: i18n.t('msg_discard'),\n                        icon: \"warning\",\n                        showCancelButton: true,\n                        cancelButtonText: i18n.t('cancel'),\n                        confirmButtonColor: \"#4d4848\",\n                        cancelButtonColor: \"#ED1A3A\",\n                        confirmButtonText: i18n.t('discard'),\n                    }).then(res => {\n                        if (res.isConfirmed) {\n                            this.clean()\n                        }\n                    })\n                }\n            }\n\n            // const sale = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale'))\n            // const purchase = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase'))\n            // const withholding = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding'))\n            // const salary = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary'))\n            // const step = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step'))\n            // if (sale === null) {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale', JSON.stringify([]))\n            // }\n            // if (purchase === null) {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase', JSON.stringify([]))\n            // }\n            // if (withholding === null) {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding', JSON.stringify([]))\n            // }\n            // if (salary === null) {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary', JSON.stringify([]))\n            // }\n            // if (step === null) {\n            //     localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step', JSON.stringify(1))\n            // }\n            // if (sale !== null || purchase !== null || withholding !== null || salary !== null) {\n            //     if (sale.length > 0 || purchase.length > 0 || withholding.length > 0 || salary.length > 0) {\n            //         this.$swal({\n            //             title: i18n.t('msg_title_warning'),\n            //             text: i18n.t('msg_leave'),\n            //             icon: \"warning\",\n            //             cancelButtonText: i18n.t('force_leave'),\n            //             confirmButtonColor: \"#4d4848\",\n            //             cancelButtonColor: \"#ED1A3A\",\n            //             showDenyButton: true,\n            //             confirmButtonText: i18n.t('leave'),\n            //             showCancelButton: true,\n            //             showCloseButton: true,\n            //         }).then(res => {\n            //             if (res.isConfirmed) {\n            //                 localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step', this.steps)\n            //                 this.clean()\n            //             } else if (res.isDismissed && res.dismiss === 'cancel') {\n            //                 localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale')\n            //                 localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase')\n            //                 localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary')\n            //                 localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding')\n            //                 localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step')\n            //                 this.clean()\n            //             }\n            //             window.console.log(res, 'discard')\n            //         })\n            //     } else {\n            //         if (this.monthlyReturn.progress === '' && this.isRoute) {\n            //             this.$swal({\n            //                 title: i18n.t('msg_title_warning'),\n            //                 text: i18n.t('msg_discard'),\n            //                 icon: \"warning\",\n            //                 showCancelButton: true,\n            //                 cancelButtonText: i18n.t('cancel'),\n            //                 confirmButtonColor: \"#4d4848\",\n            //                 cancelButtonColor: \"#ED1A3A\",\n            //                 confirmButtonText: i18n.t('discard'),\n            //             }).then(res => {\n            //                 if (res.isConfirmed) {\n            //                     localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale')\n            //                     localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase')\n            //                     localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary')\n            //                     localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding')\n            //                     localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step')\n            //                     this.clean()\n            //                 }\n            //                 window.console.log(res, 'discard')\n            //             })\n            //         } else {\n            //             this.clean()\n            //         }\n            //     }\n            // }\n        },\n        clean() {\n            this.clear()\n            this.amountSale = 0\n            this.amountSaleExcul = 0\n            this.amountPurchase = 0\n            this.amountWht = 0\n            this.otherAmount = 0\n            this.totalAmountPaid = 0\n            // this.start_return = false\n            if (!this.isRoute) {\n                this.isRoute = false\n                window.history.go(-1)\n\n            } else {\n                this.isRoute = false\n                window.history.go(-1)\n                window.history.go(-1)\n            }\n\n        },\n        async loadCurrencyData(type) {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    currencyHandler.list(type).then(response => {\n                        if (response.data.statusCode === 200) {\n                            window.console.log('response','')\n                            if (type === currencyType.TAX_EXCHANGE_CURRENCY) {\n                                this.currency = response.data.data[0]\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        async onloadCurrency() {\n            const date = this.monthlyReturn.monthOf + '-' + '30'\n            const code = 'KHR'\n            currencyHandler.getLastExchangeRateTaxByDate(date, code).then(res => {\n                this.currency = res.data.data[0]\n                window.console.log(res, 'currency')\n            })\n        },\n        async onLoadOneReturn() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    const id = this.$route.params.id\n                    monthlyReturnHandler.getOne(id).then(res => {\n                        window.console.log(res, 'data load monthly return')\n                        this.monthlyReturn = res.data.data[0]\n                        if (this.monthlyReturn.status.id === 2) {\n                            this.$router.push({\n                                name: 'View Tax Return',\n                                path: 'view_monthly_return/' + this.monthlyReturn.id,\n                                params: {id: this.monthlyReturn.id, monthlyReturn: this.monthlyReturn},\n                                query: {type: 'view'}\n                            })\n                        }\n                        window.console.log(this.monthlyReturn)\n                        this.initLocalStorage(this.monthlyReturn.number)\n                        this.steps = this.monthlyReturn.step\n                        if (this.reachTopStep <= this.steps) {\n                            this.reachTopStep = this.steps\n                        }\n                        this.stepsCondition(this.steps)\n                        // this.start_return = true\n                        this.showLoading = false\n                    })\n                })\n            })\n        },\n        async startReturn() {\n            this.showLoading = true\n            await this.checkMonthlyReturn()\n            if (this.statusMr) {\n                this.$snotify.error('This month of is exist')\n                this.statusMr = false\n                this.showLoading = false\n                return\n            }\n            await this.generateNumber()\n            // this.start_return = true\n        },\n        async loadPrefix() {\n            prefixHandler.get('monthly return').then(res => {\n                if (res.data.statusCode === 200) {\n                    this.transactionTypes = res.data.data\n                    if (this.transactionTypes.length > 0) {\n                        this.monthlyReturn.transactionType = this.transactionTypes[0]\n                    }\n                }\n            })\n        },\n        async generateNumber() {\n            if (this.monthlyReturn.transactionType.abbr === undefined) {\n                await this.loadPrefix()\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let data = {\n                        abbr: this.monthlyReturn.transactionType.abbr,\n                        structure: this.monthlyReturn.transactionType.structure,\n                        transactionDate: this.monthlyReturn.monthOf,\n                        sequcencing: this.monthlyReturn.transactionType.sequcencing,\n                        type: 'Monthly Return',\n                    }\n                    this.monthlyReturn.abbr = data.abbr\n                    this.monthlyReturn.structure = data.structure\n                    this.monthlyReturn.sequcencing = data.sequcencing\n                    this.monthlyReturn.type = data.type\n                    this.monthlyReturn.transactionDate = data.transactionDate\n                    prefixHandler.lastNumber(data).then(async response => {\n                        if (response.data.statusCode === 200) {\n                            const res = response.data.data\n                            const lastNumber = this.zeroPad(parseInt(res.lastNumber), this.monthlyReturn.transactionType.format)\n                            this.monthlyReturn.number = res.suffix + this.monthlyReturn.transactionType.numberSeparator + lastNumber\n                            this.monthlyReturn.lastNumber = res.suffix + lastNumber\n                            window.console.log(this.monthlyReturn.number, 'monthly return')\n                            // await this.saveReturn()\n\n                            this.monthlyReturn.id = `mr-${uuid.v1()}`\n                            this.monthlyReturn.status = {id: 1, name: 'Drafted'}\n                            this.monthlyReturn.editDate = new Date().toISOString().substr(0, 10)\n                            this.monthlyReturn.amountPaid = 0\n                            this.monthlyReturn.exChangeRate = 4000\n                            this.monthlyReturn.step = 1\n                            window.console.log('monthly return', this.monthlyReturn)\n                            this.$router.push({\n                                path: 'new_tax_return' + `/${this.monthlyReturn.id}`,\n                                name: 'New Tax Return',\n                                params: {id: this.monthlyReturn.id, monthlyReturn: this.monthlyReturn},\n                                query: {type: 'edit'}\n                            })\n                            this.isRoute = true\n                            if (this.monthlyReturn.progress === '' && this.isRoute) {\n                                window.addEventListener('beforeunload', function (event) {\n                                    event.returnValue = 'Please make sure you already save draft'\n                                })\n                                window.removeEventListener('beforeunload', function (event) {\n                                    event.returnValue = ''\n                                })\n                            }\n                            this.showLoading = false\n                        }\n                    }).catch(e => {\n                        window.console.error(e)\n                    })\n                    this.menu = false\n                }, 300)\n            })\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        async loadListTax() {\n            await taxSettingHandler.get(apiUrl.tax_setting.tax_list_get, \"listTax\", \"setListTax\")\n        },\n        async saveReturn() {\n            monthlyReturnHandler.create(this.monthlyReturn).then(res => {\n                window.console.log(res)\n                this.monthlyReturn = res.data.data\n                this.$router.push({\n                    path: 'new_tax_return' + `/${this.monthlyReturn.id}`,\n                    name: 'New Tax Return',\n                    params: {id: this.monthlyReturn.id},\n                    query: {type: 'edit'}\n                })\n                this.isCreate = true\n                this.showLoading = false\n            }).catch(e => {\n                window.console.error(e.message)\n            })\n        },\n        async saveDraft() {\n            this.showLoading = true\n            this.monthlyReturn.step = this.steps\n            let progressName = ''\n            if (this.steps === 1) {\n                progressName = 'Input'\n            } else if (this.steps === 2) {\n                progressName = 'Review'\n            } else if (this.steps === 3) {\n                progressName = 'Confirm'\n                this.monthlyReturn.amountPaid = this.totalAmountPaid.amount\n                if (this.totalAmountPaid.summary !== undefined) {\n                    this.totalAmountPaid.summary.monthOf = this.monthlyReturn.monthOf\n                    summaryHandler.create(this.totalAmountPaid.summary).then(res => {\n                        window.console.log(res, 'summary create')\n                    })\n                }\n                if (this.balanceVat.credit && this.balanceVat.credit > 0 || this.balanceVat.payment && this.balanceVat.payment > 0) {\n                    const data = {\n                        credit: this.balanceVat.credit,\n                        payment: this.balanceVat.payment,\n                        monthOf: this.monthlyReturn.monthOf,\n                        type: 'vat monthly',\n                        date: new Date().toJSON()\n                    }\n                    await monthlyReturnHandler.addTxnVAT(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n                        window.console.log(res)\n                    })\n                }\n                if (this.balancePpi.balance && this.balancePpi.balance > 0 || this.balancePpi.credit && this.balancePpi.credit > 0) {\n                    const data = {\n                        amount: this.balancePpi.balance,\n                        monthOf: this.monthlyReturn.monthOf,\n                        type: 'ppi monthly',\n                        date: new Date().toJSON()\n                    }\n                    await monthlyReturnHandler.addTxnPPI(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n                        window.console.log(res)\n                    })\n                }\n            } else if (this.steps === 4) {\n                await this.loadListTax()\n                window.console.log(this.sales, 'sales')\n                window.console.log(this.purchases, 'purchases')\n                window.console.log(this.withholdings, 'withholdings')\n                window.console.log(this.salaries, 'salaries')\n                let amtSale = 0, accSale = {},\n                    amtPurchase = 0, accPurchase = {},\n                    amtWht = 0, accWht = {},\n                    amtPPi = 0, accPPi = {},\n                    amtOther = 0, accOther = {},\n                    amtSalary = 0, accSalary = {},\n                    amtFBT = 0, accFBT = {}\n                window.console.log(this.listTaxs, progressName, 'listTax')\n                accSale = this.listTaxs.filter(o => o.taxType.typeId === 1 && o.transactionType === 'Sale')[0].account\n                accPurchase = this.listTaxs.filter(o => o.taxType.typeId === 1 && o.transactionType === 'Purchase')[0].account\n                accWht = this.listTaxs.filter(o => o.taxType.typeId === 2 && o.transactionType === 'Purchase')[0].account\n                accPPi = this.listTaxs.filter(o => o.taxType.typeId === 6)[0].account\n                accOther = this.listTaxs.filter(o => o.taxType.typeId === 7)[0].account\n                accSalary = this.listTaxs.filter(o => o.taxType.typeId === 3)[0].account\n                accFBT = this.listTaxs.filter(o => o.taxType.typeId === 4)[0].account\n                this.sales.forEach(i => {\n                    if (i.itemLine[0].taxName.accountId === accSale.id) {\n                        amtSale += i.totalVAT\n                    }\n                    if (i.itemLine[0].specificTax.accountId === accOther.id) {\n                        amtOther += i.totalSpecificTax\n                    }\n                    if (i.itemLine[0].pubTax.accountId === accOther.id) {\n                        amtOther += i.totalPubTax\n                    }\n                    if (i.itemLine[0].accomTax.accountId === accOther.id) {\n                        amtOther += i.totalAccomTax\n                    }\n                })\n                this.purchases.forEach(i => {\n                    if (i.itemLine[0].taxName.accountId === accPurchase.id) {\n                        amtPurchase += i.totalVAT\n                    }\n                })\n                this.withholdings.forEach(i => {\n                    if (i.itemLine[0].taxName.accountId === accWht.id) {\n                        amtWht += i.totalVAT\n                    }\n                })\n                this.salaries.forEach(i => {\n                    amtSalary += i.amountTaxSalary\n                    amtFBT += i.taxAmountBenefit\n                })\n                amtPPi = this.balancePpi.balance\n                if (this.journalSummary.length === 0) {\n                    this.journalSummary = [\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accSale,\n                            amount: kendo.parseFloat(amtSale)\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accPurchase,\n                            amount: kendo.parseFloat(amtPurchase) * (-1)\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accWht,\n                            amount: amtWht\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accOther,\n                            amount: amtOther\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accPPi,\n                            amount: amtPPi\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accSalary,\n                            amount: amtSalary\n                        },\n                        {\n                            id: `mr-${uuid.v1()}`,\n                            exchange_rate: this.currency.rate,\n                            currency: this.currency,\n                            account: accFBT,\n                            amount: amtFBT\n                        }\n                    ]\n                }\n                window.console.log(this.journalSummary, 'journalSummary')\n                await monthlyReturnHandler.createJournal(this.journalSummary).then(res => {\n                    window.console.log(res, 'create journal monthly return')\n                })\n                window.console.log(amtSale, accSale, 'amount sale acc')\n                window.console.log(amtPurchase, accPurchase, 'amount purchase acc')\n                window.console.log(amtWht, accWht, 'amount wht acc')\n                window.console.log(amtOther, accOther, 'amount other acc')\n                window.console.log(amtPPi, accPPi, 'amount PPi acc')\n                window.console.log(amtSalary, accSalary, 'amount Salary acc')\n                progressName = 'Finalize'\n                this.monthlyReturn.amountPaid = this.totalAmountPaid.amount\n                if (this.totalAmountPaid.summary !== undefined) {\n                    this.totalAmountPaid.summary.monthOf = this.monthlyReturn.monthOf\n                    summaryHandler.create(this.totalAmountPaid.summary).then(res => {\n                        window.console.log(res, 'summary create')\n                    })\n                }\n                if (this.balanceVat.credit && this.balanceVat.credit > 0 || this.balanceVat.payment && this.balanceVat.payment > 0) {\n                    const data = {\n                        credit: this.balanceVat.credit,\n                        payment: this.balanceVat.payment,\n                        monthOf: this.monthlyReturn.monthOf,\n                        type: 'vat monthly',\n                        date: new Date().toJSON()\n                    }\n                    await monthlyReturnHandler.addTxnVAT(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n                        window.console.log(res)\n                    })\n                }\n                if (this.balancePpi.balance && this.balancePpi.balance > 0 || this.balancePpi.credit && this.balancePpi.credit > 0) {\n                    const data = {\n                        amount: this.balancePpi.balance,\n                        monthOf: this.monthlyReturn.monthOf,\n                        type: 'ppi monthly',\n                        date: new Date().toJSON()\n                    }\n                    await monthlyReturnHandler.addTxnPPI(data, this.monthlyReturn.monthOf, 'monthly').then(res => {\n                        window.console.log(res)\n                    })\n                }\n                this.monthlyReturn.dateSale = this.dateSale.date\n                this.monthlyReturn.datePurchase = this.datePurchase.date\n                this.monthlyReturn.dateWht = this.dateWht.date\n                this.monthlyReturn.dateSalary = this.dateSalary.date\n                this.monthlyReturn.amountDlSale = this.dateSale.amount\n                this.monthlyReturn.amountDlPurchase = this.datePurchase.amount\n                this.monthlyReturn.amountDlWht = this.dateWht.amount\n                this.monthlyReturn.amountDlSalary = this.dateSalary.amount\n            }\n            this.monthlyReturn.progress = progressName\n            window.console.log(this.monthlyReturn, 'monthlyReturn')\n            await monthlyReturnHandler.create(this.monthlyReturn).then(async res => {\n                window.console.log(res)\n                this.monthlyReturn = res.data.data\n                if (this.sales.length > 0) {\n                    await saleHandler.create(this.sales).then(res => {\n                        localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale')\n                        window.console.log(res)\n                    })\n                }\n                if (this.purchases.length > 0) {\n                    await purchaseHandler.create(this.purchases).then(res => {\n                        localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase')\n                        window.console.log(res)\n                    })\n                }\n                if (this.withholdings.length > 0) {\n                    await withholdingHandler.create(this.withholdings).then(res => {\n                        localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding')\n                        window.console.log(res)\n                    })\n                }\n                if (this.salaries.length > 0) {\n                    await salaryHandler.create(this.salaries).then(res => {\n                        localStorage.removeItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary')\n                        window.console.log(res)\n                    })\n                }\n                // localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Sale', JSON.stringify([]))\n                // localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Purchase', JSON.stringify([]))\n                // localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Withholding', JSON.stringify([]))\n                // localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Salary', JSON.stringify([]))\n                // localStorage.setItem(this.monthlyReturn.abbr + this.monthlyReturn.number + '&Step', JSON.stringify(this.steps))\n            //     this.showLoading = false\n            }).catch(e => {\n                window.console.error(e.message)\n            })\n        },\n        async nextStpes() {\n            if (this.steps == 4) {\n                this.save_next = \"confirm_close\"\n                await this.saveDraft()\n                // await this.clean()\n            } else {\n                this.save_next = \"confirm_next\"\n                this.steps = this.steps + 1\n                if (this.reachTopStep <= this.steps) {\n                    this.reachTopStep = this.steps\n                }\n                this.stepsCondition(this.steps)\n            }\n        },\n        async ClickSteps(step) {\n            if (this.steps === step) {\n                return\n            }\n            if (step > this.reachTopStep) {\n                return\n            }\n            if (step !== 4) {\n                this.save_next = \"confirm_next\"\n            } else {\n                this.save_next = \"confirm_close\"\n            }\n            this.steps = step\n            this.stepsCondition(this.steps)\n        },\n        stepsCondition(val) {\n            switch (val) {\n                case 1:\n                    this.activeColor1 = \"primary\"\n                    this.activeColor2 = \"third\"\n                    this.activeColor3 = \"third\"\n                    this.activeColor4 = \"third\"\n                    break\n                case 2:\n                    this.activeColor1 = \"third\"\n                    this.activeColor2 = \"primary\"\n                    this.activeColor3 = \"third\"\n                    this.activeColor4 = \"third\"\n                    break\n                case 3:\n                    this.activeColor1 = \"third\"\n                    this.activeColor2 = \"third\"\n                    this.activeColor3 = \"primary\"\n                    this.activeColor4 = \"third\"\n                    break\n                default:\n                    this.activeColor1 = \"third\"\n                    this.activeColor2 = \"third\"\n                    this.activeColor3 = \"third\"\n                    this.activeColor4 = \"primary\"\n                    this.isFinal = true\n                    this.save_next = \"confirm_close\"\n                    break\n            }\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            if (value >= 0) {\n                return value.toLocaleString()\n            } else {\n                return value\n            }\n\n        },\n    },\n    created() {\n        this.loadListTax()\n    },\n    async mounted() {\n        await this.onloadCurrency()\n        // await this.loadCurrencyData(currencyType.TAX_EXCHANGE_CURRENCY)\n        await this.initData()\n        await this.loadPrefix()\n    },\n}\n\n</script>\n\n<style scoped>\n.function_content {\n    padding: 0 12px 12px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n.m_auto {\n    margin: auto;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #F8F8F9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\n.my_checkbox input[type=checkbox] + label {\n    display: grid;\n    grid-template-columns: 20% 80%;\n    margin: 0.2em 0px;\n    cursor: pointer;\n    line-height: 16px;\n    padding: 0.2em;\n}\n</style>\n"],"sourceRoot":"src/views/compliance/monthly_tax/new_tax_return"}]}