{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Review.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Review.vue","mtime":1639966363946},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Review.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row>\n                <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <h3>{{$t('review_payroll')}}</h3>\n                    <p>{{$t('review_payroll_desc')}}</p>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\">\n            <kendo-datasource ref=\"dataSourceReview\"\n                :data=\"payrollList\"\n                :sort=\"sort\"/>\n                <kendo-grid id=\"grid\" class=\"grid-function\"\n                    :data-source-ref=\"'dataSourceReview'\"\n                    :scrollable-virtual=\"true\"\n                    :column-menu=\"true\">\n                <!-- <kendo-grid-column\n                    :field=\"'no'\"\n                    :title=\"$t('no')\"\n                    :template=\"rowNumberTmpl\"\n                    :width=\"60\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-center'\t}\"\n                    :attributes=\"{style: 'text-align: center'}\"/> -->\n                <kendo-grid-column\n                    :field=\"'employeeId'\"\n                    :title=\"$t('employee_id')\"\n                    :width=\"150\"\n                    :template=\"'<span>#= employeeId#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"200\"\n                    :field=\"'employeeName'\"\n                    :title=\"$t('employee_name')\"\n                    :template=\"'<span>#= employeeName#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'salary'\"\n                    :title=\"$t('earnings')\"\n                    :template=\"'<span>#= kendo.toString(salary,`c2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'deduction'\"\n                    :title=\"$t('deduction')\"\n                    :template=\"'<span>#= kendo.toString(deduction || 0,`c2`)#</span>'\"\n                    :hidden=\"true\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"120\"\n                    :field=\"'totalBenefit'\"\n                    :title=\"$t('benefit')\"\n                    :hidden=\"false\"\n                    :template=\"'<span>#= kendo.toString(totalBenefit,`c2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right;'}\"/>\n                <kendo-grid-column\n                    :width=\"120\"\n                    :field=\"'benefitExchange'\"\n                    :title=\"$t('benefit_exchange')\"\n                    :hidden=\"true\"\n                    :template=\"'<span>#= kendo.toString(benefitExchange,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right;'}\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'taxBenefitExchange'\"\n                    :title=\"$t('tax_benefit_exchange')\"\n                    :hidden=\"true\"\n                    :template=\"'<span>#= kendo.toString(taxBenefitExchange,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'taxBenefit'\"\n                    :title=\"$t('tax_benefit')\"\n                    :hidden=\"true\"\n                    :template=\"'<span>#= kendo.toString(taxBenefit,`c2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"250\"\n                    :field=\"'salaryExchange'\"\n                    :title=\"$t('salary_to_be_paid_KHR')\"\n                    :template=\"'<span>#= kendo.toString(salaryExchange,`n`)#</span>'\"\n                    :format=\"'{0:n}'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'deductionExchange'\"\n                    :title=\"$t('deductionExchange')\"\n                    :template=\"'<span>#= kendo.toString(deductionExchange,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"250\"\n                    :field=\"'salaryBase'\"\n                    :title=\"$t('salaryBase')\"\n                    :template=\"'<span>#= kendo.toString(salaryBase,`n2`)#</span>'\"\n                    :format=\"'{0:n}'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"100\"\n                    :field=\"'taxRate'\"\n                    :title=\"$t('rate')\"\n                    :template=\"'<span>#= kendo.toString((taxRate/100),`p0`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"200\"\n                    :field=\"'taxRateKHM'\"\n                    :title=\"$t('tax_on_salary_KHR')\"\n                    :template=\"'<span>#= kendo.toString(taxRateKHM,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"200\"\n                    :field=\"'taxSalaryUS'\"\n                    :hidden=\"true\"\n                    :title=\"$t('tax_on_Salary_USD')\"\n                    :template=\"'<span>#= kendo.toString(taxSalaryUS,`c2`) #</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"100\"\n                    :field=\"'netSalary'\"\n                    :title=\"$t('net_salary')\"\n                    :template=\"'<span>#= kendo.toString(netSalary,`c2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{ style: 'text-align: right'}\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'natureEmployee'\"\n                    :title=\"$t('nature_employee')\"\n                    :hidden=\"true\"\n                    :template=\"'<span>#= natureEmployee#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"300\"\n                    :field=\"'bank'\"\n                    :title=\"$t('bank_name')\"\n                    :template=\"'<span>#= bank.bankName ? bank.bankName: ``#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"150\"\n                    :field=\"'bank'\"\n                    :title=\"$t('bank_account')\"\n                    :template=\"'<span>#= bank.bankAccount ? bank.bankAccount: ``#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"250\"\n                    :field=\"'payrollLiabilitie'\"\n                    :title=\"$t('payroll_liabilitie')\"\n                    :hidden=\"true\"\n                    :template=\"'<span>#= payrollLiabilitie.number# - #= payrollLiabilitie.name#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :width=\"200\"\n                    :field=\"'paymentMethod'\"\n                    :title=\"$t('payment_method')\"\n                    :template=\"'<span>#= paymentMethod#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n            </kendo-grid>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"  type=\"loading\"/>\n        </v-col>\n    </v-row>\n</template>\n<script>\nconst payrollHandler = require(\"@/scripts/payrollHandler\")\nimport PayrollList from \"@/scripts/model/PayrollList\"\nimport PayrollRun from \"@/scripts/model/PayrollRun\";\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default {\n    props:['propReview'],\n    data: () =>({\n        journal_date: \"\",\n        dialogm: false,\n        showLoading: false,\n        payrollList: [],\n        payrollTax: [],\n        payrolls: [],\n        loggedUser: {\n            id: cookie.creator,\n            name: cookie.email\n        },\n        sort:[\n            { field: 'employeeId', dir: 'asc' }\n        ],\n    }),\n    components: {\n        LoadingMe: () => import(`@/components/Loading`)\n        // 'app-datepicker': DatePickerComponent,\n    },\n    methods:{\n        rowNumberTmpl(dataItem) {\n            var ds = this.$refs.dataSourceReview.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        async loadPayrollList(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            this.showLoading = true;\n                            const resultPay = res.data.data[0]\n                            this.loadPayrollItem(resultPay)\n                            this.payroll = resultPay\n                        }\n                    })\n                }, 300);\n            })\n        },\n        loadPayrollItem(result){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    payrollHandler.getPayrollItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            let resutl_item = res.data.data\n                            this.showLoading = true\n                            this.payrolls = resutl_item\n                            this.loadTaxSalary()\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        loadTaxSalary(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    payrollHandler.getTax().then(res => {\n                        window.console.log('loadTaxSalary',res)\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            this.showLoading = true;\n                            this.payrollTax = res.data.data\n                            this.qurytaxPay()\n                        }\n                    })\n                }, 300);\n            })\n        },\n        qurytaxPay(){\n            let baseCurrency = this.payroll.currency\n            let dataSource          = this.payrolls\n            let exchangeRate        = this.payroll.exchangeRate\n            let tax                 = this.payrollTax;\n            let resultTax           = tax.filter(t => t.nature.id === 'Resident_Salary');\n            let TaxNoResident       = tax.filter(t => t.nature.id === 'Non_resident_Salary');\n            let taxBenefit          = tax.filter(t => t.nature.id === 'Fringe_Benefit');\n            let rate_Benefit        = taxBenefit[0].rate\n            let benefit_account     = taxBenefit[0].account\n            let dependency = tax.filter(t => t.nature.id === 'Dependency');\n            let payrollsAR = [];\n            let exchange            = parseFloat(exchangeRate.rate);\n            \n            dataSource.forEach(function(tc) {\n                let deduction    = 0;\n                let spouseAmount = 0\n                let minorChildrenAmount = 0;\n                let salaryExchange      = 0;\n                let salaryBase          = 0;\n                let rateBenefit         = 0;\n                let grossSalary         = 0;\n                let totalBenefit        = 0;\n                let currencyKHM         = \"\";\n                let result              =  0;\n                let taxRate             =  0;\n                let taxAmount           =  0;\n                let taxSalary           = 0;\n                let taxSalaryUS         = 0;\n                let netSalary           = 0;\n                let netPay              = 0;\n                let dependencyAmount    = 0;\n                let deductionExchange   = 0;\n                let deductionAmount     = 0;\n                let benefitExchange     = 0;\n                let taxBenefitExchange  = 0;\n                let netPayExchange      = 0;\n                let benefitAccount      = {};\n                let spouse              = 0;\n                let exchange_rate       = 1\n                if(baseCurrency.code !== tc.currency.code){\n                    exchange_rate = 1\n                }else{\n                    exchange_rate = exchange\n                }\n                if(tc.natureEmployee == 'Resident'){\n                    dependencyAmount = dependency[0].amount\n                    if(tc.spouseNatureEmployee ==='Resident' && tc.workingStatus !=='Working' && tc.spouseGender ==='Female'){\n                        spouseAmount        = parseFloat(dependencyAmount)\n                        spouse              = 1\n                    }\n                    minorChildrenAmount     = parseFloat(tc.noOfChildren) * parseFloat(dependencyAmount)\n                    salaryExchange          = (tc.salary2) / exchange_rate;\n                    deductionAmount         = tc.deduction2 / exchange_rate;\n                    deductionExchange       = deductionAmount + spouseAmount + minorChildrenAmount\n                    deduction               = deductionExchange * exchange_rate\n                    salaryBase              = salaryExchange - deductionExchange \n                    rateBenefit             = rate_Benefit\n                    benefitAccount          = benefit_account\n                    grossSalary             = tc.salary2\n                    benefitExchange         = tc.totalBenefit  / exchange_rate\n                    taxBenefitExchange      = (benefitExchange * rateBenefit)/100\n                    taxBenefit              = (taxBenefitExchange * exchange_rate)\n                    totalBenefit            = tc.totalBenefit\n                    currencyKHM             = \"km-KH\"\n                    result                  =  resultTax[0].rate.filter(r => r.from <= salaryBase && (r.to > salaryBase || r.to ==\"UP TO\"))\n                    if(result.length > 0){\n                        taxRate             =  parseFloat(result[0].taxRate)\n                        taxAmount           =  parseFloat(result[0].amount)\n                    }\n                    taxSalary           = (salaryBase * taxRate)/100 - taxAmount\n                    taxSalaryUS         = taxSalary * exchange_rate\n                    netSalary           = ((salaryExchange - taxSalary) * exchange_rate) + totalBenefit - taxBenefit\n                    netPay              = ((salaryExchange - taxSalary) * exchange_rate) + totalBenefit - taxBenefit\n                    netPayExchange      = netPay / exchange_rate\n                }else{\n                    salaryExchange      = tc.salary2 / exchange_rate;\n                    deduction           = tc.deduction2\n                    deductionExchange   = tc.deduction2 / exchange_rate;\n                    salaryBase          = salaryExchange - deductionExchange\n                    rateBenefit         = rate_Benefit\n                    benefitAccount      = benefit_account\n                    grossSalary         = tc.salary2\n                    benefitExchange     = tc.totalBenefit  * exchange_rate\n                    taxBenefitExchange  = (benefitExchange * rateBenefit)/100\n                    taxBenefit          = (taxBenefitExchange / exchange_rate)\n                    totalBenefit        = tc.totalBenefit\n                    currencyKHM         = \"km-KH\";\n                    result              =  TaxNoResident[0]\n                    taxRate             =  parseFloat(result.rate)\n                    taxSalary           = (salaryBase * taxRate)/100\n                    taxSalaryUS         = taxSalary * exchange_rate\n                    netSalary           = ((salaryExchange - taxSalary) * exchange_rate) + totalBenefit - taxBenefit\n                    netPay              = ((salaryExchange - taxSalary) * exchange_rate) + totalBenefit - taxBenefit\n                    netPayExchange      = netPay * exchange_rate\n                    \n                }\n                payrollsAR.push(new PayrollList({\n                    taxSalary:                  taxSalary,\n                    taxRate:                    taxRate,\n                    spouse:                     spouse,\n                    spouseAmount:               spouseAmount,\n                    minorChildrenAmount:        minorChildrenAmount,\n                    bank:                       tc.bank,\n                    deduction:                  deduction,\n                    deduction2:                 tc.deduction2,\n                    deductionExchange:          deductionExchange,\n                    exchangeRate:               exchangeRate,\n                    salaryBase:                 salaryBase,\n                    employeeId:                 tc.employeeId,\n                    employeeName:               tc.employeeName,\n                    employeeUuid:               tc.employeeUuid,\n                    gender:                     tc.gender,\n                    natureEmployee:             tc.natureEmployee,\n                    natureContract:             tc.natureContract,\n                    payrollLiabilitie:          tc.payrollLiabilitie,\n                    paymentMethod:              tc.paymentMethod,\n                    overTimeHoliday:            tc.overTimeHoliday,\n                    overTimeWeekend:            tc.overTimeWeekend,\n                    position:                   tc.position,\n                    salary:                     tc.salary,\n                    salary1:                    tc.salary1,\n                    salary2:                    tc.salary2,\n                    currency:                   tc.currency,\n                    segment:                    tc.segment,\n                    salaryType:                 tc.salaryType,\n                    startingTime:               tc.startingTime,\n                    spouseNatureEmployee:       tc.spouseNatureEmployee,\n                    workingStatus:              tc.workingStatus,\n                    spouseGender:               tc.spouseGender,\n                    noOfChildren:               tc.noOfChildren,\n                    benefitExchange:            benefitExchange,\n                    totalBenefit:               totalBenefit,\n                    taxBenefitExchange:         taxBenefitExchange,\n                    netPayExchange:             netPayExchange,\n                    taxBenefit:                 taxBenefit,\n                    benefitAccount:             benefitAccount,\n                    workDay:                    tc.workDay,\n                    workTime:                   tc.workTime,\n                    location:                   tc.location,\n                    salaryExchange:             salaryExchange,\n                    currencyKHM:                currencyKHM,\n                    netPay:                     netPay,\n                    netSalary:                  netSalary,\n                    taxRateKHM:                 taxSalary,\n                    taxSalaryUS:                taxSalaryUS,\n                    grossSalary:                grossSalary\n                }))\n            })\n            if(payrollsAR.length > 0){\n                this.payrollList = payrollsAR\n                this.showLoading = false;\n            }\n            this.showLoading = false;\n        },\n        autoCalculate() {\n            let ds              = this.$refs.dataSourceReview.kendoWidget(),\n            totalTaxPaymentKHM  = 0,\n            totalNetSalary      = 0,\n            totalBenefits       = 0,\n            totalTaxBenefit     = 0,\n            totalDeduction      = 0,\n            totalTaxPaymentUS   = 0,\n            totalEmployee       = 0,\n            totalGross          = 0,\n            totalNetPay         = 0\n            ds.data().forEach(value => {\n                totalEmployee       += 1\n                totalTaxPaymentKHM  += parseFloat(value.taxSalary)\n                totalNetPay         += parseFloat(value.netPay)\n                totalNetSalary      += parseFloat(value.netSalary)\n                totalBenefits       += parseFloat(value.totalBenefit)\n                totalDeduction      += parseFloat(value.deduction)\n                totalTaxPaymentUS   += parseFloat(value.taxSalaryUS)\n                totalGross          += parseFloat(value.grossSalary)\n                totalTaxBenefit     += parseFloat(value.taxBenefit)\n            })\n            this.totalEmployee          = parseFloat(totalEmployee.toFixed(2));\n            this.totalNetPay            = parseFloat(totalNetPay.toFixed(2));\n            this.totalTaxPaymentKHM     = parseFloat(totalTaxPaymentKHM.toFixed(2));\n            this.totalNetSalary         = parseFloat(totalNetSalary.toFixed(2));\n            this.totalBenefits          = parseFloat(totalBenefits.toFixed(2));\n            this.totalTaxBenefit        = parseFloat(totalTaxBenefit.toFixed(2));\n            this.totalDeduction         = parseFloat(totalDeduction.toFixed(2));\n            this.totalTaxPaymentUS      = parseFloat(totalTaxPaymentUS.toFixed(2));\n            this.totalGross             = parseFloat(totalGross.toFixed(2));\n        },\n        saveReview(){\n            this.autoCalculate()\n            let payList  = this.payrollList\n            let payrolls = this.payroll\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let data = new PayrollRun({\n                        id:                   this.$route.params.id,\n                        totalEmployee:        payrolls.totalEmployee,\n                        monthOf:              payrolls.monthOf, \n                        date:                 payrolls.date,\n                        created:              payrolls.created,\n                        adjustment:           payrolls.adjustment,\n                        number:               payrolls.number,\n                        abbr:                 payrolls.abbr,\n                        lastNumber:           payrolls.lastNumber,\n                        referenceNumber:      payrolls.referenceNumber,\n                        type:                 payrolls.type,\n                        payNumber:            payrolls.payNumber,\n                        location:             payrolls.location,\n                        currency:             payrolls.currency,\n                        exchangeRate:         payrolls.exchangeRate,\n                        totalGross:           this.totalGross,\n                        totalNetPay:          this.totalNetPay,\n                        totalTaxPaymentKHM:   this.totalTaxPaymentKHM,\n                        totalTaxPaymentUS:    this.totalTaxPaymentUS,\n                        totalDeduction:       this.totalDeduction,\n                        totalBenefits:        this.totalBenefits,\n                        totalTaxBenefit:      this.totalTaxBenefit,\n                        payrollList:          payList,\n                        payrollList1:         payrolls.payrollList1,\n                        payrollList2:         payrolls.payrollList2,\n                        payrollList3:         payList,\n                        totalNetSalary:       this.totalNetSalary,\n                        step:                 4, \n                        department:           payrolls.department,\n                        natureContract:       payrolls.natureContract,\n                        employeeGroup:        payrolls.employeeGroup,\n                        loggedUser:           this.loggedUser,\n                    });\n                    this.showLoading = true;\n                    window.console.log('data',data)\n                    payrollHandler.createPayroll(data).then(response => {\n                        this.showLoading = true\n                        if (response.data.statusCode === 201) {\n                            this.showLoading = false\n                            this.$snotify.success('Success')\n                            this.loadSuccess(response.data.statusCode)\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n                }, 300);\n            })\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        async goBack(){\n            window.history.go(-1)\n        }\n    },\n    async mounted(){\n        await this.loadPayrollList()\n    },\n    watch: {\n        propReview() {\n            if (this.propReview !== undefined) {\n                this.loadPayrollList()\n            }\n        },\n    }\n}\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"],"sourceRoot":"src/views/payroll/payroll_run"}]}