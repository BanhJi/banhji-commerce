{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/segments.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/segments.js","mtime":1638499443072},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWNvcy9EZXNrdG9wL2JhbmhqaS0wLjIvYmFuaGppLWNvbW1lcmNlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwoKdmFyIHNlZ21lbnRIYW5kbGVyID0gcmVxdWlyZSgnQC9zY3JpcHRzL3NlZ21lbnRIYW5kbGVyJyk7IC8vIGluaXRpYWwgc3RhdGUKCgp2YXIgc3RhdGUgPSBmdW5jdGlvbiBzdGF0ZSgpIHsKICByZXR1cm4gewogICAgbGlzdDogW10sCiAgICBpc0xvYWRlZDogZmFsc2UKICB9Owp9OyAvLyBnZXR0ZXJzCgoKdmFyIGdldHRlcnMgPSB7fTsgLy8gYWN0aW9ucwoKdmFyIGFjdGlvbnMgPSB7CiAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdChfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGUsIGNvbW1pdCA9IF9yZWYuY29tbWl0OwoKICAgICAgICAgICAgICBpZiAoc3RhdGUuaXNMb2FkZWQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gc2VnbWVudEhhbmRsZXIuZ2V0QWxsKCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgic2V0TGlzdCIsIHJlc3BvbnNlLmRhdGEuZGF0YSk7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRMb2FkZWQiLCB0cnVlKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBzdGF0ZS5saXN0KTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZFNlZ21lbnRzOiBmdW5jdGlvbiBhZGRTZWdtZW50cyhfcmVmMiwgbGlzdCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIGNvbW1pdCgic2V0TGlzdCIsIGxpc3QpOwogICAgY29tbWl0KCJzZXRMb2FkZWQiLCB0cnVlKTsKICB9Cn07IC8vIG11dGF0aW9ucwoKdmFyIG11dGF0aW9ucyA9IHsKICBzZXRMaXN0OiBmdW5jdGlvbiBzZXRMaXN0KHN0YXRlLCBsaXN0KSB7CiAgICBzdGF0ZS5saXN0ID0gbGlzdDsKICB9LAogIHNldExvYWRlZDogZnVuY3Rpb24gc2V0TG9hZGVkKHN0YXRlLCBzdGF0dXMpIHsKICAgIHN0YXRlLmlzTG9hZGVkID0gc3RhdHVzOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/store/modules/segments.js"],"names":["segmentHandler","require","state","list","isLoaded","getters","actions","getList","commit","getAll","response","data","addSegments","mutations","setList","setLoaded","status","namespaced"],"mappings":";;;AAAA,IAAMA,cAAc,GAAGC,OAAO,CAAC,0BAAD,CAA9B,C,CAEA;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,QAAQ,EAAE;AAFO,GAAP;AAAA,CAAd,C,CAKA;;;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AACA,IAAMC,OAAO,GAAG;AACNC,EAAAA,OADM,yBACsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjBL,cAAAA,KAAiB,QAAjBA,KAAiB,EAAVM,MAAU,QAAVA,MAAU;;AAAA,kBAC1BN,KAAK,CAACE,QADoB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAELJ,cAAc,CAACS,MAAf,EAFK;;AAAA;AAEtBC,cAAAA,QAFsB;AAG1BF,cAAAA,MAAM,CAAC,SAAD,EAAYE,QAAQ,CAACC,IAAT,CAAcA,IAA1B,CAAN;AACAH,cAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;;AAJ0B;AAAA,+CAOvBN,KAAK,CAACC,IAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjC,GATW;AAUZS,EAAAA,WAVY,8BAUYT,IAVZ,EAUkB;AAAA,QAAhBK,MAAgB,SAAhBA,MAAgB;AAC1BA,IAAAA,MAAM,CAAC,SAAD,EAAYL,IAAZ,CAAN;AACAK,IAAAA,MAAM,CAAC,WAAD,EAAc,IAAd,CAAN;AACH;AAbW,CAAhB,C,CAgBA;;AACA,IAAMK,SAAS,GAAG;AACdC,EAAAA,OADc,mBACLZ,KADK,EACEC,IADF,EACQ;AAClBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACH,GAHa;AAIdY,EAAAA,SAJc,qBAIHb,KAJG,EAIIc,MAJJ,EAIY;AACtBd,IAAAA,KAAK,CAACE,QAAN,GAAiBY,MAAjB;AACH;AANa,CAAlB;AASA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbf,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,OAAO,EAAPA,OAJa;AAKbO,EAAAA,SAAS,EAATA;AALa,CAAf","sourcesContent":["const segmentHandler = require('@/scripts/segmentHandler');\n\n// initial state\nconst state = () => ({\n    list: [],\n    isLoaded: false,\n})\n\n// getters\nconst getters = {}\n\n// actions\nconst actions = {\n    async getList ({ state, commit }) {\n        if(!state.isLoaded){\n            let response = await segmentHandler.getAll();\n            commit(\"setList\", response.data.data);\n            commit(\"setLoaded\", true);\n        }\n\n        return state.list;\n    },\n    addSegments({ commit }, list) {\n        commit(\"setList\", list);\n        commit(\"setLoaded\", true);\n    },\n}\n\n// mutations\nconst mutations = {\n    setList (state, list) {\n        state.list = list\n    },\n    setLoaded (state, status) {\n        state.isLoaded = status\n    },\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n}"]}]}