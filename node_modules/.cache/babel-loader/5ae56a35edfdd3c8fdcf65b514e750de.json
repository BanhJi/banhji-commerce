{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/compliance/handler/salaryHandler.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/compliance/handler/salaryHandler.js","mtime":1638499442974},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9hc3luY1RvR2VuZXJhdG9yID0gcmVxdWlyZSgiL1VzZXJzL21hY29zL0Rlc2t0b3AvYmFuaGppLTAuMi9iYW5oamktYWNjb3VudGluZy13ZWItbW9kdWxlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IiKS5kZWZhdWx0OwoKcmVxdWlyZSgicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIik7CgovKgogKiBMYXN0IG1vZGlmaWVkIDogNC8yMS8yMSwgOTowNCBBTSBpbiBQcm9qZWN0IGJhbmhqaS1hY2NvdW50aW5nLXdlYi1tb2R1bGUKICogQ29weXJpZ2h0IChjKSAyMDIxLiBDaGFuZGFyaXRoIENoZWEgdW5kZXIgQ29tcGFueSBCYW5oSmkgRmludGVjaCBDby4sIEx0ZAogKiBGYWNlYm9vayBQcm9maWxlIDogaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3Byb2ZpbGUucGhwP2lkPTEwMDAxMTE5NDgwNjk0NwogKiBHaXRodWIgUHJvZmlsZSA6IGh0dHBzOi8vZ2l0aHViLmNvbS9EYXJpdGgtTW9rcG9zdAogKiBJbnN0YWdyYW0gUHJvZmlsZSA6IGh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vY2hhbmRhcml0aF9jaGVhCiAqLwp2YXIgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwoKdmFyIGFwaVVybCA9IHJlcXVpcmUoJ0AvYXBpVXJsLmpzJyk7Cgptb2R1bGUuZXhwb3J0cy5jcmVhdGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGRhdGEpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdChhcGlVcmwuY29tcGxpYW5jZS5zYWxhcnlfcG9zdCwgZGF0YSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKbW9kdWxlLmV4cG9ydHMuZ2V0T25lID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGlkKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuY29tcGxpYW5jZS5zYWxhcnlfZ2V0ICsgJy8nICsgaWQpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Mi5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gyKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgptb2R1bGUuZXhwb3J0cy5nZXRCeU1ySWQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoaWQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5jb21wbGlhbmNlLnNhbGFyeV9nZXRCeU1ySWQgKyBpZCArICcvbGlzdCcpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0My5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDMudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gzKSB7CiAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgptb2R1bGUuZXhwb3J0cy5nZXRCeU1vbnRoID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KG1vbnRoKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChhcGlVcmwuY29tcGxpYW5jZS5zYWxhcnlfZ2V0QnlNcklkICsgJ21vbnRoLW9mLycgKyBtb250aCArICcvbGlzdCcpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NC5zZW50KTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gNjsKICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDApOwogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5lcnJvcihfY29udGV4dDQudDApOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQsIG51bGwsIFtbMCwgNl1dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3g0KSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgptb2R1bGUuZXhwb3J0cy5nZXRCZXR3ZWVuTW9udGggPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUobW9udGgpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gMDsKICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KGFwaVVybC5jb21wbGlhbmNlLnNhbGFyeV9nZXQsIHsKICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZTogbW9udGguc3RhcnRfZGF0ZSwKICAgICAgICAgICAgICAgIGVuZERhdGU6IG1vbnRoLmVuZF9kYXRlCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDUuc2VudCk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBfY29udGV4dDUucHJldiA9IDY7CiAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUuZXJyb3IoX2NvbnRleHQ1LnQwKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU1LCBudWxsLCBbWzAsIDZdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94NSkgewogICAgcmV0dXJuIF9yZWY1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKbW9kdWxlLmV4cG9ydHMuZ2V0QWxsID0gLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgIHdoaWxlICgxKSB7CiAgICAgIHN3aXRjaCAoX2NvbnRleHQ2LnByZXYgPSBfY29udGV4dDYubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gMDsKICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMzsKICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpVXJsLmNvbXBsaWFuY2Uuc2FsYXJ5X2dldCk7CgogICAgICAgIGNhc2UgMzoKICAgICAgICAgIHJldHVybiBfY29udGV4dDYuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDYuc2VudCk7CgogICAgICAgIGNhc2UgNjoKICAgICAgICAgIF9jb250ZXh0Ni5wcmV2ID0gNjsKICAgICAgICAgIF9jb250ZXh0Ni50MCA9IF9jb250ZXh0NlsiY2F0Y2giXSgwKTsKICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKF9jb250ZXh0Ni50MCk7CgogICAgICAgIGNhc2UgOToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgIH0KICAgIH0KICB9LCBfY2FsbGVlNiwgbnVsbCwgW1swLCA2XV0pOwp9KSk7"},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/compliance/handler/salaryHandler.js"],"names":["axios","require","apiUrl","module","exports","create","data","post","compliance","salary_post","window","console","error","getOne","id","get","salary_get","getByMrId","salary_getByMrId","getByMonth","month","getBetweenMonth","params","startDate","start_date","endDate","end_date","getAll"],"mappings":"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","sourcesContent":["/*\n * Last modified : 4/21/21, 9:04 AM in Project banhji-accounting-web-module\n * Copyright (c) 2021. Chandarith Chea under Company BanhJi Fintech Co., Ltd\n * Facebook Profile : https://www.facebook.com/profile.php?id=100011194806947\n * Github Profile : https://github.com/Darith-Mokpost\n * Instagram Profile : https://www.instagram.com/chandarith_chea\n */\n\nconst axios \t= require('axios')\nconst apiUrl \t= require('@/apiUrl.js')\n\nmodule.exports.create = async function (data) {\n    try {\n        return await axios.post(apiUrl.compliance.salary_post, data)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.getOne = async function (id) {\n    try {\n        return await axios.get(apiUrl.compliance.salary_get + '/' + id)\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.getByMrId = async function (id) {\n    try {\n        return await axios.get(apiUrl.compliance.salary_getByMrId + id + '/list')\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.getByMonth = async function (month) {\n    try {\n        return await axios.get(apiUrl.compliance.salary_getByMrId + 'month-of/' + month + '/list')\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.getBetweenMonth = async function (month) {\n    try {\n        return await axios.get(apiUrl.compliance.salary_get, {params: {startDate: month.start_date, endDate: month.end_date}})\n    } catch (error) {\n        window.console.error(error)\n    }\n}\n\nmodule.exports.getAll = async function () {\n    try {\n        return await axios.get(apiUrl.compliance.salary_get)\n    } catch (error) {\n        window.console.error(error)\n    }\n}"]}]}