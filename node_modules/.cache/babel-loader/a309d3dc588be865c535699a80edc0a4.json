{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Account.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Account.js","mtime":1638760538965},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBrZW5kbyBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7Cgp2YXIgYXBpVXJsID0gcmVxdWlyZSgnQC9hcGlVcmwuanMnKTsKCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoY29udGFpbmVyLCBvcHRpb25zKSB7CiAgLy8gRGVmaW5kIG9yZGVyaW5nIGJ5IG51bWJlcgogIHZhciBjb21wYXJlID0gZnVuY3Rpb24gY29tcGFyZShhLCBiKSB7CiAgICBpZiAoYS5pdGVtc1swXS5udW1iZXIgPT09IGIuaXRlbXNbMF0ubnVtYmVyKSB7CiAgICAgIHJldHVybiAwOwogICAgfSBlbHNlIGlmIChhLml0ZW1zWzBdLm51bWJlciA+IGIuaXRlbXNbMF0ubnVtYmVyKSB7CiAgICAgIHJldHVybiAxOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIC0xOwogICAgfQogIH07IC8vIERlZmluZCBkZWZhdWx0IGdyb3VwCgoKICB2YXIgZ3JvdXAgPSB7CiAgICBmaWVsZDogc3RvcmUuc3RhdGUuYWNjb3VudGluZy5hY2NvdW50TGFuZ3VhZ2UgPT09ICdFbmdsaXNoJyA/ICJhY2NvdW50X3R5cGUubmFtZSIgOiAiYWNjb3VudF90eXBlLmxvY2FsX25hbWUiLAogICAgY29tcGFyZTogY29tcGFyZQogIH07IC8vIFVzZSBsb2NhbCBkYXRhCgogIHZhciBkcyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgZGF0YTogc3RvcmUuc3RhdGUuYWNjb3VudGluZy5hY2NvdW50cywKICAgIGdyb3VwOiBncm91cAogIH0pOwogIHZhciBhY2NfbGFuZ3VhZ2UgPSBzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRMYW5ndWFnZSA9PT0gJ0VuZ2xpc2gnID8gIm5hbWUiIDogImxvY2FsX25hbWUiOwogIHZhciBhY2NfdGVtcGxhdGUgPSBzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRMYW5ndWFnZSA9PT0gJ0VuZ2xpc2gnID8gIjxzcGFuPiM9bnVtYmVyIyAjPW5hbWUjPC9zcGFuPiIgOiAiPHNwYW4+Iz1udW1iZXIjICM9bG9jYWxfbmFtZSM8L3NwYW4+IjsgLy8gRGVmaW5kZSBkcm9wZG93bmxpc3QKCiAgdmFyIGRkbCA9IGtlbmRvLmpRdWVyeSgnPGlucHV0IHJlcXVpcmVkIG5hbWU9IicgKyBvcHRpb25zLmZpZWxkICsgJyIvPicpLmFwcGVuZFRvKGNvbnRhaW5lcikua2VuZG9Ecm9wRG93bkxpc3QoewogICAgYXV0b0JpbmQ6IHRydWUsCiAgICBhdXRvV2lkdGg6IHRydWUsCiAgICBoZWlnaHQ6IDQwMCwKICAgIGZpbHRlcjogImNvbnRhaW5zIiwKICAgIGZpbHRlcmluZzogZnVuY3Rpb24gZmlsdGVyaW5nKGUpIHsKICAgICAgdmFyIGZpbHRlciA9IGUuZmlsdGVyOwogICAgICB2YXIgbmV3RmlsdGVyID0gewogICAgICAgIGxvZ2ljOiAib3IiLAogICAgICAgIGZpbHRlcnM6IFt7CiAgICAgICAgICBmaWVsZDogIm51bWJlciIsCiAgICAgICAgICBvcGVyYXRvcjogImNvbnRhaW5zIiwKICAgICAgICAgIHZhbHVlOiBmaWx0ZXIudmFsdWUKICAgICAgICB9LCB7CiAgICAgICAgICBmaWVsZDogIm5hbWUiLAogICAgICAgICAgb3BlcmF0b3I6ICJjb250YWlucyIsCiAgICAgICAgICB2YWx1ZTogZmlsdGVyLnZhbHVlCiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5kYXRhU291cmNlLmZpbHRlcihuZXdGaWx0ZXIpOyAvLyBJbXBvcnRhbnQ6IHN0b3AgZGVmYXVsdCBmaWx0ZXIKCiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgIH0sCiAgICBkYXRhVGV4dEZpZWxkOiBhY2NfbGFuZ3VhZ2UsCiAgICB0ZW1wbGF0ZTogYWNjX3RlbXBsYXRlLAogICAgZGF0YVZhbHVlRmllbGQ6ICJ1dWlkIiwKICAgIG9wdGlvbkxhYmVsOiAiLS0tIFNlbGVjdCAtLS0iLAogICAgZGF0YVNvdXJjZTogZHMKICB9KS5kYXRhKCJrZW5kb0Ryb3BEb3duTGlzdCIpOyAvLyBVc2UgcmVtb3RlIGRhdGEKCiAgaWYgKCFzdG9yZS5zdGF0ZS5hY2NvdW50aW5nLmFjY291bnRMb2FkZWQpIHsKICAgIHZhciByZW1vdGVEUyA9IG5ldyBrZW5kby5kYXRhLkRhdGFTb3VyY2UoewogICAgICB0cmFuc3BvcnQ6IHsKICAgICAgICByZWFkOiB7CiAgICAgICAgICB1cmw6IGFwaVVybC5hY2NvdW50cwogICAgICAgIH0sCiAgICAgICAgZGF0YVR5cGU6ICJqc29uIgogICAgICB9LAogICAgICBzY2hlbWE6IHsKICAgICAgICBtb2RlbDogewogICAgICAgICAgaWQ6ICJ1dWlkIgogICAgICAgIH0sCiAgICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YShyZXNwb25zZSkgewogICAgICAgICAgLyogQWRkIHRvIHN0b3JlICovCiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnYWNjb3VudGluZy9wdXRBY2NvdW50cycsIHJlc3BvbnNlKTsKICAgICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGdyb3VwOiBncm91cAogICAgfSk7CiAgICBkZGwuc2V0RGF0YVNvdXJjZShyZW1vdGVEUyk7CiAgfQoKICByZXR1cm4gZGRsOwp9KTs="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/Account.js"],"names":["kendo","store","apiUrl","require","container","options","compare","a","b","items","number","group","field","state","accounting","accountLanguage","ds","data","DataSource","accounts","acc_language","acc_template","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","filter","filtering","e","newFilter","logic","filters","operator","value","dataSource","preventDefault","dataTextField","template","dataValueField","optionLabel","accountLoaded","remoteDS","transport","read","url","dataType","schema","model","id","response","dispatch","setDataSource"],"mappings":"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","sourcesContent":["import kendo from '@progress/kendo-ui';\nimport store from '@/store';\n\nconst apiUrl = require('@/apiUrl.js');\n\nexport default (container, options) => {\n    // Defind ordering by number\n    let compare = function(a, b) {\n        if (a.items[0].number === b.items[0].number) {\n            return 0;\n        } else if (a.items[0].number > b.items[0].number) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    // Defind default group\n    let group = { \n        field: store.state.accounting.accountLanguage === 'English' ? \"account_type.name\" :  \"account_type.local_name\",\n        compare: compare\n    };\n\n    // Use local data\n    let ds = new kendo.data.DataSource({\n        data: store.state.accounting.accounts,\n        group: group,\n    })\n    let acc_language = store.state.accounting.accountLanguage === 'English' ? \"name\" :  \"local_name\";\n    let acc_template = store.state.accounting.accountLanguage === 'English' ?\"<span>#=number# #=name#</span>\" :  \"<span>#=number# #=local_name#</span>\";\n\n    // Definde dropdownlist\n    let ddl = kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n            .appendTo(container)\n            .kendoDropDownList({\n                autoBind: true,\n                autoWidth: true,\n                height: 400,\n                filter:\"contains\",\n                filtering: function(e) {\n                    var filter = e.filter;\n                    \n                    var newFilter = {\n                        logic: \"or\",\n                        filters: [\n                            { field: \"number\", operator: \"contains\", value: filter.value },\n                            { field: \"name\", operator: \"contains\", value: filter.value },\n                        ]\n                    };\n                    this.dataSource.filter(newFilter);\n\n                    // Important: stop default filter\n                    e.preventDefault();\n                },\n                dataTextField: acc_language,\n                template: acc_template ,\n                dataValueField: \"uuid\",\n                optionLabel: \"--- Select ---\",\n                dataSource: ds\n            }).data(\"kendoDropDownList\");\n\n    // Use remote data\n    if(!store.state.accounting.accountLoaded){\n        let remoteDS = new kendo.data.DataSource({\n            transport: {\n                read: {\n                    url: apiUrl.accounts,\n                },\n                dataType: \"json\",\n            },\n            schema: {\n                model: {\n                    id: \"uuid\"\n                },\n                data: (response) => {\n                    /* Add to store */\n                    store.dispatch('accounting/putAccounts', response);\n                    \n                    return response;\n                },\n            },\n            group: group\n        })\n\n        ddl.setDataSource(remoteDS);\n    }\n    \n    return ddl;\n}"]}]}