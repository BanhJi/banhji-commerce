{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Adjustment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Adjustment.vue","mtime":1639966363945},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Adjustment.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row>\n                <v-col sm=\"4\" cols=\"12\">\n                    <h3>{{$t('payroll_adjustment')}}</h3>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\">\n            <kendo-datasource ref=\"dataSourceAdjus\"\n                :data=\"adjustmentList\"\n                :change=\"onChanges\"/>\n                <kendo-grid id=\"gridAdjus\" class=\"grid-function\"\n                    :data-source-ref=\"'dataSourceAdjus'\"\n                    :editable=\"true\"\n                    :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                    :field=\"'no'\"\n                    :title=\"$t('no')\"\n                    :template=\"rowNumberTmpl\"\n                    :width=\"80\"\n                    :column-menu=\"false\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-center'\t}\"\n                    :attributes=\"{style: 'text-align: center'}\"/>\n                <kendo-grid-column\n                    :field=\"'employee'\"\n                    :width=\"250\"\n                    :title=\"$t('employee_name')\"\n                    :template=\"'<span>#= employee.name#</span>'\"\n                    :editor=\"employeeDropDownEditor\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'payrollComponent'\"\n                    :width=\"220\"\n                    :title=\"$t('payroll_component')\"\n                    :template=\"'<span>#= payrollComponent.name#</span>'\"\n                    :editor=\"payrollComponentDropDownEditor\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <!-- <kendo-grid-column\n                    :field=\"'segment'\"\n                    :title=\"$t('segment')\"\n                    :width=\"150\"\n                    :template=\"'<span>#=segment.name#</span>'\"\n                    :editor=\"segmentDropDownEditor\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/> -->\n                <kendo-grid-column\n                    :field=\"'currency'\"\n                    :title=\"$t('currency')\"\n                    :width=\"200\"\n                    :editable=\"() => {return false;}\"\n                    :template=\"'<span>#=currency.code# - #=currency.name#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'amount'\"\n                    :title=\"$t('amount')\"\n                    :template=\"'<span>#= kendo.toString(amount,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: right;'\n                    }\"/>\n                 <kendo-grid-column\n                    :width=\"100\"\n                    :command=\"{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus' }\"\n                    :title=\"$t('action')\"\n                    :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"\n                    :attributes=\"{style: 'text-align: center'}\"/>\n            </kendo-grid>\n            <v-btn color=\"primary\"\n                    class=\"float-left rounded-0 white--text mt-3\"\n                    @click=\"addRow\">\n                <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n            </v-btn>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"  type=\"loading\"/>\n    </v-row>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    import PayrollList from \"@/scripts/model/PayrollList\"\n    import PayrollRun from \"@/scripts/model/PayrollRun\";\n    import Adjustment from \"@/scripts/model/Adjustment\"\n    const settingsHandler = require(\"@/scripts/settingsHandler\")\n    const payrollHandler = require(\"@/scripts/payrollHandler\")\n    const employeeHandler = require(\"@/scripts/employeeHandler\")\n    const payrollListModel = new PayrollList({})\n    const adjustmentModel = new Adjustment({})\n    const $ = require(\"jquery\")\n    const cookieJS = require(\"@/cookie.js\");\n    const cookie = cookieJS.getCookie();\n\n    export default {\n        props:['propAdjustment'],\n        data: () =>({\n            journal_date: \"\",\n            dialogm: false,\n            pyrollList: [],\n            showLoading: false,\n            payrollList: payrollListModel,\n            adjustment: adjustmentModel,\n            adjustmentList: [],\n            segments: [],\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            record: {}\n        }),\n        components: {\n            LoadingMe: () => import(`@/components/Loading`)\n        },\n        methods:{\n            loadPayrollList(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true;\n                        payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                const resultPay = res.data.data[0]\n                                if(resultPay.step >= 2){\n                                    this.loadPayrollItem(resultPay)\n                                }\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            loadPayrollItem(result){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        payrollHandler.getPayrollItem(result.id).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let resutl_item = res.data.data\n                                this.showLoading = false\n                                this.loadPayrolls = resutl_item\n                                this.payrolls   = result\n                                if(result.adjustment.length > 0){\n                                    this.adjustmentList = result.adjustment\n                                }else{\n                                    let ds = this.$refs.dataSourceAdjus.kendoWidget();\n                                    this.adjustmentList = ds.data([])\n                                    this.addRow()\n                                    this.calculateAdjust()\n                                }\n                                this.loadSuccess(res.data.statusCode)\n                                this.showLoading = false;\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadSegment() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.segments = []\n                        settingsHandler.getSeg().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.segments = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            rowNumberTmpl(dataItem) {\n                var ds = this.$refs.dataSourceAdjus.kendoWidget(),\n                    index = ds.indexOf(dataItem);\n                return index + 1;\n            },\n            addRow() {\n                let ds = this.$refs.dataSourceAdjus.kendoWidget(),\n                    total = ds.total();\n                ds.insert(total,{\n                    payrollComponent: {\n                        name: '-- Select --',\n                    },\n                    employee: {\n                        name: '-- Select --',\n                    },\n                    amount: 0,\n                    segment: {\n                        name: '-- Select --',\n                    },\n                    currency:  {\n                        code: '',\n                        name: '- Select --'\n                    }\n                });\n            },\n            removeRow(e) {\n                e.preventDefault();\n                const grid = kendo.jQuery(\"#gridAdjus\").data(\"kendoGrid\"),\n                    dataSource = grid.dataSource,\n                    dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n                if (dataSource.total() > 1) {\n                    dataSource.remove(dataItem);\n                }\n            },\n            onChanges(e){\n                this.loadEmployee()   \n                this.loadPayrollComponent() \n                this.loadSegment() \n                if (e.field === \"employee\") {\n                    let dataItem = e.items[0]\n                    let params = {\n                        status: 1,\n                        employeeId: dataItem.employee.employeeId\n                    }\n                   this.loadRecord(params, dataItem)\n                }   \n            },\n            employeeDropDownEditor(container, options){\n                kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.employee,\n                    })\n                })\n            },\n            payrollComponentDropDownEditor(container, options){\n                kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.payrollComponent,\n                    })\n                })\n            },\n            segmentDropDownEditor(container, options){\n                kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 400,\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.segments,\n                    })\n                })\n            },\n            async loadEmployee(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        employeeHandler.center().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.employee = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadPayrollComponent(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.payrollComponent = []\n                        payrollHandler.getComponent().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                const types = ['deduction','benefit','gross_salary']\n                                this.payrollComponent =  res.data.data.filter(m => {\n                                    const exist = types.filter(n=> n === m.compoType.id)\n                                        if(exist.length > 0){\n                                            return m\n                                        }\n                                    }\n                                )\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            calculateAdjust(){\n                let payrollList = this.loadPayrolls;\n                for (const pa of payrollList){\n                    if(pa.benefit){\n                        pa.benefit.forEach(i=>{\n                            if(i.amount > 0){\n                                this.adjustmentList.push({\n                                    employee:                   {\n                                        // address:                pa.employee.address,\n                                        // bank:                   pa.employee.bank,\n                                        // bankAccount:            pa.employee.bankAccount,\n                                        // country:                pa.employee.country,\n                                        // dob:                    pa.employee.dob,\n                                        // email:                  pa.employee.email,\n                                        employeeId:             pa.employee.employeeId,\n                                        // employeeType:           pa.employee.employeeType,\n                                        // firstName:              pa.employee.firstName,\n                                        // firstNameLocale:        pa.employee.firstNameLocale,\n                                        // gender:                 pa.employee.gender,\n                                        id:                     pa.employee.id,\n                                        // identityId:             pa.employee.identityId,\n                                        // identityType:           pa.employee.identityType,\n                                        // image:                  pa.employee.image,\n                                        // lastName:               pa.employee.lastName,\n                                        // lastNameLocale:         pa.employee.lastNameLocale,\n                                        // maritalStatus:          pa.employee.maritalStatus,\n                                        // nationality:            pa.employee.nationality,\n                                        // natureEmployee:         pa.employee.natureEmployee,\n                                        // noOfChildren:           pa.employee.noOfChildren,\n                                        // paymentMethod:          pa.employee.paymentMethod,\n                                        // paymentPeriod:          pa.employee.paymentPeriod,\n                                        // payrollLiabilitie:      pa.employee.payrollLiabilitie,\n                                        // phone:                  pa.employee.phone,\n                                        // salaryAcc:              pa.employee.salaryAcc,\n                                        // salaryAdvanceAcc:       pa.employee.salaryAdvanceAcc,\n                                        // spouseGender:           pa.employee.spouseGender,\n                                        // spouseName:             pa.employee.spouseName,\n                                        // spouseNatureEmployee:   pa.employee.spouseNatureEmployee,\n                                        // status:                 pa.employee.status,\n                                        // workingStatus:          pa.employee.workingStatus,\n                                        name:                   pa.employee.employeeId + ' - ' +  pa.employee.firstName +' '+ pa.employee.lastName,\n                                    },\n                                    payrollComponent:           i.component ? i.component: {},\n                                    currency:                   pa.currency || {},\n                                    amount:                     i.amount ? i.amount: 0,\n                                    // segment:                    i.segment ? i.segment: {}\n                                })\n                            }\n                        })\n                    }\n                }\n            },\n            saveAdjust(){\n                let ds = this.$refs.dataSourceAdjus.kendoWidget();\n                let ds1 = ds.data()\n                let dataSource = ds1.map(index=>{\n                    return {\n                        amount:             index.amount,\n                        employee:           index.employee,\n                        payrollComponent:   index.payrollComponent,\n                        currency:           index.currency\n                        // segment:            index.segment,\n                    }\n                })\n                let payrollList = this.loadPayrolls;\n                let helper = {};\n                let result = dataSource.reduce(function(index, value) {\n                    if(value.employee.id){\n                        let key = value.payrollComponent.compoType.name +'-'+value.employee.employeeId ;\n                        if(!helper[key]) {\n                            helper[key] = Object.assign({}, value); // create a copy of o\n                            index.push(helper[key]);\n                        } else {\n                            helper[key].amount += parseFloat(value.amount);\n                            helper[key].conponentType = value.payrollComponent.compoType.name;\n                        }\n                    }\n                    return index\n                }, []);\n                let payList = [];\n                for (const pa of payrollList){\n                    let benefit = 0\n                    let deduction2 = 0;\n                    let salaryAdd = 0;\n                    result.forEach(function(r){\n                        if(r.payrollComponent.name === \"Deduction\" && r.employee.id == pa.employeeUuid){\n                            deduction2 = parseFloat(r.amount);\n                        }else if(r.payrollComponent.name === \"Benefits\" && r.employee.id == pa.employeeUuid){\n                           benefit = parseFloat(r.amount)\n                        }else if(r.payrollComponent.compoType.id === \"gross_salary\" && r.employee.id == pa.employeeUuid){\n                            salaryAdd = parseFloat(r.amount)\n                        }\n                    })\n                    payList.push( new PayrollList({\n                        employeeUuid:               pa.employeeUuid,\n                        deduction:                  0,\n                        deduction2:                 deduction2,\n                        bank:                       pa.bank, \n                        currency:                   pa.currency ? pa.currency: {},\n                        totalBenefit:               benefit,\n                        employeeName:               pa.employeeName,\n                        employeeId:                 pa.employeeId,\n                        gender:                     pa.gender,\n                        natureEmployee:             pa.natureEmployee,\n                        natureContract:             pa.natureContract,\n                        paymentMethod:              pa.paymentMethod,\n                        payrollLiabilitie:          pa.payrollLiabilitie,\n                        location:                   pa.location,\n                        overTimeHoliday:            pa.overTimeHoliday,\n                        overTimeWeekend:            pa.overTimeWeekend,\n                        overTimeNight:              pa.overTimeNight,\n                        paidHours:                  pa.paidHours,\n                        position:                   pa.position,\n                        segment:                    pa.segment,\n                        salary:                     parseFloat(pa.salary1) + salaryAdd,\n                        salary1:                    pa.salary1,\n                        salary2:                    parseFloat(pa.salary1) + salaryAdd,\n                        salaryType:                 pa.salaryType,\n                        workDay:                    pa.workDay,\n                        workTime:                   pa.workTime, \n                        spouseNatureEmployee:       pa.spouseNatureEmployee,\n                        workingStatus:              pa.workingStatus,\n                        spouseGender:               pa.spouseGender,\n                        noOfChildren:               pa.noOfChildren\n                    }))\n                }\n                this.payList = payList\n                let payrolls = this.payrolls\n                new Promise(resolve => {\n                    setTimeout(() => {\n                    resolve('resolved');\n                        let data = new PayrollRun({\n                            id:                   this.$route.params.id,\n                            monthOf:              payrolls.monthOf,\n                            date:                 payrolls.date,\n                            created:              payrolls.created,\n                            totalEmployee:        payrolls.totalEmployee,\n                            number:               payrolls.number,\n                            lastNumber:           payrolls.lastNumber,\n                            abbr:                 payrolls.abbr,\n                            referenceNumber:      payrolls.referenceNumber,\n                            payNumber:            payrolls.payNumber,\n                            type:                 payrolls.type,\n                            currency:             payrolls.currency,\n                            exchangeRate:         payrolls.exchangeRate,\n                            location:             payrolls.location,\n                            adjustment:           dataSource,\n                            payrollList:          this.payList,\n                            payrollList1:         payrolls.payrollList1,\n                            payrollList2:         this.payList,\n                            step:                 3,\n                            department:           payrolls.department || '',\n                            natureContract:       payrolls.natureContract || '',\n                            employeeGroup:        payrolls.employeeGroup || '',\n                            loggedUser:           this.loggedUser\n                        });\n                        this.showLoading = true\n                        payrollHandler.createPayroll(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.showLoading = false\n                                this.$snotify.success('Success')\n                                this.loadSuccess(response.data.statusCode)\n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }, 300);\n                })\n            },\n            loadSuccess(data){\n                this.$emit('headline',data)\n            },\n            async goBack(){\n                window.history.go(-1)\n            },\n            loadRecord(params, dataItem){\n                 new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true\n                        employeeHandler.getRecord(params).then(res => {\n                            if(res.data.statusCode == 200){\n                                this.showLoading = false\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.record = res.data.data[0].currency\n                                    dataItem.set('currency', this.record)\n                                }\n                            }\n                        })\n\n                    }, 300);\n                })\n            }\n        },\n        mounted: async function (){\n            await this.addRow()\n            await this.loadPayrollList()\n            await this.loadSegment()\n        },\n        watch: {\n            propAdjustment(){\n                if (this.propAdjustment !== undefined) {\n                    this.loadPayrollList()\n                }\n            }\n        },\n        computed:{\n    \n        }\n    }\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"],"sourceRoot":"src/views/payroll/payroll_run"}]}