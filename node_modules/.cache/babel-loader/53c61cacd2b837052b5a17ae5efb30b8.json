{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLossBySegments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLossBySegments.vue","mtime":1642155812621},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatementOfProfitOrLossBySegments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n        <v-row class=\"mt-0\">\n          <v-col sm=\"11\" cols=\"12\" class=\"py-0\">\n            <app-searchdate\n              :initStartDate=\"startDate\"\n              @emitStartDate=\"startDate = $event\"\n              :initEndDate=\"endDate\"\n              @emitEndDate=\"endDate = $event\"\n            />\n          </v-col>\n          <v-col sm=\"1\" cols=\"4\" class=\"py-0\">\n              <app-reporting-language\n                :initLanguage=\"reportingLanguage\"\n                @emitLanguage=\"reportingLanguage = $event\"\n              />\n          </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n          <v-col class=\"py-0\" sm=\"4\" cols=\"4\">\n            <label class=\"label\">{{ $t(\"segment\") }}</label>\n            <app-segment-list-item-group\n              :initSegment=\"selectedSegmentIds\"\n              @emitSegment=\"selectedSegmentIds = $event\"\n            />\n          </v-col>\n          <v-col class=\"py-0\" sm=\"4\" cols=\"4\">\n            <v-btn class=\"white--text dv_mt\" color=\"primary\" @click=\"search\">\n              <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"custom_expansion py-0\">\n            <kendo-datasource\n              ref=\"statementPLDS\"\n              :data=\"statementPLList\"\n              :schema=\"schemaDefinition\"\n              :sort=\"sortDefinition\"\n              :group=\"groupDefinition\"\n              :aggregate=\"aggregateDefinition\"\n            />\n\n            <kendo-grid\n              id=\"gridSPL\"\n              class=\"custom_grid\"\n              :data-source-ref=\"'statementPLDS'\"\n              :dataBound=\"dataBound\"\n              :change=\"onGridChanges\"\n              :selectable=\"true\"\n              :persistSelection=\"true\"\n              :sortable=\"true\"\n              :column-menu=\"true\"\n              :reorderable=\"true\"\n              :resizable=\"true\"\n              :noRecords=\"true\"\n              :toolbar=\"['excel']\"\n              :excel-file-name=\"'incomeStatement.xlsx'\"\n              :excel-filterable=\"true\"\n              :columns=\"columns\"\n            />\n          </v-col>\n        </v-row>\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"false\"\n          :myLoading=\"true\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { mapState } from \"vuex\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-segment-list-item-group\": () =>\n      import(\"@/components/dropdownlist/SegmentListItemGroup\"),\n  },\n  data: () => ({\n    // Obj\n    startDate: \"\",\n    endDate: \"\",\n    statementPLList: [],\n    selectedSegmentIds: [],\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    // LodingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    sortDefinition: { field: \"number\", dir: \"asc\" },\n    groupDefinition: [],\n    aggregateDefinition: [],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    async loadData() {\n      // Call List\n      await this.$store.dispatch(\"segments/getList\");\n    },\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSPL\").data(\"kendoGrid\");\n      let selectedSegmentIds = grid.dataItem(grid.select());\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedSegmentIds.accountUUID,\n          start_date: this.startDate,\n          end_date: this.endDate,\n        },\n      });\n    },\n    // Search journals\n    search() {\n      if (this.selectedSegmentIds.length > 0) {\n        let sdate = this.startDate,\n          edate = this.endDate;\n\n        if (sdate && edate) {\n          sdate =\n            kendo.toString(new Date(sdate), \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n\n          edate = new Date(edate);\n          edate = kendo.toString(edate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n        } else {\n          sdate = 0;\n          edate = 0;\n        }\n\n        // Empty dataSource\n        let ds = this.$refs.statementPLDS.kendoWidget();\n        ds.data([]);\n\n        // Query\n        this.showLoading = true;\n        incomeStatementHandler\n          .getBySegments(sdate, edate, this.selectedSegmentIds)\n          .then((response) => {\n            this.statements = response;\n            this.bindData();\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        Helper.alertErrorMsg(\"Please select segment\");\n      }\n    },\n    /* Bind Data */\n    async bindData() {\n      let entries = {};\n\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        this.statements[i].forEach((value) => {\n          let entry = value;\n\n          // Order\n          if (value.account_type_number == OrderNumberPL.GrossProfit.number) {\n            // Gross Profit\n            entry.order = OrderNumberPL.GrossProfit.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.OtherRevenue.number\n          ) {\n            // Other Revenue\n            entry.order = OrderNumberPL.OtherRevenue.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.OperatingExpense.number\n          ) {\n            // Operating Expense\n            entry.order = OrderNumberPL.OperatingExpense.order;\n          } else if (\n            value.account_type_number ==\n            OrderNumberPL.OperatingIncomeEBITDA.number\n          ) {\n            // Operating Income (EBITDA)\n            entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n          } else if (\n            value.account_type_number ==\n            OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n          ) {\n            // Earning Before Interest And Tax(EBIT)\n            entry.order = OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.ProfitBeforeTax.number\n          ) {\n            // Profit Before Tax\n            entry.order = OrderNumberPL.ProfitBeforeTax.order;\n          } else if (\n            value.account_type_number == OrderNumberPL.ProfitForThePeriod.number\n          ) {\n            // Profit For The Period\n            entry.order = OrderNumberPL.ProfitForThePeriod.order;\n          } else {\n            entry.order = value.account_type_number;\n          }\n\n          /* Grouping */\n          let groupName =\n            String(value.accountUUID) + String(value.account_type_number);\n          if (entries[groupName]) {\n            entries[groupName][\"s\" + i] = value.balance;\n          } else {\n            entries[groupName] = entry;\n\n            /* Add all segments to columns */\n            for (let j = 0; j < this.selectedSegmentIds.length; j++) {\n              entries[groupName][\"s\" + j] = 0;\n            }\n\n            entries[groupName][\"s\" + i] = value.balance;\n          }\n        });\n      }\n\n      this.statementPLList = Object.values(entries);\n      this.generateColumn();\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    /* Databound */\n    dataBound(e) {\n      let grid = e.sender;\n\n      grid.dataSource.data().forEach((value) => {\n        if (value.account_type_number >= 100) {\n          let row = grid.tbody\n            .find(\"tr[data-uid='\" + value.uid + \"']\")\n            .prev(\".k-grouping-row\");\n          grid.collapseGroup(row);\n        }\n      });\n    },\n    // Generate Columns\n    generateColumn() {\n      let columns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          template: this.accountTmpl,\n          locked: true,\n          width: 300,\n        },\n        {\n          field: this.fieldType,\n          title: \"TYPE\",\n          hidden: true,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n          width: 300,\n        },\n        {\n          field: \"statementGroup\",\n          title: \"STATEMENT GROUP\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n        {\n          field: \"groupNature\",\n          title: \"NATURE\",\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n      ];\n\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      /* Set Column Segments */\n      for (let i = 0; i < this.selectedSegmentIds.length; i++) {\n        /* Segment */\n        let segment = this.segments.find(\n          (item) => item.id === this.selectedSegmentIds[i]\n        );\n\n        /* Column Segment */\n        columns.push({\n          field: \"s\" + i,\n          title: segment.name,\n          format: \"{0:n}\",\n          width: 200,\n          aggregates: \"['sum']\",\n          groupHeaderColumnTemplate:\n            \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n          headerAttributes: headerAttributes,\n          attributes: attributes,\n        });\n      }\n\n      this.columns = columns;\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n      }\n\n      // Generate Group By\n      this.generateGroupBy();\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      /* Aggregate Defintion */\n      let aggregateDefinition = [];\n      for (let i = 0; i < 50; i++) {\n        aggregateDefinition.push({ field: \"s\" + i, aggregate: \"sum\" });\n      }\n      this.aggregateDefinition = aggregateDefinition;\n\n      this.groupDefinition = {\n        field: this.fieldType,\n        aggregates: aggregateDefinition,\n        compare: function (a, b) {\n          if (a.items[0].order === b.items[0].order) {\n            return 0;\n          } else if (a.items[0].order > b.items[0].order) {\n            return 1;\n          } else {\n            return -1;\n          }\n        },\n      };\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: mapState({\n    segments: (state) => state.segments.list,\n    appType() {\n      return dataStore.productType;\n    },\n  }),\n  created() {\n    this.loadData();\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.reports_list {\n  width: 100%;\n  background-color: #fff;\n  padding: 20px 20px 5px;\n}\n.report_filter {\n  background-color: #f8f8f9;\n  padding: 0 20px 5px 20px;\n  position: relative;\n}\n.dv_mt {\n  margin-top: 24px;\n}\n.report_export {\n  position: absolute;\n  top: 15px;\n}\n.report_total {\n  padding: 12.5px;\n  text-align: right;\n  text-transform: uppercase;\n  font-weight: 700;\n  border-top: 1px solid #333;\n  border-bottom: 1px solid #333;\n}\n.custom_expansion\n  .v-expansion-panel-header\n  .v-expansion-panel-header__icon\n  .v-icon {\n  display: none !important;\n}\n.v-expansion-panel {\n  border-bottom: 1px solid #cccccc;\n  border-radius: 0;\n}\n.v-expansion-panel::before {\n  box-shadow: none;\n}\n.v-expansion-panel-header {\n  padding: 15px;\n}\n.v-expansion-panel-content__wrap {\n  padding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n  .dv_mt,\n  .dv_mt8 {\n    margin-top: 0;\n  }\n  .reports_list {\n    margin-top: 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/accounting/reports/statement_profit_lost"}]}