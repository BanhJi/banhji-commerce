{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js??ref--14-0!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PaymentOptionEditor.js","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PaymentOptionEditor.js","mtime":1638499442996},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/babel.config.js","mtime":1638499442885},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGtlbmRvIGZyb20gJ0Bwcm9ncmVzcy9rZW5kby11aSc7IC8vIGltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKCnZhciBhcGlVcmwgPSByZXF1aXJlKCdAL2FwaS9zZXR0aW5nJyk7CgpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKGNvbnRhaW5lciwgb3B0aW9ucykgewogIC8vIERlZmluZSBvcmRlcmluZyBieSBudW1iZXIKICAvLyBsZXQgY29tcGFyZSA9IGZ1bmN0aW9uKGEsIGIpIHsKICAvLyAgICAgaWYgKGEuaXRlbXNbMF0ubnVtYmVyID09PSBiLml0ZW1zWzBdLm51bWJlcikgewogIC8vICAgICAgICAgcmV0dXJuIDA7CiAgLy8gICAgIH0gZWxzZSBpZiAoYS5pdGVtc1swXS5udW1iZXIgPiBiLml0ZW1zWzBdLm51bWJlcikgewogIC8vICAgICAgICAgcmV0dXJuIDE7CiAgLy8gICAgIH0gZWxzZSB7CiAgLy8gICAgICAgICByZXR1cm4gLTE7CiAgLy8gICAgIH0KICAvLyB9OwogIHZhciBtb2RlbCA9IG9wdGlvbnMubW9kZWwgfHwge307CiAgdmFyIHN0ckZpbHRlciA9ICI/b3B0aW9uVHlwZT0iICsgbW9kZWwub3B0aW9uVHlwZSB8fCAnJzsgLy8gRGVmaW5lIGRlZmF1bHQgZ3JvdXAKCiAgdmFyIGdyb3VwID0gewogICAgZmllbGQ6ICJuYW1lIiAvLyBjb21wYXJlOiBjb21wYXJlCgogIH07IC8vIC8vIFVzZSBsb2NhbCBkYXRhCiAgLy8gbGV0IGRzID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgLy8gICAgIGRhdGE6IHN0b3JlLnN0YXRlLmFjY291bnRpbmcuYWNjb3VudHMsCiAgLy8gICAgIGdyb3VwOiBncm91cCwKICAvLyB9KQogIC8vCiAgLy8gRGVmaW5lIERyb3Bkb3dubGlzdAoKICB2YXIgZGRsID0ga2VuZG8ualF1ZXJ5KCc8aW5wdXQgbmFtZT0iJyArIG9wdGlvbnMuZmllbGQgKyAnIi8+JykuYXBwZW5kVG8oY29udGFpbmVyKS5rZW5kb0Ryb3BEb3duTGlzdCh7CiAgICBhdXRvQmluZDogdHJ1ZSwKICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgIGhlaWdodDogNDAwLAogICAgZmlsdGVyOiAic3RhcnRzd2l0aCIsCiAgICBkYXRhVGV4dEZpZWxkOiAiYmFua0FjY291bnROYW1lIiwKICAgIGRhdGFWYWx1ZUZpZWxkOiAibGluZUlkIiwKICAgIG9wdGlvbkxhYmVsOiAiLS0tIFNlbGVjdCAtLS0iLAogICAgZGF0YVNvdXJjZTogcmVtb3RlRFMKICB9KS5kYXRhKCJrZW5kb0Ryb3BEb3duTGlzdCIpOyAvLyBVc2UgcmVtb3RlIGRhdGEKICAvLyBpZighc3RvcmUuc3RhdGUuYWNjb3VudGluZy5hY2NvdW50cy5hY2NvdW50TG9hZGVkKXsKCiAgdmFyIHJlbW90ZURTID0gbmV3IGtlbmRvLmRhdGEuRGF0YVNvdXJjZSh7CiAgICB0cmFuc3BvcnQ6IHsKICAgICAgcmVhZDogewogICAgICAgIHVybDogYXBpVXJsLnBheW1lbnRfb3B0aW9uX2RldGFpbCArIHN0ckZpbHRlcgogICAgICB9LAogICAgICBkYXRhVHlwZTogImpzb24iCiAgICB9LAogICAgc2NoZW1hOiB7CiAgICAgIG1vZGVsOiB7CiAgICAgICAgaWQ6ICJpZCIKICAgICAgfSwKICAgICAgZGF0YTogZnVuY3Rpb24gZGF0YShyZXNwb25zZSkgewogICAgICAgIC8qIEFkZCB0byBzdG9yZSAqLwogICAgICAgIC8vIHN0b3JlLmRpc3BhdGNoKCdhY2NvdW50aW5nL3B1dEFjY291bnRzJywgcmVzcG9uc2UpOwogICAgICAgIHJldHVybiByZXNwb25zZS5kYXRhOwogICAgICB9CiAgICB9LAogICAgZ3JvdXA6IGdyb3VwCiAgfSk7CiAgZGRsLnNldERhdGFTb3VyY2UocmVtb3RlRFMpOyAvLyB9CgogIHJldHVybiBkZGw7Cn0pOw=="},{"version":3,"sources":["/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/scripts/kendo_editor/PaymentOptionEditor.js"],"names":["kendo","apiUrl","require","container","options","model","strFilter","optionType","group","field","ddl","jQuery","appendTo","kendoDropDownList","autoBind","autoWidth","height","filter","dataTextField","dataValueField","optionLabel","dataSource","remoteDS","data","DataSource","transport","read","url","payment_option_detail","dataType","schema","id","response","setDataSource"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AAEA,gBAAe,UAACC,SAAD,EAAYC,OAAZ,EAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAR,IAAiB,EAA/B;AACA,MAAMC,SAAS,GAAG,iBAAiBD,KAAK,CAACE,UAAvB,IAAqC,EAAvD,CAZmC,CAanC;;AACA,MAAIC,KAAK,GAAG;AACRC,IAAAA,KAAK,EAAE,MADC,CAER;;AAFQ,GAAZ,CAdmC,CAmBnC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,GAAG,GAAGV,KAAK,CAACW,MAAN,CAAa,kBAAkBP,OAAO,CAACK,KAA1B,GAAkC,KAA/C,EACLG,QADK,CACIT,SADJ,EAELU,iBAFK,CAEa;AACfC,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,SAAS,EAAE,IAFI;AAGfC,IAAAA,MAAM,EAAE,GAHO;AAIfC,IAAAA,MAAM,EAAE,YAJO;AAKfC,IAAAA,aAAa,EAAE,iBALA;AAMfC,IAAAA,cAAc,EAAE,QAND;AAOfC,IAAAA,WAAW,EAAE,gBAPE;AAQfC,IAAAA,UAAU,EAAEC;AARG,GAFb,EAWHC,IAXG,CAWE,mBAXF,CAAV,CA1BmC,CAsCnC;AACA;;AACA,MAAID,QAAQ,GAAG,IAAItB,KAAK,CAACuB,IAAN,CAAWC,UAAf,CAA0B;AACrCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE;AACFC,QAAAA,GAAG,EAAE1B,MAAM,CAAC2B,qBAAP,GAA+BtB;AADlC,OADC;AAIPuB,MAAAA,QAAQ,EAAE;AAJH,KAD0B;AAOrCC,IAAAA,MAAM,EAAE;AACJzB,MAAAA,KAAK,EAAE;AACH0B,QAAAA,EAAE,EAAE;AADD,OADH;AAIJR,MAAAA,IAAI,EAAE,cAACS,QAAD,EAAc;AAChB;AACA;AAEA,eAAOA,QAAQ,CAACT,IAAhB;AACH;AATG,KAP6B;AAkBrCf,IAAAA,KAAK,EAAEA;AAlB8B,GAA1B,CAAf;AAqBAE,EAAAA,GAAG,CAACuB,aAAJ,CAAkBX,QAAlB,EA7DmC,CA8DnC;;AAEA,SAAOZ,GAAP;AACH,CAjED","sourcesContent":["import kendo from '@progress/kendo-ui';\n// import store from '@/store';\nconst apiUrl = require('@/api/setting');\n\nexport default (container, options) => {\n    // Define ordering by number\n    // let compare = function(a, b) {\n    //     if (a.items[0].number === b.items[0].number) {\n    //         return 0;\n    //     } else if (a.items[0].number > b.items[0].number) {\n    //         return 1;\n    //     } else {\n    //         return -1;\n    //     }\n    // };\n    const model = options.model || {}\n    const strFilter = \"?optionType=\" + model.optionType || '';\n    // Define default group\n    let group = {\n        field: \"name\",\n        // compare: compare\n    };\n\n    // // Use local data\n    // let ds = new kendo.data.DataSource({\n    //     data: store.state.accounting.accounts,\n    //     group: group,\n    // })\n    //\n    // Define Dropdownlist\n    let ddl = kendo.jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n            autoBind: true,\n            autoWidth: true,\n            height: 400,\n            filter: \"startswith\",\n            dataTextField: \"bankAccountName\",\n            dataValueField: \"lineId\",\n            optionLabel: \"--- Select ---\",\n            dataSource: remoteDS\n        }).data(\"kendoDropDownList\");\n    // Use remote data\n    // if(!store.state.accounting.accounts.accountLoaded){\n    let remoteDS = new kendo.data.DataSource({\n        transport: {\n            read: {\n                url: apiUrl.payment_option_detail + strFilter,\n            },\n            dataType: \"json\",\n        },\n        schema: {\n            model: {\n                id: \"id\"\n            },\n            data: (response) => {\n                /* Add to store */\n                // store.dispatch('accounting/putAccounts', response);\n\n                return response.data;\n            },\n        },\n        group: group\n    })\n\n    ddl.setDataSource(remoteDS);\n    // }\n\n    return ddl;\n}"]}]}