{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/micro_edition/revenues/Order.vue?vue&type=template&id=7c4ef35c&scoped=true&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/micro_edition/revenues/Order.vue","mtime":1640595536828},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LWFwcD4KICA8di1jb250YWluZXI+CiAgICA8di1yb3c+CiAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIj4KICAgICAgICA8di1jYXJkCiAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgZGVuc2UKICAgICAgICAgIGNsYXNzPSJwYS00IG5vX2JvcmRlciByb3VuZGVkLXNtIgogICAgICAgICAgY29sb3I9IndoaXRlIgogICAgICAgID4KICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgPHYtY29sCiAgICAgICAgICAgICAgY2xhc3M9InB5LTAgcHItMiIKICAgICAgICAgICAgICBzbT0iMTIiCiAgICAgICAgICAgICAgY29scz0iMTIiCiAgICAgICAgICAgICAgc3R5bGU9InRyYW5zaXRpb246IDAuM3MgZWFzZS1pbiIKICAgICAgICAgICAgICA6Y2xhc3M9InsgaGlkZV9iaWdfYmFyX2NsYXNzOiBpc0hpZGVCYXIgfSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDx2LWZvcm0gcmVmPSJmb3JtIiB2LW1vZGVsPSJ2YWxpZCIgbGF6eS12YWxpZGF0aW9uPgogICAgICAgICAgICAgICAgPHYtY2FyZAogICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICBjbGFzcz0ibm9fYm9yZGVyIGQtZmxleCBqdXN0aWZ5LXNwYWNlLWJldHdlZW4iCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0ibWItMCI+e3sgc2FsZUZvcm1Db250ZW50LnNhbGVPcmRlciB9fTwvaDI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWVuZCI+CiAgICAgICAgICAgICAgICAgICAgPGgzCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6ICNiM2I1YmM7IGZvbnQtc2l6ZTogMjBweCIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LXVwcGVyY2FzZSBhbGxfY2VudGVyIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwb2ludGVyIiBAY2xpY2s9IkhlbHAoJ3NhbGUgb3JkZXInKSI+e3sKICAgICAgICAgICAgICAgICAgICAgICAgJHQoImhlbHAiKQogICAgICAgICAgICAgICAgICAgICAgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsKCkiCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMzMzOyBmb250LXNpemU6IDQwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmbG9hdC1yaWdodCBtdC1uMSIKICAgICAgICAgICAgICAgICAgICAgICAgPmNsb3NlCiAgICAgICAgICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICAgICAgPHYtY2FyZAogICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICBjbGFzcz0icHgtMyBtYi0zIHJvdW5kZWQtNCBub19ib3JkZXIiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJncmF5QmciCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjQiIGNvbHM9IjEyIiBjbGFzcz0icGItMCI+CiAgICAgICAKICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwgbWItMCI+e3sKICAgICAgICAgICAgICAgICAgICAgICAgJHQoImN1c3RvbWVyIikKICAgICAgICAgICAgICAgICAgICAgIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImtlbmRvX2Ryb3Bkb3duX2N1c3RvbSBwYi0yIG10LTEiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZHJvcGRvd25saXN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InYtaW5wdXRfX3Nsb3QiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmRhdGEtaXRlbXM9ImN1c3RvbWVyTGlzdCIKICAgICAgICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJvbkNoYW5nZSIKICAgICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IlsodikgPT4gISF2IHx8ICdDdXN0b21lciBpcyByZXF1aXJlZCddIgogICAgICAgICAgICAgICAgICAgICAgICAgIDp2YWx1ZT0iY3VzdG9tZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmRhdGEtaXRlbS1rZXk9ImRhdGFJdGVtS2V5IgogICAgICAgICAgICAgICAgICAgICAgICAgIDp0ZXh0LWZpZWxkPSJ0ZXh0RmllbGQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmRlZmF1bHQtaXRlbT0iZGVmYXVsdEl0ZW0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpbHRlcmFibGU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgQGZpbHRlcmNoYW5nZT0ib25GaWx0ZXJDaGFuZ2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnJlcXVpcmVkPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgICAgIDp2YWxpZD0idmFsaWRDdXN0b21lciIKICAgICAgICAgICAgICAgICAgICAgICAgICA6ZGlzYWJsZWQ9ImlzRWRpdCIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Ryb3Bkb3dubGlzdD4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCIgc3R5bGU9IiI+e3sgJHQoImRhdGUiKSB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8YXBwLWRhdGVwaWNrZXIKICAgICAgICAgICAgICAgICAgICAgICAgOmluaXRpYWxEYXRlPSJzYWxlT3JkZXIudHJhbnNhY3Rpb25EYXRlIgogICAgICAgICAgICAgICAgICAgICAgICBAb25DaGFuZ2VkPSJvblNhbGVPcmRlckRhdGVDaGFuZ2VkIgogICAgICAgICAgICAgICAgICAgICAgICBAZW1pdERhdGU9InNhbGVPcmRlci50cmFuc2FjdGlvbkRhdGUgPSAkZXZlbnQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSI0IiBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIj57eyAkdCgibnVtYmVyIikgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMSAgZC1mbGV4IG1yLTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2RlX3RleHQgZmxleC0xIHRleHQtYm9sZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgc2FsZU9yZGVyLnRyYW5zYWN0aW9uVHlwZS5hYmJyIH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZsZXgtMiBjdXN0b20tYm9yZGVyIgogICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2FsZU9yZGVyLm51bWJlciIKICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWyh2KSA9PiAhIXYgfHwgJ051bWJlciBpcyByZXF1aXJlZCddIgogICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24KICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj0iYmxhY2siCiAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT0iMzAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImhlaWdodDogNDBweCIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYm9yZGVyX3FyY29kZSBtbC0xIgogICAgICAgICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iZGlzYWJsZWRNZSIKICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImdlbmVyYXRlTnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgID5tZGktcXJjb2RlCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1pY29uPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIG1iLTAiPnt7CiAgICAgICAgICAgICAgICAgICAgICAgICR0KCJwcmljZV9sZXZlbCIpCiAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNhbGVPcmRlci5wcmljZUxldmVsIgogICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9InByaWNlTGV2ZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgICAgICAgICh2KSA9PiAhIXZbJ2lkJ10gfHwgJ1ByaWNlIGxldmVsIGlzIHJlcXVpcmVkJywKICAgICAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0ib25QcmljZUxldmVsQ2hhbmdlIgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS10ZXh0PSJuYW1lIgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4tb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJQcmljZSBMZXZlbCIKICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjQiIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iIG1iLTAiPnt7ICR0KCJjdXJyZW5jeSIpIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtYm9sZCBwdC00IHBiLTIiPnt7IGN1cnJlbmN5Q29kZSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCBtYi0wIj57ewogICAgICAgICAgICAgICAgICAgICAgICAkdCgic2FsZV9jaGFubmVsIikKICAgICAgICAgICAgICAgICAgICAgIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdCBjbGFzcz0ibXQtMSIgb3V0bGluZWQgLz4KICAgICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgICAgICA8di1yb3cgY2xhc3M9InB0LTEgcHgtMyIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmZmYiPgogICAgICAgICAgICAgICAgICA8di1jb2wgc209IjEyIiBjb2xzPSIxMiIgY2xhc3M9InB0LTAgcGItMSBweC0wIj4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICAgICAgcmVmPSJpdGVtTGluZURTIgogICAgICAgICAgICAgICAgICAgICAgOmRhdGE9Iml0ZW1MaW5lcyIKICAgICAgICAgICAgICAgICAgICAgIDpjaGFuZ2U9ImRhdGFTb3VyY2VDaGFuZ2VkIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQKICAgICAgICAgICAgICAgICAgICAgIGlkPSJncmlkSXRlbUxpbmVTYWxlT3JkZXIiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZ3JpZC1mdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIDpkYXRhLXNvdXJjZS1yZWY9IidpdGVtTGluZURTJyIKICAgICAgICAgICAgICAgICAgICAgIDpzb3J0YWJsZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICA6Y29sdW1uLW1lbnU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6c2Nyb2xsYWJsZS12aXJ0dWFsPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6Y29tbWFuZD0iewogICAgICAgICAgICAgICAgICAgICAgICAgIGljb25DbGFzczogJ2staWNvbiBrLWktdHJhc2gnLAogICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcgJywKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogcmVtb3ZlUm93LAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ2J0bi1wbHVzJywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSInJyIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSI2MyIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnbm8uJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iNTMiCiAgICAgICAgICAgICAgICAgICAgICAgIDpjb2x1bW4tbWVudT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0icm93TnVtYmVyVG1wbCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNFREYxRjU7JywKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3RleHQtcHJvZHVjdHMnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IHByb2R1Y3RzJyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidpdGVtJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnaXRlbScpIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iml0ZW1UZW1wbGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0iSXRlbURyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidkZXNjcmlwdGlvbiciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Rlc2NyaXB0aW9uJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9ZGVzY3JpcHRpb24jPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3VvbSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ3VvbScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJVT01UZW1wbGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0iVU9NRHJvcERvd25FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogbGVmdDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7IHN0eWxlOiAndGV4dC1hbGlnbjogbGVmdCcgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSIncXR5JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgncXR5JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDpmb3JtYXQ9Iid7MDpufSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9cXR5Izwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0OycgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSIncHJpY2UnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdwcmljZScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE1MCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJwcmljZUZvcm1hdCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0JyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidhbW91bnQnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdhbW91bnQnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNTAiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9ImFtb3VudEZvcm1hdCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0JyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9Iid2YXRUYXgnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCd2YXQnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0idmF0VGVtcGxhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoaWRkZW49ImFwcFR5cGUgIT0gJ25wbycgPyBmYWxzZSA6IHRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9IlZhdFRheERyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3NlcnZpY2VEYXRlJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGF0ZV9mcm9tJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTYwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGlkZGVuPSIhc2FsZUZvcm1Db250ZW50LnNlcnZpY2VEYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iic8c3Bhbj4jPSBrZW5kby50b1N0cmluZyhuZXcgRGF0ZShzZXJ2aWNlRGF0ZSksIGRhdGVGb3JtYXQpIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJTZXJ2aWNlRGF0ZUVkaXRvciIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidzZXJ2aWNlRGF0ZVRvJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGF0ZV90bycpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE2MCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhpZGRlbj0iIXNhbGVGb3JtQ29udGVudC5zZXJ2aWNlRGF0ZVRvIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iic8c3Bhbj4jPSBrZW5kby50b1N0cmluZyhuZXcgRGF0ZShzZXJ2aWNlRGF0ZVRvKSwgZGF0ZUZvcm1hdCkjPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9IlNlcnZpY2VEYXRlVG9FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInbW9kaWZpZXInIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdtb2RpZmllcicpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhpZGRlbj0iIXNhbGVGb3JtQ29udGVudC5tb2RpZmllciIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSInPHNwYW4+Iz1tb2RpZmllci5uYW1lP21vZGlmaWVyLm5hbWU6YGAjPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9Ik1vZGlmaWVyRHJvcERvd25FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogbGVmdDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7IHN0eWxlOiAndGV4dC1hbGlnbjogbGVmdCcgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInZGlzY291bnRJdGVtJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGlzY291bnRfaXRlbScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhpZGRlbj0iIXNhbGVGb3JtQ29udGVudC5kaXNjb3VudEl0ZW0iCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iZGlzY291bnRJdGVtVGVtcGxhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9IkRpc2NvdW50SXRlbURyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3NwZWNpZmljVGF4JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnc3BlY2lmaWNUYXgnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoaWRkZW49IiFzYWxlRm9ybUNvbnRlbnQuc3BlY2lmaWNUYXgiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9c3BlY2lmaWNUYXguZGVmYXVsdFRheD9zcGVjaWZpY1RheC5kZWZhdWx0VGF4OmBgIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJTcGVjaWZpY1RheERyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ290aGVyVGF4JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnb3RoZXJUYXgnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoaWRkZW49IiFzYWxlRm9ybUNvbnRlbnQub3RoZXJUYXgiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9b3RoZXJUYXguZGVmYXVsdFRheD9vdGhlclRheC5kZWZhdWx0VGF4OmBgIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJPdGhlclRheERyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3B1YmxpY0xpZ2h0aW5nVGF4JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgncGxfdGF4JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGlkZGVuPSIhc2FsZUZvcm1Db250ZW50LnB1YmxpY0xpZ2h0aW5nVGF4IgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iic8c3Bhbj4jPXB1YmxpY0xpZ2h0aW5nVGF4LmRlZmF1bHRUYXg/cHVibGljTGlnaHRpbmdUYXguZGVmYXVsdFRheDpgYCM8L3NwYW4+JyIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0iUHVibGljTGlnaHRpbmdUYXhEcm9wRG93bkVkaXRvciIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0JyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidzYWxlVW5pdCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ3NhbGVfdW5pdCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhpZGRlbj0iIXNhbGVGb3JtQ29udGVudC5zYWxlVW5pdCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJzYWxlVW5pdFRlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJTYWxlVW5pdERyb3BEb3duRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2VtcGxveWVlJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZW1wbG95ZWUnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoaWRkZW49IiFzYWxlRm9ybUNvbnRlbnQuZW1wbG95ZWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iZW1wSW1wbCIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0iRW1wbG95ZWVEcm9wRG93bkVkaXRvciIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0JyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQ+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIiBjbGFzcz0icHQtMCBwbC0wIj4KICAgICAgICAgICAgICAgICAgICA8di1idG4gY2xhc3M9ImZsb2F0LWxlZnQgYnRuX3BsdXMiIEBjbGljaz0iYWRkUm93Ij4KICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24gc2l6ZT0iIiBjbGFzcz0ibWEtMSI+bWRpLXBsdXM8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8di1jb2wgc209IjEyIiBjb2xzPSIxMiIgY2xhc3M9InB5LTAiPgogICAgICAgICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNsYXNzPSJwdC0wIiBzbT0iNSIgY29scz0iNiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBjbGFzcz0icHQtMCIgc209IjciIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8di1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmRlZmF1bHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHIgdi1pZj0iYXBwVHlwZSAhPSAnbnBvJyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtbGVmdCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoInN1YnRvdGFsIikgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtY2VudGVyIj46PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IG51bWJlckZvcm1hdChzYWxlT3JkZXIuc3ViVG90YWwpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHYtaWY9ImFwcFR5cGUgIT0gJ25wbyciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxlZnQgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJnZW5lcmFsX2Rpc2NvdW50IikgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtY2VudGVyIj46PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICh7ewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlckZvcm1hdChzYWxlT3JkZXIuZGlzY291bnRUb3RhbCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIHN0eWxlPSJiYWNrZ3JvdW5kOiAjZjhmOGY5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1sZWZ0IHRleHQtdXBwZXJjYXNlIHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyAkdCgidG90YWwiKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1jZW50ZXIiPjo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByaW1hcnktLXRleHQgdGV4dC1ib2xkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0idG90YWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IG51bWJlckZvcm1hdChzYWxlT3JkZXIudG90YWwpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgPHYtZGl2aWRlciAvPgogICAgICAgICAgICAgICAgPHYtY2FyZCBvdXRsaW5lZCBkZW5zZSBjbGFzcz0ibm9fYm9yZGVyIGZ1bmN0aW9uX2Zvb3RlciI+CiAgICAgICAgICAgICAgICAgIDx2LWFsZXJ0IHR5cGU9Indhcm5pbmciIHYtbW9kZWw9ImFsZXJ0IiBkaXNtaXNzaWJsZT4KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWh0bWw9ImVycm9yTWVzc2FnZSIgLz4KICAgICAgICAgICAgICAgICAgPC92LWFsZXJ0PgogICAgICAgICAgICAgICAgICA8di1tZW51PgogICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uIH0iPgogICAgICAgICAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtci0yIGZsb2F0LWxlZnQgc2VsZWN0X3RlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICB2LW9uPSJvbiIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoInNlbGVjdF90ZW1wbGF0ZSIpIH19CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24gc2l6ZT0iIiBjbGFzcz0ibWEtMSI+ZXhwYW5kX21vcmU8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8di1saXN0PgogICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtCiAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIGZvcm1BUiIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZT57eyBpdGVtLm5hbWUgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdD4KICAgICAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LWNhcGl0YWxpemUgYmxhY2stLXRleHQgZmxvYXQtbGVmdCIKICAgICAgICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIgogICAgICAgICAgICAgICAgICAgID57eyAkdCgiY2FuY2VsIikgfX0KICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgPHYtbWVudT4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiB9Ij4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biBjbGFzcz0ibWwtMiBmbG9hdC1yaWdodCB0ZXh0LWNhcGl0YWxpemUgIHdoaXRlJiM0NTsmIzQ1O3RleHQiLS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiIHYtb249Im9uIj4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoJ3NhdmVfb3B0aW9uJykgfX0tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvbiBzaXplPSIiIGNsYXNzPSJtYS0xIj5leHBhbmRfbW9yZTwvdi1pY29uPi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3Qgcm91bmRlZD4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1ncm91cD4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50Pi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIHYtaWY9IiFpc0VkaXQiIEBjbGljaz0ic2F2ZU5ldyI+LS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCdzYXZlX25ldycpIH19LS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tY29udGVudD4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50Pi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIEBjbGljaz0ic2F2ZUNsb3NlIj57ey0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR0KCdzYXZlX2Nsb3NlJyktLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0tLT4KICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tdGl0bGU+LS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50Pi0tPgogICAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPi0tPgoKICAgICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0tZ3JvdXA+LS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3Q+LS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gICAgICAgICAgICAgICAgICAgIDwvdi1tZW51Pi0tPgogICAgICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InNhdmVDbG9zZSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmxvYXQtcmlnaHQgdGV4dC1jYXBpdGFsaXplIHdoaXRlLS10ZXh0IgogICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iYnRuRGlzYWJsZWQiCiAgICAgICAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICB7eyAkdCgic2F2ZV9jbG9zZSIpIH19CiAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICAgIGNvbG9yPSJzZWNvbmRhcnkiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1yaWdodDogMTBweCAhaW1wb3J0YW50IgogICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0iYnRuRGlzYWJsZWQiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9IndoaXRlLS10ZXh0IGZsb2F0LXJpZ2h0IHRleHQtY2FwaXRhbGl6ZSIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InNhdmVOZXciCiAgICAgICAgICAgICAgICAgICAgOmhpZGRlbj0iaGlkZGVuQnV0dG9uIgogICAgICAgICAgICAgICAgICAgID57eyAkdCgic2F2ZV9uZXciKSB9fQogICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgICAgPC92LWZvcm0+CiAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICA8L3Ytcm93PgogICAgICAgIDwvdi1jYXJkPgogICAgICA8L3YtY29sPgogICAgPC92LXJvdz4KICAgIDxMb2FkaW5nTWUKICAgICAgOmlzTG9hZGluZz0ic2hvd0xvYWRpbmciCiAgICAgIDpmdWxsUGFnZT0iZmFsc2UiCiAgICAgIDpteUxvYWRpbmc9InRydWUiCiAgICAgIHR5cGU9ImxvYWRpbmciCiAgICAgIDphbGVydE1lc3NhZ2U9ImxvYWRpbmdBbGVydCIKICAgICAgOmNvbG9yPSJsb2FkaW5nQ29sb3JBbGVydCIKICAgICAgOmFsZXJ0VGV4dD0ibG9hZGluZ1RleHRBbGVydCIKICAgIC8+CiAgICA8di1kaWFsb2cgdi1tb2RlbD0iZGlhbG9nQ2F0YWxvZyIgbWF4LXdpZHRoPSI4NTBweCI+CiAgICAgIDx2LWNhcmQ+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWxfaGVhZGVyIj4KICAgICAgICAgIDx2LWNhcmQtdGl0bGU+e3sgJHQoImNhdGFsb2ciKSB9fTwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgPHYtaWNvbiBjbGFzcz0iYnRuX2Nsb3NlIiBAY2xpY2s9ImRpYWxvZ0NhdGFsb2cgPSBmYWxzZSIKICAgICAgICAgICAgPmNsb3NlCiAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9Im1vZGFsX3RleHRfY29uZW50Ij4KICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJwYi0wIj4KICAgICAgICAgICAgICA8di1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICByZWY9ImNhdGFsb2dEYXRhc291cmNlIgogICAgICAgICAgICAgICAgICA6ZGF0YT0iY2F0YWxvZ3MiCiAgICAgICAgICAgICAgICAgIDpzY2hlbWE9ImdyaWRTY2hlbWEiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQKICAgICAgICAgICAgICAgICAgaWQ9ImdyaWRDYXRhbG9nIgogICAgICAgICAgICAgICAgICBjbGFzcz0iZ3JpZC1mdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgOmRhdGEtc291cmNlLXJlZj0iJ2NhdGFsb2dEYXRhc291cmNlJyIKICAgICAgICAgICAgICAgICAgOnN0eWxlPSJ7IHdpZHRoOiAnMTAwJScgfSIKICAgICAgICAgICAgICAgICAgOm5vUmVjb3Jkcz0idHJ1ZSIKICAgICAgICAgICAgICAgICAgOnBhZ2VhYmxlLW51bWVyaWM9ImZhbHNlIgogICAgICAgICAgICAgICAgICA6cGFnZWFibGUtcHJldmlvdXMtbmV4dD0iZmFsc2UiCiAgICAgICAgICAgICAgICAgIDpwYWdlYWJsZS1tZXNzYWdlcy1kaXNwbGF5PSInU2hvd2luZyB7Mn0gZGF0YSBpdGVtcyciCiAgICAgICAgICAgICAgICAgIDpzY3JvbGxhYmxlLXZpcnR1YWw9InRydWUiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2ltYWdlcyciCiAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnaW1hZ2UnKSIKICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjUwIgogICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0ibG9hZEltYWdlIgogICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7IHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInbnVtYmVyJyIKICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdudW1iZXInKSIKICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjcwIgogICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9bnVtYmVyIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgIDpncm91cEhlYWRlckNvbHVtblRlbXBsYXRlPSInIz12YWx1ZSMnIgogICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7IHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInbmFtZSciCiAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnbmFtZScpIgogICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7IGNsYXNzOiAndGJfbmFtZV90ZCcgfSIKICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iic8c3Bhbj4jPW5hbWUjPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9Insgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JyB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidkZXNjcmlwdGlvbiciCiAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGVzY3JpcHRpb24nKSIKICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjEwMCIKICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9Iic8c3Bhbj4jPWRlc2NyaXB0aW9uIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7IHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScgfSIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInbm9PZlByb2R1Y3QnIgogICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ3Byb2R1Y3RzJykiCiAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSInPHNwYW4+Iz1ub09mUHJvZHVjdCM8L3NwYW4+JyIKICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjUwIgogICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJyciCiAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnYWN0aW9uJykiCiAgICAgICAgICAgICAgICAgICAgOndpZHRoPSI2MCIKICAgICAgICAgICAgICAgICAgICA6Y29tbWFuZD0iW3sgdGV4dDogJHQoJ2FkZCcpLCBjbGljazogYWRkQ2F0YWxvZyB9XSIKICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiBsZWZ0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkPgogICAgICAgICAgICAgIDwvdi1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICA8L3Ytcm93PgogICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgIDwvdi1jYXJkPgogICAgPC92LWRpYWxvZz4KICA8L3YtY29udGFpbmVyPgo8L3YtYXBwPgo="},null]}