{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/Product.vue?vue&type=style&index=0&id=1a093f22&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/Product.vue","mtime":1643016567573},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZ1bmN0aW9uX2NvbnRlbnQgewogICAgcGFkZGluZzogMCAyNXB4IDI1cHg7CiAgICBib3JkZXItYm90dG9tOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgpAbWVkaWEgKG1pbi13aWR0aDogMTI2NHB4KSB7CiAgICAuY29udGFpbmVyIHsKICAgICAgICAvKiBtYXgtd2lkdGg6IDExODVweDsgKi8KICAgICAgICBtYXgtd2lkdGg6IDEwODBweCAhaW1wb3J0YW50OwogICAgfQp9CgouZ3JheUJnIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLm1iLTYgewogICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsKICAgIH0KfQoKLnNlY3Rpb24yIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkNmQ3ZDg7Cn0KCi5ib3JkZXJfZ3JleSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDZkN2Q4Owp9CgouYXR0YWNobWVudF90YWJsZSB7CiAgICB3aWR0aDogMTAwJTsKfQoKcCB7CiAgICBmb250LXNpemU6IDE1cHg7CiAgICBmb250LWZhbWlseTogJ05pcmFkZWktTGlnaHQnICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGJvZHkKPiB0cjpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpOm5vdCgudi1kYXRhLXRhYmxlX19lbXB0eS13cmFwcGVyKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Product.vue"],"names":[],"mappingsslCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Product.vue","sourceRoot":"src/views/products_services","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"product\") }}</h2>\n                                <v-icon\n                                    @click=\"cancel()\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px\"\n                                    class=\"float-right\">close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"px-4 no_border\" color=\"grayBg\">\n                                <v-row>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label mb-0\">{{$t(\"product_category\")}}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            :placeholder=\"$t('category')\"\n                                            outlined\n                                            tage=\"Product Category\"\n                                            v-model=\"mCategory\"\n                                            :items=\"categories\"\n                                            item-value=\"id\"\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            @change=\"onCategoryChanged\"\n                                            return-object\n                                            :rules=\"[(v) => !!v['id'] || 'is required']\"\n                                            required/>\n                                        <label class=\"label mb-0\">{{ $t(\"product_group\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            :placeholder=\"$t('select_group')\"\n                                            outlined\n                                            tage=\"Product Group\"\n                                            v-model=\"mGroup\"\n                                            :items=\"group\"\n                                            @change=\"skuGenerator\"\n                                            item-value=\"id\"\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            return-object\n                                            clearable\n                                            required/>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pl-0\">\n                                        <label class=\"label mb-0\">{{ $t(\"sub_group\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            :placeholder=\"$t('select_sub_group')\"\n                                            outlined\n                                            tage=\"Sub Group\"\n                                            v-model=\"mSubGroup\"\n                                            @change=\"skuGenerator\"\n                                            :items=\"subGroup\"\n                                            item-value=\"id\"\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            clearable\n                                            return-object\n                                            required/>\n                                        <label class=\"label mb-0\">{{ $t(\"product_name\") }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            :placeholder=\"$t('name')\"\n                                            outlined\n                                            v-model=\"product.name\"\n                                            :rules=\"[(v) => !!v || 'is required']\"\n                                            required/>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"my_checkbox\">\n                                        <label class=\"label mb-0 mt-1 mx-1\">{{ $t(\"sku\") }}</label>\n                                        <div class=\"d-flex\">\n                                            <v-text-field\n                                                class=\"mt-1 flex-1\"\n                                                v-model=\"product.sku\"\n                                                outlined\n                                                :rules=\"[(v) => !!v || 'is required']\"\n                                                required/>\n                                            <v-icon\n                                                color=\"black\"\n                                                size=\"30\"\n                                                @click=\"skuGenerator\"\n                                                class=\"border_qrcode ml-2 mt-1\">mdi-qrcode\n                                            </v-icon>\n                                        </div>\n                                        <h2 class=\"font_12 mt-0\">{{ $t(\"how_this_product\") }}</h2>\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"my_radio pl-0 d-flex py-0\">\n                                                <div>\n                                                    <input\n                                                        id=\"radio1\"\n                                                        name=\"radio\"\n                                                        type=\"radio\"\n                                                        value=\"1\"\n                                                        v-model=\"product.batchOrSerial\"/>\n                                                    <label for=\"radio1\">{{ $t(\"batch\") }}</label>\n                                                </div>\n                                                <div>\n                                                    <input\n                                                        id=\"radio2\"\n                                                        name=\"radio\"\n                                                        type=\"radio\"\n                                                        value=\"2\"\n                                                        v-model=\"product.batchOrSerial\"/>\n                                                    <label for=\"radio2\">{{ $t(\"serial\") }}</label>\n                                                </div>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id=\"useAsFavorite\"\n                                                    v-model=\"product.reUsed\"/>\n                                                <label for=\"useAsFavorite\">{{$t(\"not_reuse\")}}</label>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <h2 class=\"font_18 mb-0 mt-2\">\n                                {{ $t(\"transaction_description\") }}\n                            </h2>\n                            <v-card outlined dense class=\"px-4 mb-4 rounded-0\" height=\"188px\">\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"12\">\n                                        <h2 class=\"font_16 mb-0\">\n                                            {{ $t(\"purchased_description\") }}\n                                        </h2>\n                                        <p class=\"grayBg---text mb-2\">\n                                            {{ $t(\"purchase_description_detail\") }}\n                                        </p>\n                                        <v-textarea\n                                            v-model=\"product.saleDescription\"\n                                            outlined\n                                            no-resize\n                                            height=\"100px\"\n                                            rows=\"3\"/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\">\n                                        <h2 class=\"font_16 mb-0\">{{ $t(\"sale_description\") }}</h2>\n                                        <p class=\"grayBg---text mb-2\">\n                                            {{ $t(\"sale_description_detail\") }}\n                                        </p>\n                                        <v-textarea\n                                            v-model=\"product.purchaseDescription\"\n                                            outlined\n                                            no-resize\n                                            height=\"100px\"\n                                            rows=\"3\"/>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <h2 class=\"font_18 mb-0 mt-0\">\n                                {{ $t(\"product_info\") }}\n                            </h2>\n                            <v-card outlined dense class=\"px-4 rounded-0\">\n                                <v-row>\n                                    <v-col cols=\"12\">\n                                        <p class=\"grayBg---text mb-0\">\n                                            {{ $t(\"def_info_product\") }}\n                                        </p>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                <label>{{ $t(\"uom\") }}</label>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                <v-select\n                                                    :placeholder=\"$t('uom')\"\n                                                    outlined\n                                                    tage=\"UOM\"\n                                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                                    v-model=\"mUOM\"\n                                                    :items=\"uom\"\n                                                    item-value=\"id\"\n                                                    :item-text=\"(item) => `${item.name}`\"\n                                                    return-object\n                                                    required/>\n                                            </v-col>\n                                        </v-row>\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                <label>{{ $t(\"price_level\") }}</label>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                <v-select\n                                                    :placeholder=\"$t('price_level')\"\n                                                    outlined\n                                                    tage=\"price level\"\n                                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                                    v-model=\"product.priceLevel\"\n                                                    :items=\"priceLevel\"\n                                                    item-value=\"id\"\n                                                    item-text=\"name\"\n                                                    return-object\n                                                    required/>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                <label>{{ $t(\"selling_price\") }}</label>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                <v-text-field\n                                                    outlined\n                                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                                    type=\"number\"\n                                                    v-model=\"product.price\"\n                                                    required/>\n                                            </v-col>\n                                        </v-row>\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                <label>{{ $t(\"warehouse\") }}</label>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                <v-select\n                                                    :placeholder=\"$t('default_warehouse')\"\n                                                    outlined\n                                                    tage=\"Default Warehouse\"\n                                                    v-model=\"mWareHouse\"\n                                                    :items=\"wareHouses\"\n                                                    item-value=\"id\"\n                                                    :item-text=\"(item) => `${item.name}`\"\n                                                    return-object\n                                                    clearable\n                                                    required/>\n                                            </v-col>\n                                        </v-row>\n                                        <!-- <v-row>\n                                                              <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                                <label>{{ $t('initial_cost_per_unit') }}</label>\n                                                              </v-col>\n                                                              <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                                <v-text-field outlined\n                                                                              :rules=\"[v => !!v || 'Number is required']\"\n                                                                              v-model=\"product.cost\"\n                                                                              type=\"number\"\n                                                                              required/>\n                                                              </v-col>\n                                                            </v-row> -->\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                <label>{{ $t(\"recorder_qty\") }}</label>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\" class=\"pl-0 py-0\">\n                                                <v-text-field\n                                                    outlined\n                                                    v-model=\"product.reOrderQTY\"\n                                                    type=\"number\"/>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"no_border my-1\">\n                                <v-row>\n                                    <v-col sm=\"7\" cols=\"12\">\n                                        <v-card\n                                            outlined\n                                            dense\n                                            class=\"px-4 rounded-0\"\n                                            height=\"428px\">\n                                            <v-row>\n                                                <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                                    <h2 class=\"font_18 mb-0\">{{ $t(\"account\") }}</h2>\n                                                    <p class=\"mb-0 mb-1 color_grey\">\n                                                        {{ $t(\"account_tax_prod_desc\") }}\n                                                    </p>\n                                                </v-col>\n                                                <v-col sm=\"6\" cols=\"12\">\n                                                    <label class=\"label\">{{ $t(\"inventory\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        :placeholder=\"$t('select_inventory')\"\n                                                        tage=\"Inventory\"\n                                                        :loading=\"accLoading\"\n                                                        v-model=\"mAccInventory\"\n                                                        :items=\"accInventory\"\n                                                        item-value=\"id\"\n                                                        :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                        :rules=\"[(v) => !!v['id'] || 'Number is required']\"\n                                                        return-object\n                                                        outlined/>\n                                                    <label class=\"label\">{{$t(\"cost_of_goods_sold\")}}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        :placeholder=\"$t('select_goods')\"\n                                                        tage=\"Cost of Goods Sold\"\n                                                        v-model=\"mAccCostOfGoodSold\"\n                                                        :loading=\"accLoading\"\n                                                        :items=\"accCostOfGoodSold\"\n                                                        item-value=\"id\"\n                                                        :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                        :rules=\"[(v) => !!v['id'] || 'Number is required']\"\n                                                        return-object\n                                                        outlined/>\n                                                    <label class=\"label\">{{ $t(\"revenue\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        :placeholder=\"$t('revenue')\"\n                                                        tage=\"Revenue\"\n                                                        v-model=\"incomeAcc\"\n                                                        :loading=\"accLoading\"\n                                                        :items=\"accRevenue\"\n                                                        item-value=\"id\"\n                                                        :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                        :rules=\"[(v) => !!v['id'] || 'Number is required']\"\n                                                        return-object\n                                                        outlined/>\n                                                    <!--                          <label class=\"label\">{{ $t(\"default_tax\") }}</label>-->\n                                                    <!--                          <v-select-->\n                                                    <!--                            class=\"mt-1\"-->\n                                                    <!--                            tage=\"Default Tax\"-->\n                                                    <!--                            v-model=\"mDefaultTax\"-->\n                                                    <!--                            :items=\"vat\"-->\n                                                    <!--                            item-value=\"id\"-->\n                                                    <!--                            item-text=\"defaultTax\"-->\n                                                    <!--                            return-object-->\n                                                    <!--                            outlined-->\n                                                    <!--                          />-->\n                                                </v-col>\n                                                <!--                        <v-col sm=\"6\" cols=\"12\">-->\n                                                <!--                          <label class=\"label\">{{ $t(\"sale_tax\") }}</label>-->\n                                                <!--                          <v-select-->\n                                                <!--                            class=\"mt-1\"-->\n                                                <!--                            tage=\"Default Tax\"-->\n                                                <!--                            v-model=\"mPurchaseTax\"-->\n                                                <!--                            :items=\"purchaseTax\"-->\n                                                <!--                            item-value=\"id\"-->\n                                                <!--                            item-text=\"defaultTax\"-->\n                                                <!--                            return-object-->\n                                                <!--                            outlined-->\n                                                <!--                          />-->\n                                                <!--                          <label class=\"label\">{{ $t(\"purchase_tax\") }}</label>-->\n                                                <!--                          <v-select-->\n                                                <!--                            class=\"mt-1\"-->\n                                                <!--                            tage=\"Default Tax\"-->\n                                                <!--                            v-model=\"mPurchaseTax\"-->\n                                                <!--                            :items=\"purchaseTax\"-->\n                                                <!--                            item-value=\"id\"-->\n                                                <!--                            item-text=\"defaultTax\"-->\n                                                <!--                            return-object-->\n                                                <!--                            outlined-->\n                                                <!--                          />-->\n                                                <!--                          <label class=\"label\">{{ $t(\"specific_tax\") }}</label>-->\n                                                <!--                          <v-select-->\n                                                <!--                            class=\"mt-1\"-->\n                                                <!--                            tage=\"Special Tax\"-->\n                                                <!--                            v-model=\"mSpecificTax\"-->\n                                                <!--                            :items=\"specificTax\"-->\n                                                <!--                            item-value=\"id\"-->\n                                                <!--                            item-text=\"defaultTax\"-->\n                                                <!--                            return-object-->\n                                                <!--                            outlined-->\n                                                <!--                          />-->\n                                                <!--                          <label class=\"label\">{{ $t(\"other_tax\") }}</label>-->\n                                                <!--                          <v-select-->\n                                                <!--                            class=\"mt-1\"-->\n                                                <!--                            tage=\"Special Tax\"-->\n                                                <!--                            v-model=\"mOtherTax\"-->\n                                                <!--                            :items=\"otherTax\"-->\n                                                <!--                            item-value=\"id\"-->\n                                                <!--                            item-text=\"defaultTax\"-->\n                                                <!--                            return-object-->\n                                                <!--                            outlined-->\n                                                <!--                          />-->\n                                                <!--                        </v-col>-->\n                                            </v-row>\n                                        </v-card>\n                                    </v-col>\n                                    <v-col sm=\"5\" cols=\"12\" class=\"pl-1\">\n                                        <v-card outlined dense class=\"px-4 rounded-0\">\n                                            <v-row>\n                                                <v-col cols=\"12\" sm=\"12\">\n                                                    <h2 class=\"font_18 mb-0\">\n                                                        {{ $t(\"product_variants\") }}\n                                                    </h2>\n                                                    <p class=\"mb-0 color_grey\">\n                                                        {{ $t(\"add_funct_prod_variants_desc\") }}\n                                                    </p>\n                                                </v-col>\n                                                <v-col sm=\"12\" cols=\"12\" class=\"pt-2\">\n                                                    <kendo-datasource ref=\"dataSource\" :data=\"varLists\"/>\n                                                    <kendo-grid\n                                                        id=\"grid\"\n                                                        class=\"grid-function\"\n                                                        :data-source-ref=\"'dataSource'\"\n                                                        :sortable=\"false\"\n                                                        :filterable=\"false\"\n                                                        :column-menu=\"true\"\n                                                        :navigatable=\"true\"\n                                                        :editable=\"true\"\n                                                        :scrollable-virtual=\"true\">\n                                                        <kendo-grid-column\n                                                            :title=\"$t('no.')\"\n                                                            :template=\"rowNumberTmpl\"\n                                                            :width=\"45\"\n                                                            :column-menu=\"false\"\n                                                            :headerAttributes=\"{\n                                                                style: 'background-color: #EDF1F5;',\n                                                                class: 'text-center'}\"\n                                                            :attributes=\"{ style: 'text-align: center' }\"/>\n                                                        <kendo-grid-column\n                                                            :field=\"'variant'\"\n                                                            :title=\"$t('variant')\"\n                                                            :width=\"190\"\n                                                            :template=\"'<span>#=variant.name#</span>'\"\n                                                            :editor=\"attributeDropDownEditor\"\n                                                            :headerAttributes=\"{\n                                                                style: 'background-color: #EDF1F5'}\"/>\n                                                        <kendo-grid-column\n                                                            :command=\"{\n                                                                iconClass: 'k-icon k-i-trash',\n                                                                text: 'Delete',\n                                                                click: removeRow,\n                                                                class: 'btn-plus'}\"\n                                                            :title=\"$t('action')\"\n                                                            :width=\"100\"\n                                                            :headerAttributes=\"{\n                                                                style: 'text-align: right; background-color: #EDF1F5'}\"\n                                                        />\n                                                    </kendo-grid>\n                                                    <v-btn\n                                                        color=\"primary\"\n                                                        class=\"float-left rounded-4 ml-0 btn_plus white--text mt-3\"\n                                                        @click=\"addRow\">\n                                                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                    </v-btn>\n                                                </v-col>\n                                            </v-row>\n                                        </v-card>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn\n                                    color=\"black\"\n                                    @click=\"cancel\"\n                                    outlined\n                                    class=\"text-capitalize black--text float-left\">{{ $t(\"cancel\") }}\n                                </v-btn>\n                                <!--                                <v-menu>-->\n                                <!--                                    <template v-slot:activator=\"{ on }\">-->\n                                <!--                                        <v-btn-->\n                                <!--                                            class=\"ml-2 float-right black&#45;&#45;text text-capitalize\"-->\n                                <!--                                            v-on=\"on\"-->\n                                <!--                                        >-->\n                                <!--                                            {{ $t(\"save_option\") }}-->\n                                <!--                                            <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>-->\n                                <!--                                        </v-btn>-->\n                                <!--                                    </template>-->\n                                <!--                                </v-menu>-->\n                                <v-btn\n                                    class=\"float-right white--text\"\n                                    color=\"primary\"\n                                    @click=\"onSaveClose\">{{ $t(\"save_close\") }}\n                                </v-btn>\n                                <LoadingMe\n                                    :isLoading=\"showLoading\"\n                                    :fullPage=\"false\"\n                                    type=\"loading\"\n                                    :myLoading=\"true\"/>\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport ProductModel from \"@/scripts/model/Products\";\nimport kendo from \"@progress/kendo-ui\";\nimport VariantModel from \"@/scripts/model/Variants\";\n\nconst $ = kendo.jQuery;\n\nconst accountHandler = require(\"@/scripts/handler/accounting/account\");\nconst categoryHandler = require(\"@/scripts/categoryHandler\");\nconst groupHandler = require(\"@/scripts/groupHandler\");\nconst subGroupHandler = require(\"@/scripts/subGroupHandler\");\nconst uomHandler = require(\"@/scripts/uomHandler\");\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\");\nconst settingHandler = require(\"@/scripts/settingHandler\");\nconst productHandler = require(\"@/scripts/productHandler\");\nconst variantHandler = require(\"@/scripts/variantTypeHandler\");\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\");\n// const attributeHandler = require(\"@/scripts/attributeHandler\")\nconst variantModel = new VariantModel({});\n\nlet productModel = new ProductModel({});\nexport default {\n    name: \"AddProduct\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n    },\n    data: function () {\n        return {\n            showLoading: true,\n            accLoading: false,\n            valid: \"\",\n            incomeAcc: \"\",\n            mAccInventory: \"\",\n            mCategory: \"\",\n            mGroup: \"\",\n            mFormTemplate: \"\",\n            formTemplate: [\n                {\n                    id: \"ftp-c35cbe46-1c5e-11eb-adc1-0242ac120002\",\n                    name: \"Form A\",\n                },\n                {\n                    id: \"ftp-c35cc062-1c5e-11eb-adc1-0242ac120002\",\n                    name: \"Form B\",\n                },\n                {\n                    id: \"ftp-c35cc2ec-1c5e-11eb-adc1-0242ac120002\",\n                    name: \"Form C\",\n                },\n            ],\n            mAccCostOfGoodSold: \"\",\n            accRevenue: [],\n            accInventory: [],\n            accCostOfGoodSold: [],\n            categories: [],\n            groups: [],\n            group: [],\n            subGroup: [],\n            uom: [],\n            tax: [],\n            specificTax: [],\n            vat: [],\n            mSubGroup: {},\n            subGroups: [],\n            wareHouses: [],\n            mUOM: {},\n            mWareHouse: {},\n            mSpecificTax: {},\n            mOtherTax: {},\n            otherTax: [],\n            mDefaultTax: {},\n            purchaseTax: [],\n            mPurchaseTax: {},\n            mSerialOrBatch: 0,\n            variantTypes: [],\n            variant: variantModel,\n            varLists: [],\n            product: productModel,\n            productVariant: {},\n            variantId: \"\",\n            priceLevel: [],\n        };\n    },\n    methods: {\n        async loadPriceLevel() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    priceLevelHandler.get().then((res) => {\n                        const data = res || [];\n                        this.priceLevel = data.filter((n) => n.type.name === \"Standard\");\n                        if (this.priceLevel.length > 0) {\n                            this.product.priceLevel = this.priceLevel[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        loadCategoryAccountAndTax() {\n            // this.mOtherTax = this.mCategory.tax.hasOwnProperty(\"otherTax\")\n            //     ? this.mCategory.tax.otherTax\n            //     : {};\n            // this.mSpecificTax = this.mCategory.tax.hasOwnProperty(\"specificTax\")\n            //     ? this.mCategory.tax.specificTax\n            //     : {};\n            // this.mDefaultTax = this.mCategory.tax.hasOwnProperty(\"defaultTax\")\n            //     ? this.mCategory.tax.defaultTax\n            //     : {};\n            // this.mPurchaseTax = this.mCategory.tax.hasOwnProperty(\"purchaseTax\")\n            //     ? this.mCategory.tax.purchaseTax\n            //     : {};\n            this.incomeAcc = this.mCategory.account.hasOwnProperty(\"incomeAcc\")\n                ? this.mCategory.account.incomeAcc\n                : {};\n            this.mAccInventory = this.mCategory.account.hasOwnProperty(\"inventoryAcc\")\n                ? this.mCategory.account.inventoryAcc\n                : {};\n            this.mAccCostOfGoodSold = this.mCategory.account.hasOwnProperty(\n                \"costOfGoodsSoldAcc\"\n            )\n                ? this.mCategory.account.costOfGoodsSoldAcc\n                : {};\n        },\n        async initData() {\n            // window.console.log('me', this.$route.params.id)\n            if (this.$route.params.id !== undefined) {\n                await this.loadSingleProduct();\n            } else {\n                let ds = this.$refs.dataSource.kendoWidget();\n                ds.data([]);\n                this.addRow();\n            }\n        },\n        addRow() {\n            let ds = this.$refs.dataSource.kendoWidget(),\n                total = ds.total();\n            ds.insert(total, {\n                variant: this.variant,\n            });\n        },\n        // Row Number Template\n        rowNumberTmpl(dataItem) {\n            var ds = this.$refs.dataSource.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        // Grid Custom Editor\n        attributeDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=code# - #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.variantTypes,\n                    }),\n                });\n        },\n        // Remove Row\n        removeRow(e) {\n            e.preventDefault();\n\n            var grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        onChange() {\n        },\n        async onEditClick(value) {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.product = value;\n                }, 10);\n            });\n        },\n        onNewClick() {\n            this.product.id = \"\";\n            this.clear();\n        },\n        close(data) {\n            window.history.go(-1);\n            window.console.log(data, \"--data\");\n            // this.$router.push({\n            //   name: 'Products', params: {\n            //     data: data\n            //   }\n            // })\n        },\n        clear() {\n            this.product = {};\n        },\n        async onSaveClose() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate();\n                return;\n            }\n            let variants = [];\n            let ds = this.$refs.dataSource.kendoWidget();\n            let dataValidate = 0;\n            ds.data().forEach((value, index) => {\n                // window.console.log(value)\n                if (\n                    value.variant == undefined ||\n                    value.variant.id == undefined ||\n                    value.variant.id == null ||\n                    value.variant.id == \"\"\n                ) {\n                    this.$snotify.error(\"Please check Variants on row \" + (index + 1));\n                } else {\n                    dataValidate += 1;\n                }\n            });\n            let variantAR = ds.data();\n            if (variantAR.length == dataValidate) {\n                const variant = ds.data();\n                variant.forEach((i) => {\n                    variants.push({\n                        variant: i.variant,\n                        uid: i.uid,\n                    });\n                });\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        // if (this.product.id === '' || this.product.id === undefined) {\n                        let data = {\n                            id:                     this.$route.params.id ? this.$route.params.id : \"\",\n                            name:                   this.product.name,\n                            sku:                    this.product.sku,\n                            saleDescription:        this.product.saleDescription,\n                            purchaseDescription:    this.product.purchaseDescription,\n                            price:                  this.product.price,\n                            cost:                   this.product.cost,\n                            reOrderQTY:             this.product.reOrderQTY,\n                            category:               this.mCategory || {},\n                            priceLevel:             this.product.priceLevel,\n                            group:                  this.mGroup || {},\n                            subGroup:               this.mSubGroup || {},\n                            uom:                    this.mUOM,\n                            warehouse:              this.mWareHouse,\n                            inventoryAcc:           this.mAccInventory,\n                            incomeAcc:              this.incomeAcc,\n                            costOfGoodsSoldAcc:     this.mAccCostOfGoodSold,\n                            // defaultTax: this.mDefaultTax,\n                            // purchaseTax: this.mPurchaseTax,\n                            // specificTax: this.mSpecificTax,\n                            // otherTax: this.mOtherTax,\n                            formTemplate:           this.mFormTemplate,\n                            variant:                variants,\n                            variantId:              this.variantId,\n                            canBeSold:              this.product.canBeSold,\n                            canBeProduce:           this.product.canBeProduce,\n                            canBeRent:              this.product.canBeRent,\n                            canBePurchase:          this.product.canBePurchase,\n                            isFavorite:             this.product.isFavorite,\n                            batchOrSerial:          this.product.batchOrSerial,\n                            reUsed:                 this.product.reUsed || false,\n                            // batchTracked: this.mSerialOrBatch == 1 ? this.product.batchTracked : 0,\n                            // isSerialNumber: this.mSerialOrBatch == 2 ? this.product.isSerialNumber : 0,\n                            status:                 this.product.status || 1,\n                            deleted:                this.product.deleted || 0,\n                            type:                   this.$route.params.id ? this.$route.query.type : \"new\",\n                        };\n                        window.console.log('data',data)\n                        productHandler\n                            .create(data)\n                            .then((response) => {\n                                if (response.data.statusCode === 201) {\n                                    // this.loadSaleUC()\n                                    // this.clear()\n                                    this.$snotify.success(\"Success\");\n                                    this.close(response.data.data);\n                                    this.$refs.form.reset();\n                                }\n                            })\n                            .catch((e) => {\n                                this.$snotify.error(\"Something went wrong\");\n                                this.errors.push(e);\n                            });\n                    }, 10);\n                });\n            }\n        },\n        async onCategoryChanged() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    // window.console.log(this.mCategory)\n                    this.mGroup = \"\";\n                    this.mSubGroup = \"\";\n\n                    this.group = this.groups.filter(\n                        (m) => m.category.id === this.mCategory.id\n                    );\n                    if (this.group.length > 0) {\n                        this.mGroup = this.group[0];\n                        this.subGroup = this.subGroups.filter(\n                            (m) => m.group.id === this.group[0].id\n                        );\n                        if (this.subGroup.length > 0) {\n                            this.mSubGroup = this.subGroup[0];\n                        }\n                    }\n                    this.loadCategoryAccountAndTax();\n                }, 10);\n            });\n        },\n        async loadAccount() {\n            this.accLoading = true;\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    accountHandler.getAll().then((res) => {\n                        this.showLoading = false;\n                        this.accRevenue = res.data\n                            .filter((m) => m.account_type.number === 32)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accRevenue.length > 0) {\n                            this.incomeAcc = this.accRevenue[0];\n                        }\n                        this.accInventory = res.data\n                            .filter((m) => m.account_type.number === 8)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accInventory.length > 0) {\n                            this.mAccInventory = this.accInventory[0];\n                        }\n                        this.accCostOfGoodSold = res.data\n                            .filter((m) => m.account_type.number === 33)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accCostOfGoodSold.length > 0) {\n                            this.mAccCostOfGoodSold = this.accCostOfGoodSold[0];\n                        }\n                        this.accLoading = false;\n                    });\n                }, 10);\n            });\n        },\n        async loadCategory() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    categoryHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.categories = res;\n                        this.categories = this.categories.filter(\n                            (m) => m.hasOwnProperty(\"type\") && m.type.name === \"Product\"\n                        );\n                        // if (this.categories.length > 0) {\n                        //   this.mCategory = this.categories[0]\n                        //   this.onCategoryChanged()\n                        // }\n                    });\n                }, 10);\n            });\n        },\n        async loadGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    groupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.groups = res;\n                    });\n                }, 10);\n            });\n        },\n        async loadSubGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    subGroupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.subGroups = res;\n                    });\n                }, 10);\n            });\n        },\n        async skuGenerator() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const category = this.mCategory || {};\n                    const group = this.mGroup || {};\n                    const sGroup = this.mSubGroup || {};\n                    let cateAbbr = \"\",\n                        groupAbbr = \"\",\n                        sGroupAbbr = \"\",\n                        skuCode = \"\";\n                    if (category.id) {\n                        cateAbbr = category.abbr || \"\";\n                        skuCode += cateAbbr + \"/\";\n                    }\n                    if (group.id) {\n                        groupAbbr = group.abbr || \"\";\n                        skuCode += groupAbbr + \"/\";\n                    }\n                    if (sGroup.id) {\n                        sGroupAbbr = sGroup.abbr || \"\";\n                        skuCode += sGroupAbbr\n                    }\n                    window.console.log('--xx', category, group, sGroup)\n                    this.product.sku = skuCode\n                    // if (this.product.name) {\n                    //     this.product.sku =\n                    //         skuCode + this.product.name.toString().substring(0, 3);\n                    // }\n                }, 10);\n            });\n        },\n        async loadUOM() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    uomHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.uom = res;\n                        if (this.uom.length > 0) {\n                            this.mUOM = this.uom[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadWareHouses() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    warehouseHandler.getWarehouseSettingAll().then((res) => {\n                        this.showLoading = false;\n                        this.wareHouses = res;\n                        if (this.wareHouses.length > 0) {\n                            this.mWareHouse = this.wareHouses[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadVariants() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    variantHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.variantTypes = res;\n                        if (this.variantTypes.length > 0) {\n                            this.initData();\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadTax() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    settingHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.tax = res;\n                        let st = this.tax.filter((m) => m.taxType.typeId === 8); // valuable tax\n                        this.specificTax = st; // special tax\n\n                        let vAT = this.tax.filter(\n                            (m) => m.taxType.typeId === 1 && m.transactionType === \"Sale\"\n                        ); // valuable tax\n                        this.vat = vAT; // valuable tax\n\n                        let otTax = this.tax.filter((m) => m.taxType.typeId === 7); // valuable tax\n                        this.otherTax = otTax; // valuable tax\n\n                        this.purchaseTax = this.tax.filter(\n                            (m) => m.taxType.typeId === 1 && m.transactionType === \"Purchase\"\n                        ); // valuable tax\n                        if (this.specificTax.length > 0) {\n                            this.mSpecificTax = this.specificTax[0];\n                        }\n                        if (this.vat.length > 0) {\n                            this.mDefaultTax = this.vat[0];\n                        }\n                        if (this.otherTax.length > 0) {\n                            this.mOtherTax = this.otherTax[0];\n                        }\n                        if (this.purchaseTax.length > 0) {\n                            this.mPurchaseTax = this.purchaseTax[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadSingleProduct() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    productHandler.getOne(this.$route.params.id).then((res) => {\n                        this.showLoading = false;\n                        this.product = res;\n                        if (this.product.id !== undefined) {\n                            this.mCategory = this.product.category;\n                            this.mGroup = this.product.group;\n                            this.mSubGroup = this.product.subGroup;\n                            this.mUOM = this.product.uom;\n                            this.mAccCostOfGoodSold = this.product.costOfGoodsSoldAcc;\n                            this.mAccInventory = this.product.inventoryAcc;\n                            this.incomeAcc = this.product.incomeAcc;\n                            // this.mSpecificTax = this.product.specificTax;\n                            this.mSerialOrBatch =\n                                this.product.isSerialNumber > 0\n                                    ? this.product.isSerialNumber\n                                    : this.product.batchTracked;\n                            // this.mOtherTax = this.product.otherTax;\n                            // this.mDefaultTax = this.product.defaultTax;\n                            // this.mPurchaseTax = this.product.purchaseTax;\n                            this.productVariant = this.product.variant;\n                            this.mWareHouse = this.product.warehouse;\n                            this.varLists = [];\n                            this.variantId = this.product.variant.id;\n                            this.product.variant.variant.forEach((m) => {\n                                this.varLists.push({\n                                    variant: {\n                                        name: m.variant.name,\n                                        id: m.variant.id,\n                                        code: m.variant.code,\n                                    },\n                                });\n                            });\n                        }\n                    });\n                }, 10);\n            });\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((resultCen) => {\n                if (resultCen.value) {\n                    this.$router.go(-1);\n                }\n            });\n        },\n    },\n    mounted: async function () {\n        await this.loadUOM();\n        await this.loadWareHouses();\n        // await this.loadTax();\n        await this.loadVariants();\n        await this.loadPriceLevel();\n    },\n    computed: {},\n    created: async function () {\n        await this.loadAccount();\n        await this.loadCategory();\n        await this.loadGroup();\n        await this.loadSubGroup();\n    },\n    watch: {\n        id() {\n            // this.product = this.selectedProduct\n            window.console.log(this.id, \"watch\");\n            if (this.id !== undefined) {\n                this.loadSingleProduct();\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #f8f8f9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.section2 {\n    border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\np {\n    font-size: 15px;\n    font-family: 'Niradei-Light' !important;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}