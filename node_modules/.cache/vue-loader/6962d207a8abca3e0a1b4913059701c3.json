{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/pricing_management/PriceLevel.vue?vue&type=style&index=0&id=65c3fe0a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/pricing_management/PriceLevel.vue","mtime":1638499443205},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZ1bmN0aW9uX2Zvb3RlciB7CiAgcGFkZGluZzogMTVweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCnAgewogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOwp9CgouYWN0aW9uQnRuIHsKICBoZWlnaHQ6IDQ3LjJweCAhaW1wb3J0YW50Owp9CgoudGV4dF90aXAgewogIGZvbnQtc2l6ZTogOXB4OwogIGxpbmUtaGVpZ2h0OiAxMHB4Owp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKfQo="},{"version":3,"sources":["PriceLevel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+VA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"PriceLevel.vue","sourceRoot":"src/views/customers/pricing_management","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"\">\n      <v-card color=\"white\" class=\"pl-4 no_border\" elevation=\"0\">\n        <v-row>\n          <v-col sm=\"10\" class=\"py-0\">\n            <h2 class=\"mb-1 font_20\">{{ $t(\"price_setting\") }}</h2>\n            <p class=\"mb-0\">{{ $t('price_book_setting_desc') }}</p>\n          </v-col>\n        </v-row>\n        <v-dialog v-model=\"dialogM3\" max-width=\"600px\">\n          <v-card>\n            <div class=\"modal_header\">\n              <v-card-title>{{ $t('new_price_level') }}</v-card-title>\n              <v-icon @click=\"dialogM3 = false\">close</v-icon>\n            </div>\n\n            <v-card-text class=\"modal_text_content\">\n              <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                <v-row>\n                  <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                    <label>{{ $t('price_list_name') }}</label>\n                    <v-text-field class=\" my-2\"\n                                  v-model=\"priceLevel.name\"\n                                  outlined\n                                  :rules=\"[v => !!v || $t('is_required')]\"\n                                  tage=\"Price List Name\"\n                                  clearable/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label\">{{ $t('type') }}</label>\n                    <v-select class=\" my-2\"\n                              tag=\"priceLevelType\"\n                              v-model=\"priceLevel.type\"\n                              :items=\"priceLevelType\"\n                              item-text=\"name\"\n                              item-value=\"id\"\n                              :rules=\"[v => !!v || $t('is_required')]\"\n                              return-object\n                              clearable\n                              outlined/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                    <label>{{ $t('code') }}</label>\n                    <v-text-field class=\" my-2\"\n                                  v-model=\"priceLevel.code\"\n                                  outlined\n                                  tage=\"Code\"\n                                  :rules=\"[v => !!v || $t('is_required')]\"\n                                  clearable/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                    <label>{{ $t('currency') }}</label>\n                    <v-select class=\" my-2\"\n                              outlined\n                              tage=\"Currency\"\n                              v-model=\"priceLevel.currency\"\n                              :items=\"currencies\"\n                              :rules=\"[v => !!v || $t('is_required')]\"\n                              item-value=\"id\"\n                              :item-text=\"item =>`${item.code} - ${item.name}`\"\n                              return-object\n                              clearable/>\n                  </v-col>\n                  <!--                  <v-col sm=\"12\" cols=\"12\" class=\"py-0 d-flex\">-->\n                  <!--                    <p class=\"mr-8\">This price level is for:</p>-->\n                  <!--                    <label>-->\n                  <!--                      <input :disabled=\"disableMe\" type=\"radio\" value=\"sale\" v-model=\"priceLevel.nature\"> Sale-->\n                  <!--                    </label>-->\n                  <!--                    <label>-->\n                  <!--                      <input :disabled=\"disableMe\" class=\"ml-4\" type=\"radio\" value=\"purchase\"-->\n                  <!--                             v-model=\"priceLevel.nature\"> Purchase-->\n                  <!--                    </label>-->\n                  <!--                  </v-col>-->\n                </v-row>\n              </v-form>\n            </v-card-text>\n            <v-card-actions class=\"modal_footer\">\n              <v-row>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                  <v-btn color=\"black\" outlined\n                         class=\" text-capitalize  black--text float-left\"\n                         @click=\"dialogM3 = false\">{{ $t('cancel') }}\n                  </v-btn>\n                </v-col>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                  <v-btn color=\"primary\" class=\"px-3  white--text text-capitalize\"\n                         @click=\"onSaveClose\">\n                    {{ $t('save_close') }}\n                  </v-btn>\n                </v-col>\n              </v-row>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n        <v-row class=\"\">\n          <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoading\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"/>\n              <kendo-datasource ref=\"priceLevelDS\"\n                                :data=\"priceLevels\"/>\n              <kendo-grid id=\"gridPriceLevel\" class=\"grid-function\"\n                          :data-source-ref=\"'priceLevelDS'\"\n                          :editable=\"false\"\n                          :navigatable=\"true\"\n                          :noRecords=\"true\"\n                          :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                    :field=\"'name'\"\n                    :title=\"$t('name')\"\n                    :width=\"150\"\n                    :editable=\"()=>{ return false}\"\n                    :template=\"'<span>#=name#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'code'\"\n                    :title=\"$t('code')\"\n                    :width=\"80\"\n                    :editable=\"()=>{ return true}\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'currency'\"\n                    :title=\"$t('currency')\"\n                    :width=\"100\"\n                    :editable=\"()=>{ return false}\"\n                    :template=\"'<span>#=currency.code || ``#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'type'\"\n                    :title=\"$t('type')\"\n                    :width=\"100\"\n                    :editable=\"()=>{ return false}\"\n                    :template=\"'<span>#=type.name || ``#</span>'\"\n                    :attributes=\"{style: 'text-align: left'}\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <!-- <kendo-grid-column\n                    :field=\"'nature'\"\n                    :title=\"$t('nature')\"\n                    :width=\"100\"\n                    :editable=\"()=>{ return false}\"\n                    :template=\"'<span>#=nature.charAt(0).toUpperCase() + nature.slice(1) || ``#</span>'\"\n                    :attributes=\"{style: 'text-align: left'}\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/> -->\n                <kendo-grid-column\n                    :field=\"''\"\n                    :title=\"$t('')\"\n                    :width=\"110\"\n                    :editable=\"()=>{ return false}\"\n                    :attributes=\"{style: 'text-align: center'}\"\n                    :command=\"[{iconClass: 'k-icon k-i-edit', text: $t('variant_price') , click: onVariantSetPrice }]\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"''\"\n                    :title=\"$t('')\"\n                    :width=\"110\"\n                    :editable=\"()=>{ return false}\"\n                    :attributes=\"{style: 'text-align: center;'}\"\n                    :command=\"[{iconClass: 'k-icon k-i-edit', text: $t('service_price'), click: onServiceSetPrice }]\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n              </kendo-grid>\n            </template>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport $ from \"jquery\";\nimport PriceLevelModel from \"@/scripts/priceLevel/PriceLevel\"\nimport CurrencyModel from \"@/scripts/currency/model/Currency\"\n\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nconst priceLevelModel = new PriceLevelModel({})\nconst currencyType = {\n  FUNCTIONAL_CURRENCY: 'fun-c',\n  TRANSACTION_CURRENCY: 'txn-c',\n  REPORTING_CURRENCY: 'rpt-c',\n  TAX_EXCHANGE_CURRENCY: 'tax-c',\n}\nconst NATURE = 'sale'\nexport default {\n  data: () => ({\n    mPriceLevelType: '',\n    priceLevelType: [\n      'Buy', 'Sell', 'Rent', 'Purchase'\n    ],\n    mCurrency: '',\n    currencies: [],\n    priceLevels: [],\n    valid: true,\n    priceLevel: priceLevelModel,\n    showLoading: false,\n    dialogM3: false,\n    pricelvType: [],\n    typeFor: ['sale', 'purchase'],\n    disableMe: false\n  }),\n  props: {},\n  methods: {\n    async onEditClick(e) {\n      e.preventDefault()\n      const grid = kendo.jQuery(\"#gridPriceLevel\").data(\"kendoGrid\")\n      const dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"))\n      this.priceLevel = new PriceLevelModel(dataItem)\n      this.priceLevel.nature = dataItem.nature\n      this.disableMe = true\n      this.dialogM3 = true\n    },\n    async onVariantSetPrice(e) {\n      e.preventDefault()\n      const grid = kendo.jQuery(\"#gridPriceLevel\").data(\"kendoGrid\")\n      const dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"))\n\n      this.priceLevel = dataItem\n      const currency = dataItem.currency || {}\n      const code = currency.code || ''\n      const id = this.priceLevel.id || ''\n      await this.$router.push({\n        path: 'set_price/' + id,\n        name: 'Set Price',\n        params: {id: id, priceLevel: this.priceLevel},\n        query: {type: 'Variant', name: this.priceLevel.name, code: code}\n      })\n    },\n    async onServiceSetPrice(e) {\n      e.preventDefault()\n      const grid = kendo.jQuery(\"#gridPriceLevel\").data(\"kendoGrid\")\n      const dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"))\n\n      this.priceLevel = dataItem\n      const currency = dataItem.currency || {}\n      const code = currency.code || ''\n      const id = this.priceLevel.id || ''\n      await this.$router.push({\n        path: 'set_price/' + id,\n        name: 'Set Price',\n        params: {id: id, priceLevel: this.priceLevel},\n        query: {type: 'Service', name: this.priceLevel.name, code: code}\n      })\n    },\n    onNewClick() {\n      this.disableMe = false\n      this.dialogM3 = true\n      this.priceLevel.nature = NATURE\n      this.priceLevel.id = ''\n      this.clear()\n    },\n    close() {\n      this.dialogM3 = false\n    },\n    clear() {\n      this.priceLevel = new PriceLevelModel({})\n    },\n    async onSaveClose() {\n      if (!this.$refs.form.validate()) {\n        this.$refs.form.validate()\n        return\n      }\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          const type = this.priceLevel.type\n          let data = {\n            \"id\": this.priceLevel.id ? this.priceLevel.id : '',\n            \"code\": this.priceLevel.code,\n            \"name\": this.priceLevel.name,\n            \"type\": {\n              id: type.id || '',\n              name: type.name || '',\n            },\n            \"nature\": NATURE,\n            \"currency\": new CurrencyModel(this.priceLevel.currency),\n          }\n          window.console.log(data, 'data')\n          priceLevelHandler.create(data).then(response => {\n            if (response.data.statusCode === 201) {\n              this.loadPriceLevel()\n              this.clear()\n              this.close()\n            }\n          }).catch(e => {\n            this.errors.push(e)\n          })\n        }, 10);\n      })\n    },\n    async loadCurrency() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          this.showLoading = true\n          currencyHandler.list(currencyType.FUNCTIONAL_CURRENCY).then(response => {\n            if (response.data.statusCode === 200) {\n              this.showLoading = false\n              this.currencies = response.data.data.filter(o => o.used === 1)\n            }\n            this.showLoading = false\n          }).catch()\n          {\n            this.showLoading = false\n          }\n        }, 10);\n      })\n    },\n    async loadPriceLevel() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          this.showLoading = true\n          const strFilter = '?nature=' + NATURE\n          priceLevelHandler.get(strFilter).then(res => {\n            this.showLoading = false\n            this.priceLevels = res\n          })\n        }, 10);\n      })\n    },\n    async loadPriceLevelType() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          priceLevelHandler.priceLevelTypeList().then(res => {\n            if (res.data.statusCode === 200) {\n              this.priceLevelType = res.data.data\n            }\n          })\n        }, 10);\n      })\n    },\n  },\n  mounted: async function () {\n    window.console.log(currencyType.FUNCTIONAL_CURRENCY, 'type')\n    await this.loadCurrency()\n    await this.loadPriceLevel()\n    await this.loadPriceLevelType()\n  },\n  computed: {},\n  components: {\n    LoadingMe: () => import(`@/components/Loading`)\n  },\n};\n</script>\n\n<style scoped>\n.function_footer {\n  padding: 15px;\n  display: inline-block;\n}\n\np {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.actionBtn {\n  height: 47.2px !important;\n}\n\n.text_tip {\n  font-size: 9px;\n  line-height: 10px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}