{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/product_list_catalog/Catalog.vue?vue&type=style&index=0&id=3136e5c2&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/product_list_catalog/Catalog.vue","mtime":1643018446844},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRyb3Bkb3duLWhlYWRlciB7CiAgICBib3JkZXItd2lkdGg6IDAgMCAxcHggMDsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi5kcm9wZG93bi1oZWFkZXIgPiBzcGFuIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHBhZGRpbmc6IDEwcHg7Cn0KCi5kcm9wZG93bi1oZWFkZXIgPiBzcGFuOmZpcnN0LWNoaWxkIHsKICAgIHdpZHRoOiA1MHB4Owp9Cgouay1saXN0LWNvbnRhaW5lciA+IC5rLWZvb3RlciB7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZnVuY3Rpb25fY29udGVudCB7CiAgICBwYWRkaW5nOiAwIDI1cHggMjVweDsKICAgIGJvcmRlci1ib3R0b206IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAgIC5jb250YWluZXIgewogICAgICAgIC8qIG1heC13aWR0aDogMTE4NXB4OyAqLwogICAgICAgIG1heC13aWR0aDogMTA4MHB4ICFpbXBvcnRhbnQ7CiAgICB9Cn0KCi5ncmF5QmcgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmOTsKfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CiAgICAubWItNiB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50OwogICAgfQp9Cgouc2VjdGlvbjIgewogICAgYm9yZGVyOiAxcHggc29saWQgI2Q2ZDdkODsKfQoKLmJvcmRlcl9ncmV5IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkNmQ3ZDg7Cn0KCi5hdHRhY2htZW50X3RhYmxlIHsKICAgIHdpZHRoOiAxMDAlOwp9CgoubXlfcmFkaW8gW3R5cGU9InJhZGlvIl0gKyBsYWJlbCB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBwYWRkaW5nOiA2cHg7CiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDE1JSA4MCUgIWltcG9ydGFudDsKICAgIGRpc3BsYXk6IGdyaWQ7Cn0KCi51cGxvYWRfYnRuIHsKICAgIHBhZGRpbmc6IDEwcHggNnB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgY29sb3I6IHdoaXRlOwogICAgbWFyZ2luLXRvcDogMTVweDsKICAgIG1hcmdpbi1ib3R0b206IG5vbmUgIWltcG9ydGFudDsKICAgIGJvcmRlci1yYWRpdXM6IDIycHg7CiAgICBiYWNrZ3JvdW5kOiAjOTJkMDUwOwp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZQo+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKPiB0YWJsZQo+IHRib2R5Cj4gdHI6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Catalog.vue"],"names":[],"mappingsujBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Catalog.vue","sourceRoot":"src/views/products_services/product_list_catalog","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"catalog\") }}</h2>\n                                <v-icon\n                                    @click=\"cancel()\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                <v-row>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-1 my_checkbox\">\n                                        <label class=\"label  mb-0\">{{ $t(\"catalog_name\") }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            tage=\"Catalog Name\"\n                                            v-model=\"catalog.name\"\n                                            :placeholder=\"$t('name')\"\n                                            :rules=\"[(v) => !!v || $t('is_required')]\"\n                                            outlined\n                                        />\n                                        <input\n                                            id=\"chkPOS\"\n                                            type=\"checkbox\"\n                                            v-model=\"catalog.forPOS\"\n                                        />\n                                        <label for=\"chkPOS\">{{ $t(\"used_in_point_sale\") }}</label>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-1 my_checkbox\">\n                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                $t(\"number\")\n                                            }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            tage=\"Number\"\n                                            :rules=\"[(v) => !!v || $t('is_required')]\"\n                                            v-model=\"catalog.number\"\n                                            outlined\n                                        />\n                                        <input\n                                            id=\"chkEcommerce\"\n                                            type=\"checkbox\"\n                                            v-model=\"catalog.forEcommerce\"\n                                        />\n                                        <label for=\"chkEcommerce\">{{ $t(\"used_in_ecommerce\") }}</label>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\" style=\"\">{{\n                                                $t(\"price_level\")\n                                            }}</label>\n                                        <div class=\"d-flex\">\n                                            <div style=\"width:50px;\" class=\"code_text mt-1  text-bold\">{{ code }}</div>\n                                            <v-select class=\"mt-1 custom-border\"\n                                                      v-model=\"catalog.priceLevel\"\n                                                      :items=\"priceLevels\"\n                                                      item-value=\"id\"\n                                                      item-text=\"name\"\n                                                      return-object\n                                                      @change=\"onPriceLevelChanged\"\n                                                      outlined/>\n                                        </div>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                $t(\"description\")\n                                            }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            tage=\"Description\"\n                                            v-model=\"catalog.description\"\n                                            outlined\n                                        />\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"no_border mb-1\" color=\"white\">\n                                <v-row>\n                                    <v-col sm=\"8\" cols=\"12\" class=\"\">\n                                        <h3 class=\"mb-3\">\n                                            {{ $t(\"product_to_add_into_this_catalog\") }}\n                                        </h3>\n                                        <kendo-datasource ref=\"catalogItemLineDS\" :data=\"itemList\"/>\n                                        <kendo-grid\n                                            id=\"gridCatalog\"\n                                            class=\"grid-function\"\n                                            :data-source-ref=\"'catalogItemLineDS'\"\n                                            :editable=\"true\"\n                                            :scrollable-virtual=\"true\">\n                                            <kendo-grid-column\n                                                :field=\"'no'\"\n                                                :title=\"$t('no')\"\n                                                :template=\"rowNumberTmplL\"\n                                                :width=\"45\"\n                                                :column-menu=\"false\"\n                                                :headerAttributes=\"{ style: 'background-color: #EDF1F5;',  class: 'text-center', }\"\n                                                :attributes=\"{ style: 'text-align: center' }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'item'\"\n                                                :title=\"$t('item')\"\n                                                :width=\"200\"\n                                                :template=\"'<span>#=item.name || ``#</span>'\"\n                                                :editor=\"ItemDropDownEditor\"\n                                                :headerAttributes=\"{ style: 'background-color: #EDF1F5', }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'uom'\"\n                                                :title=\"$t('uom')\"\n                                                :width=\"150\"\n                                                :template=\"UOMTemplate\"\n                                                :editor=\"UOMDropDownEditor\"\n                                                :headerAttributes=\"{ style: 'background-color: #EDF1F5', }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"''\"\n                                                :title=\"$t(' ')\"\n                                                :width=\"70\"\n                                                :command=\"[{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRowL},]\"\n                                                :headerAttributes=\"{ style: 'text-align: right; background-color: #EDF1F5',}\"\n                                            />\n                                        </kendo-grid>\n                                        <v-btn\n                                            color=\"primary\"\n                                            @click=\"addRowL\"\n                                            class=\"float-left rounded-4 btn_plus white--text mt-3\">\n                                            <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                        </v-btn>\n                                    </v-col>\n                                    <v-col sm=\"2\" cols=\"12\" class=\"\">\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                <h3 class=\"mb-0\">{{ $t(\"default_image\") }}</h3>\n                                                <v-img width=\"100px\" height=\"150px\" :src=\"src\"/>\n                                                <label>\n                                                    <input\n                                                        type=\"file\"\n                                                        name=\"image\"\n                                                        id=\"image\"\n                                                        class=\"file_width\"\n                                                        :rules=\"fileSizeRules\"\n                                                        accept=\".png, .jpg, .jpeg\"\n                                                        ref=\"fileupload\"\n                                                        @change=\"onFileChange\"\n                                                    />\n                                                    <!--                                                    <p class=\"upload_btn mb-0\">-->\n                                                    <!--                                                        {{ $t(\"upload_image\") }}-->\n                                                    <!--                                                    </p>-->\n                                                </label>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider/>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn\n                                    @click=\"cancel\"\n                                    color=\"black\"\n                                    outlined\n                                    class=\"text-capitalize  black--text float-left\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n                                <v-btn\n                                    @click=\"onSaveClose\"\n                                    color=\"primary\"\n                                    class=\"float-right  white--text text-capitalize\">{{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport CatalogModel from \"@/scripts/model/Catalog\";\nimport priceLevelHandler from \"@/scripts/priceLevelHandler\";\nimport ItemLineModel from \"@/scripts/invoice/model/ItemLine\";\nimport {uuid} from \"vue-uuid\";\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\nimport uomPriceHandler from \"@/scripts/uomPriceHandler\";\n\nconst catalogHandler = require(\"@/scripts/catalogHandler\");\n// const serviceItemHandler = require(\"@/scripts/serviceItemHandler\");\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\");\n\nconst catalogModel = new CatalogModel({});\nconst $ = kendo.jQuery\nconst itemLineModel = new ItemLineModel({});\nconst itemLinePrefix = \"lin-\";\nexport default {\n    name: \"AddCatalog\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n    },\n    data: () => ({\n        showLoading: false,\n        files: [],\n        itemList: [],\n        serviceList: [],\n        services: [],\n        variants: [],\n        service: {},\n        itemLine: itemLineModel,\n        valid: true,\n        catalog: catalogModel,\n        imgFile: \"\",\n        src: \"\",\n        fileSizeRules: [\n            (files) =>\n                !files ||\n                !files.some((file) => file.size > 1024 * 1024) ||\n                \"Image size should be less than 1 MB!\",\n        ],\n        priceLevels: [],\n        priceLevel: {},\n        code: '',\n        saleFormContent: {}\n    }),\n    methods: {\n        async initData() {\n            if (this.$route.params.id !== undefined) {\n                await this.loadSingleCatalog();\n            } else {\n                this.clear();\n            }\n        },\n        clear() {\n            this.catalog = {};\n            this.variants = [];\n            this.services = [];\n            this.itemList = [];\n            this.serviceList = [];\n            this.imgFile = \"\";\n            this.src = \"\";\n        },\n        onFileChange(e) {\n            // const file = e.target.files[0];\n            let input = e.target;\n            // Ensure that you have a file before attempting to read it\n            if (input.files && input.files[0]) {\n                if (input.files[0].size > 1024 * 1024) {\n                    e.preventDefault();\n                    alert(\"File too big (> 1MB)\");\n                    this.src = \"\";\n                    this.imgFile = \"\";\n                    this.$refs.fileupload.value = null;\n                } else {\n                    // create a new FileReader to read this image and convert to base64 format\n                    let reader = new FileReader();\n                    // Define a callback function to run, when FileReader finishes its job\n                    reader.onloadend = (e) => {\n                        // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                        // Read image as base64 and set to imageData\n                        this.imgFile = e.target.result;\n                    };\n                    // Start the reader job - read file as a data url (base64 format)\n                    reader.readAsBinaryString(input.files[0]);\n                    // this.url = input.files[0]\n                    this.src = URL.createObjectURL(e.target.files[0]);\n                }\n            }\n        },\n        addRowL() {\n            let ds = this.$refs.catalogItemLineDS.kendoWidget(),\n                total = ds.total();\n            this.itemLine.id = itemLinePrefix + uuid.v1();\n            this.itemLine.decimalFormat = \"n\" + this.saleFormContent.decimal;\n            this.itemLine.isEditable = true;\n            ds.insert(total, this.itemLine);\n        },\n        // Remove Row\n        removeRowL(e) {\n            e.preventDefault();\n            var grid = kendo.jQuery(\"#gridCatalog\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        rowNumberTmplL(dataItem) {\n            let ds = this.$refs.catalogItemLineDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        ItemDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input  name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Items </span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                // url: productVariantHandler.searchURL(),\n                                url: productVariantHandler.itemSearchURL('?plId=' + this.catalog.priceLevel.id),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        UOMDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"uom.name\",\n                    dataValueField: \"uom.id\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=uom.name || `No Price Level`#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {url: uomPriceHandler.uomPriceByPriceLevelURL(\"id=\" + options.model.item.id + \"&plId=\" + this.catalog.priceLevel.id + \"&date=\" + this.catalog.transactionDate + '&nature=purchase'),},\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        async onSaveClose() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate();\n                return;\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    let itemLineDS = this.$refs.catalogItemLineDS.kendoWidget();\n                    const dataRow = itemLineDS.data().map((n) => {\n                        return new ItemLineModel(n);\n                    });\n                    let data = {\n                        id: this.$route.params.id,\n                        name: this.catalog.name,\n                        type: 'Catalog',\n                        // sku: this.catalog.sku,\n                        number: this.catalog.number,\n                        description: this.catalog.description,\n                        forPOS: this.catalog.forPOS,\n                        forEcommerce: this.catalog.forEcommerce,\n                        priceLevel: this.catalog.priceLevel,\n                        itemLines: dataRow,\n                        images: this.catalog.images,\n                        file: this.imgFile,\n                        status: this.catalog.status || 1,\n                        deleted: this.catalog.deleted || 0,\n                        publicLink: this.catalog.publicLink || '',\n                        actionType: this.$route.params.id ? this.$route.query.type : \"new\",\n                    };\n                    this.showLoading = true\n                    catalogHandler\n                        .create(data)\n                        .then((response) => {\n                            if (response.data.statusCode === 201) {\n                                this.showLoading = false\n                                this.$snotify.success(\"Success\");\n                                this.close();\n                            } else {\n                                this.$snotify.error(\"Something went wrong\");\n                                this.showLoading = false\n                            }\n                        })\n                });\n            });\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((resultCen) => {\n                if (resultCen.value) {\n                    this.$router.go(-1);\n                }\n            });\n        },\n        close() {\n            window.history.go(-1)\n            // this.$router.push({\n            //     name: \"products\",\n            //     params: {\n            //         data: data,\n            //     },\n            // });\n        },\n        async loadSingleCatalog() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    catalogHandler\n                        .getOne(this.$route.params.id)\n                        .then((response) => {\n                            if (response.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.catalog = response.data.data[0];\n                                if (this.catalog.hasOwnProperty(\"itemLines\")) {\n                                    this.itemList = this.catalog.itemLines;\n                                }\n                                this.onPriceLevelChanged()\n                                this.src = \"\";\n                                if (this.catalog.hasOwnProperty(\"images\")) {\n                                    if (this.catalog.images.hasOwnProperty(\"default\")) {\n                                        let imgUrl = this.catalog.images.default.bigThumb;\n                                        this.src =\n                                            \"https://s3-ap-southeast-1.amazonaws.com/images.banhji/\" +\n                                            imgUrl;\n                                    }\n                                }\n                                if (this.$route.query.type === \"new\") {\n                                    this.src = \"\";\n                                }\n                            } else {\n                                this.$snotify.error(\"Something went wrong\");\n                                this.showLoading = false;\n                            }\n                        })\n                });\n            });\n        },\n        onPriceLevelChanged() {\n            const pl = this.catalog.priceLevel || {}\n            const currency = pl.currency || {}\n            this.code = currency.code || ''\n        },\n        async loadPriceLevel() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    const strFilter = '?nature=sale'\n                    priceLevelHandler.get(strFilter).then(res => {\n                        const data = res || []\n                        this.priceLevels = data//.filter(n => n.type.name === 'Standard')\n                        if (data.length > 0 && this.$route.params.id === undefined) {\n                            this.catalog.priceLevel = data[0]\n                            this.onPriceLevelChanged()\n                        }\n                    })\n\n                }, 10)\n            })\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.uom;\n            if (uom) {\n                return `<span>${uom.uom ? uom.uom.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n    },\n    mounted: async function () {\n        await this.loadSaleFormContent();\n        await this.loadPriceLevel();\n        await this.initData();\n    },\n    watch: {\n        id() {\n            // this.product = this.selectedProduct\n            if (this.$route.params.id !== undefined) {\n                this.loadSingleCatalog();\n            } else {\n                this.clear();\n            }\n            // window.console.log(this.id, 'watch')\n            // if (this.id !== undefined) {\n            //\n            // } else {\n            //     this.clear()\n            // }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.dropdown-header {\n    border-width: 0 0 1px 0;\n    text-transform: uppercase;\n}\n\n.dropdown-header > span {\n    display: inline-block;\n    padding: 10px;\n}\n\n.dropdown-header > span:first-child {\n    width: 50px;\n}\n\n.k-list-container > .k-footer {\n    padding: 10px;\n}\n\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #f8f8f9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.section2 {\n    border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\n.my_radio [type=\"radio\"] + label {\n    position: relative;\n    padding: 6px;\n    grid-template-columns: 15% 80% !important;\n    display: grid;\n}\n\n.upload_btn {\n    padding: 10px 6px;\n    text-align: center;\n    color: white;\n    margin-top: 15px;\n    margin-bottom: none !important;\n    border-radius: 22px;\n    background: #92d050;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}