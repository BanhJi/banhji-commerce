{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/IndividualCustomer.vue?vue&type=style&index=0&id=85e4336a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/IndividualCustomer.vue","mtime":1641438291855},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmstZHJvcGRvd24gewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tdG9wOiA0cHg7Cn0KCi5mdW5jdGlvbl9jb250ZW50IC5sYWJlbCB7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9Cgoudi10YWIudi10YWIgewogICAgY29sb3I6IGluaGVyaXQ7CiAgICBmb250LXNpemU6IDE2cHggIWltcG9ydGFudDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDEyNjRweCkgewogICAgLmNvbnRhaW5lciB7CiAgICAgICAgLyogbWF4LXdpZHRoOiAxMjUwcHg7ICovCiAgICAgICAgbWF4LXdpZHRoOiAxMDgwcHg7CiAgICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLnB0LTYuY29sLXNtLTUuY29sLTEyIHsKICAgICAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OwogICAgfQoKICAgIC5jb2RlX3RleHQgewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgfQoKICAgIC5waG9uZV9ub19wdCB7CiAgICAgICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDsKICAgIH0KCiAgICAuc2VsZWN0X3RlbXBsYXRlLAogICAgLnNhdmVfb3B0aW9uIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgfQp9CgouZXhjaGFuZ2UtdGFibGUudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZQo+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKPiB0YWJsZQo+IHRoZWFkCj4gdHIKPiB0aCB7CiAgICBmb250LWZhbWlseTogIk5pcmFkZWktQm9sZCIsIHNlcmlmOwogICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwICFpbXBvcnRhbnQ7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMCAhaW1wb3J0YW50OwogICAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7Cn0KCi5leGNoYW5nZS10YWJsZS50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGhlYWQKPiB0cgo+IHRkIHsKICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7CiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMDAwICFpbXBvcnRhbnQ7Cn0KCi5leGNoYW5nZS10YWJsZS50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGJvZHkKPiB0cjpsYXN0LWNoaWxkCnRkIHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjMDAwICFpbXBvcnRhbnQ7Cn0KCi52LXNsaWRlLWdyb3VwX19jb250ZW50IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4ZjkgIWltcG9ydGFudDsKfQoKLnYtdGFiLS1hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZiAhaW1wb3J0YW50OwogICAgYm9yZGVyLWxlZnQ6IG5vbmU7Cn0KCi5mdW5jdGlvbl9jb250ZW50IHsKICAgIHBhZGRpbmc6IDA7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7Cn0K"},{"version":3,"sources":["IndividualCustomer.vue"],"names":[],"mappingskkDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"IndividualCustomer.vue","sourceRoot":"src/views/customers","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card outlined dense\n                            class=\"pa-4 no_border rounded-sm\"\n                            color=\"white\">\n                        <v-row>\n                            <v-col class=\"bigSide py-0\"\n                                   sm=\"12\"\n                                   cols=\"12\"\n                                   style=\"transition: .3s ease-in;\"\n                                   :class=\"{ hide_big_bar_class: isHideBar }\">\n                                <div class=\"function_header\">\n                                    <h2>{{ $t(\"individual_customer\") }}</h2>\n                                    <v-icon\n                                        @click=\"cancel()\"\n                                        style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                        class=\"float-right\">close\n                                    </v-icon>\n                                </div>\n\n                                <div class=\"function_content\">\n                                    <!-- Form -->\n                                    <v-form ref=\"form\" v-model=\"valid\">\n                                        <v-row class=\"px-6\">\n                                            <v-col>\n                                                <v-row>\n                                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                                        <label class=\"label  mb-0\">{{ $t(\"customer_type\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"customerTypes\"\n                                                            placeholder=\"customer Type\"\n                                                            item-text=\"name\"\n                                                            item-value=\"id\"\n                                                            :disabled=\"disabledMe\"\n                                                            tage=\"Customer Type\"\n                                                            v-on:change=\"customerTypeChange\"\n                                                            :rules=\"[(v) => !!v['id'] || $t('is required!')]\"\n                                                            v-model=\"customer.customerType\"\n                                                            return-object\n                                                            outlined/>\n                                                        <label class=\"label mb-0\">{{ $t(\"customer_name\") }}*</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            v-model=\"customer.name\"\n                                                            outlined\n                                                            :rules=\"nameRules\"\n                                                            required/>\n                                                        <label class=\"label mb-0\">{{ $t(\"registered_date\") }}</label>\n                                                        <app-datepicker\n                                                            :initialDate=\"customer.registeredDate\"\n                                                            @emitDate=\"registeredDate = $event\"/>\n                                                    </v-col>\n                                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                                        <label class=\"label mb-0\">{{ $t(\"number\") }}</label>\n                                                        <v-row class=\"pt-1 pb-0\">\n                                                            <v-col sm=\"2\" cols=\"3\" class=\"py-0 pr-0\">\n                                                                <div class=\"code_text text-uppercase\">\n                                                                    {{\n                                                                        customer.customerType ? customer.customerType.abbr : \"\"\n                                                                    }}\n                                                                </div>\n                                                            </v-col>\n                                                            <v-col sm=\"8\" cols=\"8\" class=\"py-0 pl-0\">\n                                                                <v-text-field\n                                                                    class=\"custom-border \"\n                                                                    :disabled=\"disabledMe\"\n                                                                    v-model=\"customer.number\"\n                                                                    outlined\n                                                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                                                    required/>\n                                                            </v-col>\n                                                            <v-col sm=\"2\" cols=\"3\" class=\"py-0 pl-0\">\n                                                                <div class=\" text-uppercase\">\n                                                                    <v-checkbox\n                                                                        class=\"mt-0\"\n                                                                        :disabled=\"disabledMe\"\n                                                                        @change=\"onCheckChanged\"\n                                                                        v-model=\"customer.autoNumber\"\n                                                                        :label=\"`Auto`\"\n                                                                    />\n                                                                </div>\n                                                            </v-col>\n                                                        </v-row>\n                                                        <label class=\"label mb-0\">{{ $t(\"alternative_name\") }}</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            tage=\"Alternative Name\"\n                                                            v-model=\"customer.alternativeName\"\n                                                            outlined/>\n                                                        <label\n                                                            class=\"mb-0 text-uppercase\">{{\n                                                                $t(\"banhji_consumer_id\")\n                                                            }}</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            tage=\"Banhji id\"\n                                                            v-model=\"customer.consumerId\"\n                                                            outlined/>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                        </v-row>\n                                        <div style=\"background-color: #ffffff; height: 16px; width:100%;\"></div>\n                                        <!-- Grid -->\n                                        <v-tabs slider-color=\"#ffffff\"\n                                                v-model=\"model_tabs\"\n                                                class=\"individual_tabs\">\n                                            <v-tab>\n                                                <span class=\"text-uppercase\">{{ $t(\"contact_address\") }}</span>\n                                            </v-tab>\n                                            <v-tab>\n                                                <span class=\"text-uppercase\">{{ $t(\"payment_billing\") }}</span>\n                                            </v-tab>\n                                            <v-tab>\n                                                <span class=\"text-uppercase\">{{ $t(\"account_tax\") }}</span>\n                                            </v-tab>\n                                            <v-tab>\n                                                <span class=\"text-uppercase\">{{ $t(\"note_on_invoice\") }}</span>\n                                            </v-tab>\n                                            <v-tab>\n                                                <span class=\"text-uppercase\">{{ $t(\"image\") }}</span>\n                                            </v-tab>\n                                            <!-- item 1 -->\n                                            <v-tab-item>\n                                                <v-row>\n                                                    <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                        <p class=\"color_grey\">{{ $t('add_inv_contact_customer') }}</p>\n                                                        <label class=\"label mb-0\">{{ $t(\"gender\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"genderItem\"\n                                                            item-text=\"name\"\n                                                            item-value=\"name\"\n                                                            tage=\"Gender\"\n                                                            v-model=\"gender\"\n                                                            placeholder=\"Male\"\n                                                            outlined>\n                                                        </v-select>\n                                                        <label class=\"mb-0\">{{ $t(\"phone_number\") }}</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            tage=\"Phone Number\"\n                                                            v-model=\"phone\"\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"email\") }}</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            tage=\"Email\"\n                                                            v-model=\"email\"\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"dob\") }}</label>\n                                                        <app-datepicker\n                                                            :initialDate=\"dob\"\n                                                            @emitDate=\"dob = $event\"/>\n                                                    </v-col>\n                                                    <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                        <v-dialog v-model=\"dialogM2\" max-width=\"500px\">\n                                                            <template v-slot:activator=\"{ on }\">\n                                                                <v-btn\n                                                                    color=\"primary\"\n                                                                    rounded\n                                                                    class=\"btn_create_new float-right mb-4\"\n                                                                    @click=\"onNewAddressClick\"\n                                                                    v-on=\"on\">{{ $t(\"add_new_address\") }}\n                                                                </v-btn>\n                                                            </template>\n                                                            <v-card>\n                                                                <div class=\"modal_header\">\n                                                                    <v-card-title>{{ $t(\"address\") }}</v-card-title>\n                                                                    <v-icon class=\"btn_close\" @click=\"dialogM2 = false\">\n                                                                        close\n                                                                    </v-icon>\n                                                                </div>\n                                                                <v-card-text class=\"modal_text_content\">\n                                                                    <v-row class=\"mt-2\">\n                                                                        <v-col cols=\"12\" sm=\"6\" class=\"py-0\">\n                                                                            <label\n                                                                                class=\"mb-0\">{{\n                                                                                    $t(\"address_name\")\n                                                                                }}</label>\n                                                                            <v-text-field\n                                                                                class=\"mt-1\"\n                                                                                tage=\"Address Name\"\n                                                                                :rules=\"nameRules\"\n                                                                                v-model=\"address.name\"\n                                                                                outlined/>\n                                                                            <label\n                                                                                class=\"label mb-0\">{{\n                                                                                    $t(\"address_type\")\n                                                                                }}</label>\n                                                                            <v-select\n                                                                                class=\"mt-1\"\n                                                                                :items=\"addressType\"\n                                                                                tage=\"Address Type\"\n                                                                                v-model=\"address.type\"\n                                                                                outlined/>\n                                                                            <label\n                                                                                class=\"mb-0\">{{\n                                                                                    $t(\"address_line_2\")\n                                                                                }}</label>\n                                                                            <v-text-field\n                                                                                class=\"mt-1\"\n                                                                                v-model=\"address.line2\"\n                                                                                tage=\"Address Line 2\"\n                                                                                outlined/>\n                                                                        </v-col>\n                                                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                                                            <label\n                                                                                class=\"mb-0\">{{ $t(\"country\") }}</label>\n                                                                            <v-select\n                                                                                class=\" mt-1\"\n                                                                                :items=\"countries\"\n                                                                                tage=\"Address Country\"\n                                                                                v-model=\"address.country\"\n                                                                                item-value=\"abbreviation\"\n                                                                                :item-text=\"(item) =>`${item.abbreviation} - ${item.country}`\"\n                                                                                return-object\n                                                                                outlined/>\n                                                                            <label\n                                                                                class=\"mb-0\">{{\n                                                                                    $t(\"address_line_1\")\n                                                                                }}</label>\n                                                                            <v-text-field\n                                                                                class=\"mt-1\"\n                                                                                v-model=\"address.line1\"\n                                                                                tage=\"Address Line 1\"\n                                                                                outlined/>\n                                                                        </v-col>\n                                                                    </v-row>\n                                                                </v-card-text>\n                                                                <v-card-actions\n                                                                    class=\"modal_footer d-flex justify-space-between\">\n                                                                    <v-btn\n                                                                        color=\"primary\"\n                                                                        outlined\n                                                                        class=\"black--text  text-capitalize\"\n                                                                        @click=\"dialogM2 = false\">{{ $t(\"cancel\") }}\n                                                                    </v-btn>\n                                                                    <v-btn\n                                                                        @click=\"onSaveCloseAddress\"\n                                                                        color=\"primary\"\n                                                                        class=\"white--text  text-capitalize\">\n                                                                        {{ $t(\"save_close\") }}\n                                                                    </v-btn>\n                                                                </v-card-actions>\n                                                            </v-card>\n                                                        </v-dialog>\n                                                        <v-simple-table\n                                                            class=\"exchange-table my-4\"\n                                                            style=\"clear: right;\">\n                                                            <kendo-datasource\n                                                                ref=\"gridAddressDS\"\n                                                                :data=\"addressList\"/>\n                                                            <kendo-grid\n                                                                id=\"gridAddress\"\n                                                                class=\"grid-function\"\n                                                                :data-source-ref=\"'gridAddressDS'\"\n                                                                :editable=\"false\"\n                                                                :scrollable-virtual=\"true\">\n                                                                <kendo-grid-column\n                                                                    :field=\"'no'\"\n                                                                    :title=\"$t('no')\"\n                                                                    :template=\"rowNumberTmpl\"\n                                                                    :width=\"40\"\n                                                                    :column-menu=\"false\"\n                                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5;',class: 'text-center'}\"\n                                                                    :attributes=\"{ style: 'text-align: center' }\"/>\n                                                                <kendo-grid-column\n                                                                    :field=\"'name'\"\n                                                                    :title=\"$t('name')\"\n                                                                    :attributes=\"{ class: 'tb_name_td' }\"\n                                                                    :width=\"50\"\n                                                                    :template=\"'<span>#=name#</span>'\"\n                                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                                                <kendo-grid-column\n                                                                    :field=\"'type'\"\n                                                                    :title=\"$t('type')\"\n                                                                    :width=\"90\"\n                                                                    :template=\"'<span>#=type#</span>'\"\n                                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                                                <kendo-grid-column\n                                                                    :field=\"''\"\n                                                                    :title=\"$t('action')\"\n                                                                    :width=\"70\"\n                                                                    :command=\"[{\n                                                                        iconClass: 'k-icon k-i-edit',\n                                                                        text: 'Edit',\n                                                                        click: goEditAddress}]\"\n                                                                    :headerAttributes=\"{style:'text-align: left; background-color: #EDF1F5'}\"\n                                                                />\n                                                            </kendo-grid>\n                                                        </v-simple-table>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-tab-item>\n                                            <!-- item 2 -->\n                                            <v-tab-item eager>\n                                                <p class=\"color_grey\">\n                                                    {{ $t(\"payment_billing_desc\") }}\n                                                </p>\n                                                <v-row>\n                                                    <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                        <label class=\"label mb-0\">{{ $t(\"customer_group\") }}</label>\n                                                        <v-select\n                                                            class=\" mt-1\"\n                                                            v-model=\"mCustomerGroup\"\n                                                            :items=\"customerGroups\"\n                                                            item-value=\"id\"\n                                                            item-text=\"name\"\n                                                            @change=\"customerGroupChanged\"\n                                                            return-object\n                                                            tage=\"Customer Group\"\n                                                            placeholder=\"Group A\"\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"default_discount\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"mDiscountItem\"\n                                                            :items=\"discountItems\"\n                                                            item-value=\"id\"\n                                                            item-text=\"name\"\n                                                            return-object\n                                                            tage=\"Default Discount\"\n                                                            placeholder=\"0% discount\"\n                                                            :rules=\"[(v) => !!v['id'] || $t('is_required')]\"\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"default_price_level\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"customer.priceLevel\"\n                                                            :items=\"priceLevel\"\n                                                            item-value=\"id\"\n                                                            item-text=\"name\"\n                                                            :rules=\"[(v) => !!v || $t('is_required'),]\"\n                                                            return-object\n                                                            placeholder=\"Price Level\"\n                                                            tage=\"Default Price Level\"\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"payment_term\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"mPaymentTerm\"\n                                                            :items=\"paymentTerms\"\n                                                            item-value=\"id\"\n                                                            item-text=\"name\"\n                                                            :disabled=\"true\"\n                                                            :rules=\"[(v) => !!v || $t('is_required'),]\"\n                                                            return-object\n                                                            placeholder=\"Payment_term\"\n                                                            tage=\"Payment_term\"\n                                                            outlined/>\n                                                    </v-col>\n                                                    <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                        <label class=\"mb-0\">{{ $t(\"cash_payment\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"cashPayment\"\n                                                            tage=\"Cash Payment\"\n                                                            :rules=\"[(v) => !!v || 'Cash payment is required',]\"\n                                                            :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                            v-model=\"customer.cashPayment\"\n                                                            return-object\n                                                            clearable\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"bill_payment\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"billPayment\"\n                                                            tage=\"Bill Payment\"\n                                                            :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                            v-model=\"customer.billPayment\"\n                                                            return-object\n                                                            clearable\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"qr_payment\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"qrPayment\"\n                                                            :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                            v-model=\"customer.qrPayment\"\n                                                            return-object\n                                                            clearable\n                                                            outlined/>\n                                                        <label class=\"mb-0\">{{ $t(\"bank_transfer\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"bankTransfer\"\n                                                            :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                            v-model=\"customer.bankTransfer\"\n                                                            return-object\n                                                            clearable\n                                                            outlined/>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-tab-item>\n                                            <!-- item3 -->\n                                            <v-tab-item eager>\n                                                <v-row>\n                                                    <v-col sm=\"12\" class=\"py-0\" cols=\"12\">\n                                                        <p class=\"mb-0 color_grey\">{{\n                                                                $t(\"acc_tax_individual_desc\")\n                                                            }}</p>\n                                                    </v-col>\n                                                    <v-col sm=\"6\" cols=\"12\">\n                                                        <label class=\"label mb-0\">{{ $t(\"account_receivable\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"mAccReceivable\"\n                                                            :items=\"accReceivable\"\n                                                            :rule=\"[(v) => !!v || $t('is_required')]\"\n                                                            item-value=\"id\"\n                                                            :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                            return-object\n                                                            placeholder=\"Account Receivable\"\n                                                            tage=\"Account Receivable\"\n                                                            outlined/>\n                                                        <label\n                                                            class=\"label mb-0\">{{ $t(\"settlement_discount\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"mAccDiscount\"\n                                                            :items=\"accDiscount\"\n                                                            :rule=\"[(v) => !!v || $t('is_required')]\"\n                                                            item-value=\"id\"\n                                                            :item-text=\"(item) => `${item.number} - ${item.name}` \"\n                                                            return-object\n                                                            tage=\"Settlement Discount\"\n                                                            placeholder=\"Receipt Settlement Discount\"\n                                                            outlined=\"\">\n                                                        </v-select>\n                                                    </v-col>\n                                                    <v-col sm=\"6\" cols=\"12\">\n                                                        <label class=\"label mb-0\">{{ $t(\"sale_deposit\") }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            v-model=\"mAccDeposit\"\n                                                            :items=\"accDeposit\"\n                                                            :rule=\"[(v) => !!v || $t('is_required')]\"\n                                                            item-value=\"id\"\n                                                            :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                            return-object\n                                                            tage=\"Sale Deposit\"\n                                                            :disabled=\"disabledMe\"\n                                                            placeholder=\"Sale Deposit Account\"\n                                                            outlined/>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-tab-item>\n                                            <v-tab-item eager>\n                                                <p class=\"color_grey\">{{ $t('note_individual_desc') }}</p>\n                                                <editor\n                                                    ref=\"invoiceNoteEditor\"\n                                                    :resizable-content=\"true\"\n                                                    :resizable-toolbar=\"true\"\n                                                    :value=\"customer.noteOnInvoice\"\n                                                    style=\"height:120px\"\n                                                    class=\"mt-1\"\n                                                    rows=\"10\"\n                                                    cols=\"30\"/>\n                                            </v-tab-item>\n                                            <v-tab-item eager>\n                                                <v-col sm=\"12\" class=\"\">\n                                                    <h2 class=\"mb-2 font_18 width_100\">\n                                                        {{ $t(\"customer_image\") }}\n                                                    </h2>\n                                                    <v-row>\n                                                        <v-col sm=\"5\" cols=\"12\" lass=\"pt-2\">\n                                                            <p class=\"color_grey font_14\">\n                                                                {{ $t(\"add_funct_prod_variant_desc3\") }}</p>\n                                                        </v-col>\n                                                        <v-col sm=\"7\" cols=\"12\" class=\"py-0\">\n                                                            <v-img width=\"100px\" height=\"150px\" :src=\"src\"/>\n                                                            <label>\n                                                                <input type=\"file\"\n                                                                       name=\"image\"\n                                                                       id=\"image\"\n                                                                       :rules=\"fileSizeRules\"\n                                                                       accept=\".png, .jpg, .jpeg\"\n                                                                       ref=\"fileupload\"\n                                                                       @change=\"onFileChange\"/>\n                                                            </label>\n                                                        </v-col>\n                                                    </v-row>\n                                                </v-col>\n                                            </v-tab-item>\n                                        </v-tabs>\n                                    </v-form>\n                                </div>\n                                <div class=\"mt-3\">\n                                    <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                                        <span v-html=\"errorMessage\"/>\n                                    </v-alert>\n                                    <v-btn\n                                        color=\"primary\"\n                                        outlined\n                                        class=\" black--text text-capitalize\"\n                                        @click=\"cancel\">{{ $t(\"cancel\") }}\n                                    </v-btn>\n                                    <v-btn color=\"primary\"\n                                           class=\"white--text float-right text-capitalize\"\n                                           :disabled=\"btnDisabled\"\n                                           @click=\"onSaveClose('close')\">{{ $t(\"save_close\") }}\n                                    </v-btn>\n                                    <v-btn color=\"secondary\"\n                                           style=\"margin-right: 10px !important\"\n                                           class=\"white--text float-right text-capitalize\"\n                                           :disabled=\"btnDisabled\"\n                                           @click=\"onSaveClose('new')\" :hidden=\"hiddenButton\">{{ $t(\"save_new\") }}\n                                    </v-btn>\n                                </div>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"false\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\nimport {uuid} from \"vue-uuid\";\nimport CustomerModel from \"@/scripts/model/Customer\";\nimport kendo from \"@progress/kendo-ui\";\nimport {Editor} from \"@progress/kendo-editor-vue-wrapper\";\nimport {PAYMENT_OPINION_TYPE} from \"@/scripts/default_setup/Setting\";\nimport PaymentOptionModel from \"@/scripts/model/PaymentOption\";\nimport PaymentTermModel from \"@/scripts/model/PaymentTerm\";\n\nconst customerModel = new CustomerModel({});\nconst accountHandler = require(\"@/scripts/handler/accounting/account\");\nconst customerHandler = require(\"@/scripts/customerHandler\");\nconst customerTypeHandler = require(\"@/scripts/customerTypeHandler\");\nconst settingHandler = require(\"@/scripts/settingHandler\");\nconst settingsHandler = require(\"@/scripts/settingsHandler\");\nconst paymentOptionHandler = require(\"@/scripts/paymentOptionHandler\");\nconst otherHandler = require(\"@/scripts/otherHandler\");\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\");\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\");\nconst discountItemHandler = require(\"@/scripts/discountItemHandler\");\nconst customerGroupHandler = require(\"@/scripts/customerGroupHandler\");\n// import { DropDownList } from \"@progress/kendo-vue-dropdowns\";\n\nconst instituteHandler = require(\"@/scripts/instituteHandler\");\n\nconst $ = require(\"jquery\");\nconst textField = \"name\";\nconst keyField = \"id\";\nconst defaultItem = {[textField]: \"Select customer...\", [keyField]: null};\nconst emptyItem = {[textField]: \"loading ...\"};\nconst pageSize = 10;\n\nconst loadingData = [];\nwhile (loadingData.length < pageSize) {\n    loadingData.push({...emptyItem});\n}\nconst OPTION_TYPE = \"?type=Sale\";\nconst strFilterTerm = \"?type=pmt-customer\";\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nconst instituteId = cookie.instituteId;\n\nexport default {\n    name: \"IndividualCustomer\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        \"app-datepicker\": DatePickerComponent,\n        // dropdownlist: DropDownList,\n        editor: Editor,\n    },\n    data: () => ({\n        model_tabs: 0,\n        isHideBar: false,\n        showLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: \"\",\n        loadingTextAlert: \"\",\n        dialogM2: false,\n        alert: false,\n        addressType: [\"Billing\", \"Delivery\", \"Contact\"],\n        deliveryMethod: [],\n        genderItem: customerHandler.gender(),\n        valid: false,\n        valid2: true,\n        customer: customerModel,\n        customerTypes: [],\n        subOfCustomerItem: [],\n        subOfCustomer: [],\n        billByParent: [],\n        contactAddress: [],\n        paymentBilling: [],\n        accountTax: [],\n        customerList: [],\n        defaultTaxOnShipping: [],\n        mDefaultTaxOnShipping: {},\n        tax: [],\n        vat: [],\n        mVat: {},\n        customerBillToItem: [],\n        customerBillTo: [],\n        countries: [],\n        address: {\n            id: \"\",\n            name: \"\",\n            type: \"\",\n            country: {},\n            line1: \"\",\n            line2: \"\",\n        },\n        paymentOptions: [],\n        paymentTerms: [],\n        wareHouses: [],\n        mPaymentMethod: {},\n        mPaymentTerm: {},\n        mWareHouse: {},\n        accReceivable: [],\n        mAccReceivable: {},\n        accDeposit: [],\n        mAccDeposit: {},\n        accDiscount: [],\n        mAccDiscount: {},\n        priceLevel: [],\n        mPriceLevel: {},\n        discountItems: [],\n        customerGroups: [],\n        mDiscountItem: {},\n        mCustomerGroup: {},\n        registeredDate: new Date().toISOString().substr(0, 10),\n        imgFile: \"\",\n        src: \"\",\n        fileSizeRules: [\n            (files) =>\n                !files ||\n                !files.some((file) => file.size > 1024 * 1024) ||\n                \"Image size should be less than 1 MB!\",\n        ],\n        nameRules: [(v) => !!v || \"Name is required\"],\n        newClick: false,\n        popupSettings: {\n            height: \"250px\",\n        },\n        defaultItem: defaultItem,\n        baseUrl: customerHandler.search(),\n        init: {method: \"GET\", accept: \"application/json\", headers: []},\n        pendingRequest: undefined,\n        requestStarted: false,\n        skip: 0,\n        tempSkip: null,\n        total: 0,\n        filter: \"\",\n        textField: \"name\",\n        dataItemKey: \"id\",\n        baseCurrencyCode: \"\",\n        loggedUser: {\n            id: cookie.creator,\n            name: cookie.email\n        },\n        cashPayment: [],\n        billPayment: [],\n        qrPayment: [],\n        bankTransfer: [],\n        addressList: [],\n        lastNumber: 1,\n        disableNumber: false,\n        btnDisabled: false,\n        disabledMe: false\n    }),\n    methods: {\n        async loadInstituteInfo() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    instituteHandler.getOneCompany(instituteId).then((res) => {\n                        const company = res;\n                        if (company.hasOwnProperty(\"baseCurrency\")) {\n                            if (company.baseCurrency.hasOwnProperty(\"code\")) {\n                                this.baseCurrencyCode = company.baseCurrency.code;\n                            }\n                        }\n                    });\n                    resolve(\"resolved\");\n                }, 200);\n            });\n        },\n        upload() {\n            let data = {\n                file: this.imgFile,\n            };\n            customerHandler.upload(data).then((res) => {\n                window.console.log(res, \"upload\");\n            });\n        },\n        close(data) {\n            this.customer = new CustomerModel({});\n            if (this.$route.params.query !== undefined) {\n                window.console.log(this.$route.params.query, \"id--\");\n                window.history.go(-1);\n            } else {\n                // window.console.log(data, 'id-cus--')\n                this.$router.push({\n                    name: \"Customers\",\n                    params: {\n                        data: data,\n                    },\n                });\n            }\n        },\n        requestData(skip, filter) {\n            const url = this.baseUrl + `?filter=${filter}`;\n            // `search?$filter='${filter}'&$skip=${skip}&$top=${pageSize}&$count=true`;\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    return response.json();\n                })\n                .then(this.afterFetch);\n        },\n        onChange(event) {\n            const value = event.value;\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.customer.subOfCustomer = value;\n        },\n        afterFetch(json) {\n            this.customerList = json.data;\n        },\n        onFilterChange(event) {\n            const filter = event.filter.value;\n            // this.resetCach();\n            this.requestData(0, filter);\n            // this.dataItems = loadingData;\n            // this.skip = 0;\n            this.filter = filter;\n        },\n        onNewAddressClick() {\n            this.newClick = true;\n            this.address = {};\n        },\n        async loadCountry() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    otherHandler.country().then((res) => {\n                        this.showLoading = false;\n                        this.countries = res;\n                    });\n                }, 10);\n            });\n        },\n        onSaveCloseAddress() {\n            if (this.addresses) {\n                if (this.newClick) {\n                    this.address.id = uuid.v1();\n                    this.addresses.push({\n                        id: this.address.id,\n                        name: this.address.name,\n                        type: this.address.type,\n                        country: this.address.country,\n                        line1: this.address.line1,\n                        line2: this.address.line2,\n                    });\n                } else {\n                    const addr = this.address;\n                    const index = this.addresses.findIndex((item) => {\n                        return addr.id === item.id;\n                    });\n                    if (index < 0) {\n                        this.addresses.push(addr);\n                    } else {\n                        this.addresses.splice(index, 1, addr);\n                    }\n                }\n            }\n            this.addressList = this.addresses\n            window.console.log(this.addressList)\n            this.dialogM2 = false;\n        },\n        goEditAddress(e) {\n            this.newClick = false;\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridAddress\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            window.console.log(dataItem)\n            this.address = {\n                id: dataItem.id,\n                name: dataItem.name,\n                line1: dataItem.line1,\n                line2: dataItem.line2,\n                type: dataItem.type,\n                country: {\n                    abbreviation: dataItem.country.abbreviation || '',\n                    country: dataItem.country.country || ''\n                }\n            };\n            this.mCountry = dataItem.country;\n            this.dialogM2 = true;\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.gridAddressDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        onFileChange(e) {\n            // const file = e.target.files[0];\n            let input = e.target;\n            // Ensure that you have a file before attempting to read it\n            if (input.files && input.files[0]) {\n                if (input.files[0].size > 1024 * 1024) {\n                    e.preventDefault();\n                    alert(\"File too big (> 1MB)\");\n                    this.src = \"\";\n                    this.imgFile = \"\";\n                    this.$refs.fileupload.value = null;\n                } else {\n                    // create a new FileReader to read this image and convert to base64 format\n                    let reader = new FileReader();\n                    // Define a callback function to run, when FileReader finishes its job\n                    reader.onloadend = (e) => {\n                        // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                        // Read image as base64 and set to imageData\n                        this.imgFile = e.target.result;\n                    };\n                    // Start the reader job - read file as a data url (base64 format)\n                    reader.readAsBinaryString(input.files[0]);\n                    // this.url = input.files[0]\n                    this.src = URL.createObjectURL(e.target.files[0]);\n                }\n            }\n        },\n        async loadCustomerGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    customerGroupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.customerGroups = res;\n                    });\n                }, 10);\n            });\n        },\n        async customerGroupChanged() {\n            this.mDiscountItem = this.mCustomerGroup.hasOwnProperty(\"discountItem\")\n                ? this.mCustomerGroup.discountItem\n                : {};\n            this.mPriceLevel = this.mCustomerGroup.hasOwnProperty(\"priceLevel\")\n                ? this.mCustomerGroup.priceLevel\n                : {};\n        },\n        async loadPriceLevel() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    priceLevelHandler.get().then((res) => {\n                        this.priceLevel = res;\n                        if (this.priceLevel.length > 0) {\n                            this.mPriceLevel = this.priceLevel[0];\n                            this.customer.priceLevel = this.priceLevel[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async initData() {\n            // window.console.log('me', this.customer)\n            if (this.$route.params.id !== undefined) {\n                await this.loadSingleCustomer();\n            } else {\n                // this.clear()\n            }\n        },\n        clear() {\n            const cusType = this.customer.customerType || {}\n            this.customer = {};\n            this.customer.customerType = cusType\n            this.addressList = []\n            this.disabledMe = false\n            this.hiddenButton = false\n            this.disableNumber = false\n        },\n        customerTypeChange() {\n            // window.console.log('cus type changed', this.customer.type)\n            if (this.customer.hasOwnProperty(\"customerType\")) {\n                this.mPaymentMethod = this.customer.customerType.paymentOption;\n                // this.mPaymentTerm = this.customer.customerType.paymentTerm;\n                this.mVat = this.customer.customerType.saleTax;\n                // this.mDefaultTaxOnShipping = this.customer.type.defaultTaxOnShipping\n                this.mAccDeposit = this.customer.customerType.saleDepositAcc;\n                this.mAccDiscount = this.customer.customerType.saleDiscountAcc;\n                // this.customer.priceLevel = this.customer.customerType.priceLevel\n\n                this.customer.billPayment = this.customer.customerType.billPayment\n                this.customer.qrPayment = this.customer.customerType.qrPayment\n                this.customer.cashPayment = this.customer.customerType.cashPayment\n                this.customer.bankTransfer = this.customer.customerType.bankTransfer\n                // Load Prefix\n                // this.customer.number = this.pad(1, 8);\n                this.onCheckChanged()\n            }\n            // let match = this.customerItem.filter(m => m.customerType.name === this.customerType.name).map(item => {\n            //     return {\n            //         id: item.uuid,\n            //     }\n            // })\n            // window.console.log(match.length)\n            // let num = match.length + 1\n            // this.customer.number = this.pad(num, 6)\n            // // window.console.log(this.pad(num, 6))\n            // window.console.log(this.customer.number)\n            // Vue.nextTick()\n        },\n        pad(value, length) {\n            return (\"0\".repeat(length) + value).slice(-length);\n        },\n        removeRow() {\n        },\n        numberChange() {\n            let oldnum = this.customer.number;\n            let match1 = this.customerItem\n                .filter((m) => m.number === this.customer.number)\n                .map((item) => {\n                    return {\n                        id: item.uuid,\n                    };\n                });\n            if (match1.length > 0) {\n                this.customer.number = oldnum;\n                // this.customerTypeChange()\n                this.$snotify.error(\"Number is exist!\");\n            }\n        },\n        errorMessage() {\n        },\n        addRow() {\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((result) => {\n                if (result.value) {\n                    this.clear()\n                    this.$router.go(-1);\n                }\n            });\n        },\n        async onSaveClose(save) {\n            window.console.log(1, save)\n            const editorNote = this.$refs.invoiceNoteEditor.kendoWidget();\n            this.customer.noteOnInvoice = editorNote.value();\n            if (!this.$refs.form.validate()) {\n                // window.console.log(\"in validation\");\n                // if(Object.keys(this.mPaymentTerm).length === 0){\n                //   this.model_tabs = 2;\n                this.$snotify.error(\n                    \"Field is required, please check field each of tabs!\"\n                );\n                // }\n                return;\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    // window.console.log(this.mShipVAT)\n                    let data = {\n                        id: this.customer.id ? this.customer.id : \"\",\n                        name: this.customer.name,\n                        alternativeName: this.customer.alternativeName,\n                        customerType: this.customer.customerType,\n                        type: \"Individual\",\n                        crn: this.customer.crn,\n                        abbr: this.customer.customerType.abbr,\n                        number: this.customer.number,\n                        subOfCustomer: this.customer.subOfCustomer,\n                        registeredDate: this.customer.registeredDate,\n                        billingType: this.customer.billingType,\n                        consumerId: this.customer.consumerId,\n                        isDonor: false,\n                        taxId: \"\",\n                        status: this.customer.status,\n                        deleted: this.customer.deleted,\n                        contactAddress: {\n                            gender: this.gender,\n                            phoneNumber: this.phone,\n                            email: this.email,\n                            dob: this.dob,\n                            address: this.addressList,\n                            latitude: this.latitude,\n                            longitude: this.longitude,\n                        },\n                        paymentBilling: {\n                            customerGroup: this.mCustomerGroup,\n                            paymentTerm: this.mPaymentTerm,\n                            paymentOption: this.mPaymentMethod,\n                            assignTo: {},\n                            // warehouse: this.mWareHouse,\n                            // creditLimit: this.creditLimit,\n                            discountItem: this.mDiscountItem,\n                            priceLevel: this.customer.priceLevel,\n                        },\n                        paymentTerm: new PaymentTermModel(this.mPaymentTerm),\n                        accountTax: {\n                            receivableAcc: this.mAccReceivable,\n                            saleDepositAcc: this.mAccDeposit,\n                            saleDiscountAcc: this.mAccDiscount,\n                            saleTax: this.mVat\n                        },\n                        noteOnInvoice: this.customer.noteOnInvoice,\n                        file: this.imgFile,\n                        image: this.customer.image,\n                        attachFile: {},\n                        loggedUser: this.loggedUser,\n                        priceLevel: this.customer.priceLevel,\n                        cashPayment: new PaymentOptionModel(this.customer.cashPayment),\n                        qrPayment: new PaymentOptionModel(this.customer.qrPayment),\n                        bankTransfer: new PaymentOptionModel(this.customer.bankTransfer),\n                        billPayment: new PaymentOptionModel(this.customer.billPayment),\n\n                        autoNumber: this.customer.autoNumber || true,\n                    };\n                    // window.console.log(data, \"data\");\n                    this.showLoading = true\n                    this.btnDisabled = true\n                    customerHandler\n                        .create(data)\n                        .then((response) => {\n                            if (response.data.statusCode === 201) {\n                                // this.loadCustomerType()\n                                this.clear()\n                                this.showLoading = false\n                                this.btnDisabled = false\n                                if (save == \"close\") {\n                                    this.loadAccount()\n                                    this.loadTax()\n                                    this.close(response.data.data);\n                                } else {\n                                    this.loadAccount()\n                                    this.loadTax()\n                                    this.clear()\n                                }\n                                // this.$refs.form.reset()\n                                this.$snotify.success(\"Successfully\");\n                            } else {\n                                this.showLoading = false\n                                this.btnDisabled = false\n                            }\n                        })\n                        .catch(() => {\n                            this.showLoading = false\n                            this.btnDisabled = false\n                            this.$snotify.error(\"Something went wrong\");\n                        });\n                }, 10);\n            });\n        },\n        async loadCustomerType() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    customerTypeHandler.get().then((res) => {\n                        this.customerTypes = res.filter((m) => {\n                            return m.nature.name.includes(\"Individual\");\n                        });\n                        // window.console.log(res)\n                        // if (this.customerTypes.length > 0) {\n                        //   this.customer[\"customerType\"] = this.customerTypes[0];\n                        //   this.customerTypeChange();\n                        // }\n                    });\n                }, 10);\n            });\n        },\n        async loadAccount() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    accountHandler.getAll().then((res) => {\n                        this.showLoading = false;\n                        //Receivable Account\n                        this.accReceivable = res.data\n                            .filter((m) => m.account_type.number === 7)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accReceivable.length > 0) {\n                            this.mAccReceivable = this.accReceivable[0];\n                        }\n                        //Deposit Account\n                        this.accDeposit = res.data\n                            .filter(\n                                (m) =>\n                                    m.account_type.number === 20 || m.account_type.number === 28\n                            )\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accDeposit.length > 0) {\n                            this.mAccDeposit = this.accDeposit[0];\n                        }\n                        //Discount Account\n                        this.accDiscount = res.data\n                            .filter((m) => m.account_type.number === 38)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accDiscount.length > 0) {\n                            this.mAccDiscount = this.accDiscount[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadTax() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    settingHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.tax = res;\n                        let vAT = this.tax.filter(\n                            (m) => m.taxType.typeId === 1 && m.transactionType === \"Sale\"\n                        ); // valuable tax\n                        this.vat = vAT; // valuable tax\n                        if (this.vat.length > 0) {\n                            this.mVat = this.vat[0];\n                        }\n\n                        // let vATs = this.tax.filter(m => m.abbr === 'ST') // Shipping Tax\n                        // this.defaultTaxOnShipping = vATs[0]['subOf'] // valuable tax\n                        // if (this.defaultTaxOnShipping.length > 0) {\n                        //     this.mDefaultTaxOnShipping = this.defaultTaxOnShipping[0]\n                        // }\n                    });\n                }, 10);\n            });\n        },\n        async loadPaymentOption() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const strFilter = '?optionType=Customer'\n                    paymentOptionHandler.list(strFilter).then((res) => {\n                        this.showLoading = false;\n                        const data = res.data.data || []\n                        this.cashPayment = data.filter(m => m.type === PAYMENT_OPINION_TYPE.CASH_PAYMENT)\n                        this.billPayment = data.filter(m => m.type === PAYMENT_OPINION_TYPE.BILL_PAYMENT)\n                        this.qrPayment = data.filter(m => m.type === PAYMENT_OPINION_TYPE.QR_PAYMENT)\n                        this.bankTransfer = data.filter(m => m.type === PAYMENT_OPINION_TYPE.BANK_TRANSFER)\n                    });\n                }, 10);\n            });\n        },\n        async loadPaymentTerm() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    settingsHandler.getPaymentTerm(strFilterTerm).then((res) => {\n                        this.showLoading = false;\n                        this.paymentTerms = [];\n                        if (res.data.statusCode === 200) {\n                            this.paymentTerms = res.data.data;\n                            if (this.paymentTerms.length > 0) {\n                                this.mPaymentTerm = this.paymentTerms.filter(k => k.name === 'COD')[0];\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadSingleCustomer() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    this.btnDisabled = false\n                    customerHandler.get(this.$route.params.id).then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            const resultData = res.data.data\n                            if (resultData.length > 0) {\n                                let checkOldNote = resultData[0].noteOnInvoice;\n                                if (typeof checkOldNote == \"object\") {\n                                    resultData[0].noteOnInvoice = \"\";\n                                }\n                                this.customer = resultData[0];\n                                window.console.log('this.customer', this.customer)\n                                this.mCustomerGroup = this.customer.paymentBilling.hasOwnProperty(\"customerGroup\") ? this.customer.paymentBilling.customerGroup : {};\n                                this.mPaymentTerm = this.customer.paymentBilling.hasOwnProperty(\"paymentTerm\") ? this.customer.paymentBilling.paymentTerm : {};\n                                this.mPaymentMethod = this.customer.paymentBilling.hasOwnProperty(\"paymentOption\") ? this.customer.paymentBilling.paymentOption : {};\n                                this.mWareHouse = this.customer.paymentBilling.hasOwnProperty(\"warehouse\") ? this.customer.paymentBilling.warehouse : {};\n                                this.mDiscountItem = this.customer.paymentBilling.hasOwnProperty(\"discountItem\") ? this.customer.paymentBilling.discountItem : {};\n                                // this.mPriceLevel = this.customer.paymentBilling.hasOwnProperty(\"priceLevel\") ? this.customer.paymentBilling.priceLevel : {};\n                                this.mAccReceivable = this.customer.accountTax.hasOwnProperty(\"receivableAcc\") ? this.customer.accountTax.receivableAcc : {};\n                                this.mAccDiscount = this.customer.accountTax.hasOwnProperty(\"saleDiscountAcc\") ? this.customer.accountTax.saleDiscountAcc : {};\n                                this.mAccDeposit = this.customer.accountTax.hasOwnProperty(\"saleDepositAcc\") ? this.customer.accountTax.saleDepositAcc : {};\n                                this.mVat = this.customer.accountTax.hasOwnProperty(\"saleTax\") ? this.customer.accountTax.saleTax : {};\n                                this.mPriceLevel = this.customer.priceLevel || {}\n                                let contact_address = this.customer.contactAddress\n                                if (contact_address.address.length > 0) {\n                                    this.addressList = this.customer.contactAddress.address\n                                }\n                                // this.mDefaultTaxOnShipping = this.customer.accountTax.hasOwnProperty('defaultTaxOnShipping') ? this.customer.accountTax.defaultTaxOnShipping : {}\n                                const hasImg = this.customer.hasOwnProperty(\"image\");\n                                this.src = \"\";\n                                let imgUrl = \"\";\n                                if (hasImg) {\n                                    if (this.customer.image.hasOwnProperty(\"default\")) {\n                                        imgUrl = this.customer.image.default.thumb;\n                                        this.src =\n                                            \"https://s3-ap-southeast-1.amazonaws.com/images.banhji/\" +\n                                            imgUrl;\n                                    }\n                                }\n                                this.hasTxn(this.customer.id)\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadCustomerBillTo() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    otherHandler.customerBillTo().then((res) => {\n                        this.customerBillToItem = res;\n                        if (this.customerBillToItem.length > 0) {\n                            this.customerBillTo = this.customerBillToItem[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadTaxAndAccountByCustomerType() {\n        },\n        async loadWareHouses() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    warehouseHandler.getWarehouseSettingAll().then((res) => {\n                        this.showLoading = false;\n                        this.wareHouses = res;\n                        if (this.wareHouses.length > 0) {\n                            this.mWareHouse = this.wareHouses[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadDiscountItems() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    discountItemHandler.list(OPTION_TYPE).then((res) => {\n                        if (res.data.statusCode === 200) this.showLoading = false;\n                        this.discountItems = res.data.data;\n                        if (this.discountItems.length > 0) {\n                            this.mDiscountItem = this.discountItems[0]\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadSubOfCustomer() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    customerHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.customerList = res.data.data;\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadLastNumber() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    if (this.customer.customerType) {\n                        const abbr = this.customer.customerType.abbr || ''\n                        const strFilter = {\n                            abbr: abbr,\n                            type: 'Individual'\n                        }\n                        if (abbr) {\n                            this.showLoading = true;\n                            customerHandler.lastNumber(strFilter).then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    const number = res.data.data;\n                                    this.lastNumber = this.pad(number.lastNumber || 1, 7)\n                                    this.customer.number = this.lastNumber\n                                } else {\n                                    this.showLoading = false;\n                                }\n                            });\n                        }\n                    }\n\n                }, 10);\n            });\n        },\n        onCheckChanged() {\n            if (this.customer.autoNumber) {\n                this.disableNumber = true\n                this.loadLastNumber()\n            } else {\n                this.disableNumber = false\n            }\n        },\n        async hasTxn(id) {\n            if (id) {\n                const strFilter = \"?id=\" + id;\n                customerHandler\n                    .hasTxn(strFilter)\n                    .then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const response = res.data.data\n                            this.disabledMe = !response.delete\n                        } else {\n                            this.disabledMe = false\n                        }\n\n                    });\n            }\n        },\n    },\n    watch: {\n        // id() {\n        //     // this.product = this.selectedProduct\n        //     window.console.log(this.id, \"watch\");\n        //     if (this.id !== undefined) {\n        //         this.loadSingleCustomer();\n        //     }\n        // },\n        '$route': 'loadSingleCustomer'\n    },\n    mounted: async function () {\n        await this.loadInstituteInfo();\n        this.requestData(0, this.filter);\n        await this.loadTax();\n        await this.loadPaymentOption();\n        await this.loadPaymentTerm();\n        await this.loadCustomerType();\n        await this.loadCustomerBillTo();\n        await this.initData();\n    },\n    created: async function () {\n        await this.loadAccount();\n        // await this.loadWareHouses();\n        await this.loadPriceLevel();\n        await this.loadDiscountItems();\n        await this.loadCustomerGroup();\n        await this.loadCountry();\n        // await this.loadSubOfCustomer()\n    },\n    computed: {\n        virtual: function () {\n            return {\n                pageSize: pageSize,\n                // @ts-ignore\n                skip: this.skip,\n                // @ts-ignore\n                total: this.total,\n            };\n        },\n        creditLimit: {\n            get() {\n                if (this.customer.hasOwnProperty(\"paymentBilling\")) {\n                    if (this.customer.paymentBilling.hasOwnProperty(\"creditLimit\")) {\n                        return this.customer.paymentBilling.creditLimit;\n                    } else {\n                        return 0;\n                    }\n                } else {\n                    return 0;\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"paymentBilling\")) {\n                    if (this.customer.paymentBilling.hasOwnProperty(\"creditLimit\")) {\n                        this.customer.paymentBilling.creditLimit = value;\n                    }\n                }\n            },\n        },\n        addresses: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"address\")) {\n                        return this.customer.contactAddress.address;\n                    } else {\n                        return [];\n                    }\n                } else {\n                    return [];\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"address\")) {\n                        this.customer.contactAddress.address.push(value);\n                    }\n                }\n            },\n        },\n        gender: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"gender\")) {\n                        return this.customer.contactAddress.gender;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    return \"\";\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"gender\")) {\n                        this.customer.contactAddress.gender = value;\n                    }\n                }\n            },\n        },\n        email: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"email\")) {\n                        return this.customer.contactAddress.email;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    return \"\";\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"email\")) {\n                        this.customer.contactAddress.email = value;\n                    }\n                }\n            },\n        },\n        dob: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"dob\")) {\n                        return this.customer.contactAddress.dob;\n                    } else {\n                        return new Date().toISOString().substr(0, 10);\n                    }\n                } else {\n                    return new Date().toISOString().substr(0, 10);\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"dob\")) {\n                        this.customer.contactAddress.dob = value;\n                    }\n                }\n            },\n        },\n        latitude: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"latitude\")) {\n                        return this.customer.contactAddress.latitude;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    return \"\";\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"latitude\")) {\n                        this.customer.contactAddress.latitude = value;\n                    }\n                }\n            },\n        },\n        longitude: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"longitude\")) {\n                        return this.customer.contactAddress.longitude;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    return \"\";\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"longitude\")) {\n                        this.customer.contactAddress.longitude = value;\n                    }\n                }\n            },\n        },\n        phone: {\n            get() {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"phoneNumber\")) {\n                        return this.customer.contactAddress.phoneNumber;\n                    } else {\n                        return \"\";\n                    }\n                } else {\n                    return \"\";\n                }\n            },\n            set(value) {\n                if (this.customer.hasOwnProperty(\"contactAddress\")) {\n                    if (this.customer.contactAddress.hasOwnProperty(\"phoneNumber\")) {\n                        this.customer.contactAddress.phoneNumber = value;\n                    }\n                }\n            },\n        },\n        hiddenButton: {\n            get: function () {\n                return this.$route.query.type == \"edit\";\n            },\n            set: function (newValue) {\n                window.console.log('newValue--', !newValue)\n                return !newValue\n            }\n        }\n    },\n    destroyed() {\n        // this.resetCach()\n    },\n};\n</script>\n\n<style scoped>\n.k-dropdown {\n    width: 100%;\n    margin-top: 4px;\n}\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n.v-tab.v-tab {\n    color: inherit;\n    font-size: 16px !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1250px; */\n        max-width: 1080px;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> thead\n> tr\n> th {\n    font-family: \"Niradei-Bold\", serif;\n    color: #000 !important;\n    border-top: 1px solid #000 !important;\n    border-bottom: 1px solid #000 !important;\n    font-size: 15px !important;\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> thead\n> tr\n> td {\n    color: #000 !important;\n    padding: 5px !important;\n    border-bottom: 1px solid #000 !important;\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:last-child\ntd {\n    border-bottom: 1px solid #000 !important;\n}\n\n.v-slide-group__content {\n    background-color: #f8f8f9 !important;\n}\n\n.v-tab--active {\n    background-color: #ffffff !important;\n    border-left: none;\n}\n\n.function_content {\n    padding: 0;\n    border-bottom: 1px solid #ddd;\n    background-color: #f8f8f9;\n}\n</style>\n"]}]}