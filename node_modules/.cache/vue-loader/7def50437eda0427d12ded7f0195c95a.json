{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/services_items/Service.vue?vue&type=style&index=0&id=0162d7b5&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/services_items/Service.vue","mtime":1643017019346},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mdW5jdGlvbl9jb250ZW50IHsKICAgIHBhZGRpbmc6IDAgMjVweCAyNXB4OwogICAgYm9yZGVyLWJvdHRvbTogMDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDEyNjRweCkgewogICAgLmNvbnRhaW5lciB7CiAgICAgICAgLyogbWF4LXdpZHRoOiAxMTg1cHg7ICovCiAgICAgICAgbWF4LXdpZHRoOiAxMDgwcHggIWltcG9ydGFudDsKICAgIH0KfQoKLmdyYXlCZyB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjhGOEY5Owp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAgIC5tYi02IHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7CiAgICB9Cn0KCi5zZWN0aW9uMiB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDZkN2Q4Owp9CgouYm9yZGVyX2dyZXkgewogICAgYm9yZGVyOiAxcHggc29saWQgI2Q2ZDdkODsKfQoKLmF0dGFjaG1lbnRfdGFibGUgewogICAgd2lkdGg6IDEwMCU7Cn0KCi5teV9jaGVja2JveCBpbnB1dFt0eXBlPSJjaGVja2JveCJdICsgbGFiZWwgewogICAgZGlzcGxheTogZ3JpZDsKICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjAlIDgwJTsKICAgIG1hcmdpbjogMC4yZW0gMHB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgbGluZS1oZWlnaHQ6IDE2cHg7CiAgICBwYWRkaW5nOiAwLjJlbTsKfQo="},{"version":3,"sources":["Service.vue"],"names":[],"mappingsuiCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Service.vue","sourceRoot":"src/views/products_services/service/services_items","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"service\") }}</h2>\n                                <v-icon\n                                    @click=\"cancel()\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                <v-row>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label  mb-0\">{{ $t(\"category\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            tage=\"Service Category\"\n                                            :placeholder=\"$t('select_type')\"\n                                            outlined\n                                            v-model=\"mCategory\"\n                                            :items=\"categories\"\n                                            item-value=\"id\"\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            @change=\"onCategoryChanged\"\n                                            return-object\n                                            :rules=\"[(v) => !!v || 'Category is required']\"\n                                            required/>\n                                        <label class=\"label  mb-0\">{{ $t(\"group\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            tage=\"Product Group\"\n                                            :placeholder=\"$t('select_group')\"\n                                            outlined\n                                            v-model=\"mGroup\"\n                                            :disabled=\"disabled\"\n                                            :items=\"groups\"\n                                            @change=\"loadSubGroup(mGroup)\"\n                                            item-value=\"id\"\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            clearable\n                                            return-object\n                                        />\n                                        <label class=\"label  mb-0\">{{ $t(\"sub_group\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            :placeholder=\"$t('select_sub_group')\"\n                                            outlined\n                                            tage=\"Sub Group\"\n                                            v-model=\"mSubGroup\"\n                                            :items=\"subGroups\"\n                                            :disabled=\"disabledS\"\n                                            item-value=\"id\"\n                                            return-object\n                                            clearable\n                                            :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                            required\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pl-0\">\n                                        <label class=\"label mb-0 mt-1 mx-1\">{{ $t(\"code\") }}</label>\n                                        <div class=\"mt-1 d-flex mr-0\">\n                                            <v-text-field\n                                                class=\"flex-1\"\n                                                v-model=\"service.sku\"\n                                                outlined\n                                                :rules=\"[(v) => !!v || 'SKU is required']\"\n                                                required\n                                            />\n                                            <v-icon\n                                                color=\"black\"\n                                                size=\"30\"\n                                                style=\"height: 40px\"\n                                                class=\"border_qrcode ml-2\"\n                                                @click=\"skuGenerator\"\n                                            >mdi-qrcode\n                                            </v-icon>\n                                        </div>\n                                        <label class=\"label  mb-0\">{{ $t(\"service_name\") }}</label>\n                                        <v-text-field\n                                            class=\"pt-1\"\n                                            outlined\n                                            tage=\"Service Name\"\n                                            v-model=\"service.name\"\n                                            :rules=\"[(v) => !!v || 'Name is required']\"\n                                            required\n                                        />\n                                        <label class=\"label  mb-0\">{{ $t(\"not_reused\") }}</label>\n                                        <div class=\"mt-1 d-flex mr-0\">\n                                            <input type=\"checkbox\" id=\"6\" v-model=\"service.reUsed\"/>\n                                        </div>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\">\n                                        <h2 class=\"font_20 mb-0\">\n                                            {{ $t(\"description\") }}\n                                        </h2>\n                                        <p class=\"grayBg---text mb-0 font_12\">\n                                            {{ $t(\"this_will_be_used_service\") }}\n                                        </p>\n                                        <v-textarea\n                                            class=\"mt-1\"\n                                            outlined\n                                            v-model=\"service.saleDescription\"\n                                            no-resize\n                                            height=\"140px\"\n                                            rows=\"6\"\n                                        />\n                                        <!--                                        <v-row>-->\n                                        <!--                                            <v-col sm=\"6\" cols=\"12\" class=\"py-0\">-->\n                                        <!--                                                <div class=\"my_radio py-0\">-->\n                                        <!--                                                    <input id=\"radio1\" name=\"radio\" type=\"radio\" value=1>-->\n                                        <!--                                                    <label for=\"radio1\">{{ $t('delayed_revenue') }}</label>-->\n                                        <!--                                                </div>-->\n                                        <!--                                            </v-col>-->\n                                        <!--                                            <v-col sm=\"6\" cols=\"12\" class=\"py-0\">-->\n                                        <!--                                                <div class=\"my_radio py-0\">-->\n                                        <!--                                                    <input id=\"radio2\" name=\"radio\" type=\"radio\" value=2>-->\n                                        <!--                                                    <label for=\"radio2\">{{ $t('consignment_item') }}</label>-->\n                                        <!--                                                </div>-->\n                                        <!--                                            </v-col>-->\n\n\n                                        <!--                                        </v-row>-->\n\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 my-4 rounded-0\">\n                                <v-row>\n                                    <v-col cols=\"12\" class=\"pb-0\">\n                                        <p class=\"grayBg---text font_14 mb-0\">\n                                            {{ $t(\"you_can_add_more\") }}\n                                        </p>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-2\">\n                                        <label>{{ $t(\"uom\") }}</label>\n                                        <v-select\n                                            :placeholder=\"$t('select_uom')\"\n                                            outlined\n                                            tage=\"Sale Base Uom\"\n                                            v-model=\"mUOM\"\n                                            :items=\"uom\"\n                                            item-value=\"id\"\n                                            class=\"mt-1\"\n                                            :item-text=\"(item) => `${item.name}`\"\n                                            return-object\n                                            :rules=\"[(v) => !!v['id'] || 'UOM is required']\"\n                                            required\n                                        />\n\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-2\">\n                                        <label>{{ $t(\"price_level\") }}</label>\n                                        <v-select :placeholder=\"$t('price_level')\"\n                                                  outlined\n                                                  tage=\"price level\"\n                                                  :rules=\"[v => !!v['id'] || 'required']\"\n                                                  v-model=\"service.priceLevel\"\n                                                  :items=\"priceLevel\"\n                                                  class=\"mt-1\"\n                                                  @change=\"priceLevelChanged\"\n                                                  item-value=\"id\"\n                                                  item-text=\"name\"\n                                                  return-object\n                                                  required/>\n\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-2\">\n                                        <label>{{ $t('selling_price') }} {{ code }}</label>\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"3\" class=\"mt-1 pt-0 pr-0\">\n                                                <div class=\"code_text text-bold\">{{ amountType }}</div>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"9\" class=\"mt-1 py-0 pl-0\">\n                                                <v-text-field class=\"custom-border\"\n                                                              outlined\n                                                              type=\"number\"\n                                                              tage=\"Price\"\n                                                              @change=\"autoPrice\"\n                                                              v-model=\"service.value\"\n                                                />\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-2\">\n                                        <label>{{ $t('pricing_base') }} (%)</label>\n                                        <v-text-field class=\"mt-1\"\n                                                      outlined\n                                                      type=\"number\"\n                                                      min=\"1\"\n                                                      @change=\"autoPrice\"\n                                                      max=\"100\"\n                                                      tage=\"Base\"\n                                                      v-model=\"service.base\">\n\n                                        </v-text-field>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 my-4 rounded-0\">\n                                <v-row>\n                                    <v-col sm=\"5\" cols=\"12\" class=\"pb-0\">\n                                        <h2 class=\"font_20 mb-0\">\n                                            {{ $t(\"account\") }}\n                                        </h2>\n                                        <p class=\"mb-3 color_grey\">\n                                            {{ $t(\"add_funct_prod_desc\") }}\n                                        </p>\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12 py-0\">\n                                                <label class=\"label mb-0\">{{ $t(\"revenue\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    :placeholder=\"$t('revenue')\"\n                                                    tage=\"Revenue\"\n                                                    v-model=\"mIncomeAcc\"\n                                                    :items=\"accRevenue\"\n                                                    item-value=\"id\"\n                                                    :loading=\"accLoading\"\n                                                    :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                    :rules=\"[(v) => !!v['id'] || 'Account is required']\"\n                                                    return-object\n                                                    outlined\n                                                />\n                                                <label class=\"label  mb-0\">{{\n                                                        $t(\"cost_of_goods_sold\")\n                                                    }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    :placeholder=\"$t('select_goods')\"\n                                                    v-model=\"mAccCostOfGoodSold\"\n                                                    :items=\"accCostOfGoodSold\"\n                                                    item-value=\"id\"\n                                                    :loading=\"accLoading\"\n                                                    :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                    :rules=\"[(v) => !!v['id'] || 'Account is required']\"\n                                                    return-object\n                                                    outlined\n                                                />\n                                                <!--                                                <label class=\"label\">{{-->\n                                                <!--                                                        $t(\"sale_tax\")-->\n                                                <!--                                                    }}</label>-->\n                                                <!--                                                <v-select-->\n                                                <!--                                                    class=\"mt-1\"-->\n                                                <!--                                                    tage=\"Default Tax\"-->\n                                                <!--                                                    v-model=\"defaultTax\"-->\n                                                <!--                                                    :items=\"vat\"-->\n                                                <!--                                                    :loading=\"accLoading\"-->\n                                                <!--                                                    item-value=\"id\"-->\n                                                <!--                                                    item-text=\"defaultTax\"-->\n                                                <!--                                                    return-object-->\n                                                <!--                                                    outlined/>-->\n                                                <!--                                                <label class=\"label\">{{-->\n                                                <!--                                                        $t(\"purchase_tax\")-->\n                                                <!--                                                    }}</label>-->\n                                                <!--                                                <v-select-->\n                                                <!--                                                    class=\"pt-1\"-->\n                                                <!--                                                    tage=\"Default Tax\"-->\n                                                <!--                                                    v-model=\"mPurchaseTax\"-->\n                                                <!--                                                    :items=\"purchaseTax\"-->\n                                                <!--                                                    :loading=\"accLoading\"-->\n                                                <!--                                                    item-value=\"id\"-->\n                                                <!--                                                    item-text=\"defaultTax\"-->\n                                                <!--                                                    return-object-->\n                                                <!--                                                    outlined/>-->\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col sm=\"7\" cols=\"12\" class=\"pb-0\">\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                                <!--                                                <label class=\"label\">{{-->\n                                                <!--                                                        $t(\"special_tax\")-->\n                                                <!--                                                    }}</label>-->\n                                                <!--                                                <v-select-->\n                                                <!--                                                    class=\"mt-1\"-->\n                                                <!--                                                    tage=\"Special Tax\"-->\n                                                <!--                                                    v-model=\"mSpecificTax\"-->\n                                                <!--                                                    :items=\"specificTax\"-->\n                                                <!--                                                    item-value=\"id\"-->\n                                                <!--                                                    item-text=\"defaultTax\"-->\n                                                <!--                                                    return-object-->\n                                                <!--                                                    outlined-->\n                                                <!--                                                />-->\n                                                <!--                                                <label class=\"label  mb-0\">{{ $t(\"other_tax\") }}</label>-->\n                                                <!--                                                <v-select-->\n                                                <!--                                                    class=\"mt-1\"-->\n                                                <!--                                                    tage=\"Special Tax\"-->\n                                                <!--                                                    v-model=\"mOtherTax\"-->\n                                                <!--                                                    :items=\"otherTax\"-->\n                                                <!--                                                    item-value=\"id\"-->\n                                                <!--                                                    item-text=\"defaultTax\"-->\n                                                <!--                                                    return-object-->\n                                                <!--                                                    outlined-->\n                                                <!--                                                />-->\n                                            </v-col>\n                                        </v-row>\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"pt-0 pb-2\">\n                                                <v-card\n                                                    outlined\n                                                    dense\n                                                    class=\"px-3 rounded-0\"\n                                                    height=\"255\"\n                                                >\n                                                    <v-row>\n                                                        <v-col sm=\"12\" class=\"\">\n                                                            <h2 class=\"mb-2 font_20 width_100\">\n                                                                {{ $t(\"default_image\") }}\n                                                            </h2>\n                                                            <v-row>\n                                                                <v-col sm=\"5\" cols=\"12\" lass=\"pt-2\">\n                                                                    <p class=\"color_grey font_14\">\n                                                                        {{ $t(\"add_funct_prod_variant_desc3\") }}\n                                                                    </p>\n                                                                </v-col>\n                                                                <v-col sm=\"7\" cols=\"12\" class=\"py-0\">\n                                                                    <v-img\n                                                                        width=\"100px\"\n                                                                        height=\"150px\"\n                                                                        :src=\"src\"\n                                                                    />\n                                                                    <label>\n                                                                        <input\n                                                                            type=\"file\"\n                                                                            name=\"image\"\n                                                                            class=\"file_width\"\n                                                                            id=\"image\"\n                                                                            :rules=\"fileSizeRules\"\n                                                                            accept=\".png, .jpg, .jpeg\"\n                                                                            ref=\"fileupload\"\n                                                                            @change=\"onFileChange\"\n                                                                        />\n                                                                    </label>\n                                                                </v-col>\n                                                            </v-row>\n                                                        </v-col>\n                                                    </v-row>\n                                                </v-card>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider/>\n                            <v-divider/>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn @click=\"cancel\"\n                                       color=\"black\"\n                                       outlined\n                                       class=\"text-capitalize  black--text float-left\">\n                                    {{ $t(\"cancel\") }}\n                                </v-btn>\n                                <v-btn @click=\"onSaveClose('close')\"\n                                       color=\"primary\"\n                                       class=\"float-right  white--text text-capitalize\">\n                                    {{ $t(\"save_close\") }}\n                                </v-btn>\n                                <v-btn color=\"secondary\"\n                                       style=\"margin-right: 10px !important\"\n                                       class=\"white--text float-right text-capitalize\"\n                                       @click=\"onSaveClose('new')\" :hidden=\"hiddenButton\">{{ $t(\"save_new\") }}\n                                </v-btn>\n                            </v-card>\n                            <!-- <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn\n                                    color=\"black\"\n                                    @click=\"close\"\n                                    class=\"text-capitalize  white--text float-left\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n                                <v-menu>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <v-btn color=\"primary\" class=\"ml-2  float-right text-capitalize white--text\"\n                                               v-on=\"on\">\n                                            {{ $t(\"save_option\") }}\n                                            <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                        </v-btn>\n                                    </template>\n                                    <v-list rounded>\n                                        <v-list-item-group>\n                                            <v-list-item>\n                                                <v-list-item-content>\n                                                    <v-list-item-title>{{\n                                                            $t(\"save_new\")\n                                                        }}\n                                                    </v-list-item-title>\n                                                </v-list-item-content>\n                                            </v-list-item>\n                                            <v-list-item>\n                                                <v-list-item-content @click=\"onSaveClose\">\n                                                    <v-list-item-title>{{\n                                                            $t(\"save_close\")\n                                                        }}\n                                                    </v-list-item-title>\n                                                </v-list-item-content>\n                                            </v-list-item>\n                                        </v-list-item-group>\n                                    </v-list>\n                                </v-menu>\n                                <LoadingMe\n                                    :isLoading=\"showLoading\"\n                                    :fullPage=\"true\"\n                                    :myLoading=\"true\"\n                                />\n                            </v-card> -->\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport ServiceItem from \"@/scripts/model/ServiceItem\";\nimport {i18n} from '@/i18n';\n\nlet serviceItem = new ServiceItem({});\n\nconst accountHandler = require(\"@/scripts/handler/accounting/account\");\nconst categoryHandler = require(\"@/scripts/categoryHandler\");\nconst groupHandler = require(\"@/scripts/groupHandler\");\nconst subGroupHandler = require(\"@/scripts/subGroupHandler\");\nconst uomHandler = require(\"@/scripts/uomHandler\");\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\");\nconst serviceItemHandler = require(\"@/scripts/serviceItemHandler\");\nconst settingHandler = require(\"@/scripts/settingHandler\");\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\")\nexport default {\n    name: \"AddServiceItem\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n    },\n    data: () => ({\n        showLoading: false,\n        accLoading: false,\n        valid: \"\",\n        mAccInventory: \"\",\n        mCategory: \"\",\n        mGroup: \"\",\n        accRevenue: [],\n        mAccCostOfGoodSold: \"\",\n        accInventory: [],\n        accCostOfGoodSold: [],\n        categories: [],\n        groups: [],\n        group: [],\n        wareHouses: [],\n        mSubGroup: {},\n        mIncomeAcc: {},\n        mUOM: {},\n        mPurchaseUOM: {},\n        mWareHouse: {},\n        mSpecificTax: {},\n        defaultTax: {},\n        purchaseTax: [],\n        mPurchaseTax: {},\n        subGroups: [],\n        subGroup: [],\n        uom: [],\n        tax: [],\n        specificTax: [],\n        mOtherTax: {},\n        otherTax: [],\n        vat: [],\n        service: serviceItem,\n        imgFile: \"\",\n        src: \"\",\n        code: '',\n        price: 0,\n        priceLevel: [],\n        fileSizeRules: [\n            (files) =>\n                !files ||\n                !files.some((file) => file.size > 1024 * 1024) ||\n                \"Image size should be less than 1 MB!\",\n        ],\n        disabled: true,\n        disabledS: true\n    }),\n    methods: {\n        autoPrice() {\n            const value = this.service.value || 0\n            let base = this.service.base || 0\n            let price_ = (value * base) / 100\n            if (base > 100) {\n                this.service.base = 100\n                base = 100\n                price_ = (value * base) / 100\n            }\n            this.price = price_\n            this.service.price = price_\n            window.console.log(this.service.price, 'price')\n            return price_\n        },\n        priceLevelChanged() {\n            this.code = ''\n            if (this.service.priceLevel) {\n                if (this.service.priceLevel.hasOwnProperty('currency')) {\n                    const currency = this.service.priceLevel.currency\n                    if (currency.hasOwnProperty('code')) {\n                        this.code = '(' + currency.code + ')'\n                    }\n                }\n            } else {\n                this.code = ''\n            }\n        },\n        async loadPriceLevel() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    priceLevelHandler.get().then(res => {\n                        this.priceLevel = res\n                        if (this.priceLevel.length > 0) {\n                            this.service.priceLevel = this.priceLevel[0]\n                            this.priceLevelChanged()\n                        }\n                    })\n                }, 10)\n            })\n        },\n        onUpdate() {\n            this.$emit(\"onUpdate\", this.service);\n        },\n        async onSaveClose(isSave) {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    let data = {\n                        id: this.$route.params.id,\n                        name: this.service.name,\n                        sku: this.service.sku,\n                        typeIs: \"Service\",\n                        uom: this.mUOM,\n                        category: this.mCategory || {},\n                        group: this.mGroup || {},\n                        subGroup: this.mSubGroup || {},\n                        priceLevel: this.service.priceLevel,\n                        saleDescription: this.service.saleDescription,\n                        purchaseDescription: this.service.purchaseDescription,\n                        warehouse: this.mWareHouse,\n                        price: this.service.price,\n                        base: this.service.base,\n                        value: this.service.value,\n                        incomeAcc: this.mIncomeAcc,\n                        costOfGoodsSoldAcc: this.mAccCostOfGoodSold,\n                        // defaultTax: this.defaultTax,\n                        // purchaseTax: this.mPurchaseTax,\n                        // specificTax: this.mSpecificTax,\n                        // otherTax: this.mOtherTax,\n                        canBeSold: this.service.canBeSold,\n                        canBeSubContracted: this.service.canBeSubContracted,\n                        isDelayedRevenue: this.service.isDelayedRevenue,\n                        isConsignmentItem: this.service.isConsignmentItem,\n                        canBeRecurringSubscribed: this.service.canBeRecurringSubscribed,\n                        isMeteredService: this.service.isMeteredService,\n                        isTimeBounded: this.service.isTimeBounded,\n                        images: this.service.images,\n                        file: this.imgFile,\n                        type: this.$route.params.id ? this.$route.query.type : \"new\",\n                        reUsed: this.service.reUsed\n                    };\n                    window.console.log(0, data)\n                    if (isSave == 'new') {\n                        this.clear()\n                    }\n                    serviceItemHandler.create(data).then((response) => {\n                        if (response.data.statusCode === 201) {\n                            data.id = response.data.data.id;\n                            data.images = response.data.data.images;\n                            // this.$emit('onUpdate', data)\n                            this.$snotify.success(\"Success\");\n                            if (isSave == 'new') {\n                                this.clear()\n                            } else if (isSave == 'close') {\n                                this.clear()\n                                this.close(data);\n                            }\n                        }\n                    })\n                        .catch((e) => {\n                            this.$snotify.error(\"Something went wrong\");\n                            this.errors.push(e);\n                        });\n                });\n            });\n        },\n        onFileChange(e) {\n            // const file = e.target.files[0];\n            let input = e.target;\n            // Ensure that you have a file before attempting to read it\n            if (input.files && input.files[0]) {\n                if (input.files[0].size > 1024 * 1024) {\n                    e.preventDefault();\n                    alert(\"File too big (> 1MB)\");\n                    this.src = \"\";\n                    this.imgFile = \"\";\n                    this.$refs.fileupload.value = null;\n                } else {\n                    // create a new FileReader to read this image and convert to base64 format\n                    let reader = new FileReader();\n                    // Define a callback function to run, when FileReader finishes its job\n                    reader.onloadend = (e) => {\n                        // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                        // Read image as base64 and set to imageData\n                        this.imgFile = e.target.result;\n                    };\n                    // Start the reader job - read file as a data url (base64 format)\n                    reader.readAsBinaryString(input.files[0]);\n                    // this.url = input.files[0]\n                    this.src = URL.createObjectURL(e.target.files[0]);\n                }\n            }\n        },\n        close(data) {\n            // window.history.go(-1)\n            this.$router.push({\n                name: \"Services Projects\",\n                path: 'services',\n                params: {\n                    data: data,\n                },\n            });\n        },\n        clear() {\n            this.service = new ServiceItem({})\n            this.mGroup = {}\n            this.mCategory = {}\n            this.mSubGroup = {}\n            this.loadAccount()\n            // this.loadTax()\n            this.loadUOM()\n            this.loadPriceLevel()\n            this.autoPrice()\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t('msg_title_warning'),\n                text: i18n.t('msg_discard'),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t('cancel'),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t('discard'),\n            }).then((resultCen) => {\n                if (resultCen.value) {\n                    this.$router.go(-1);\n                }\n            });\n        },\n        loadCategoryAccountAndTax() {\n            // this.mOtherTax = this.mCategory.tax.hasOwnProperty(\"otherTax\")\n            //     ? this.mCategory.tax.otherTax\n            //     : {};\n            // this.mSpecificTax = this.mCategory.tax.hasOwnProperty(\"specificTax\")\n            //     ? this.mCategory.tax.specificTax\n            //     : {};\n            // this.defaultTax = this.mCategory.tax.hasOwnProperty(\"defaultTax\")\n            //     ? this.mCategory.tax.defaultTax\n            //     : {};\n            // this.mPurchaseTax = this.mCategory.tax.hasOwnProperty(\"purchaseTax\")\n            //     ? this.mCategory.tax.purchaseTax\n            //     : {};\n            this.mIncomeAcc = this.mCategory.account.hasOwnProperty(\"incomeAcc\")\n                ? this.mCategory.account.incomeAcc\n                : {};\n            this.mAccCostOfGoodSold = this.mCategory.account.hasOwnProperty(\n                \"costOfGoodsSoldAcc\"\n            )\n                ? this.mCategory.account.costOfGoodsSoldAcc\n                : {};\n        },\n        async onCategoryChanged() {\n            this.disabled = false\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    // window.console.log(this.mCategory)\n                    this.mGroup = \"\";\n                    this.mSubGroup = \"\";\n                    // this.loadCategoryAccountAndTax()\n                    this.group = this.groups.filter(\n                        (m) => m.category.id === this.mCategory.id\n                    );\n                    if (this.group.length > 0) {\n                        this.mGroup = this.group[0];\n                        this.subGroup = this.subGroups.filter(\n                            (m) => m.group.id === this.group[0].id\n                        );\n                        if (this.subGroup.length > 0) {\n                            this.mSubGroup = this.subGroup[0];\n                        }\n                    }\n                    this.loadCategoryAccountAndTax()\n                }, 10);\n            });\n        },\n        async loadAccount() {\n            this.accLoading = true\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    accountHandler.getAll().then((res) => {\n                        this.showLoading = false;\n                        const accRevenue = res.data\n                            .filter((m) => m.account_type.number === 32)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type\n                                }\n                            });\n                        const unEarnRevenue = res.data\n                            .filter((m) => m.account_type.number === 19 ||m.account_type.number === 20)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type\n                                }\n                            });\n                        this.accRevenue = [...accRevenue, ...unEarnRevenue]\n                        if (this.accRevenue.length > 0) {\n                            this.mIncomeAcc = this.accRevenue[0];\n                        }\n                        this.accInventory = res.data\n                            .filter((m) => m.account_type.number === 8)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type\n                                }\n                            });\n                        if (this.accInventory.length > 0) {\n                            this.mAccInventory = this.accInventory[0];\n                        }\n                        this.accCostOfGoodSold = res.data\n                            .filter((m) => m.account_type.number === 33)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type\n                                }\n                            });\n                        if (this.accCostOfGoodSold.length > 0) {\n                            this.mAccCostOfGoodSold = this.accCostOfGoodSold[0];\n                        }\n                        this.accLoading = false\n                    });\n                }, 10);\n            });\n        },\n        async loadCategory() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    categoryHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.categories = res;\n                        // window.console.log(res)\n                        this.categories = this.categories.filter(i => i.hasOwnProperty('type') && i.type.name === 'Service')\n                        // if (this.categories.length > 0) {\n                        //   this.mCategory = this.categories[0];\n                        //   this.onCategoryChanged();\n                        // }\n                    });\n                }, 10);\n            });\n        },\n        async loadGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    groupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.groups = res.filter(m => m.category.hasOwnProperty('type') && m.category.type.name === 'Service');\n                        // window.console.log(res, 'group')\n                        // this.loadSubGroup(this.mGroup);\n                    });\n                }, 10);\n            });\n        },\n        async loadSubGroup(group) {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    subGroupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        if (group) {\n                            if (group.hasOwnProperty('id')) {\n                                this.subGroups = res.filter(m => m.group.id === group.id)\n                                this.disabledS = false\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        // async skuGenerator() {\n        //     new Promise((resolve) => {\n        //         setTimeout(() => {\n        //             resolve(\"resolved\");\n        //             // window.console.log(this.mCategory.abbr);\n        //             this.service.sku =\n        //                 this.mCategory.abbr +\n        //                 \"/\" +\n        //                 this.mGroup.abbr +\n        //                 \"/\" +\n        //                 this.mSubGroup.abbr +\n        //                 \"-\" +\n        //                 this.service.name.toString().substring(0, 3);\n        //         }, 10);\n        //     });\n        // },\n        async skuGenerator() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const category = this.mCategory || {};\n                    const group = this.mGroup || {};\n                    const sGroup = this.mSubGroup || {};\n                    let cateAbbr = \"\",\n                        groupAbbr = \"\",\n                        sGroupAbbr = \"\",\n                        skuCode = \"\";\n                    if (category.id) {\n                        cateAbbr = category.abbr || \"\";\n                        skuCode += cateAbbr + \"/\";\n                    }\n                    if (group.id) {\n                        groupAbbr = group.abbr || \"\";\n                        skuCode += groupAbbr + \"/\";\n                    }\n                    if (sGroup.id) {\n                        sGroupAbbr = sGroup.abbr || \"\";\n                        skuCode += sGroupAbbr\n                    }\n                    this.service.sku = skuCode\n                    // if (this.product.name) {\n                    //     this.product.sku =\n                    //         skuCode + this.product.name.toString().substring(0, 3);\n                    // }\n                }, 10);\n            });\n        },\n        async loadUOM() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    uomHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.uom = res;\n                        if (this.uom.length > 0) {\n                            this.mUOM = this.uom[0];\n                            // this.mPurchaseUOM = this.uom[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadWareHouses() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    warehouseHandler.getWarehouseSettingAll().then((res) => {\n                        this.showLoading = false;\n                        this.wareHouses = res;\n                        if (this.wareHouses.length > 0) {\n                            this.mWareHouse = this.wareHouses[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadTax() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    settingHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.tax = res\n                        let st = this.tax.filter(m => m.taxType.typeId === 8 && m.transactionType === 'Sale') //specific tax\n                        this.specificTax = st // special tax\n\n                        let vAT = this.tax.filter(m => m.taxType.typeId === 1 && m.transactionType === 'Sale') // valuable tax\n                        this.vat = vAT // valuable tax\n\n                        let otTax = this.tax.filter(m => m.taxType.typeId === 7 && m.transactionType === 'Sale') // Other tax\n                        this.otherTax = otTax // valuable tax\n\n                        this.purchaseTax = this.tax.filter(m => m.taxType.typeId === 1 && m.transactionType === 'Purchase') // valuable tax\n                        // this.mPurchaseTax = purchaseTax // valuable tax\n\n                        if (this.specificTax.length > 0) {\n                            this.mSpecificTax = this.specificTax[0]\n                        }\n                        if (this.vat.length > 0) {\n                            this.defaultTax = this.vat[0]\n                        }\n                        if (this.otherTax.length > 0) {\n                            this.mOtherTax = this.otherTax[0]\n                        }\n                        if (this.purchaseTax.length > 0) {\n                            this.mPurchaseTax = this.purchaseTax[0]\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadSingleService() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    serviceItemHandler.getOne(this.$route.params.id).then(async (res) => {\n                        this.showLoading = false;\n                        this.service = res;\n                        if (this.service.id !== undefined) {\n                            this.mCategory = this.service.category;\n                            await this.loadGroup()\n                            this.mGroup = this.service.group;\n                            await this.loadSubGroup(this.mGroup)\n                            this.mSubGroup = this.service.subGroup;\n                            this.mUOM = this.service.uom;\n                            // this.mPurchaseUOM = this.service.purchaseUOM;\n                            this.mAccCostOfGoodSold = this.service.costOfGoodsSoldAcc;\n                            // this.mAccInventory = this.service.inventoryAccount;\n                            this.mIncomeAcc = this.service.incomeAcc;\n                            this.mSpecificTax = this.service.specificTax;\n                            this.mOtherTax = this.service.otherTax;\n                            this.defaultTax = this.service.defaultTax;\n                            this.mPurchaseTax = this.service.purchaseTax;\n                            this.mWareHouse = this.service.warehouse;\n                            this.src = \"\";\n                            if (this.service.hasOwnProperty(\"images\")) {\n                                let imgUrl = \"\";\n                                if (this.service.images.hasOwnProperty(\"default\")) {\n                                    imgUrl = this.service.images.default.thumb;\n                                    this.src =\n                                        \"https://s3-ap-southeast-1.amazonaws.com/images.banhji/\" +\n                                        imgUrl;\n                                }\n                            }\n\n                            if (this.$route.query.type === \"new\") {\n                                this.src = \"\";\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async initData() {\n            if (this.$route.params.id !== undefined) {\n                await this.loadSingleService();\n            }\n        },\n    },\n    mounted: async function () {\n        await this.loadUOM();\n        await this.loadWareHouses();\n        await this.loadTax();\n        await this.initData();\n        await this.loadCategory();\n        await this.loadGroup();\n        await this.loadPriceLevel();\n    },\n    computed: {\n        amountType() {\n            const priceLevel = this.service.priceLevel || {}\n            if (priceLevel) {\n                const currency = priceLevel.currency || {}\n                const type = priceLevel.type || {}\n                const name = type.name || ''\n                const code = currency.code || ''\n                let strValue = ''\n                if (name === 'Percentage Base') {\n                    strValue = '%'\n                } else if (name === 'Standard') {\n                    strValue = code || ''\n                }\n                return strValue\n            } else {\n                return ''\n            }\n        },\n        hiddenButton() {\n            if (this.$route.query.type == \"edit\") {\n                return true\n            } else {\n                return false\n            }\n        }\n    },\n    created: async function () {\n        await this.loadAccount();\n\n    },\n    watch: {\n        id() {\n            // window.console.log(this.id, \"watch\");\n            if (this.id !== undefined) {\n                this.loadSingleService();\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #F8F8F9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.section2 {\n    border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\n.my_checkbox input[type=\"checkbox\"] + label {\n    display: grid;\n    grid-template-columns: 20% 80%;\n    margin: 0.2em 0px;\n    cursor: pointer;\n    line-height: 16px;\n    padding: 0.2em;\n}\n</style>\n"]}]}