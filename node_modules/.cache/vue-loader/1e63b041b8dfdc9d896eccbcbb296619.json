{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/input/Sale.vue?vue&type=style&index=0&id=d8ba0e30&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/input/Sale.vue","mtime":1640595536795},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGhlYWQgPiB0cjpsYXN0LWNoaWxkID4gdGggewogICAgZm9udC1zaXplOiAxNHB4OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpOwogICAgaGVpZ2h0OiAzN3B4ICFpbXBvcnRhbnQ7CiAgICBjb2xvcjogIzAwMDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyLnByaW1hcnk6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNiAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OwogICAgYm9yZGVyLXRvcDogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHI6bm90KDpsYXN0LWNoaWxkKSA+IHRkOm5vdCgudi1kYXRhLXRhYmxlX19tb2JpbGUtcm93KSwKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOm5vdCg6bGFzdC1jaGlsZCkgPiB0aDpub3QoLnYtZGF0YS10YWJsZV9fbW9iaWxlLXJvdykgewogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICAgIGhlaWdodDogMzJweCAhaW1wb3J0YW50OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpICFpbXBvcnRhbnQ7Cn0KCi5ib3JkZXJfdG9wIHsKICAgIGJvcmRlci10b3A6IHRoaW4gc29saWQgI2ZmZiAhaW1wb3J0YW50Owp9Cgoudi1hcHBsaWNhdGlvbiAucHJpbWFyeSwKLnYtYXBwbGljYXRpb24gLnRoaXJkIHsKICAgIGJvcmRlci1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgoudmF0IHsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICBjb2xvcjogI2ZmZjsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgZm9udC1mYW1pbHk6ICdOaXJhZGVpLUJvbGQnICFpbXBvcnRhbnQ7Cn0KCi5hbW91bnQgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQoKLmhlYWQtc3VtbWFyeSB7CiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Sale.vue"],"names":[],"mappingsjBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Sale.vue","sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/input","sourcesContent":["<template>\n    <v-row>\n        <!-- <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\"> -->\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-2 px-4\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row class=\"\">\n                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                            <v-row>\n                                <v-col sm=\"8\" cols=\"12\" class=\"py-0\">\n                                    <h2 class=\"font_22\">{{ $t('sale_record') }}</h2>\n                                </v-col>\n\n                                <v-col sm=\"4\" cols=\"12\" class=\"py-1\">\n                                    <v-btn @click=\"addSale\" class=\"float-right capitalize white--text\"\n                                           color=\"primary\">\n                                        {{ $t('add_new') }}\n                                    </v-btn>\n                                    <v-btn @click=\"getSaleInvoice()\"\n                                           class=\"float-right capitalize white--text mx-2\" color=\"primary\">\n                                        {{ $t('get_data') }}\n                                    </v-btn>\n                                </v-col>\n                            </v-row>\n                        </v-col>\n                    </v-row>\n                    <v-row class=\"\">\n                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                            <kendo-datasource ref=\"dataSource\"\n                                              :page-size='10'\n                                              :data=\"saleRecord\"\n                            />\n                            <kendo-grid id=\"gridSale\" class=\"grid-function\"\n                                        :data-source-ref=\"'dataSource'\"\n                                        :sortable=\"false\"\n                                        :groupable=\"false\"\n                                        :filterable=\"false\"\n                                        :column-menu=\"true\"\n                                        :pageable=\"true\"\n                                        :editable=\"false\"\n                                        :noRecords=\"true\"\n                                        :scrollable-virtual=\"true\"\n                            >\n                                <kendo-grid-column\n                                    :field=\"'&nbsp;'\"\n                                    :command=\"{name: 'delete',iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus'}\"\n                                    :title=\"'&nbsp;'\"\n                                    :width=\"63\"\n                                    :headerAttributes=\"{style:'text-align: left; background-color: #EDF1F5'}\"/>\n                                <kendo-grid-column\n                                    :field=\"'reference'\"\n                                    :title=\"$t('num')\"\n                                    :template=\"'<span>#=reference#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'date'\"\n                                    :title=\"$t('date')\"\n                                    :template=\"'<span>#=date#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'customer'\"\n                                    :title=\"$t('id')\"\n                                    :hidden=\"true\"\n                                    :template=\"'<span>#=customer.consumerId#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'customer'\"\n                                    :title=\"$t('name')\"\n                                    :attributes=\"{class:'text-bold'}\"\n                                    :template=\"'<span>#=customer.name#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'customer'\"\n                                    :title=\"$t('type')\"\n                                    :template=\"'<span>#=customer.nature#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <!--                                <kendo-grid-column-->\n                                <!--                                    :field=\"'taxName'\"-->\n                                <!--                                    :hidden=\"true\"-->\n                                <!--                                    :template=\"'<span>#=taxName#</span>'\"-->\n                                <!--                                    :title=\"$t('type_of_product')\"-->\n                                <!--                                    :headerAttributes=\"{-->\n                                <!--                                                                    style: 'background-color: #EDF1F5'-->\n                                <!--                                                                }\"/>-->\n                                <kendo-grid-column\n                                    :field=\"'totalAmountInclusive'\"\n                                    :hidden=\"true\"\n                                    :template=\"'<span>#= kendo.toString(totalAmountInclusive, `n2`)#</span>'\"\n                                    :title=\"$t('amount_vat_inclusive')\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'totalAmountNetVat'\"\n                                    :hidden=\"true\"\n                                    :title=\"$t('amount_net_vat')\"\n                                    :template=\"'<span>#= kendo.toString(totalAmountNetVat, `n2`)#</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'totalSpecificTax'\"\n                                    :hidden=\"true\"\n                                    :title=\"$t('specific_tax')\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :template=\"'<span>#= kendo.toString(totalSpecificTax, `n2`)#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'totalPubTax'\"\n                                    :hidden=\"true\"\n                                    :title=\"$t('public_lighting_tax')\"\n                                    :template=\"'<span>#= kendo.toString(totalPubTax, `n2`)#</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'totalAccomTax'\"\n                                    :title=\"$t('accom_tax')\"\n                                    :hidden=\"true\"\n                                    :template=\"'<span>#= kendo.toString(totalAccomTax, `n2`)#</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'totalVAT'\"\n                                    :title=\"$t('vat_amount')\"\n                                    :template=\"'<span>#= kendo.toString(totalVAT, `n2`)#</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'dataSource'\"\n                                    :title=\"$t('source')\"\n                                    :hidden=\"true\"\n                                    :template=\"'<span>#=dataSource.name#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"'status'\"\n                                    :hidden=\"true\"\n                                    :title=\"$t('status')\"\n                                    :template=\"'<span>#=status === 1 ? `Add` : `Edit`#</span>'\"\n                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                <kendo-grid-column\n                                    :field=\"''\"\n                                    :command=\"[{iconClass: 'k-icon k-i-edit',name: 'edit', text: '',click: goEdit,class: 'btn-plus'}]\"\n                                    :title=\"''\"\n                                    :width=\"50\"\n                                    :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"\n                                />\n\n                            </kendo-grid>\n                            <LoadingMe\n                                :isLoading=\"showLoading\"\n                                :fullPage=\"false\"\n                                :type=\"'loading'\"\n                                :myLoading=\"true\"\n                            />\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n        </v-col>\n        <!-- </v-card>\n    </v-col> -->\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\nimport {uuid} from 'vue-uuid'\nimport $ from \"jquery\";\nimport SaleRecord from \"@/scripts/compliance/model/SaleRecord\";\n\nconst dashboardHandler = require(\"@/scripts/dashboard/customer/handler/dashboardHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        sales: [],\n        iSale: [],\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n        search: {\n            start_date: \"\",\n            end_date: \"\"\n        },\n        transactions: []\n    }),\n    props: ['monthlyReturn'],\n    watch: {'saleRecord': 'onUpdateSale', 'iSales': 'onPushSale'},\n    // async activated() {\n    //     await this.onloadSale()\n    // },\n    methods: {\n        async removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridSale\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n                // this.autoCalculate();\n                await this.onGetDataSource()\n            }\n        },\n        async goEdit(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridSale\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            const sale = new SaleRecord(dataItem);\n            this.$router.push({\n                path: 'add_sale/' + this.$route.params.id,\n                name: 'Add Sale',\n                params: {id: this.$route.params.id, sale: sale, monthlyReturn: this.monthly},\n                query: {s_id: sale.id, type: 'Edit'}\n            })\n            window.console.log(sale, \"sale record\");\n        },\n        async onGetDataSource() {\n            let ds = this.$refs.dataSource.kendoWidget()\n            let dataRow = ds.data()\n            const itemLine = []\n            dataRow.forEach(i => {\n                itemLine.push({\n                    id: i.id,\n                    type: 'sale',\n                    reference: i.reference,\n                    date: i.date,\n                    customer: i.customer,\n                    taxName: i.taxName,\n                    monthOf: i.monthOf,\n                    description: i.description,\n                    monthlyReturnId: i.monthlyReturnId,\n                    taxType: i.taxType,\n                    totalAmountInclusive: i.totalAmountInclusive,\n                    totalAmountNetVat: i.totalAmountNetVat,\n                    totalSpecificTax: i.totalSpecificTax,\n                    totalPubTax: i.totalPubTax,\n                    totalAccomTax: i.totalAccomTax,\n                    totalVAT: i.totalVAT,\n                    status: i.status,\n                    isSave: i.isSave,\n                    dataSource: i.dataSource,\n                    itemLine: i.itemLine\n                })\n            })\n            this.sales = itemLine\n            window.console.log(itemLine, 'itemline 21312')\n        },\n        getSaleInvoice() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    const startDate = this.monthly.monthOf + '-01'\n                    const endDate = this.monthly.monthOf + '-31'\n                    let strFilter = ''\n                    strFilter = '?start=' + startDate + '&end=' + endDate + '&type=Compliance'\n                    dashboardHandler.saleTaxDetail(strFilter).then(res => {\n                        if (res.data.statusCode === 200) {\n                            let data = res.data.data, sale = []\n                            if (data.length <= 0) {\n                                this.$snotify.error('No Invoice!!!')\n                                return\n                            }\n                            window.console.log(data, 'data billing')\n                            for (let i = 0; i < data.length; i++) {\n                                let base = data[i].type !== 'Invoice' ? -1 : 1\n                                if (sale.filter(p => p.reference === data[i].referenceNo).length > 0) {\n                                    const index = sale.findIndex(p => p.reference === data[i].referenceNo)\n                                    sale[index].totalVAT += (data[i].taxAmount + data[i].otherTax.amount + data[i].publicTax.amount + data[i].specificTax.amount) * base\n                                    sale[index].totalSpecificTax += data[i].specificTax.amount\n                                    sale[index].totalPubTax += data[i].publicTax.amount * base\n                                    sale[index].totalAccomTax += data[i].otherTax.amount * base\n                                    sale[index].totalAmountInclusive += data[i].baseAmount.toLowerCase() === 'inclusive' ? (data[i].amount / (1 + (data[i].rate / 100))) * base : 0\n                                    sale[index].totalAmountNetVat += data[i].baseAmount.toLowerCase() === 'net' ? data[i].amount * base : 0\n                                    sale[index].itemLine.push({\n                                        referenceNo: data[i].referenceNo,\n                                        amount: data[i].amount * base,\n                                        amountInclusive: data[i].baseAmount.toLowerCase() === 'inclusive' ? (data[i].amount - data[i].taxAmount) * base : 0,\n                                        amountNetVat: data[i].baseAmount.toLowerCase() === 'net' ? data[i].amount * base : 0,\n                                        amountSpecificTax: data[i].specificTax.amount * base,\n                                        specificTax: {\n                                            name: data[i].specificTax.name,\n                                            accountId: data[i].specificTax.accountId ? data[i].specificTax.accountId : ''\n                                        },\n                                        pubTax: {\n                                            name: data[i].publicTax.name,\n                                            accountId: data[i].publicTax.accountId ? data[i].publicTax.accountId : ''\n                                        },\n                                        accomTax: {\n                                            name: data[i].otherTax.name,\n                                            accountId: data[i].otherTax.accountId ? data[i].otherTax.accountId : ''\n                                        },\n                                        vat: data[i].taxAmount,\n                                        amountPubTax: data[i].publicTax.amount * base,\n                                        amountAccomTax: data[i].otherTax.amount * base,\n                                        description: '',\n                                        taxName: {\n                                            name: data[i].taxName,\n                                            accountId: data[i].accountId\n                                        },\n                                        baseAmount: data[i].baseAmount,\n                                    })\n                                } else {\n                                    let customer = {}\n                                    if (data[i].nature.toLowerCase() === 'individual-foreign') {\n                                        customer = {\n                                            id: data[i].customerId ? data[i].customerId : '',\n                                            consumerId: data[i].crn ? data[i].crn : '',\n                                            name: data[i].name,\n                                            nature: data[i].nature,\n                                            taxPayerType: 'Physical Person',\n                                            natureTaxType: 'Non-Resident'\n                                        }\n                                    } else if (data[i].nature.toLowerCase() === 'foreign entity') {\n                                        customer = {\n                                            id: data[i].customerId ? data[i].customerId : '',\n                                            consumerId: data[i].crn ? data[i].crn : '',\n                                            name: data[i].name,\n                                            nature: data[i].nature,\n                                            taxPayerType: 'Legal Person',\n                                            natureTaxType: 'Non-Resident'\n                                        }\n                                    } else if (data[i].nature.toLowerCase() === 'individual-local') {\n                                        customer = {\n                                            id: data[i].customerId ? data[i].customerId : '',\n                                            consumerId: data[i].crn ? data[i].crn : '',\n                                            name: data[i].name,\n                                            nature: data[i].nature,\n                                            taxPayerType: 'Physical Person',\n                                            natureTaxType: 'Resident'\n                                        }\n                                    } else if (data[i].nature.toLowerCase() === 'non-taxable entity' || data[i].nature.toLowerCase() === 'taxable entity') {\n                                        customer = {\n                                            id: data[i].customerId ? data[i].customerId : '',\n                                            consumerId: data[i].crn ? data[i].crn : '',\n                                            name: data[i].name,\n                                            nature: data[i].nature,\n                                            taxPayerType: 'Legal Person',\n                                            natureTaxType: 'Resident'\n                                        }\n                                    }\n                                    sale.push({\n                                        id: `mr-${uuid.v1()}`,\n                                        type: 'sale',\n                                        reference: data[i].referenceNo,\n                                        date: data[i].transactionDate,\n                                        customer: customer,\n                                        taxName: {\n                                            name: data[i].taxName,\n                                            accountId: data[i].accountId\n                                        },\n                                        monthOf: this.monthly.monthOf,\n                                        description: '',\n                                        monthlyReturnId: this.monthly.id,\n                                        taxType: data[i].taxType,\n                                        totalAmountInclusive: data[i].baseAmount.toLowerCase() === 'inclusive' ? (data[i].amount / (1 + (data[i].rate / 100))) * base : 0,\n                                        totalAmountNetVat: data[i].baseAmount.toLowerCase() === 'net' ? data[i].amount * base : 0,\n                                        totalSpecificTax: data[i].specificTax.amount * base,\n                                        totalPubTax: data[i].publicTax.amount * base,\n                                        totalAccomTax: data[i].otherTax.amount * base,\n                                        totalVAT: (data[i].taxAmount + data[i].otherTax.amount + data[i].publicTax.amount + data[i].specificTax.amount) * base,\n                                        status: 1,\n                                        isSave: false,\n                                        dataSource: {id: 1, name: \"Invoice Data\"},\n                                        itemLine: [{\n                                            referenceNo: data[i].referenceNo,\n                                            amount: data[i].amount * base,\n                                            amountInclusive: data[i].baseAmount.toLowerCase() === 'inclusive' ? (data[i].amount / (1 + (data[i].rate / 100))) * base : 0,\n                                            amountNetVat: data[i].baseAmount.toLowerCase() === 'net' ? (data[i].amount) * base : 0,\n                                            amountSpecificTax: data[i].specificTax.amount * base,\n                                            specificTax: {\n                                                name: data[i].specificTax.name,\n                                                accountId: data[i].specificTax.accountId ? data[i].specificTax.accountId : ''\n                                            },\n                                            pubTax: {\n                                                name: data[i].publicTax.name,\n                                                accountId: data[i].publicTax.accountId ? data[i].publicTax.accountId : ''\n                                            },\n                                            accomTax: {\n                                                name: data[i].otherTax.name,\n                                                accountId: data[i].otherTax.accountId ? data[i].otherTax.accountId : ''\n                                            },\n                                            vat: data[i].taxAmount * base,\n                                            amountPubTax: data[i].publicTax.amount * base,\n                                            amountAccomTax: data[i].otherTax.amount * base,\n                                            description: '',\n                                            taxName: {\n                                                name: data[i].taxName,\n                                                accountId: data[i].accountId\n                                            },\n                                            baseAmount: data[i].baseAmount,\n                                        }]\n                                    })\n                                }\n                            }\n                            window.console.log(sale, 'result itemline')\n                            this.iSale = sale\n                        } else {\n                            this.$snotify.error(`error on get invoices`)\n                        }\n                        this.showLoading = false\n                    })\n                }, 300)\n            })\n        },\n        autoCalculateTax(tax, amount) {\n            // window.console.log(tax,'tax')\n            if (tax) {\n                let formula = tax.formula,\n                    inAmt = kendo.parseFloat(amount),\n                    nAmt = kendo.parseFloat(amount),\n                    taxBase = kendo.parseFloat(tax.taxBase) / 100,\n                    rate = kendo.parseFloat(tax.rate) / 100,\n                    total = eval(formula)\n                window.console.log(inAmt, nAmt, taxBase, rate, formula, total)\n                return total\n            }\n        },\n        addSale() {\n            this.$router.push({\n                name: 'Add Sale',\n                path: 'add_sale/' + this.monthly.id,\n                params: {id: this.monthly.id, monthlyReturn: this.monthly},\n                query: {type: 'Added'}\n            });\n        },\n        onUpdateSale() {\n            this.$emit('getSale', this.saleRecord)\n        },\n        getSale(sale) {\n            this.sales.push(sale)\n        },\n        onPushSale() {\n            if (this.sales.length > 0) {\n                const allArray = [...this.sales, ...this.iSales]\n                this.sales = allArray.filter((e, i) => allArray.findIndex(o => o.totalSpecificTax === e.totalSpecificTax && o.totalPubTax === e.totalPubTax && o.totalAccomTax === e.totalAccomTax && o.totalVAT === e.totalVAT && o.totalAmountInclusive === e.totalAmountInclusive && o.totalAmountNetVat === e.totalAmountNetVat) === i)\n            } else {\n                this.sales = this.iSales\n            }\n\n            // const sale = JSON.parse(localStorage.getItem(this.monthlyReturn.abbr + this.monthly.number + '&Sale'))\n            // if (sale.length > 0) {\n            //     if (this.sales.length > 0) {\n            //         let resStorage = []\n            //         const r1 = this.sales.filter(e => e.isSave === false || e.isSave === undefined)\n            //         const otherArray = [...r1, ...sale]\n            //         resStorage = otherArray.filter((e, i) => otherArray.findIndex(o => o.totalSpecificTax === e.totalSpecificTax && o.totalPubTax === e.totalPubTax && o.totalAccomTax === e.totalAccomTax && o.totalVAT === e.totalVAT && o.totalAmountInclusive === e.totalAmountInclusive && o.totalAmountNetVat === e.totalAmountNetVat) === i)\n            //         if (resStorage.length > 0) {\n            //             if (this.monthly.abbr !== '' && this.monthly.number !== '') {\n            //                 localStorage.setItem(this.monthly.abbr + this.monthly.number + '&Sale', JSON.stringify(resStorage))\n            //             }\n            //         }\n            //     }\n            // } else {\n            //     const r1 = this.sales.filter(e => e.isSave === false || e.isSave === undefined)\n            //     if (this.monthly.abbr !== '' && this.monthly.number !== '') {\n            //         localStorage.setItem(this.monthly.abbr + this.monthly.number + '&Sale', JSON.stringify(r1))\n            //     }\n            // }\n            window.console.log(this.sales, 'results')\n        },\n        onloadSale() {\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    saleHandler.getByMrId(this.$route.params.id).then(res => {\n                        // window.console.log(data, 'sale8765')\n                        this.sales = res.data.data\n                        let data = this.$store.state.compliance.sale\n                        // let data = JSON.parse(localStorage.getItem(this.monthly.abbr + this.monthly.number + '&Sale'))\n                        let allArray = []\n                        if (data) {\n                            if (data.length > 0) {\n                                allArray = [...this.sales, ...data]\n                            } else {\n                                allArray = this.sales\n                            }\n                        }\n                        this.sales = allArray.filter((e, i) => allArray.findIndex(o => o.totalSpecificTax === e.totalSpecificTax && o.totalPubTax === e.totalPubTax && o.totalAccomTax === e.totalAccomTax && o.totalVAT === e.totalVAT && o.totalAmountInclusive === e.totalAmountInclusive && o.totalAmountNetVat === e.totalAmountNetVat) === i)\n                        // window.console.log(data, '8888')\n                        this.onUpdateSale()\n                        this.showLoading = false\n                        window.console.log(this.sales)\n                    })\n                }, 200)\n            })\n\n        },\n\n        onSearch() {\n            this.search = {\n                'start_date': this.start_date + '-01',\n                'end_date': this.end_date + '-01'\n            }\n        }\n    },\n    async mounted() {\n        await this.onloadSale()\n    },\n    computed: {\n        iSales() {\n            if (this.iSale.length > 0) {\n                return this.iSale\n            } else {\n                return []\n            }\n        },\n        monthly() {\n            if (this.monthlyReturn !== undefined) {\n                return this.monthlyReturn\n            } else {\n                return {}\n            }\n        },\n        // sale() {\n        //     if (JSON.parse(localStorage.getItem(this.monthly.number + '&Sale'))) {\n        //         if (JSON.parse(localStorage.getItem(this.monthly.number + '&Sale')).length > 0) {\n        //             return JSON.parse(localStorage.getItem(this.monthly.number + '&Sale'))\n        //         } else {\n        //             return []\n        //         }\n        //     } else {\n        //         return []\n        //     }\n        // },\n        saleRecord() {\n            if (this.sales.length > 0) {\n                return this.sales\n            } else {\n                return []\n            }\n        },\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'app-searchdate' : ()=> import('@/components/custom_templates/SearchDate'),\n        // 'month-picker' : ()=> import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #f44336 !important;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold' !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"]}]}