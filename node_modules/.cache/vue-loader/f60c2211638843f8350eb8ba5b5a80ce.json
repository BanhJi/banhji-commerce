{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/finances/CloseLoan.vue?vue&type=style&index=0&id=2b788acc&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/finances/CloseLoan.vue","mtime":1638499443230},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5rLWRyb3Bkb3duIHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luLXRvcDogNHB4Owp9CgoKLmZ1bmN0aW9uX2NvbnRlbnQgLmxhYmVsIHsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCgouY29sb3JfZ3JlZW4gewogICAgY29sb3I6ICMwM2IxNTQ7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAgIC5jb250YWluZXIgewogICAgICAgIC8qIG1heC13aWR0aDogMTI1MHB4OyAqLwogICAgICAgIG1heC13aWR0aDogMTA4MHB4OwogICAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAgIC5wdC02LmNvbC1zbS01LmNvbC0xMiB7CiAgICAgICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDsKICAgIH0KCiAgICAuY29kZV90ZXh0IHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgIH0KCiAgICAucGhvbmVfbm9fcHQgewogICAgICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7CiAgICB9CgogICAgLnNlbGVjdF90ZW1wbGF0ZSwKICAgIC5zYXZlX29wdGlvbiB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgIH0KfQoKCi5leGNoYW5nZS10YWJsZS50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGhlYWQgPiB0ciA+IHRoIHsKICAgIGZvbnQtZmFtaWx5OiAnS3Jhc2FyLUJvbGQnLCBzZXJpZjsKICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzAwMCAhaW1wb3J0YW50OwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDAgIWltcG9ydGFudDsKICAgIGZvbnQtc2l6ZTogMTVweCAhaW1wb3J0YW50Owp9CgouZXhjaGFuZ2UtdGFibGUudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRoZWFkID4gdHIgPiB0ZCB7CiAgICBjb2xvcjogIzAwMCAhaW1wb3J0YW50OwogICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMCAhaW1wb3J0YW50Owp9CgouZXhjaGFuZ2UtdGFibGUudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHI6bGFzdC1jaGlsZCB0ZCB7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMCAhaW1wb3J0YW50Owp9Cgoudi1zbGlkZS1ncm91cF9fY29udGVudCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjhGOEY5ICFpbXBvcnRhbnQ7Cn0KCi52LXRhYi0tYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDsKICAgIGJvcmRlci1sZWZ0OiBub25lOwp9CgouZnVuY3Rpb25fY29udGVudCB7CiAgICBwYWRkaW5nOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogI0Y4RjhGOTsKfQoKLnYtaW5wdXQtLXJhZGlvLWdyb3VwLS1yb3cgewogICAgbWFyZ2luLXRvcDogMHB4ICFpbXBvcnRhbnQ7CiAgICBwYWRkaW5nOiAwcHg7Cn0KCi52LWlucHV0X19jb250cm9sIHsKICAgIGhlaWdodDogMjVweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["CloseLoan.vue"],"names":[],"mappingsjCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CloseLoan.vue","sourceRoot":"src/views/finances","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card outlined dense class=\"pa-4 no_border rounded-sm\" color=\"white\">\n                        <v-row>\n                            <v-col class=\"bigSide py-0\" sm=\"12\" cols=\"12\" style=\"transition: .3s ease-in;\">\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <div class=\"function_header\">\n                                        <h2>{{ $t('close_loan') }}</h2>\n                                        <v-icon\n                                            onclick=\"window.history.go(-1); return false;\"\n                                            style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                            class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                    </div>\n                                    <div class=\"\">\n                                        <!-- Form -->\n                                        <v-form\n                                            ref=\"form\"\n                                            v-model=\"valid\"\n                                            lazy-validation>\n                                            <v-col>\n                                                <v-row>\n                                                    <v-col sm=\"6\" cols=\"12\" class=\"pl-0 pb-0\">\n                                                        <label class=\"label mb-0\">{{ $t('date') }}</label>\n                                                        <app-datepicker\n                                                            class=\"mt-1\"\n                                                            :initialDate=\"l.issuedDate\"\n                                                            @emitDate=\"l.issuedDate = $event\"/>\n                                                        <label\n                                                            class=\"label mb-0\">{{ $t('transaction_number') }}</label>\n                                                        <v-text-field\n                                                            class=\"mt-1\"\n                                                            v-model=\"l.number\"\n                                                            outlined\n                                                            disabled\n                                                            :rules=\"[v => !!v || 'Number is required']\"\n                                                        />\n                                                        <label class=\"label  mb-0\">{{ $t('loan') }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"loanList\"\n                                                            :placeholder=\"$t('select')\"\n                                                            item-text=\"name\"\n                                                            item-value=\"id\"\n                                                            tage=\"\"\n                                                            v-model=\"l.loan\"\n                                                            @change=\"loanChange\"\n                                                            :rules=\"[v => !!v || 'Loan is required']\"\n                                                            return-object\n                                                            outlined/>\n                                                        <label class=\"label  mb-0\">{{ $t('cash_account') }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            :items=\"cashAccounts\"\n                                                            :placeholder=\"$t('select')\"\n                                                            :item-text=\"item => `${accountName=='name'?item.name:item.local_name}`\"\n                                                            tage=\"\"\n                                                            v-model=\"l.cashAccount\"\n                                                            :rules=\"[v => !!v || 'Cash account is required']\"\n                                                            return-object\n                                                            outlined/>\n                                                        <label class=\"label\">{{ $t('penalty_account') }}</label>\n                                                        <v-select\n                                                            class=\"mt-1\"\n                                                            outlined\n                                                            return-object\n                                                            id=\"\"\n                                                            :items=\"penaltyAccounts\"\n                                                            item-text=\"name\"\n                                                            item-value=\"id\"\n                                                            v-model=\"l.penaltyAccount\"\n                                                        />\n                                                    </v-col>\n\n                                                    <v-col sm=\"6\" cols=\"6\" class=\"pb-0 function_content pa-3\">\n                                                        <v-card class=\"pa-3 no-boxshadow d-flex justify-space-between align-center\"\n                                                                min-height=\"50px\" color=\"primary\">\n                                                            <h3 style=\"font-size: 18px\" class=\"text-white text-uppercase\">\n                                                                {{ $t('amount_remaining') }}:</h3>\n                                                            <h3 class=\"text-bold float-right text-white\" style=\"font-size: 22px\">\n                                                                {{ numberFormata(totalRemainning) }}</h3>\n\n                                                        </v-card>\n                                                        <v-simple-table>\n                                                            <template v-slot:default>\n                                                                <tbody>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('principal_remaining')\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right\">\n                                                                        {{ numberFormata(l.principal) }}\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('interest_remaining')\n                                                                        }} ({{ numberFormata(oldInterest) }})\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right pl-2 pt-2\">\n                                                                        <vue-numeric\n                                                                            style=\"width: 100%;font-size: 18px;background-color: #ffff;border-radius: 4px;text-align: right;border: 1px solid #ddd !important; padding: 9px !important; margin-bottom: 15px;\"\n                                                                            class=\"mt-1 mr-2 mt-0 text-bold pa-4\"\n                                                                            currency=\"\"\n                                                                            separator=\",\"\n                                                                            v-bind:minus=\"false\"\n                                                                            v-bind:precision=\"inputDec\"\n                                                                            v-model=\"l.interest\"\n                                                                            @change=\"interestChange\"\n                                                                            outlined\n                                                                        >\n                                                                        </vue-numeric>\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('penalty_amount')\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right pl-2 pt-2\">\n                                                                        <vue-numeric\n                                                                            style=\"width: 100%;font-size: 18px;background-color: #ffff;border-radius: 4px;text-align: right;border: 1px solid #ddd !important; padding: 9px !important; margin-bottom: 15px;\"\n                                                                            class=\"mt-1 mr-2 mt-0 text-bold pa-4\"\n                                                                            currency=\"\"\n                                                                            separator=\",\"\n                                                                            v-bind:minus=\"false\"\n                                                                            v-bind:precision=\"inputDec\"\n                                                                            v-model=\"l.penalty\"\n                                                                            @change=\"penaltyChange\"\n                                                                            outlined\n                                                                        >\n                                                                        </vue-numeric>\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('reference_no')\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right pl-2 pt-2\">\n                                                                        <v-text-field\n                                                                            class=\"mt-1\"\n                                                                            v-model=\"l.referenceNumber\"\n                                                                            outlined\n                                                                        />\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('currency')\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right\">\n                                                                        {{currencyCode}}\n                                                                    </td>\n                                                                </tr>\n                                                                <tr>\n                                                                    <td class=\"text-left pr-0\">{{\n                                                                            $t('rate')\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-right\">\n                                                                        {{ rate }}\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody>\n                                                            </template>\n\n                                                        </v-simple-table>\n                                                        <v-textarea\n                                                            v-model=\"l.note\"\n                                                            class=\"mt-4\"\n                                                            solo\n                                                            :label=\"$t('note')+'...'\"\n                                                            name=\"input-7-4\">\n                                                        </v-textarea>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                        </v-form>\n                                        <!-- Grid -->\n                                    </div>\n                                    <div class=\"function_footer\">\n                                        <v-btn outlined color=\"#494846\" class=\"float-left text-capitalize\"\n                                               @click=\"cancel\">{{ $t('cancel') }}\n                                        </v-btn>\n\n                                        <v-btn color=\"primary\" class=\"float-right white--text text-capitalize\"\n                                               @click=\"saveClose\">\n                                            {{ $t('save_close') }}\n                                        </v-btn>\n                                    </div>\n                                </v-form>\n                            </v-col>\n                        </v-row>\n\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"/>\n            <LoadingMe\n                :isLoading=\"showLoadingData\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"/>\n            <LoadingMe\n                :isLoading=\"showLoadingLoan\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport Helper from \"@/helper.js\"\nimport DatePickerComponent from '@/components/custom_templates/DatePickerComponent'\n// import {DropDownList} from \"@progress/kendo-vue-dropdowns\"\nimport kendo from \"@progress/kendo-ui\"\nconst $ = kendo.jQuery\nimport CloseLoanModel from '@/scripts/financing/model/CloseLoan'\n\nconst memberHandler = require(\"@/scripts/memberHandler\")\nconst customerHandler = require(\"@/scripts/customerHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\n// const loanHandler = require(\"@/scripts/loanHandler\")\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\")\nconst prefixHandler = require(\"@/scripts/prefixHandler\")\n// const accountHandler = require(\"@/scripts/accountHandler\")\nimport {accountHandler} from \"@/scripts/AppHandlers\";\n\nconst textField = 'name'\nconst keyField = 'id'\nconst customerItem = {[textField]: 'Select Customer...', [keyField]: null}\nconst memberItem = {[textField]: 'Select Member...', [keyField]: null}\nconst emptyItem = {[textField]: 'loading ...'}\nconst store = require(\"@/institute.js\")\nconst {cookies} = store.default.state\n\n// journal\nimport {JournalModel, UserModel} from \"@/scripts/model/AppModels\"\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\nconst { journalHandler } = require(\"@/scripts/AppHandlers\");\nconst {EntityType} = require(\"@/scripts/default_setup/Collections\")\nconst loanHandler = require(\"@/scripts/financing/handler/loanHandler\")\nimport VueNumeric from 'vue-numeric'\nimport LoanType from \"@/scripts/default_setup/LoanType.js\";\nexport default {\n    data: () => ({\n        valid: true,\n        showLoading: false,\n        showLoadingData: false,\n        showLoadingLoan: false,\n        errors: [],\n        user: new UserModel(cookies.user),\n        loadingAlert: false,\n        loadingColorAlert: '',\n        loadingTextAlert: '',\n        textField: 'name',\n        dataItemKey: 'id',\n        selectMember: 'isMember',\n        isMember: true,\n        isCustom: false,\n        cashAccounts: [],\n        saleFormContent: {},\n        currencyCode: '',\n        invoiceType: {},\n        lastNumber: {},\n        scheduleAR: [],\n        loanAmount: 0,\n        rate: 1,\n        //\n        disbursList: [],\n        l: new CloseLoanModel({}),\n        loan: {},\n        loanList: [],\n        totalPayment: 0,\n        monthlyPayment: 0,\n        totalInterest: 0,\n        //customer\n        cusBaseUrl: customerHandler.search(),\n        customerList: [],\n        customerItem: customerItem,\n        customerfilter: '',\n        //member\n        memBaseUrl: memberHandler.search(),\n        memberList: [],\n        memberItem: memberItem,\n        memberfilter: '',\n        decimals: [],\n        numberFormat: 'c0',\n        memberData: [],\n        //journal\n        journalNumber: '',\n        journalPrefix: '',\n        journalTxnType: EntityType.JOURNAL,\n        loggedUser: new UserModel(cookies.user),\n        segments: [],\n        segment: {},\n        accountName: 'name',\n        totalRemainning: 0,\n        penaltyAccount: {},\n        oldInterest: 0,\n        inputDec: 2,\n        penaltyAccounts: [],\n        transactionType: {},\n        suffix: ''\n    }),\n    components: {\n        'app-datepicker': DatePickerComponent,\n        LoadingMe: () => import(`@/components/Loading`),\n        VueNumeric\n    },\n    methods: {\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.scheduleAR.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            if (index === (this.scheduleAR.length - 1)) {\n                return ''\n            } else {\n                return index + 1\n            }\n        },\n        async loanChange() {\n            window.console.log(this.l.loan, 'loan')\n            this.currencyCode = this.l.loan.currency.code\n            await this.loadTransactionRate()\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoadingLoan = true\n                    loanHandler.loanScheduleGet(this.l.loan.id).then(res => {\n                        this.showLoading = false\n                        if (res.data.statusCode === 200) {\n                            this.showLoadingLoan = false\n                            let data = res.data.data\n                            window.console.log(data, 'schedule')\n                            let total = 0, self = this, int = 0\n                            this.scheduleAR = []\n                            $.each(data, function (i,v){\n                                if(v.status == 1){\n                                    total += parseFloat(v.data.principal)\n                                    int += parseFloat(v.data.interest)\n                                    self.scheduleAR.push(v)\n                                }\n                            })\n                            this.totalRemainning = total + int\n                            this.l.interest = int\n                            this.oldInterest = int\n                            this.l.principal = total\n                            this.getLastNum()\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        addTotal() {\n            this.scheduleAR.push({\n                principal_r: '',\n                principal: parseFloat(this.loan.amount),\n                interest: this.totalInterest,\n                total: this.totalPayment,\n                date: 'Total',\n                locale: this.currencyCode,\n                numberFormat: this.numberFormat,\n                transaction_number: '',\n            })\n            // window.console.log(this.scheduleAR, 'loan schedule')\n        },\n        makeBalance(amt) {\n            let idx = parseFloat(this.loan.period) - 1\n            let oamt = this.scheduleAR[idx].principal\n            let namt = oamt + amt\n            namt = parseFloat(namt.toFixed(this.saleFormContent.decimal))\n            this.scheduleAR[idx].principal = namt\n            this.scheduleAR[idx].total = this.scheduleAR[idx].interest + namt\n        },\n        fixRate(P, r, t) {\n            // var C = 0;\n            // var a = P*r;\n            // var b = Math.pow((1+r), t);\n            //     b = parseFloat(b.toFixed(2));\n            // var c = 1/b;\n            // var d = 1 - c;\n            //     d = parseFloat(d.toFixed(2));\n            // C = a/d;\n            // console.log(P+\"--\"+r+\"--\"+t);\n            // return C;\n            let l = 1 / t, i = r * l, n = t\n            let emi = i * P / [1 - Math.pow((1 + i), -n)]\n            return emi\n        },\n        errorMessage() {\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        // async loadPrefix() {\n        //     new Promise(resolve => {\n        //         setTimeout(() => {\n        //             resolve('resolved');\n        //             prefixHandler.get('invoice').then(res => {\n        //                 if (res.data.statusCode === 200) {\n        //                     this.showLoading = false\n        //                     this.invoiceType = res.data.data[0]\n        //                     this.getInvoiceLastNumber()\n        //                 }\n        //             })\n        //         }, 300);\n        //     })\n        // },\n        getInvoiceLastNumber() {\n            let data = {\n                abbr: this.invoiceType.abbr,\n                structure: this.invoiceType.structure,\n                transactionDate: this.l.issuedDate,\n                sequcencing: this.invoiceType.sequcencing,\n                type: 'Invoice',\n                entity: 1\n            }\n            billingHandler.lastNumber(data).then(response => {\n                if (response.data.statusCode === 200) {\n                    this.lastNumber = response.data.data\n                    // window.console.log(this.lastNumber, 'last number')\n                }\n            }).catch(e => {\n                this.errors.push(e)\n            })\n        },\n        getLoan() {\n            window.console.log(this.l.member)\n            this.showLoading = true\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    memberHandler.getLoanByMemberId(this.l.member.id).then(res => {\n                        this.showLoading = false\n                        this.loanList = res.data.data.filter((obj) => {\n                            return obj.status == 3\n                        })\n                    })\n                }, 300);\n            })\n        },\n        //customer\n        onCustomerChange(event) {\n            const value = event.value\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.customer = value\n            this.l.customer = value\n            this.getLoan()\n        },\n        onCustomerFilterChange(event) {\n            const filter = event.filter.value\n            this.customerRequestData(0, filter, this.cusBaseUrl)\n            this.customerfilter = filter\n        },\n        customerRequestData(skip, filter, baseUrl) {\n            // window.console.log(baseUrl, 'requ')\n            const url = baseUrl +\n                `?filter=${filter}`\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    return response.json()\n                })\n                .then(this.customerAfterFetch)\n        },\n        customerAfterFetch(json) {\n            this.customerList = json.data\n        },\n        //member\n        selectMemberChange() {\n            if (this.selectMember == 'isMember') {\n                this.loan.isMember = 1\n                this.memberData = this.memberList\n            } else {\n                this.loan.isMember = 2\n                this.memberData = this.customerList\n            }\n            this.loan.member = {}\n        },\n        onMemberChange() {\n            this.getLoan()\n        },\n        onMemberFilterChange(event) {\n            const filter = event.filter.value\n            this.memberRequestData(0, filter, this.memBaseUrl)\n            this.memberfilter = filter\n        },\n        memberRequestData(skip, filter, baseUrl) {\n            // window.console.log(baseUrl, 'requ')\n            const url = baseUrl +\n                `?filter=${filter}`\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    return response.json()\n                })\n                .then(this.memberAfterFetch)\n        },\n        memberAfterFetch(json) {\n            this.memberList = json.data\n        },\n        async loadTransactionRate() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    const date = new Date(this.l.issuedDate).toISOString().substr(0, 10)\n                    let code = this.currencyCode\n                    if (code !== undefined || code !== '') {\n                        currencyHandler.getLastExchangeRateByDate(date, code).then(res => {\n                            if (res.data.statusCode === 200) {\n                                const response = res.data.data[0]\n                                // window.console.log(response, 'currency rate')\n                                if(Object.keys(response).length > 0){\n                                    this.exchangeRate = response\n                                    this.l.exchangeRate = this.exchangeRate\n                                    this.l.rate = response.rate\n                                    this.rate = response.rate\n                                }else{\n                                    this.$snotify.error('Please set exchange rate on currency setting')\n                                    this.cancel()\n                                }\n                                this.showLoading = false\n                            }\n                        })\n                    }\n                }, 300)\n            })\n        },\n        async loadDecimal() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    loanHandler.decimalGet().then(res => {\n                        this.decimals = res.data.data\n                    })\n                }, 300);\n            })\n        },\n        numberFormata(value) {\n            if (this.currencyCode) {\n                value = parseFloat(value)\n                return kendo.toString(value, this.numberFormat)\n            }\n        },\n        //function\n        async addEmpty() {\n            this.l = new CloseLoanModel({})\n            this.loan = {}\n            this.customer = {}\n            this.member = {}\n            this.l.cashAccount = this.cashAccounts[0]\n            this.currencyCode = ''\n            await this.loadLoan()\n        },\n        cancel() {\n            window.history.go(-1)\n        },\n        saveNew() {\n            this.isSaveNew = true\n            this.saveOption = 'saveNew'\n            this.save()\n        },\n        saveClose() {\n            this.isSaveNew = false\n            this.saveOption = 'saveClose'\n            this.addJournal()\n        },\n        async save() {\n            this.l.saveOption = this.saveOption\n            this.showLoadingData = true\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    loanHandler.closeLoanCreate(new CloseLoanModel(this.l)).then(response => {\n                        this.showLoadingData = false\n                        if (response.data.statusCode === 201) {\n                            this.$snotify.success('Successfully')\n                            window.history.go(-1)\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                        window.console.log(e, 'error')\n                    })\n                }, 300);\n            })\n        },\n        async loadSegment() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.segment = {}\n                    loanHandler.businessSettingGet().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            let s = res.data.data.filter((obj) => {return obj.type == \"Credit\"})\n                            if(s.length > 0){\n                                this.segment = s[0].segment\n                            }else{\n                                this.$snotify.error('Please select segment on setting page')\n                                this.cancel()\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        async loadAccount() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    accountHandler.getAll().then(res => {\n                        this.showLoading = false\n                        // window.console.log(res, 'acc')\n                        //Receivable Account\n                        this.cashAccounts = res.data.filter(m => m.account_type.number === 1).map(itm => {\n                            return {\n                                id: itm.uuid,\n                                uuid: itm.uuid,\n                                name: itm.name,\n                                local_name: itm.local_name,\n                                number: itm.number,\n                                is_taxable: itm.is_taxable,\n                                banhjiAccCode: itm.banhjiAccCode,\n                                group_code: itm.group_code,\n                                parent_account: itm.parent_account,\n                                type_code: itm.type_code\n                            }\n                        })\n                        this.penaltyAccounts = res.data.filter(m => m.account_type.number === 38).map(itm => {\n                            return {\n                                id: itm.uuid,\n                                uuid: itm.uuid,\n                                name: itm.name,\n                                local_name: itm.local_name,\n                                number: itm.number,\n                                is_taxable: itm.is_taxable,\n                                banhjiAccCode: itm.banhjiAccCode,\n                                group_code: itm.group_code,\n                                parent_account: itm.parent_account,\n                                type_code: itm.type_code\n                            }\n                        })\n                        if (this.penaltyAccounts.length > 0) {\n                            this.l.penaltyAccount = this.penaltyAccounts[0]\n                        }\n                        if (this.cashAccounts.length > 0) {\n                            this.l.cashAccount = this.cashAccounts[0]\n                        }\n                    })\n                }, 300);\n            })\n        },\n        // jounal\n        async getJournalNumber() {\n            let num = await Helper.generateAccountingNumber(this.journalTxnType, this.l.issuedDate)\n            this.journalNumber = num.number\n            this.journalPrefix = num.prefix_format\n            this.l.journalNumber = num.number\n        },\n        async addJournal(){\n            const obj = this.l\n            // const seg = this.segment\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            if(this.scheduleAR.length == 0){\n                this.l.user = this.loggedUser\n                this.l.totalAmount = this.totalRemainning\n                this.l.schedules = this.scheduleAR\n                this.save()\n                return\n            }\n            // let customer = obj.member\n            // if(Object.keys(customer).length == 0){\n            //     this.$snotify.error('Please select a member or customer')\n            //     return\n            // }\n            if(Object.keys(obj.loan).length == 0){\n                this.$snotify.error('Please select a loan number')\n                return\n            }\n            this.showLoading = true\n            let amt = parseFloat(this.totalRemainning) + parseFloat(obj.penalty)\n            let journLine = []\n            journLine.push({\n                \"uuid\": \"\",\n                \"account\": obj.loan.loanAccount,\n                \"description\": obj.note,\n                \"primary_contact\": {},\n                \"third_contacts\": [],\n                \"ref_number\": '',\n                \"amount\": parseFloat(amt),\n                \"discount\": {},\n                \"mark_up\": 0,\n                \"billable\": 0,\n                \"tax_code\": \"\",\n                \"payment_method\": {},\n                \"currency\": this.exchangeRate,\n                \"exchange_rate_uuid\": \"\",\n                \"exchange_rate\": this.rate,\n                \"exchanged_amount\": parseFloat(amt) * parseFloat(this.rate),\n                \"tax_amount\": 0,\n                \"exchanged_tax_amount\": 0,\n                \"is_reconciled\": 0,\n                \"is_settled\": 0,\n                \"class_1_uuid\": \"\",\n                \"class_2_uuid\": \"\",\n                \"class_3_uuid\": \"\",\n                \"class_4_uuid\": \"\",\n                \"class_5_uuid\": \"\",\n                \"payment_method_as\": \"\",\n                \"created_by\": null,\n                \"modified_by\": null,\n                \"created_date\": null,\n                \"modified_date\": null\n            })\n            journLine.push({\n                \"uuid\": \"\",\n                \"account\": obj.cashAccount,\n                \"description\": this.journal.description,\n                \"primary_contact\": {},\n                \"third_contacts\": [],\n                \"ref_number\": '',\n                \"amount\": (parseFloat(this.totalRemainning) * -1),\n                \"discount\": {},\n                \"mark_up\": 0,\n                \"billable\": 0,\n                \"tax_code\": \"\",\n                \"payment_method\": {},\n                \"currency\": this.exchangeRate,\n                \"exchange_rate_uuid\": \"\",\n                \"exchange_rate\": this.rate,\n                \"exchanged_amount\": ((parseFloat(this.totalRemainning) * -1)*parseFloat(this.rate)),\n                \"tax_amount\": 0,\n                \"exchanged_tax_amount\": 0,\n                \"is_reconciled\": 0,\n                \"is_settled\": 0,\n                \"class_1_uuid\": \"\",\n                \"class_2_uuid\": \"\",\n                \"class_3_uuid\": \"\",\n                \"class_4_uuid\": \"\",\n                \"class_5_uuid\": \"\",\n                \"payment_method_as\": \"\",\n                \"created_by\": null,\n                \"modified_by\": null,\n                \"created_date\": null,\n                \"modified_date\": null\n            })\n            if(obj.penalty > 0){\n                journLine.push({\n                    \"uuid\": \"\",\n                    \"account\": obj.penaltyAccount,\n                    \"description\": '',\n                    \"primary_contact\": {},\n                    \"third_contacts\": [],\n                    \"ref_number\": '',\n                    \"amount\": (parseFloat(obj.penalty) * -1),\n                    \"discount\": {},\n                    \"mark_up\": 0,\n                    \"billable\": 0,\n                    \"tax_code\": \"\",\n                    \"payment_method\": {},\n                    \"currency\": this.exchangeRate,\n                    \"exchange_rate_uuid\": \"\",\n                    \"exchange_rate\": this.rate,\n                    \"exchanged_amount\": ((parseFloat(obj.penalty) * -1)*parseFloat(this.rate)),\n                    \"tax_amount\": 0,\n                    \"exchanged_tax_amount\": 0,\n                    \"is_reconciled\": 0,\n                    \"is_settled\": 0,\n                    \"class_1_uuid\": \"\",\n                    \"class_2_uuid\": \"\",\n                    \"class_3_uuid\": \"\",\n                    \"class_4_uuid\": \"\",\n                    \"class_5_uuid\": \"\",\n                    \"payment_method_as\": \"\",\n                    \"created_by\": null,\n                    \"modified_by\": null,\n                    \"created_date\": null,\n                    \"modified_date\": null\n                })\n            }\n            // API Journal\n            let self = this;\n            // let data = {\n            //     \"number\": this.journalNumber,\n            //     \"description\": obj.note,\n            //     \"journal_type\": \"general_journal\",\n            //     \"journal_date\": new Date(obj.issuedDate),\n            //     \"currency_code\": this.currencyCode,\n            //     \"buinsess_unit_uuid\": \"\",\n            //     \"location_uuid\": \"\",\n            //     \"project_uuid\": \"\",\n            //     \"segment_uuid\": '',\n            //     \"journal_entries\": journLine,\n            //     \"transaction_type\": \"journal\",\n            //     \"is_draft\": 0,\n            //     \"is_reversed\": 0,\n            //     \"prefix_format\": this.journalPrefix,\n            //     \"created_by\": this.loggedUser\n            // }\n            this.journal.prefix_format = this.journalPrefix\n            this.journal.journal_entries = journLine\n            this.journal.currency_code = this.currencyCode\n            this.journal.journal_date = Helper.toISODate(this.l.issuedDate)\n            this.journal.created_by = this.loggedUser\n            if(obj.loan.hasOwnProperty('segment')){\n                this.journal.segment_uuid = obj.loan.segment.id\n            }\n            if(obj.loan.hasOwnProperty('location')){\n                this.journal.location_uuid = obj.loan.location.id\n            }\n            journalHandler.save(new JournalModel(this.journal))\n                .then(function (response) {\n                    self.l.user = self.loggedUser\n                    self.l.totalAmount = self.totalRemainning\n                    self.l.schedules = self.scheduleAR\n                    self.l.journalId =  response.data.uuid\n                    self.save()\n                })\n                .catch(function (error) {\n                    Helper.alertErrorMsg(error)\n                    window.console.log(error)\n                })\n                .finally(() => {\n                    self.showLoading = false;\n                });\n        },\n        async loadAccountName() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.segments = []\n                    loanHandler.accountNameGet().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            if (res.data.data.length > 0) {\n                                this.accountName = res.data.data[0].name\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        //number\n        // async getLastNumber() {\n        //     new Promise(resolve => {\n        //         setTimeout(() => {\n        //             resolve('resolved');\n        //             let data = {\n        //                 type: \"CloseLoan\",\n        //             };\n        //             loanHandler\n        //                 .getLastNumber(data).then(res => {\n        //                 this.l.lastNumber = res.data.data.lastNumber\n        //                 this.generateNumber()\n        //             }).catch(e => {\n        //                 this.$snotify.error('Something went wrong')\n        //                 this.errors.push(e)\n        //                 // window.console.log(e)\n        //             })\n        //         }, 300);\n        //     })\n        // },\n        // generateNumber(){\n        //     let newNum = ''\n        //     let abbr = 'CLOAN'\n        //     let lnum = this.zeroPad(this.l.lastNumber, 6)\n        //     newNum = abbr+lnum\n        //     this.l.abbr = abbr\n        //     this.l.number = newNum\n        // },\n        penaltyChange(){\n            if(this.l.penalty > 0){\n                this.totalRemainning += parseFloat(this.l.penalty)\n            }\n        },\n        async loadSinglePenalty() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    loanHandler.penaltyGet().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            if(res.data.data.length > 0) {\n                                let a = res.data.data[0].Account\n                                this.penaltyAccount = {\n                                    id: a.id,\n                                    uuid: a.id,\n                                    banhjiAccCode: a.banhjiAccCode,\n                                    group_code: a.group_code,\n                                    is_taxable: a.is_taxable,\n                                    local_name: a.local_name,\n                                    name: a.name,\n                                    number: a.number,\n                                    parent_account: a.parent_account,\n                                    type_code: a.type_code\n                                }\n                            }else{\n                                this.$snotify.error('Please set penalty account on general setting')\n                                this.cancel()\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        interestChange(){\n            if(this.l.interest > this.oldInterest){\n                this.$snotify.error('Interest amount invalid')\n                this.l.interest = this.oldInterest\n            }else{\n                let int = this.oldInterest - this.l.interest\n                this.totalRemainning -= int\n            }\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                this.numberFormat = 'n' + this.saleFormContent.decimal\n                                this.inputDec = parseInt(this.saleFormContent.decimal)\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        loadLoan() {\n            this.showLoading = true\n            this.loanList = []\n            loanHandler.loanGets().then((res) => {\n                if (res.data.statusCode === 200) {\n                    const data = res.data.data;\n                    if (data.length > 0) {\n                        let d = data.filter((obj) => {return obj.status == 'active'})\n                        if(d.length > 0) {\n                            this.loanList = d\n                        }else{\n                            this.cancel()\n                        }\n                    }\n                }\n            })\n        },\n        generateNumber() {\n            let data = {\n                abbr: this.transactionType.abbr,\n                structure: this.transactionType.structure,\n                transactionDate: this.l.issuedDate,\n                type: \"Close Loan\",\n            };\n            billingHandler\n                .lastNumber(data)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        const res = response.data.data;\n                        this.suffix = res.suffix;\n                        this.getLastNum();\n                    }\n                })\n                .catch((e) => {\n                    this.errors.push(e);\n                });\n        },\n        getLastNum(){\n            let d = {\n                type: \"CloseLoan\",\n            };\n            loanHandler\n                .getLastNumber(d)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        this.showLoading = false\n                        const res = response.data.data;\n                        const lastNumber = this.zeroPad(\n                            parseInt(res.lastNumber),\n                            this.transactionType.format\n                        );\n                        this.l.lastNumber = parseInt(res.lastNumber)\n                        const number =\n                            this.suffix +\n                            this.transactionType.numberSeparator +\n                            lastNumber;\n                        let des = ''\n                        if(Object.keys(this.l.loan).length > 0){\n                            des = `Close Loan from ${this.l.loan.financialInstitutions.name} For Loan Number ${this.l.loan.approveNumber}`;\n                        }\n                        window.console.log()\n                        this.journal = new JournalModel({\n                            description: des,\n                            transaction_type: LoanType.CLOSE,\n                            journal_type: LoanType.CLOSE,\n                        });\n                        this.journal.abbr = this.transactionType.abbr\n                        // this.loan.activeDate = new Date().toISOString().substr(0, 10);\n\n                        // Add 2 default rows\n                        // this.addRowT(this.$refs.cashBankAccountDS.kendoWidget());\n                        // for (let index = 0; index < 2; index++) {\n                        //     this.addRow(this.$refs.relatedCostDS.kendoWidget());\n                        // }\n                        this.journal.number = this.transactionType.abbr + this.transactionType.numberSeparator + number\n                        this.l.abbr = this.transactionType.abbr\n                        this.l.number = this.transactionType.abbr + this.transactionType.numberSeparator + number;\n                    }\n                })\n                .catch((e) => {\n                    window.console.log(e);\n                });\n        },\n        async loadPrefix() {\n            this.showLoading = true\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"close loan\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionType = res.data.data[0];\n                            this.generateNumber();\n                        }\n                    });\n                }, 10);\n            });\n        },\n    },\n    computed: {},\n    mounted: async function () {\n        // await this.loadDecimal()\n        await this.loadSaleFormContent()\n        await this.getJournalNumber()\n    },\n    created: async function () {\n        this.addEmpty()\n        await this.loadPrefix()\n        await this.loadAccount()\n    },\n};\n</script>\n\n<style scoped>\n.k-dropdown {\n    width: 100%;\n    margin-top: 4px;\n}\n\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n\n.color_green {\n    color: #03b154;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1250px; */\n        max-width: 1080px;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n\n.exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n    font-family: 'Krasar-Bold', serif;\n    color: #000 !important;\n    border-top: 1px solid #000 !important;\n    border-bottom: 1px solid #000 !important;\n    font-size: 15px !important;\n}\n\n.exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > td {\n    color: #000 !important;\n    padding: 5px !important;\n    border-bottom: 1px solid #000 !important;\n}\n\n.exchange-table.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:last-child td {\n    border-bottom: 1px solid #000 !important;\n}\n\n.v-slide-group__content {\n    background-color: #F8F8F9 !important;\n}\n\n.v-tab--active {\n    background-color: #ffffff !important;\n    border-left: none;\n}\n\n.function_content {\n    padding: 0;\n    background-color: #F8F8F9;\n}\n\n.v-input--radio-group--row {\n    margin-top: 0px !important;\n    padding: 0px;\n}\n\n.v-input__control {\n    height: 25px !important;\n}\n</style>\n"]}]}