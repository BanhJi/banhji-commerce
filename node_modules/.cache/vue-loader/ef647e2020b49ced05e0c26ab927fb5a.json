{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/RecordLoanReceipt.vue?vue&type=style&index=0&id=24e10a5b&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/RecordLoanReceipt.vue","mtime":1638499443233},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZ1bmN0aW9uX2NvbnRlbnQgewogICAgcGFkZGluZzogMCAyNXB4IDI1cHg7CiAgICBib3JkZXItYm90dG9tOiAwOwp9CgouYXR0YWNobWVudF90YWJsZS50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAgIC5jb250YWluZXIgewogICAgICAgIC8qIG1heC13aWR0aDogMTE4NXB4OyAqLwogICAgICAgIG1heC13aWR0aDogMTA4MHB4ICFpbXBvcnRhbnQ7CiAgICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLm1iLTYgewogICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsKICAgIH0KfQo="},{"version":3,"sources":["RecordLoanReceipt.vue"],"names":[],"mappingskgCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"RecordLoanReceipt.vue","sourceRoot":"src/views/finances","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"record_loan_receipt\") }}</h2>\n                                <v-icon\n                                    size=\"36\"\n                                    onclick=\"window.history.go(-1); return false;\"\n                                    style=\"cursor: pointer; color: #333;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n\n                            <v-card\n                                outlined\n                                dense\n                                class=\"px-4 no_border mb-4\"\n                                color=\"grayBg\"\n                                height=\"175px\"\n                            >\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"py-0 \">\n                                        <!-- Date -->\n                                        <label class=\"label\">{{ $t(\"date\") }}</label>\n                                        <app-datepicker\n                                            :initialDate=\"r.issuedDate\"\n                                            @emitDate=\"r.issuedDate = $event\"\n                                            @onChanged=\"generateNumber\"\n                                        />\n\n                                        <!-- Number -->\n                                        <label class=\"label\">{{ $t(\"number\") }}</label>\n                                        <v-row>\n                                            <v-col sm=\"2\" cols=\"3\" class=\"pb-1 pt-1 pr-0\">\n                                                <div class=\"code_text\" v-text=\"r.abbr\"></div>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"7\" class=\"pb-1 pt-1 pl-0 pr-0\">\n                                                <v-text-field\n                                                    class=\"custom-border\"\n                                                    v-model=\"r.number\"\n                                                    outlined\n                                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                                    required\n                                                />\n                                            </v-col>\n                                            <v-col sm=\"1\" cols=\"2\" class=\"pb-1 pt-1 pr-0\">\n                                                <v-icon\n                                                    color=\"black\"\n                                                    size=\"30\"\n                                                    class=\"border_qrcode\"\n                                                    @click=\"onGenerateNumberClicked\"\n                                                >mdi-qrcode\n                                                </v-icon>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n\n                                    <!-- Total Approved Amount -->\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-4\">\n                                        <v-card\n                                            outlined\n                                            style=\"display: block\"\n                                            height=\"140\"\n                                            dense\n                                            class=\"pa-3\"\n                                            color=\"third\"\n                                        >\n                                            <h4 class=\"mb-0 text-left text-white\">\n                                                {{ $t(\"approved_amount\") }}\n                                            </h4>\n                                            <h3\n                                                style=\"font-size: 25px\"\n                                                class=\"py-10 float-right text-right text-white\"\n                                            >\n                                                {{ Number(loan.approvedAmount).toLocaleString() }}\n                                            </h3>\n                                        </v-card>\n                                    </v-col>\n\n                                    <!-- Total Amount -->\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 pt-4\">\n                                        <v-card\n                                            outlined\n                                            style=\"display: block\"\n                                            height=\"140\"\n                                            dense\n                                            class=\"pa-3\"\n                                            color=\"third\"\n                                        >\n                                            <h4 class=\"mb-0 text-left text-white\">\n                                                {{ $t(\"total_amount\") }}\n                                            </h4>\n                                            <h3\n                                                style=\"font-size: 25px\"\n                                                class=\"py-10 float-right text-right text-white\"\n                                            >\n                                                {{ Number(totalAmount).toLocaleString() }}\n                                            </h3>\n                                        </v-card>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n\n                            <v-card\n                                class=\"px-4 no_border\"\n                                color=\"white\"\n                                outlined>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pb-3 pa-0\">\n                                        <h3 class=\"mb-3\">{{ $t(\"cash_bank_receipt\") }}</h3>\n                                        <template>\n                                            <kendo-datasource\n                                                ref=\"cashBankAccountDS\"\n                                                :data=\"cashBankAccountEntries\"\n                                                :change=\"onDrGridDataSourceChanged\"\n                                            />\n                                            <kendo-grid\n                                                id=\"cashBankAccountGrid\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'cashBankAccountDS'\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                            >\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :template=\"cashBankAccountRowNumberTmpl\"\n                                                    :width=\"45\"\n                                                    :headerAttributes=\"{\n                                                        style: 'background-color: #EDF1F5;',\n                                                        class: 'text-products',\n                                                    }\"\n                                                    :attributes=\"{\n                                                        style: 'text-align: products',\n                                                    }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'account'\"\n                                                    :title=\"$t('account')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#=account.name||``#</span>'\"\n                                                    :editor=\"cashAccountEditor\"\n                                                    :headerAttributes=\"{\n                                                            style: 'background-color: #EDF1F5',\n                                                        }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n                                                        style: 'background-color: #EDF1F5',\n                                                    }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'ref_number'\"\n                                                    :title=\"$t('reference_no')\"\n                                                    :width=\"160\"\n                                                    :headerAttributes=\"{\n                                                        style: 'background-color: #EDF1F5',\n                                                    }\"\n                                                />\n                                                <!-- <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :editable=\"false\"\n                                                    :headerAttributes=\"{\n                                                        style: 'text-align: right; background-color: #EDF1F5',\n                                                    }\"\n                                                    :attributes=\"{ style: 'text-align: right; ' }\"\n                                                /> -->\n                                            </kendo-grid>\n                                        </template>\n                                        <!--                                        <v-row style=\"background-color: #fff\">-->\n                                        <!--                                            <v-col sm=\"1\" cols=\"12\" class=\"py-0\">-->\n                                        <!--                                                <v-btn color=\"primary\"-->\n                                        <!--                                                       class=\"float-left btn_plus rounded-0 white&#45;&#45;text mt-3\"-->\n                                        <!--                                                       name=\"addDrBtn\"-->\n                                        <!--                                                       @click=\"onAddRowCashBankAccountClicked\">-->\n                                        <!--                                                    <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>-->\n                                        <!--                                                </v-btn>-->\n                                        <!--                                            </v-col>-->\n                                        <!--                                        </v-row>-->\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pa-0\">\n                                        <h3 class=\"mb-3\">{{ $t(\"relate_cost_receipt\") }}</h3>\n                                        <kendo-datasource\n                                            ref=\"relatedCostDS\"\n                                            :data=\"relatedCostEntries\"\n                                            :change=\"onCrGridDataSourceChanged\"\n                                        />\n                                        <kendo-grid\n                                            id=\"relatedCostGrid\"\n                                            class=\"grid-function\"\n                                            :data-source-ref=\"'relatedCostDS'\"\n                                            :sortable=\"false\"\n                                            :filterable=\"false\"\n                                            :column-menu=\"true\"\n                                            :editable=\"true\"\n                                            :scrollable-virtual=\"true\"\n                                        >\n                                            <kendo-grid-column\n                                                :title=\"$t('no.')\"\n                                                :template=\"relatedCostRowNumberTmpl\"\n                                                :width=\"45\"\n                                                :column-menu=\"false\"\n                                                :headerAttributes=\"{\n                                                style: 'background-color: #EDF1F5;',\n                                                    class: 'text-products',\n                                                }\"\n                                                :attributes=\"{\n                                                    style: 'text-align: products',\n                                                }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'account'\"\n                                                :title=\"$t('account')\"\n                                                :width=\"200\"\n                                                :template=\"'<span>#=account.name||``#</span>'\"\n                                                :editor=\"expenseAccountEditor\"\n                                                :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5',\n                                                }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'description'\"\n                                                :title=\"$t('description')\"\n                                                :width=\"200\"\n                                                :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5',\n                                                }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'ref_number'\"\n                                                :title=\"$t('reference_no')\"\n                                                :width=\"160\"\n                                                :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5',\n                                                }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'amount'\"\n                                                :title=\"$t('amount')\"\n                                                :format=\"'{0:n}'\"\n                                                :width=\"150\"\n                                                :headerAttributes=\"{\n                                                    style: 'text-align: right; background-color: #EDF1F5',\n                                                }\"\n                                                :attributes=\"{ style: 'text-align: right; ' }\"\n                                            />\n                                            <kendo-grid-column\n                                                :command=\"{\n                                                    iconClass: 'k-icon k-i-trash',\n                                                    text: 'Delete',\n                                                    name: 'destroy',\n                                                    class: 'btn-plus',\n                                                }\"\n                                                :title=\"'&nbsp;'\"\n                                                :width=\"100\"\n                                                :headerAttributes=\"{\n                                                    style: 'text-align: right; background-color: #EDF1F5',\n                                                }\"\n                                            />\n                                        </kendo-grid>\n                                        <v-row style=\"background-color: #fff\">\n                                            <v-col sm=\"1\" cols=\"12\" class=\"pb-4 pt-0\">\n                                                <v-btn color=\"primary\"\n                                                       class=\"float-left btn_plus rounded-0 white--text mt-3\"\n                                                       name=\"addCrdBtn\"\n                                                       @click=\"onAddRowRelatedCostClicked\">\n                                                    <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                </v-btn>\n                                            </v-col>\n                                            <!--                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">-->\n                                            <!--                                                <template>-->\n                                            <!--                                                    <v-file-input-->\n                                            <!--                                                        class=\"mt-0 pt-0\"-->\n                                            <!--                                                        sm=\"3\"-->\n                                            <!--                                                        cols=\"6\"-->\n                                            <!--                                                        :placeholder=\"$t('attachment')\"-->\n                                            <!--                                                        multiple-->\n                                            <!--                                                        prepend-icon=\"mdi-paperclip\"-->\n                                            <!--                                                    >-->\n                                            <!--                                                        <template v-slot:selection=\"{ text }\">-->\n                                            <!--                                                            <v-chip small label color=\"primary\">-->\n                                            <!--                                                                {{ text }}-->\n                                            <!--                                                            </v-chip>-->\n                                            <!--                                                        </template>-->\n                                            <!--                                                    </v-file-input>-->\n                                            <!--                                                </template>-->\n                                            <!--                                            </v-col>-->\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n\n                            <v-divider/>\n\n                            <!-- Footer -->\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <!-- Warning Message -->\n                                <v-alert type=\"warning\"\n                                         v-model=\"alert\"\n                                         dismissible>\n                                    <span v-html=\"errorMessage\"/>\n                                </v-alert>\n\n                                <v-btn color=\"black\"\n                                       class=\"text-capitalize  white--text float-left\"\n                                       ref=\"btnCancel\"\n                                       @click=\"cancel\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n<!--                                <v-btn-->\n<!--                                    color=\"primary\"-->\n<!--                                    class=\"ml-2 float-right text-capitalize  white&#45;&#45;text\"-->\n<!--                                    @click=\"onSaveOptionClick('saveNew')\"-->\n<!--                                >{{ $t(\"save_new\") }}-->\n<!--                                </v-btn>-->\n                                <v-btn\n                                    color=\"primary\"\n                                    class=\"float-right white--text text-capitalize \"\n                                    @click=\"onSaveOptionClick('saveClose')\"\n                                >{{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"compeletLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"\n            />\n            <LoadingMe\n                :isLoading=\"accountLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport kendo from '@progress/kendo-ui';\nimport LoadingMe from \"@/components/Loading\";\nconst { journalHandler } = require(\"@/scripts/AppHandlers\");\nconst {EntityType} = require(\"@/scripts/default_setup/Collections\")\nimport {JournalModel, JournalEntryModel, LoanDetailModel} from \"@/scripts/model/AppModels\";\nimport {accountHandler, prefixHandler} from \"@/scripts/AppHandlers\";\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\nimport Helper from \"@/helper.js\";\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst LoanType = require(\"@/scripts/default_setup/LoanType.js\");\nconst $ = kendo.jQuery\nimport RecordLoanReceipt from \"@/scripts/financing/model/RecordLoanReceipt\"\nimport currencyHandler from \"@/scripts/currency/handler/currencyHandler\";\n// import billingHandler from \"@/scripts/invoice/handler/billingHandler\";\nconst loanHandler = require(\"@/scripts/financing/handler/loanHandler\")\n\nexport default {\n    name: \"RecordLoanReceipt\",\n    components: {\n        LoadingMe,\n        \"app-datepicker\": DatePickerComponent,\n    },\n    props: {\n        initLoan: {},\n    },\n    data: () => ({\n        /* Obj */\n        accountLoading: false,\n        loan: {},\n        journal: {},\n        journalEntries: [],\n        loanDetail: {},\n        // Form validation\n        valid: true,\n        isEdit: false,\n        saveMode: '',\n        alert: false,\n        errorMessage: '',\n        user: Helper.getUser(),\n        // LoadingMe\n        compeletLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: \"\",\n        loadingTextAlert: \"\",\n        // Other\n        totalAmount: 0,\n        accounts: [],\n        cashBankAccountEntries: [],\n        relatedCostEntries: [],\n        transactionType: {},\n        r: new RecordLoanReceipt({}),\n        expenseAccounts: [],\n        bankAccounts: [],\n        errors: [],\n        exchangeRate: {},\n        journalNumber: '',\n        journalPrefix: '',\n        journalTxnType: EntityType.JOURNAL,\n        suffix: ''\n    }),\n    methods: {\n        /* Set Default Data */\n        async setDefaultData() {\n            this.r = new RecordLoanReceipt({})\n            this.relatedCostEntries = []\n            this.cashBankAccountEntries = []\n            // let bankDS = this.$refs.cashBankAccountDS.kendoWidget();\n            // bankDS.data().forEach(element => {\n            //     bankDS.remove(element)\n            // })\n            // let relatedCostDS = this.$refs.relatedCostDS.kendoWidget();\n            // relatedCostDS.data().forEach(element => {\n            //     relatedCostDS.remove(element)\n            // })\n            this.loadPrefix();\n            this.loadTransactionRate()\n            this.getJournalNumber()\n        },\n        onGenerateNumberClicked() {\n            this.generateNumber();\n        },\n        // Number\n        // generateNumber() {\n        //     this.journal.number = new Date().getTime()\n        // },\n        /* Auto Calculate */\n        autoCalculate() {\n            let cbaDS = this.$refs.cashBankAccountDS.kendoWidget(),\n                rcDS = this.$refs.relatedCostDS.kendoWidget(),\n                total = 0;\n            total = parseFloat(this.loan.approvedAmount)\n\n            rcDS.data().forEach(value => {\n                total -= value.amount;\n            });\n            cbaDS.data().forEach(value => {\n                value.amount = total\n            });\n            // window.console.log(cbaDS.data(), 'data')\n            this.totalAmount = total\n        },\n        onDrGridDataSourceChanged() {\n            this.autoCalculate();\n        },\n        onCrGridDataSourceChanged() {\n            this.autoCalculate();\n        },\n        onAddRowCashBankAccountClicked() {\n            this.addRow(this.$refs.cashBankAccountDS.kendoWidget());\n        },\n        onAddRowRelatedCostClicked() {\n            this.addRow(this.$refs.relatedCostDS.kendoWidget());\n        },\n        cashBankAccountRowNumberTmpl(dataItem) {\n            let ds = this.$refs.cashBankAccountDS.kendoWidget(),\n                index = ds.indexOf(dataItem)\n            return index + 1\n        },\n        relatedCostRowNumberTmpl(dataItem) {\n            let ds = this.$refs.relatedCostDS.kendoWidget(),\n                index = ds.indexOf(dataItem)\n            return index + 1\n        },\n        addRow(gridDataSource) {\n            let last = gridDataSource.total();\n            let je = new JournalEntryModel();\n            gridDataSource.insert(last, je);\n        },\n        addRowT(gridDataSource) {\n            let last = gridDataSource.total();\n            let je = new JournalEntryModel();\n            je.amount = this.loan.approvedAmount\n            gridDataSource.insert(last, je);\n        },\n        // Grid Custom Editor\n        cashAccountEditor(container, options) {\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=number# #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.bankAccounts,\n                        group: {\n                            field: \"account_type.name\",\n                            compare: function (a, b) {\n                                // Order by number\n                                if (a.items[0].number === b.items[0].number) {\n                                    return 0;\n                                } else if (a.items[0].number > b.items[0].number) {\n                                    return 1;\n                                } else {\n                                    return -1;\n                                }\n                            },\n                        },\n                    }),\n                });\n        },\n        expenseAccountEditor(container, options) {\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=number# #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.expenseAccounts,\n                        group: {\n                            field: \"account_type.name\",\n                            compare: function (a, b) {\n                                // Order by number\n                                if (a.items[0].number === b.items[0].number) {\n                                    return 0;\n                                } else if (a.items[0].number > b.items[0].number) {\n                                    return 1;\n                                } else {\n                                    return -1;\n                                }\n                            },\n                        },\n                    }),\n                });\n        },\n        /* Add Loan Detail */\n        addLoanDetail() {\n            this.loanDetail = new LoanDetailModel({\n                journal_uuid: this.journal.uuid,\n                account_uuid: this.loan.loanAccount.uuid,\n                description: this.journal.description,\n                amount: this.totalAmount,\n                date: Helper.toISODate(this.r.issuedDate),\n                txn_type: LoanType.RECIEPT,\n            })\n        },\n        async loadTransactionRate() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const date = new Date(this.r.issuedDate).toISOString().substr(0, 10);\n                    const code = this.loan.currency.code\n                    if (code) {\n                        this.showLoading = true;\n                        currencyHandler\n                            .getLastExchangeRateByDate(date, code)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    this.exchangeRate = res.data.data[0];\n                                }\n                            });\n                    }\n                }, 10);\n            });\n        },\n        /* Add Journal */\n        addJournal() {\n            let entries = [];\n\n            // Cash Bank Account on Dr\n            let cashBankAcctDS = this.$refs.cashBankAccountDS.kendoWidget();\n            cashBankAcctDS.data().forEach(element => {\n                if (element.amount != 0) {\n                    element.currency = this.loan.currency;\n                    element.exchange_rate = parseFloat(this.exchangeRate.rate); // Will change later\n                    element.exchanged_amount = element.amount * parseFloat(this.exchangeRate.rate);\n                    entries.push(element);\n                }\n            });\n\n            // Related Cost on Dr\n            let relatedCostDS = this.$refs.relatedCostDS.kendoWidget();\n            relatedCostDS.data().forEach(element => {\n                if (element.amount != 0) {\n                    element.currency = this.loan.currency;\n                    element.exchange_rate = parseFloat(this.exchangeRate.rate); // Will change later\n                    element.exchanged_amount = element.amount * parseFloat(this.exchangeRate.rate);\n                    entries.push(element);\n                }\n            });\n\n            // Loan Account on Cr\n            let loanEntry = new JournalEntryModel({\n                account: this.loan.loanAccount,\n                description: this.journal.description,\n                amount: this.loan.approvedAmount * -1,\n                currency: this.loan.currency,\n                exchange_rate: parseFloat(this.exchangeRate.rate), // Will change later\n                exchanged_amount: parseFloat(this.loan.approvedAmount) * parseFloat(this.exchangeRate.rate),\n            });\n            entries.push(loanEntry);\n            this.journalEntries = entries;\n        },\n        shrinkData() {\n            // Number combine abbr + number\n            // this.journal.number = this.journal.abbr + '-' + this.journal.number\n\n            // Journal Date\n            this.journal.journal_date = Helper.toISODate(this.r.issuedDate)\n\n            // Loan Active Date\n            this.loan.receiptDate = Helper.toISODate(this.r.issuedDate)\n\n            // User\n            if (this.isEdit) {\n                this.journal.modified_by = this.user\n            } else {\n                this.journal.created_by = this.user\n            }\n        },\n        // Validating\n        validateForm() {\n            let result = true,\n                msg = ''\n\n            // Total Amount\n            // if (this.loan.approved_amount !== this.totalAmount) {\n            //     msg += '<p>' + this.$i18n.t('Total Amount equal to Approved Amount') + '</p>'\n            //     result = false;\n            // }\n\n            // // Select Account and Amount\n            // let please_select_account_line = this.$i18n.t('pls_select_acc_line')\n            const band = $(\"#cashBankAccountGrid\").data(\"kendoGrid\"),\n                bdata = band.dataSource\n            bdata.data().forEach(m => {\n                if (m.account.uuid === undefined) {\n                    msg += this.$i18n.t('pls_select_acc_line')\n                    result = false;\n                }\n            })\n            // window.console.log(dataSource, msg)\n            // \t// No Account\n            // \tif(value.account.number === '' && value.amount !== 0){\n            // \t\tlet rowIndex = index + 1\n            // \t\tmsg += '<p>' + please_select_account_line + rowIndex.toString() + '</p>'\n            // \t\tresult = false\n            // \t}\n\n            // \t// Count Empty Row\n            // \tif(value.account.number === '' && value.amount === 0){\n            // \t\tcountEmpty++\n            // \t}\n            // })\n\n            // // Empty Row\n            // if(countEmpty === cashBankAccountDS.total()){\n            // \tmsg += '<p>' + this.$i18n.t('please_acc_ot_record') + '</p>'\n            // \tresult = false;\n            // }\n\n            // Show Alert\n            this.errorMessage = msg;\n            this.alert = false;\n            if (result === false) {\n                this.alert = true;\n            }\n\n            return result;\n        },\n        // All Saves\n        onSaveOptionClick(mode) {\n            if (this.$refs.form.validate() && this.validateForm()) {\n                this.saveMode = mode\n                this.save()\n            } else {\n                this.alertError()\n            }\n        },\n        cancel() {\n            this.$swal({\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonColor: '#4d4848',\n                cancelButtonColor: '#ED1A3A',\n                confirmButtonText: 'Yes, discard it!'\n            }).then((result) => {\n                if (result.value) {\n                    this.clear()\n                    this.$router.go(-1)\n                }\n            })\n        },\n        clear() {\n            // Reset Form\n            // this.$refs.form.reset();\n\n            this.totalAmount = 0;\n            this.cashBankAccountEntries = [];\n            this.relatedCostEntries = [];\n\n            // Set default data\n            this.setDefaultData()\n        },\n        removeEmptyLine() {\n            let relatedCostDS = this.$refs.relatedCostDS.kendoWidget();\n            if(relatedCostDS.data().length > 0) {\n                relatedCostDS.data().forEach(element => {\n                    if (element != undefined) {\n                        if (element.account.uuid === undefined || element.account.uuid == '') {\n                            relatedCostDS.remove(element)\n                        }\n                    }else{\n                        relatedCostDS.remove(element)\n                    }\n                })\n            }\n        },\n        save() {\n            let bankDS = this.$refs.cashBankAccountDS.kendoWidget();\n            bankDS.data().forEach(element => {\n                if (element.account.uuid === undefined || element.account.uuid == '') {\n                    this.$snotify.error('Please select a Cash/Bank account')\n                    return\n                }\n            })\n\n            // let self = this;\n            this.removeEmptyLine()\n            // Shrink Data\n            this.shrinkData();\n\n            // Add Loan Detail\n            this.addLoanDetail();\n\n            // Add Journal\n            this.addJournal();\n\n            // Sync Data\n            this.journal.journal_entries = this.journalEntries\n            this.accountLoading = true\n            let self = this\n            let relatedCostDS = this.$refs.relatedCostDS.kendoWidget();\n            this.r.loan = this.loan\n            this.journal.currency_code = this.loan.currency.code\n            // this.journal.number = this.journalNumber\n            this.journal.prefix_format = this.journalPrefix\n            if(this.loan.hasOwnProperty('segment')){\n                this.journal.segment_uuid = this.loan.segment.id\n            }\n            if(this.loan.hasOwnProperty('location')){\n                this.journal.location_uuid = this.loan.location.id\n            }\n            journalHandler.save(new JournalModel(this.journal))\n                .then(function (response) {\n                    self.r.journalId = response ? response.data.uuid : ''\n                    self.r.journal = JSON.stringify(self.journal)\n                    self.r.user = self.user\n                    self.r.exchangeRate = self.exchangeRate\n                    self.r.cashItemLine = bankDS.data()\n                    self.r.relateCostItemLine = relatedCostDS.data()\n                    self.r.receivedAmount = self.totalAmount\n                    loanHandler.loanReceiptCreate(new RecordLoanReceipt(self.r)).then(response => {\n                        self.accountLoading = false\n                        if (response.data.statusCode === 201) {\n                            self.$snotify.success('Successfully')\n                            window.history.go(-1);\n                        }\n                    }).catch(e => {\n                        self.$snotify.error('Something went wrong')\n                        self.errors.push(e)\n                        window.console.log(e, 'error')\n                    })\n                })\n                .catch(function (error) {\n                    Helper.alertErrorMsg(error);\n                })\n                .finally(() => {\n                    self.showLoading = false;\n                });\n        },\n        // Response Status\n        responseStatus(status) {\n            switch (status) {\n                case 200:// Ok\n                    this.showAlert()\n\n                    // Reset to default data\n                    this.clear();\n\n                    break\n                case 201:// Duplicate\n                    this.alertError('Duplicate entry!')\n                    break\n                default:\n                    break\n            }\n        },\n        // Sweetalert2\n        changeAlertStatus() {\n            this.loadingAlert = true\n            setTimeout(() => {\n                this.loadingAlert = false\n            }, 6200);\n        },\n        showAlert() {\n            this.showLoading = false\n            this.changeAlertStatus()\n            this.loadingTextAlert = \"Added Successful\"\n            this.loadingColorAlert = \"#3DA72E\"\n            switch (this.saveMode) {\n                case 'saveClose':// Save Close\n                    // this.$swal({\n                    // \tposition: 'products',\n                    // \ticon: 'success',\n                    // \ttitle: 'Your work has been saved',\n                    // \tshowConfirmButton: true,\n                    // }).then((result) => {\n                    // \tif (result.value) {\n                    // \t\twindow.history.go(-1)\n\n                    // \t\treturn false\n                    // \t}\n                    // })\n                    this.$router.go(-1)\n                    break;\n                default:// Save New\n                    // this.$swal({\n                    // \tposition: 'products',\n                    // \ticon: 'success',\n                    // \ttitle: 'Your work has been saved',\n                    // \tshowConfirmButton: false,\n                    // \ttimer: 1500\n                    // })\n                    break;\n            }\n            this.saveMode = ''\n        },\n        alertError(msg) {\n            if (msg) {\n                this.$swal({\n                    position: 'center',\n                    icon: 'error',\n                    title: 'Oops...!',\n                    text: msg,\n                    showConfirmButton: true\n                })\n            } else {\n                this.showLoading = false\n                this.loadingTextAlert = \"Failed!\"\n                this.loadingColorAlert = \"#eb8334\"\n                this.changeAlertStatus()\n            }\n        },\n        async loadPrefix() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"record loan receipt\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionType = res.data.data[0];\n                            this.generateNumber();\n                        }\n                    });\n                }, 10);\n            });\n        },\n        generateNumber() {\n            let data = {\n                abbr: this.transactionType.abbr,\n                structure: this.transactionType.structure,\n                transactionDate: this.r.issuedDate,\n                type: \"Record Loan Receipt\",\n            };\n            billingHandler\n            .lastNumber(data)\n            .then((response) => {\n                if (response.data.statusCode === 200) {\n                    const res = response.data.data;\n                    this.suffix = res.suffix;\n                    this.getLastNum();\n                }\n            })\n            .catch((e) => {\n                this.errors.push(e);\n            });\n        },\n        getLastNum(){\n            let d = {\n                type: \"RecordReceipt\",\n            };\n            loanHandler\n                .getLastNumber(d)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        const res = response.data.data;\n                        const lastNumber = this.zeroPad(\n                            parseInt(res.lastNumber),\n                            this.transactionType.format\n                        );\n                        this.r.lastNumber = parseInt(res.lastNumber)\n                        const number =\n                            this.suffix +\n                            this.transactionType.numberSeparator +\n                            lastNumber;\n\n                        let des = ''\n                        if(Object.keys(this.loan).length > 0){\n                            des = `Recieve Loan from ${this.loan.financialInstitutions.name} For Loan Number ${this.loan.approveNumber}`;\n                        }\n\n                        this.journal = new JournalModel({\n                            description: des,\n                            transaction_type: LoanType.RECIEPT,\n                            journal_type: LoanType.RECIEPT,\n                        });\n                        this.journal.abbr = this.transactionType.abbr\n                        this.loan.activeDate = new Date().toISOString().substr(0, 10);\n\n                        // Add 2 default rows\n                        this.addRowT(this.$refs.cashBankAccountDS.kendoWidget());\n                        for (let index = 0; index < 2; index++) {\n                            this.addRow(this.$refs.relatedCostDS.kendoWidget());\n                        }\n                        this.journal.number = this.transactionType.abbr + this.transactionType.numberSeparator + number\n                        this.r.abbr = this.transactionType.abbr\n                        this.r.number = number;\n                        this.r.abbrNumber = this.transactionType.abbr + this.transactionType.numberSeparator + number\n                    }\n                })\n                .catch((e) => {\n                    window.console.log(e);\n                });\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        clearForm(){\n            this.r = new RecordLoanReceipt({})\n            this.removeEmptyLine()\n            setTimeout(() => {\n                this.addRow()\n                this.addRow()\n            }, 500)\n        },\n        async getJournalNumber() {\n            let num = await Helper.generateAccountingNumber(this.journalTxnType, this.r.issuedDate)\n            this.journalNumber = num.number\n            this.journalPrefix = num.prefix_format\n        },\n    },\n    watch: {\n        '$route': 'setDefaultData',\n        initLoan() {\n            this.loan = this.initLoan\n            window.console.log(this.loan, 'loan')\n        }\n    },\n    mounted() {\n        if(this.initLoan == undefined){\n            window.history.go(-1)\n        }else {\n            this.loan = this.initLoan;\n            /* Initial Loan */\n            this.loan = this.initLoan;\n            window.console.log(this.loan, 'loan')\n            /* Set Default Data */\n            this.setDefaultData();\n            this.r.loan = this.initLoan;\n            /* Call All Accounts */\n            this.accountLoading = true\n            let self = this\n            accountHandler.getAll()\n                .then((result) => {\n                    this.accountLoading = false\n                    this.accounts = result.data;\n                    let res = result.data\n                    let ex = res.filter((obj) => {\n                        return parseInt(obj.account_type.number) >= 33 && parseInt(obj.account_type.number) <= 43\n                    })\n                    if(ex.length > 0){\n                        this.expenseAccounts = ex\n                    }\n                    let bk = res.filter((obj) => {\n                        return parseInt(obj.account_type.number) >= 1 && parseInt(obj.account_type.number) <= 5\n                    })\n                    if(bk.length > 0){\n                        this.bankAccounts = bk\n                    }\n                }).catch(function (error) {\n                self.alertError(error);\n            });\n        }\n    },\n    created() {\n    }\n};\n</script>\n\n<style scoped>\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n}\n\n.attachment_table.theme--light.v-data-table {\n    background-color: transparent !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n</style>"]}]}