{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/ApprovedLoan.vue?vue&type=style&index=0&id=7a327a9a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/ApprovedLoan.vue","mtime":1638499443229},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1pbi13aWR0aDogMTI2NHB4KSB7CiAgICAuY29udGFpbmVyIHsKICAgICAgICAvKiBtYXgtd2lkdGg6IDExODVweDsgKi8KICAgICAgICBtYXgtd2lkdGg6IDEwODBweCAhaW1wb3J0YW50OwogICAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAgIC4ubWItNiB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50OwogICAgfQp9Cg=="},{"version":3,"sources":["ApprovedLoan.vue"],"names":[],"mappingsu9BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ApprovedLoan.vue","sourceRoot":"src/views/finances","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"approve_loan\") }}</h2>\n                                <v-icon\n                                    onclick=\"window.history.go(-1); return false;\"\n                                    style=\"\n                                        cursor: pointer;\n                                        color: #333;\n                                        font-size: 40px;\n                                    \"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n\n                            <v-card\n                                outlined\n                                dense\n                                class=\"px-4 pb-4 no_border mb-4\"\n                                color=\"grayBg\"\n                            >\n                                <v-row>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"financial_institutions\") }}</label>\n                                        <br/>\n                                        <h3 class=\"\"\n                                        >{{ loan.financialInstitutions.name }} ({{\n                                                loan.financialInstitutions.abbr\n                                            }})</h3>\n\n                                        <br/>\n\n                                        <label class=\"label\">{{ $t(\"loan\") }}</label>\n                                        <br/>\n                                        <h3 class=\"\">{{\n                                                loan.name\n                                            }}</h3>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"appoved_date\") }}</label>\n                                        <app-datepicker\n                                            :initialDate=\"loan.approveDate\"\n                                            @emitDate=\"loan.approveDate = $event\"\n                                        />\n\n                                        <label class=\"label\">{{ $t(\"first_payment_date\") }}</label>\n                                        <app-datepicker\n                                            :initialDate=\"loan.firstPaymentDate\"\n                                            @emitDate=\"loan.firstPaymentDate = $event\"\n                                            @onChanged=\"paymentMethodChange\"\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"approve_amount\") }}</label>\n                                        <!--                                        <v-text-field-->\n                                        <!--                                            class=\"mt-1\"-->\n                                        <!--                                            outlined-->\n                                        <!--                                            required-->\n                                        <!--                                            type=\"number\"-->\n                                        <!--                                            v-model=\"loan.approvedAmount\"-->\n                                        <!--                                            @change=\"paymentMethodChange\"-->\n                                        <!--                                        />-->\n                                        <vue-numeric\n                                            style=\"width: 100%;font-size: 18px;background-color: #ffff;border-radius: 4px;text-align: right;border: 1px solid #ddd !important; padding: 9px !important; margin-bottom: 15px;\"\n                                            class=\"mt-1 mr-2 mt-0 text-bold pa-4\"\n                                            currency=\"\"\n                                            separator=\",\"\n                                            v-bind:minus=\"false\"\n                                            v-bind:precision=\"inputDec\"\n                                            v-model=\"loan.approvedAmount\"\n                                            @change=\"paymentMethodChange\"\n                                            :rules=\"[v => !!v || 'Amount is required']\"\n                                            outlined\n                                        >\n                                        </vue-numeric>\n\n                                        <label class=\"label\">{{\n                                                $t(\"approved_loan_number\")\n                                            }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            v-model=\"loan.approveNumber\"\n                                            outlined\n                                            :rules=\"[\n                                                (v) =>\n                                                    !!v || 'Number is required',\n                                            ]\"\n                                            required\n                                        />\n                                    </v-col>\n                                </v-row>\n\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                        <v-card\n                                            outlined\n                                            dense\n                                            class=\"px-4 pt-4\"\n                                            style=\"\n                                                background-color: #d5dce4;\n                                                border: 0 !important;\n                                                background: #fff !important;\n                                            \"\n                                        >\n                                            <v-row>\n                                                <!-- Col one -->\n                                                <v-col\n                                                    sm=\"4\"\n                                                    cols=\"12\"\n                                                    class=\"py-0\"\n                                                >\n                                                    <label class=\"label\">{{\n                                                            $t(\"duration_months\")\n                                                        }}</label>\n                                                    <v-text-field\n                                                        class=\"mt-1\"\n                                                        outlined\n                                                        v-model=\"loan.duration\"\n                                                        @change=\"paymentMethodChange\"\n                                                        required\n                                                    />\n                                                    <label class=\"label\">{{ $t(\"interest_rate_months\") }}</label>\n                                                    <v-row>\n                                                        <v-col\n                                                            sm=\"10\"\n                                                            cols=\"12\"\n                                                            class=\"py-0 pr-0\"\n                                                        >\n                                                            <v-text-field\n                                                                class=\"mt-1 \"\n                                                                outlined\n                                                                required\n                                                                @change=\"paymentMethodChange\"\n                                                                v-model=\"loan.interestRate\"\n                                                                append-icon=\"\"\n                                                            />\n                                                        </v-col>\n                                                        <v-col\n                                                            sm=\"2\"\n                                                            cols=\"12\"\n                                                            class=\"py-2\"\n                                                        >\n                                                            <v-icon\n                                                                large\n                                                                color=\"\"\n                                                                style=\"font-size: 30px\"\n                                                            >\n                                                                mdi-percent-outline\n                                                            </v-icon>\n                                                        </v-col>\n                                                    </v-row>\n                                                    <label class=\"label\">{{ $t(\"interest_account\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        id=\"paymentTermSelector\"\n                                                        :items=\"interestAccounts\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        v-model=\"loan.interestAccount\"\n                                                        no-data-text=\"No data found.\"\n                                                        @change=\"paymentMethodChange\"\n                                                        outlined/>\n                                                </v-col>\n                                                <!-- Col two -->\n                                                <v-col\n                                                    sm=\"4\"\n                                                    cols=\"12\"\n                                                    class=\"py-0\"\n                                                >\n                                                    <label class=\"label\">{{ $t(\"monthly_repayment\") }}</label>\n                                                    <v-text-field\n                                                        class=\"mt-1\"\n                                                        v-model=\"monthlyRepayment\"\n                                                        outlined\n                                                        required\n                                                        disabled\n                                                        id=\"monthlyPayment\"\n                                                    />\n                                                    <label class=\"label\">{{ $t(\"payment_term\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        id=\"paymentTermSelector\"\n                                                        :items=\"paymentTerms\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        v-model=\"loan.paymentTerm\"\n                                                        no-data-text=\"No data found.\"\n                                                        return-object\n                                                        outlined/>\n                                                    <label class=\"label\">{{ $t(\"segment\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        :items=\"segments\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        v-model=\"loan.segment\"\n                                                        no-data-text=\"No data found.\"\n                                                        :rules=\"[ (v) => !!v || 'Segment is required', ]\"\n                                                        return-object\n                                                        outlined/>\n                                                </v-col>\n                                                <!-- Col three -->\n                                                <v-col\n                                                    sm=\"4\"\n                                                    cols=\"12\"\n                                                    class=\"py-0\"\n                                                >\n                                                    <label class=\"label\">{{\n                                                            $t(\"loan_account\")\n                                                        }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        tag=\"loanAccountSelector\"\n                                                        placeholder=\"Please select an Account\"\n                                                        item-text=\"name\"\n                                                        :items=\"loanAccounts\"\n                                                        v-model=\"loan.loanAccount\"\n                                                        no-data-text=\"No data found.\"\n                                                        return-object\n                                                        outlined\n                                                        loading=\"true\"\n                                                        single-line\n                                                    >\n                                                        <template\n                                                            slot=\"selection\"\n                                                            slot-scope=\"{\n                                                                item,\n                                                            }\"\n                                                        >\n                                                            {{ item.number }} -\n                                                            {{ item.name }}\n                                                        </template>\n                                                        <template\n                                                            slot=\"item\"\n                                                            slot-scope=\"{ item }\"\n                                                        >\n                                                            {{ item.number }} -\n                                                            {{ item.name }}\n                                                        </template>\n                                                    </v-select>\n                                                    <label class=\"label\">{{ $t(\"payment_method\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        id=\"paymentTermSelector\"\n                                                        :items=\"paymentMethod\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        v-model=\"loan.paymentMethod\"\n                                                        no-data-text=\"No data found.\"\n                                                        @change=\"paymentMethodChange\"\n                                                        outlined/>\n                                                    <label class=\"label\">{{ $t(\"location\") }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        :items=\"locations\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        v-model=\"loan.location\"\n                                                        no-data-text=\"No data found.\"\n                                                        :rules=\"[ (v) => !!v || 'Location is required', ]\"\n                                                        return-object\n                                                        outlined/>\n                                                </v-col>\n                                            </v-row>\n                                            <!-- End from second -->\n                                        </v-card>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                        <template>\n                                            <kendo-datasource\n                                                ref=\"scheduleAR\"\n                                                :data=\"scheduleData\"/>\n                                            <kendo-grid\n                                                id=\"scheduleAR\" class=\"grid-function\"\n                                                :data-source-ref=\"'scheduleAR'\"\n                                                :column-menu=\"false\"\n                                                :noRecords=\"true\"\n                                                :editable=\"false\"\n                                                :groupable=\"false\"\n                                                :scrollable-virtual=\"true\">\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :width=\"55\"\n                                                    :column-menu=\"false\"\n                                                    :template=\"rowNumberTmpl\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5;',class: 'text-products'}\"\n                                                    :attributes=\"{style: 'text-align: center'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'date'\"\n                                                    :title=\"$t('date')\"\n                                                    :template=\"'<span>#= date!=`Total` ? date : `` #</span>'\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: left'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'disbursed_amt'\"\n                                                    :title=\"$t('principle_remaining')\"\n                                                    :template=\"'<span>#= kendo.toString(principal_r, numberFormat) #</span>'\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'amount_to_be_paid'\"\n                                                    :title=\"$t('amount_to_be_paid')\"\n                                                    :template=\"'<span>#= kendo.toString(total, numberFormat) #</span>'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: right; font-weight: bold'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'principal_amount'\"\n                                                    :title=\"$t('principal_amount')\"\n                                                    :template=\"'<span>#= kendo.toString(principal, numberFormat) #</span>'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'interest'\"\n                                                    :title=\"$t('interest')\"\n                                                    :template=\"'<span>#= kendo.toString(interest, numberFormat) #</span>'\"\n                                                    :width=\"200\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'ending_balance'\"\n                                                    :title=\"$t('ending_balance')\"\n                                                    :template=\"'<span>#= date!=`Total` ? kendo.toString(principal_r - principal, numberFormat) : `` #</span>'\"\n                                                    :width=\"200\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                                />\n                                            </kendo-grid>\n                                        </template>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n\n                            <v-divider/>\n\n                            <!-- Footer -->\n                            <v-card\n                                outlined\n                                dense\n                                class=\"no_border function_footer\"\n                            >\n                                <!-- Warning Message -->\n                                <v-alert type=\"warning\"\n                                         v-model=\"alert\"\n                                         dismissible>\n                                    <span v-html=\"errorMessage\"/>\n                                </v-alert>\n\n                                <v-btn\n                                    color=\"black\"\n                                    outlined\n                                    class=\"text-capitalize  black--text float-left\"\n                                    @click=\"onCancelClicked\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n                                <v-btn\n                                    @click=\"onSaveClicked\"\n                                    color=\"primary\"\n                                    class=\"ml-2 float-right text-capitalize  white--text\"\n                                >{{ $t(\"approve\") }}\n                                </v-btn>\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n            />\n            <LoadingMe\n                :isLoading=\"showLoadingAcc\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n// Import Model\nimport LoanModel from \"@/scripts/financing/model/Loan\"\n\n// Companent\nimport LoadingMe from \"@/components/Loading\";\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\n\n\nimport kendo from \"@progress/kendo-ui\"\n\n\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\nimport currencyHandler from \"@/scripts/currency/handler/currencyHandler\";\n\nconst {accountHandler, paymentTermHandler} = require(\"@/scripts/AppHandlers\");\nconst loanHandler = require(\"@/scripts/financing/handler/loanHandler\")\nimport VueNumeric from 'vue-numeric'\nimport settingsHandler from \"@/scripts/settingsHandler\";\nimport locationHandler from \"@/scripts/locationHandler\";\n\nexport default {\n    name: \"ApprovedLoan\",\n    components: {\n        LoadingMe,\n        \"app-datepicker\": DatePickerComponent,\n        VueNumeric\n    },\n    props: {\n        initLoan: {},\n    },\n    data: () => ({\n        /* Obj */\n        loan: new LoanModel(),\n        segments: [],\n        locations: [],\n        // Form validation\n        valid: true,\n        isEdit: false,\n        saveMode: '',\n        alert: false,\n        errorMessage: '',\n        // LoadingMe\n        showLoadingAcc: false,\n        isLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: \"\",\n        loadingTextAlert: \"\",\n        // Other\n        accounts: [],\n        paymentTerms: [],\n        paymentMethod: [\n            {id: 1, name: 'បង់ថយ'},\n            {id: 2, name: 'បង់ថេរ'}\n        ],\n        saleFormContent: {},\n        scheduleAR: [],\n        scheduleData: [],\n        numberFormat: 'n0',\n        currencyCode: '',\n        interestAccounts: [],\n        loanAccounts: [],\n        showLoading: false,\n        inputDec: 2\n    }),\n    methods: {\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.scheduleAR.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            if (index === (this.scheduleAR.length - 1)) {\n                return ''\n            } else {\n                return index + 1\n            }\n        },\n        getLastDayOfTheMonth(date) {\n            return new Date(\n                date.getFullYear(),\n                date.getMonth() + 1,\n                0\n            ).getDate();\n        },\n        toNumberOfYearMonth(numberOfMonth) {\n            // window.console.log(numberOfMonth);\n            let year = parseInt(parseInt(numberOfMonth) / 12);\n            let month = parseInt(numberOfMonth) - year * 12;\n            return {\n                year: year,\n                month: month,\n            };\n        },\n        onRequestDateChanged() {\n            let exDate = new Date(this.loan.approved_date),\n                duration = parseInt(this.loan.duration),\n                isLastDayOfTheMonth = false,\n                lastDay = this.getLastDayOfTheMonth(exDate);\n\n            if (parseInt(lastDay) == parseInt(exDate.getDate())) {\n                isLastDayOfTheMonth = true;\n            }\n\n            let numOfMonths = duration + exDate.getMonth() + 1;\n            let addMonth = this.toNumberOfYearMonth(numOfMonths);\n            if (isLastDayOfTheMonth) {\n                let month = addMonth.month;\n                let year = parseInt(exDate.getFullYear()) + addMonth.year;\n                let day = parseInt(\n                    this.getLastDayOfTheMonth(new Date(year, month, 0))\n                );\n                /*\n                    using the time to hold back the current time so the that date won't switch to other day\n                    base on the ISOTime zoon with +7 for Cambodia.\n                    */\n                this.loan.first_payment_date = new Date(year, month - 1, day, 12, 0, 0)\n                    .toISOString()\n                    .substring(0, 10);\n            } else {\n                this.loan.first_payment_date = new Date(exDate)\n                    .toISOString()\n                    .substr(0, 10);\n            }\n        },\n        onCancelClicked() {\n            this.$swal({\n                title: \"Are you sure?\",\n                text: \"Error: Transacton not save.\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: \"Yes, reset it!\",\n            }).then((result) => {\n                if (result.value) {\n                    window.history.go(-1)\n                    return false\n                }\n            })\n        },\n        onSaveClicked() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate();\n                return;\n            }\n            let self = this;\n            // Convert date to ISO\n            this.loan.approveDate = kendo.toString(new Date(this.loan.approveDate), 'yyyy-MM-dd');\n            this.loan.firstPaymentDate = kendo.toString(new Date(this.loan.firstPaymentDate), 'yyyy-MM-dd');\n            this.loan.schedules = this.scheduleData\n            this.loan.status = \"approved\"\n            this.loan.receiptDate = ''\n            this.loan.isEdit = true\n            // Sync Data\n            this.showLoading = true;\n            // window.console.log(this.loan, 'before')\n            loanHandler.loanCreate(new LoanModel(this.loan))\n                .then(function (response) {\n                    if (response) {\n                        self.$swal({\n                            position: 'products',\n                            icon: 'success',\n                            title: 'Your work has been saved',\n                            showConfirmButton: true,\n                            confirmButtonColor: '#4d4848',\n                            cancelButtonColor: '#ED1A3A',\n                            confirmButtonText: 'Yes, discard it!'\n                        }).then((result) => {\n                            if (result.value) {\n                                window.history.go(-1)\n                                return false\n                            }\n                        })\n                    } else {\n                        self.alertError();\n                    }\n                })\n                .catch(function (error) {\n                    self.alertError(error);\n                })\n                .finally(function () {\n                    self.showLoading = false;\n                })\n        },\n        // Response Status\n        responseStatus(status) {\n            switch (status) {\n                case 200: // Ok\n                    this.showMsgDialog(\"\", true);\n                    // Reset form\n                    // this.$refs.form.reset();\n\n                    this.$route.go(-1);\n                    //TODO update the loan if when approve successfully.\n                    break;\n                default:\n                    break;\n            }\n        },\n        // Sweetalert2\n        changeAlertStatus() {\n            this.loadingAlert = true;\n            setTimeout(() => {\n                this.loadingAlert = false;\n            }, 6200);\n        },\n        showMsgDialog(msg, status) {\n            if (msg) {\n                // Code here\n            } else {\n                msg = \"Something went wrong!\";\n            }\n            // this.isLoading = false;\n            this.showLoading = false;\n            this.loadingTextAlert =\n                status == false ? \"Failed!\" : \"Added Successful\";\n            this.loadingColorAlert = status == false ? \"#eb8334\" : \"#3DA72E\";\n            this.changeAlertStatus();\n            if (status) {\n                switch (this.saveMode) {\n                    case \"saveClose\":\n                        window.history.go(-1);\n                        break;\n                    default:\n                        break;\n                }\n            }\n        },\n        paymentMethodChange() {\n            if (this.loan.paymentMethod == 1) {\n                this.schedule4()\n            } else if (this.loan.paymentMethod == 2) {\n                this.schedule5()\n            }\n        },\n        schedule4() {\n            this.scheduleAR = []\n            this.scheduleData = []\n            let p = parseFloat(this.loan.approvedAmount)\n            let t = parseFloat(this.loan.duration)\n            let ir = parseFloat(this.loan.interestRate)\n            let sd = this.loan.firstPaymentDate\n            //Principle for every month\n            let fp = (p / t).toFixed(this.saleFormContent.decimal)\n            fp = parseFloat(fp)\n            //Total by month\n            // eslint-disable-next-line no-unused-vars\n            let ft = 0\n            let self = this\n            let tInterest = 0\n            for (let i = 0; i < t; i++) {\n                ft += fp\n                let ite = (p * ir) / 100;\n                ite = parseFloat(ite.toFixed(self.saleFormContent.decimal));\n                tInterest += ite;\n                //Interest rate\n                //date\n                let sda = sd;\n                if (i > 0) {\n                    sd = new Date(sd);\n                    sd.setMonth(sd.getMonth() + 1);\n                    sda = sd;\n                }\n                self.scheduleAR.push({\n                    principal_r: p,\n                    principal: fp,\n                    interest: ite,\n                    total: ite + fp,\n                    date: kendo.toString(sda, \"yyyy-MM-dd\"),\n                    locale: self.currencyCode,\n                    numberFormat: self.numberFormat,\n                    status: 1\n                });\n                p = parseFloat((p - fp).toFixed(self.saleFormContent.decimal));\n                // console.log(sd);\n            }\n            //Find balance\n            p = parseFloat(p.toFixed(self.saleFormContent.decimal));\n            if (p != 0) {\n                this.makeBalance(p);\n            }\n            if (this.scheduleAR.length > 0) {\n                this.loan.monthlyRepayment = parseFloat(this.scheduleAR[0].total.toFixed(this.saleFormContent.decimal))\n                this.monthlyRepayment = kendo.toString(parseFloat(this.scheduleAR[0].total), `n${this.saleFormContent.decimal}`)\n            }\n            this.totalInterest = kendo.toString(tInterest, this.numberFormat)\n            this.loan.totalInterest = tInterest\n            this.totalPayment = kendo.toString(tInterest + parseFloat(this.loan.approvedAmount), this.numberFormat)\n            this.loan.totalPayment = tInterest + parseFloat(this.loan.approvedAmount)\n            this.addTotal()\n            this.scheduleData = this.scheduleAR\n        },\n        makeBalance(amt) {\n            let idx = parseFloat(this.loan.duration) - 1\n            let oamt = this.scheduleAR[idx].principal\n            let namt = oamt + amt\n            namt = parseFloat(namt.toFixed(this.saleFormContent.decimal))\n            this.scheduleAR[idx].principal = namt\n            this.scheduleAR[idx].total = this.scheduleAR[idx].interest + namt\n        },\n        fixRate(P, r, t) {\n            // var C = 0;\n            // var a = P*r;\n            // var b = Math.pow((1+r), t);\n            //     b = parseFloat(b.toFixed(2));\n            // var c = 1/b;\n            // var d = 1 - c;\n            //     d = parseFloat(d.toFixed(2));\n            // C = a/d;\n            // console.log(P+\"--\"+r+\"--\"+t);\n            // return C;\n            let l = 1 / t, i = r * l, n = t\n            let emi = i * P / [1 - Math.pow((1 + i), -n)]\n            return emi\n        },\n        schedule5() {\n            let self = this\n            if (parseFloat(this.loan.interestRate) <= 0) {\n                return\n            }\n            this.scheduleAR = []\n            this.scheduleData = []\n            let fprice = this.fixRate(parseFloat(this.loan.approvedAmount), ((parseFloat(this.loan.interestRate) * parseFloat(this.loan.duration)) / 100), parseFloat(this.loan.duration))\n            fprice = parseFloat(fprice.toFixed(this.saleFormContent.decimal))\n            this.loan.monthlyRepayment = parseFloat(fprice.toFixed(this.saleFormContent.decimal))\n            this.monthlyRepayment = kendo.toString(parseFloat(fprice), `n${this.saleFormContent.decimal}`)\n            let p = parseFloat(this.loan.approvedAmount)\n            let t = parseFloat(this.loan.duration)\n            let sd = this.loan.firstPaymentDate\n            let ir = parseFloat(this.loan.interestRate)\n            //add 1 hour\n            let oldDate = new Date(sd)\n            let hour = oldDate.getHours()\n            let newDate = oldDate.setHours(hour + 1)\n            sd = new Date(newDate)\n            let tInterest = 0\n            for (let i = 0; i < t; i++) {\n                //date\n                let start = 0,\n                    end = 0,\n                    diff = 0,\n                    days = 0;\n                if (i > 0) {\n                    sd = new Date(self.scheduleAR[i - 1].date);\n                    sd.setMonth(sd.getMonth() + 1);\n                    // let d = new Date(sd);\n                    //calculate day\n                    start = new Date(self.scheduleAR[i - 1].date);\n                    end = new Date(sd);\n                    diff = new Date(end - start);\n                    days = diff / 1000 / 60 / 60 / 24;\n                } else if (i == 0) {\n                    //calculate day\n                    start = new Date();\n                    end = new Date(sd);\n                    diff = new Date(end - start);\n                    days = diff / 1000 / 60 / 60 / 24;\n                }\n                if (days < 0) days = 0;\n                // let cadate = parseInt(days);\n                //interest\n                // let ite = p * ((parseFloat(this.interest_rate) * 12) / 100) / 360 * cadate;\n                let ite = (p * ir) / 100;\n                ite = parseFloat(ite.toFixed(2));\n                tInterest += ite;\n                let sda = sd;\n                self.scheduleAR.push({\n                    principal_r: p,\n                    principal: fprice - ite,\n                    interest: ite,\n                    total: fprice,\n                    date: kendo.toString(sda, \"yyyy-MM-dd\"),\n                    locale: self.currencyCode,\n                    numberFormat: self.numberFormat,\n                    status: 1,\n                });\n                p = parseFloat((p - (fprice - ite)).toFixed(self.saleFormContent.decimal));\n            }\n            // console.log(p);\n            p = parseFloat(p.toFixed(self.saleFormContent.decimal));\n            if (p != 0) {\n                this.makeBalance(p);\n            }\n            this.totalInterest = kendo.toString(tInterest, this.numberFormat)\n            this.loan.totalInterest = tInterest\n            this.totalPayment = kendo.toString(tInterest + parseFloat(this.loan.approvedAmount), this.numberFormat)\n            this.totalPayment = tInterest + parseFloat(this.loan.approvedAmount)\n            this.addTotal()\n            this.scheduleData = this.scheduleAR\n        },\n        addTotal() {\n            this.scheduleAR.push({\n                principal_r: '',\n                principal: parseFloat(this.loan.approvedAmount),\n                interest: this.totalInterest,\n                total: this.totalPayment,\n                date: 'Total',\n                locale: this.currencyCode,\n                numberFormat: this.numberFormat,\n                transaction_number: '',\n            })\n            // window.console.log(this.scheduleAR, 'loan schedule')\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                this.numberFormat = 'n' + this.saleFormContent.decimal\n                                this.inputDec = parseInt(this.saleFormContent.decimal)\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        setDefault() {\n            this.loan.approvedAmount = this.initLoan.amount\n            this.loan.Account = this.accounts[0]\n            this.loan.paymentTerm = this.paymentTerms[0]\n            this.loan.paymentMethod = 1\n            this.currencyCode = this.loan.currency.code\n            this.loan.loanAccount = this.loanAccounts[0]\n            this.loan.interestAccount = this.interestAccounts[0]\n            this.paymentMethodChange()\n            this.loadTransactionRate()\n        },\n        async loadTransactionRate() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const date = new Date(this.loan.approveDate).toISOString().substr(0, 10);\n                    const code = this.loan.currency.code\n                    if (code) {\n                        this.showLoading = true;\n                        currencyHandler\n                            .getLastExchangeRateByDate(date, code)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    this.loan.exchangeRate = res.data.data[0];\n                                }\n                            });\n                    }\n                }, 10);\n            });\n        },\n        async loadSegment() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.segments = [];\n                    settingsHandler\n                        .getSeg()\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.segments = res.data.data;\n                                if (this.segments.length > 0) {\n                                    this.loan.segment = this.segments[0];\n                                }\n                                // this.segmentList = res.data.data\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 10);\n            });\n        },\n        async loadLocation() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.locations = [];\n                    locationHandler\n                        .list()\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.locations = res.data.data;\n                                if (this.locations.length > 0) {\n                                    this.loan.location = this.locations[0];\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 10);\n            });\n        },\n    },\n    watch: {\n        initLoan() {\n            this.loan = this.initLoan;\n            this.loan.approvedAmount = this.initLoan.amount\n            this.loan.Account = this.accounts[0]\n            this.loan.paymentTerm = this.paymentTerms[0]\n            this.loan.paymentMethod = 1\n            this.currencyCode = this.loan.currency.code\n            this.setDefault()\n            this.paymentMethodChange()\n        }\n    },\n    updated() {\n        /* The windo is not close, therefore, created event won't call after use close and select other loan. */\n        this.loan = this.initLoan;\n    },\n    mounted: async function () {\n        await this.loadSaleFormContent();\n    },\n    created() {\n        /* Initial Loan */\n        window.console.log(this.initLoan, 'loan')\n        if (this.initLoan == undefined) {\n            window.history.go(-1)\n        } else {\n            this.loan = this.initLoan\n            this.setDefault();\n            /* Set Default */\n            this.loan.approvedDate = new Date().toISOString().substr(0, 10);\n            let self = this;\n            /* Call All Accounts */\n            this.showLoadingAcc = true\n            accountHandler.getAll()\n                .then((result) => {\n                    self.showLoadingAcc = false\n                    let res = result.data;\n                    //Receivable Account\n                    self.interestAccounts = res.filter(m => m.account_type.number === 42).map(item => {\n                        return {\n                            id: item.uuid,\n                            uuid: item.uuid,\n                            name: item.name,\n                            local_name: item.local_name,\n                            number: item.number,\n                            is_taxable: item.is_taxable,\n                            banhjiAccCode: item.banhjiAccCode,\n                            group_code: item.group_code,\n                            parent_account: item.parent_account,\n                            type_code: item.type_code\n                        }\n                    })\n                    self.loan.interestAccount = self.interestAccounts[0]\n                    self.loanAccounts = res.filter(m => m.account_type.number === 27).map(item => {\n                        return {\n                            id: item.uuid,\n                            uuid: item.uuid,\n                            name: item.name,\n                            local_name: item.local_name,\n                            number: item.number,\n                            is_taxable: item.is_taxable,\n                            banhjiAccCode: item.banhjiAccCode,\n                            group_code: item.group_code,\n                            parent_account: item.parent_account,\n                            type_code: item.type_code\n                        }\n                    })\n                    self.loan.loanAccount = self.loanAccounts[0]\n                });\n\n            /* Call All Payment Term */\n            paymentTermHandler.getAll()\n                .then((result) => {\n                    this.paymentTerms = result.data.data;\n                    this.loan.paymentTerm = this.paymentTerms[0]\n                });\n            this.loadSegment()\n            this.loadLocation()\n        }\n    },\n};\n</script>\n\n<style scoped>\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n@media (max-width: 576px) {\n    ..mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n</style>\n"]}]}