{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/banking/banking/BankStatementReconciliation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/banking/banking/BankStatementReconciliation.vue","mtime":1638499443122},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BankStatementReconciliation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"BankStatementReconciliation.vue","sourceRoot":"src/views/banking/banking","sourcesContent":["<template>\n    <v-container>\n        <v-card\n         elevation=\"0\"\n         class=\"pa-4\"\n         style=\"position:relative;\"\n         color=\"white\"\n        >\n            <h2>{{$t('bank_statement_reconciliation')}}</h2>\n            <v-icon \n                onclick=\"window.history.go(-1); return false;\" \n                style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                class=\"float-right\"\n            >close</v-icon>\n\n            <v-divider/>\n            <v-card-text style=\"min-height: 850px; background-color: #F8F8F9; color: #333;\">\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                    <v-row>\n                        <!-- From Bank -->\n                        <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                            <v-card outlined dense color=\"grayBg\" class=\"no_border\" v-if=\"bankStatement\">\n                                <v-card outlined dense color=\"third\" class=\"pa-3 no_border\">\n                                    <v-row>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                            <h3 class=\"white--text\">{{$t('from_bank')}}</h3>\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0 text-right\">\n                                            <h3 class=\"white--text\">{{ Number(bankStatement.amount).toLocaleString() }} {{ bankStatement.currency }}</h3>\n                                        </v-col>\n                                    </v-row>\n                                </v-card>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"px-6\">\n                                        <div>\n                                            {{ bankStatement.statement_date }}\n                                            {{ bankStatement.transaction_type }}\n                                        </div>\n                                        <div>\n                                            {{ bankStatement.reference }}\n                                            Amount\n                                            {{ Number(bankStatement.amount).toLocaleString() }} {{ bankStatement.currency }}\n                                        </div>\n                                        <div style=\"font-size: x-small;\">\n                                            {{ bankStatement.details }}\n                                        </div>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                        </v-col>\n\n                        <!-- From BanhJi -->\n                        <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                            <v-card outlined dense color=\"grayBg\" class=\"no_border\">\n                                <v-card outlined dense color=\"third\" class=\"pa-3 no_border\">\n                                    <v-row>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                            <h3 class=\"white--text\">{{$t('from_banhji')}}</h3>\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0 text-right\">\n                                            <h3 class=\"white--text\">{{ Number(banhjiTxnAmount).toLocaleString() }}</h3>\n                                        </v-col>\n                                    </v-row>\n                                </v-card>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"px-6\">\n                                        <kendo-datasource ref=\"banhjiMatchedTxnDS\"\n                                            :change=\"onBanhjiMatchedTxnDSChanges\"\n                                            :data=\"banhjiMatchedTxns\"\n                                            :page-size='20'\n                                            :schema-model-fields=\"schemaFields\">\n                                        </kendo-datasource>\n                                        \n                                        <kendo-grid id=\"banhjiMatchedTxnGrid\"\n                                                ref=\"banhjiMatchedTxnGrid\"\n                                                class=\"grid-center mb-3\"\n                                                :data-source-ref=\"'banhjiMatchedTxnDS'\"\n                                                :noRecords=\"true\">\n                                            <kendo-grid-column \n                                                :field=\"'entry_uuid'\"\n                                                :title=\"'&nbsp;'\"\n                                                :template=\"rowTmpl\"\n                                                :width=\"200\" />\n                                            <kendo-grid-column\n                                                :command=\"{ iconClass: 'k-icon k-i-trash', text: 'DEL', click: removeRow, class: 'btn-plus' }\"\n                                                :title=\"'&nbsp;'\"\n                                                :width=\"75\"\n                                            />\n                                        </kendo-grid>\n\n                                        <div class=\"float-right\">\n                                            <v-btn color=\"primary\"\n                                                class=\"white--text text-capitalize\"\n                                                @click=\"findBestMatch\" small>\n                                                    {{$t('find_best_match')}}\n                                            </v-btn>\n\n                                            <v-btn color=\"primary\"\n                                                class=\"white--text\"\n                                                @click=\"loadBanhjiTransaction\" small>\n                                                <v-icon>refresh</v-icon>\n                                            </v-btn>\n                                        </div>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                        </v-col>\n\n                        <!-- Variance -->\n                        <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                            <v-card outlined dense color=\"grayBg\" class=\"no_border\">\n                                <v-card outlined dense color=\"third\" class=\"pa-3 no_border\">\n                                    <v-row>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                            <h3 class=\"white--text\">{{$t('variance')}}</h3>\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0 text-right\">\n                                            <h3 class=\"white--text\">{{ Number(reconcile.variance_amount).toLocaleString() }}</h3>\n                                        </v-col>\n                                    </v-row>\n                                </v-card>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"px-6\" v-if=\"reconcile.variance_amount !== 0\">\n                                        <label class=\"label\">{{$t('adjustment_account')}}</label>\n                                        <app-adjustment-account-dropdownlist\n                                            :initAccount=\"reconcile.adjustment_account\"\n                                            @emitAccount=\"reconcile.adjustment_account = $event\"\n                                        />\n                                    </v-col>\n\n                                    <!-- Reconcile Info -->\n                                    <v-col sm=\"12\" cols=\"12\" class=\"px-6\">\n                                        <label class=\"label\">{{$t('date')}}</label>\n                                        <app-datepicker :initialDate=\"reconcile.date\"\n                                                        @emitDate=\"reconcile.date = $event\"\n                                                        @onChanged=\"getExchangeRate\" />\n\n                                        <label class=\"label\">{{$t('number')}}</label>\n                                        <v-row>\n                                            <v-col sm=\"10\" cols=\"10\" class=\"pr-0\">\n                                                <v-text-field class=\"\"\n                                                                v-model=\"reconcile.number\"\n                                                                outlined\n                                                                readonly\n                                                                required/>\n                                            </v-col>\n                                            <v-col sm=\"2\" cols=\"2\" class=\"pl-0\">\n                                                <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                                        @click=\"generateNumber\">mdi-qrcode\n                                                </v-icon>\n                                            </v-col>\n                                        </v-row>\n\n                                        <v-alert type=\"warning\"\n                                                v-model=\"alert\"\n                                                dismissible>\n                                            <span style=\"font-size: small;\" v-html=\"errorMessage\"/>\n                                        </v-alert>\n                                    \n                                        <v-btn color=\"primary\"\n                                            class=\"white--text float-right text-capitalize\"\n                                            @click=\"onSaveOptionClick(SaveOption.SAVECLOSE)\" small>\n                                                {{$t('reconcile')}}\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                        </v-col>\n                        \n                        <!-- Search BanhJi Transaction Grid -->\n                        <v-col sm=\"12\" cols=\"12\">\n                            <kendo-datasource ref=\"banhjiTransactionDS\"\n                                :data=\"banhjiTransactions\"\n                                :page-size='20'\n                                :schema-model-fields=\"schemaFields\">\n                            </kendo-datasource>\n\n                            <kendo-grid id=\"banhjiTransactionGrid\"\n                                ref=\"banhjiTransactionGrid\"\n                                :data-source-ref=\"'banhjiTransactionDS'\"\n                                :pageable=\"true\"\n                                :filterable-mode=\"'row'\"\n                                :noRecords=\"true\"\n                                :scrollable=\"true\"\n                                :pageable-numeric=\"false\"\n                                :pageable-previous-next=\"false\"\n                                :pageable-messages-display=\"'Showing {2} data items'\">\n                                <kendo-grid-column \n                                    :field=\"'journal_date'\"\n                                    :title=\"$t('date')\"\n                                    :template=\"dateTemplate\"\n                                    :width=\"150\" />\n                                <kendo-grid-column \n                                    :field=\"'journal_type'\"\n                                    :title=\"$t('type')\"\n                                    :width=\"150\" />\n                                <kendo-grid-column \n                                    :field=\"'journal_number'\"\n                                    :title=\"$t('number')\"\n                                    :width=\"150\" />\n                                <kendo-grid-column \n                                    :field=\"'description'\"\n                                    :title=\"$t('description')\"\n                                    :filterable-cell-operator=\"'contains'\"\n                                    :filterable-cell-suggestion-operator=\"'contains'\" />\n                                <kendo-grid-column \n                                    :field=\"'amount'\"\n                                    :title=\"$t('amount')\"\n                                    :format=\"'{0:n}'\"\n                                    :width=\"150\"\n                                    :filterable-cell-operator=\"'gte'\" />\n                                <kendo-grid-column\n                                    :command=\"{ text: 'Add', click: onAddBanhjiTxnClick, class: 'btn-plus' }\"\n                                    :title=\"'&nbsp;'\"\n                                    :width=\"80\"\n                                />\n                            </kendo-grid>\n                        </v-col>\n                    </v-row>\n                </v-form>\n            </v-card-text>\n\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"false\"\n                :myLoading=\"true\"\n                type=\"loading\"\n            />\n        </v-card>\n    </v-container>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\";\n    import Helper from \"@/helper.js\";\n    import { i18n } from '@/i18n';\n    import { \n        BankAccountModel, \n        BankStatementModel, \n        ReconcileModel, \n        AccountModel, \n        JournalModel, \n        JournalEntryModel,\n        CurrencyModel,\n        ExchangeRateModel,\n    } from \"@/scripts/model/AppModels\";\n    \n    /* Store */\n    import store from \"@/store\"\n    const institute = store.state.institute.institute\n    import { mapState } from 'vuex';\n\n    const {\n        reconcileHandler,\n        journalHandler,\n    } = require(\"@/scripts/AppHandlers\");\n    const { EntityType, SaveOption } = require(\"@/scripts/default_setup/Collections\");\n\n    export default {\n        name: \"BankStatementReconciliation\",\n        components: {\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-datepicker\": () => import('@/components/custom_templates/DatePickerComponent'),\n            \"app-adjustment-account-dropdownlist\": () => import('@/components/dropdownlist/Account'),\n        },\n        props: {\n            initBankStatement: {\n                type: BankStatementModel,\n            },\n        },\n        data () {\n            return {\n                /* Obj */\n                bankAccount         : new BankAccountModel(),\n                reconcile           : new ReconcileModel(),\n                adjustmentJournal   : new JournalModel(),\n                adjustmentEntries   : [],\n                // Form validation\n                valid: true,\n                isEdit: false,\n                alert: false,\n                errorMessage: '',\n                Helper              : Helper,\n                user: Helper.getUser(),\n                SaveOption: SaveOption,\n                // Other\n                exchangeRate        : new ExchangeRateModel(institute.baseCurrency),\n                bankStatement       : new BankStatementModel(),\n                banhjiTxnAmount     : 0,\n                banhjiTransactions  : [],\n                banhjiMatchedTxns   : [],\n                // Kendo\n                schemaFields: {\n                    journal_date    : { type: \"date\" },\n                    journal_type    : { type: \"string\" },\n                    journal_number  : { type: \"string\" },\n                    description     : { type: \"string\" },\n                    amount          : { type: \"number\" }\n                },\n                // LoadingMe\n                showLoading: false,\n            }\n        },\n        methods: {\n            /* Initial Data */\n            initialData(){\n                this.bankStatement = Object.assign({}, this.initBankStatement);\n                \n                this.setDefaultData();\n                this.loadBanhjiTransaction();\n            },\n            async loadData () {\n                this.showLoading = true;\n                \n                // Call List\n                await this.$store.dispatch('banking/getBankMappings');\n\n                // Call Bank Account\n                await this.$store.dispatch('banking/getBankAccounts');\n\n                this.showLoading = false;\n            },\n            /* Set default data */\n            setDefaultData() {\n                this.reconcile = new ReconcileModel({\n                    type: EntityType.BANK_RECONCILIATION_BANK_FEEDS, \n                })\n                \n                // Generate Number\n                this.generateNumber();\n\n                // Get Exchange Rate\n                this.getExchangeRate();\n            },\n            // Number\n            async generateNumber() {\n                if (!this.isEdit) {\n                    let num = await Helper.generateAccountingNumber(this.reconcile.type, this.reconcile.date);\n\n                    this.reconcile.number = num.number;\n                    this.reconcile.prefix_format = num.prefix_format;\n                }\n            },\n            // Get Exchange Rate\n            async getExchangeRate() {\n                if(this.reconcile.date && this.bankAccount.currency.code !== ''){\n                    this.exchangeRate = await Helper.getLastExchangeRateByDate(this.reconcile.date, this.bankAccount.currency.code);\n                }else{\n                    this.exchangeRate = new ExchangeRateModel(institute.baseCurrency);\n                }\n            },\n            /* Load BanhJi Transaction */\n            async loadBanhjiTransaction () {\n                this.showLoading = true;\n\n                /* Clear */\n                let ds = this.$refs.banhjiTransactionDS.kendoWidget();\n                ds.filter([]);\n                ds.data([]);\n                \n                /* Find bank account by uuid */\n                this.bankAccount = this.bankAccounts.find(i=>i.uuid === this.bankStatement.bank_acc_uuid);\n\n                /* Load journal entry detail by account uuid */\n                let currentFiscalDate = Helper.getFiscalDateByDate(new Date());\n                let sdate = kendo.toString(new Date(currentFiscalDate.start_date), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                    edate = kendo.toString(new Date(), 'yyyy-MM-dd') + 'T23:59:59.999Z';\n                \n                let statements = await journalHandler.getEntryDetailByAccount(this.bankAccount.account.uuid, {\n                    params: {\n                        start_date \t: sdate,\n                        end_date \t: edate,\n                    }\n                });\n\n                this.banhjiTransactions = statements.entries_detail.filter(i=>i.is_reconciled !== 1);\n\n                this.showLoading = false;\n            },\n            /* Grid Row Template */\n            rowTmpl (dataItem) {\n                let str = `<div>\n                                ${ Helper.dateFormat(dataItem.journal_date) }\n                                ${ dataItem.journal_number }\n                            </div>\n                            <div>\n                                Amount\n                                ${ Number(dataItem.amount).toLocaleString() } ${ dataItem.currency.code }\n                            </div>\n                            <div style=\"font-size: x-small;\">\n                                ${ dataItem.description }\n                            </div>`\n\n                return str\n            },\n            dateTemplate(dataItem){\n                return Helper.dateFormat(dataItem.journal_date);\n            },\n            onBanhjiMatchedTxnDSChanges () {\n                let bs = this.bankStatement,\n                    ds = this.$refs.banhjiMatchedTxnDS.kendoWidget(),\n                    total = 0;\n\n                ds.data().forEach(value => {\n                    total += value.amount;\n                })\n\n                this.reconcile.variance_amount = bs.amount - total;\n                this.banhjiTxnAmount = total;\n            },\n            /* On Grid Change */\n\t\t\tonAddBanhjiTxnClick (e) {\n                let grid = this.$refs.banhjiTransactionGrid.kendoWidget(),\n                    item = grid.dataItem(kendo.jQuery(e.target).closest(\"tr\"));\n                \n                this.addBanhjiTransaction(item);\n            },\n            /* Add Banhji Transaction */\n            addBanhjiTransaction (item) {\n                let grid = this.$refs.banhjiMatchedTxnGrid.kendoWidget(),\n\t\t\t\t\tds = grid.dataSource;\n                \n                let existingItem = ds.data().filter(value => value.entry_uuid === item.entry_uuid);\n                if(existingItem.length === 0){\n                    ds.add(item);\n                }\n            },\n            // Remove Row\n\t\t\tremoveRow (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tlet grid = this.$refs.banhjiMatchedTxnGrid.kendoWidget(),\n\t\t\t\t\tds = grid.dataSource,\n\t\t\t\t\titem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n\t\t\t\t\n\t\t\t\tds.remove(item);\n            },\n            /* Find Best Match Transaction */\n            findBestMatch () {\n                // let self = this;\n                let btm = this.bankTransactionMappings.find(value => value.bank_uuid === this.bankAccount.bank.uuid);\n                \n                let filters = [];\n                btm.criteria.forEach(element => {\n                    let statementValue = \"\",\n                        journalFieldName = \"\";\n                    \n                    if(element.field2 === \"statement_date\"){/* Date */\n                        journalFieldName = \"journal_date\";\n                        statementValue = this.bankStatement[\"statement_date\"];\n                    }else if(element.field2 === \"bank_ref\"){/* Number */\n                        journalFieldName = \"journal_number\";\n                        statementValue = this.bankStatement[\"bank_ref\"];\n                    }else if(element.field2 === \"debit\"){/* Debit */\n                        journalFieldName = \"amount\";\n                        statementValue = Math.abs(this.bankStatement[\"amount\"]);\n                    }else if(element.field2 === \"credit\"){/* Credit */\n                        journalFieldName = \"amount\";\n                        statementValue = Math.abs(this.bankStatement[\"amount\"]) * -1;\n                    }else if(element.field2 === \"currency\"){/* Currency */\n                        journalFieldName = \"currency.code\";\n                        statementValue = this.bankStatement[\"currency\"];\n                    }else if(element.field2 === \"details\"){/* Detail */\n                        journalFieldName = \"description\";\n                        statementValue = element.value;\n                    }\n\n                    filters.push({\n                        \"field\"     : journalFieldName,\n                        \"operator\"  : element.operator,\n                        \"value\"     : statementValue,\n                    })\n                })\n\n                let ds = this.$refs.banhjiTransactionDS.kendoWidget();\n                ds.filter({\n                    logic: \"or\",\n                    filters: filters\n                });\n            },\n            // Add Journal\n            addJournal() {\n                let entries = [],\n                    debitAccount = this.bankAccount.account,\n                    creditAccount = this.reconcile.adjustment_account,\n                    amount = Math.abs(this.reconcile.variance_amount);\n\n                // Variance > 0\n                if (this.reconcile.variance_amount > 0) {\n                    debitAccount = this.reconcile.adjustment_account\n                    creditAccount = this.bankAccount.account\n                }\n\n                // Debit Side\n                entries.push(new JournalEntryModel({\n                    account: debitAccount,\n                    description: this.reconcile.description,\n                    currency: new CurrencyModel(this.bankAccount.currency),\n                    amount: amount,\n                    exchange_rate_uuid: this.exchangeRate.id,\n                    exchange_rate: this.exchangeRate.rate,\n                }))\n\n                // Credit Side\n                entries.push(new JournalEntryModel({\n                    account: creditAccount,\n                    description: this.reconcile.description,\n                    currency: new CurrencyModel(this.bankAccount.currency),\n                    amount: amount * -1, // Credit side is negative\n                    exchange_rate_uuid: this.exchangeRate.id,\n                    exchange_rate: this.exchangeRate.rate,\n                }))\n\n                // Adjustment Journal\n                this.adjustmentJournal.number = this.reconcile.number;\n                this.adjustmentJournal.description = this.reconcile.description;\n                this.adjustmentJournal.journal_date = Helper.toISODate(this.reconcile.date);\n                this.adjustmentJournal.journal_type = EntityType.ADJUSTMENT;\n                this.adjustmentJournal.transaction_type = this.reconcile.type;\n                this.adjustmentJournal.prefix_format = this.reconcile.prefix_format;\n                this.adjustmentJournal.is_draft = this.reconcile.is_draft;\n                this.adjustmentJournal.created_by = this.reconcile.created_by;\n                this.adjustmentJournal.modified_by = this.reconcile.modified_by;\n\n                // Adjustment Entries\n                this.adjustmentEntries = entries;\n            },\n            // Shrink Data\n            shrinkData() {\n                let ds = this.$refs.banhjiMatchedTxnDS.kendoWidget();\n\n                // Date\n                this.reconcile.date = Helper.toISODate(this.reconcile.date);\n                this.reconcile.bank_statement_uuid = this.bankStatement.uuid;\n\n                // Reconcile Entries\n                let entryUuidList = [];\n                ds.data().forEach(value => {\n                    entryUuidList.push(value.entry_uuid);\n                });\n                this.reconcile.reconcile_entries = entryUuidList;\n\n                // User\n                if (this.isEdit) {\n                    this.reconcile.modified_by = this.user;\n                } else {\n                    this.reconcile.created_by = this.user;\n                }\n            },\n            // Validating\n            validateForm() {\n                let result = true, msg = '',\n                    rc = this.reconcile,\n                    ds = this.$refs.banhjiMatchedTxnDS.kendoWidget();\n\n                // Matched Transactions\n                if (ds.total() === 0) {\n                    result = false;\n                    msg += '<p>Please add a transaction.</p>';\n                }\n\n                // Adjustment Account\n                if (rc.variance_amount !== 0) {\n                    if (this.reconcile.adjustment_account.uuid === '') {\n                        result = false;\n                        msg += '<p>Please select adjustment account.</p>';\n                    }\n                }\n\n                // Show Alert\n                this.errorMessage = msg;\n                this.alert = false;\n                if (result === false) {\n                    this.alert = true;\n                }\n\n                return result;\n            },\n            // All Saves\n            onSaveOptionClick(mode) {\n\t\t\t\tif (this.$refs.form.validate() && this.validateForm()) {\n\t\t\t\t\tthis.saveMode = mode;\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t},\n            cancel() {\n                this.$swal({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#4d4848',\n                    cancelButtonColor: '#3085d6',\n                    confirmButtonText: 'Yes, discard it!'\n                }).then((result) => {\n                    if (result.value) {\n                        this.clear();\n                        this.$router.go(-1);\n                    }\n                })\n            },\n            clear() {\n                // Reset Form\n                // this.$refs.form.reset();\n\n                this.banhjiTxnAmount = 0;\n                this.banhjiMatchedTxns = [];\n\n                this.reconcile = new ReconcileModel();\n                this.reconcile.adjustment_account = new AccountModel();\n                this.adjustmentJournal = new JournalModel();\n                this.adjustmentEntries = [];\n\n                let ds = this.$refs.banhjiMatchedTxnDS.kendoWidget();\n                ds.data([]);\n\n                // New Default Data\n                this.setDefaultData();\n            },\n            save() {\n                let self = this;\n\n                // Shrink Data\n                this.shrinkData();\n\n                // Adjustment Journal\n                if (this.reconcile.variance_amount !== 0) {\n                    this.addJournal();\n                } else {\n                    this.adjustmentJournal = new JournalModel();\n                    this.adjustmentEntries = [];\n                }\n\n                // Sync Data\n                this.showLoading = true;\n                reconcileHandler.save({\n                    reconcile: new ReconcileModel(this.reconcile),\n                    adjustment_journal: new JournalModel(this.adjustmentJournal),\n                    adjustment_entries: this.adjustmentEntries,\n                })\n                .then(function (response) {\n                    self.responseStatus(response);\n                })\n                .catch(function (error) {\n                    self.showLoading = false;\n                    Helper.alertErrorMsg(error);\n                })\n                .finally(()=>{\n                    self.showLoading = false;\n                });\n            },\n            // Response Status\n            responseStatus(response) {\n                if (response.status === 200) {\n                    /* Save Close or Delete Action */\n                    if (this.saveMode === SaveOption.SAVECLOSE || this.saveMode === SaveOption.DELETE) {\n                        this.$router.go(-1);\n                    }\n                    \n                    /* Reset Data */\n                    this.clear();\n\n                    /* Alert Success */\n                    this.$snotify.success(i18n.t(\"successful\"));\n                } else {\n                    /* Alert Error */\n                    this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                }\n            },\n        },\n        watch: {\n            initBankStatement: \"initialData\"\n        },\n        computed: mapState({\n            bankTransactionMappings: state => state.banking.bankMappings,\n            bankAccounts: state => state.banking.bankAccounts,\n        }),\n        created() {\n            this.loadData();\n        },\n        mounted() {\n            this.initialData();\n        },\n    }\n</script>\n<style scoped>\n    @media (min-width: 1264px) {\n        .container {\n            max-width: 1080px !important;\n        }\n    }\n</style>"]}]}