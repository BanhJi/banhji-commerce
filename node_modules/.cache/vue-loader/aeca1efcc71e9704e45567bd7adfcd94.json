{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/AccountView.vue?vue&type=style&index=0&id=3aac9f1c&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/AccountView.vue","mtime":1638499443079},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mdW5jdGlvbl9jb250ZW50IHsKICAgIHBhZGRpbmc6IDAgMjVweCAyNXB4OwogICAgYm9yZGVyLWJvdHRvbTogMDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDEyNjRweCkgewogICAgLmNvbnRhaW5lciB7CiAgICAgICAgLyogbWF4LXdpZHRoOiAxMTg1cHg7ICovCiAgICAgICAgbWF4LXdpZHRoOiAxMDgwcHggIWltcG9ydGFudDsKICAgIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CiAgICAuLm1iLTYgewogICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsKICAgIH0KfQo="},{"version":3,"sources":["AccountView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyZA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AccountView.vue","sourceRoot":"src/views/accounting","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <div class=\"function_header\">\n                                <h2 class=\"mb-0\">{{$t('account')}}</h2>\n                                <v-icon\n                                        onclick=\"window.history.go(-1); return false;\"\n                                        style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                        class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </div>\n\n                            <div class=\"function_content\">\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"phone_no_pb pb-0\">\n                                        <label class=\"label\">{{$t('account_type')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label1_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">ABA</h3>\n\n                                        <label class=\"label\">{{$t('account_group_opt')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label2_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">PPCB</h3>\n\n                                        <label class=\"label\">{{$t('sub_account')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label3_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">Sub Account</h3>\n\n                                        <v-textarea class=\" bg_ddd hidden-sm-and-down\"\n                                            readonly\n                                            outlined\n                                            rows=\"3\"\n                                        />\n\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"\">\n                                        <label class=\"label\">{{$t('account_number')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label4_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">Account num</h3>\n\n                                        <label class=\"label\">{{$t('account_name')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label5_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">Nmae</h3>\n\n                                        <label class=\"label\">{{$t('description')}}</label>\n                                        <p class=\"text_tip\">{{$t('account_sub_label6_in_add_account')}}</p>\n                                        <h3 class=\"text-bold pb-2\">Description</h3>\n\n                                     \n                                        <v-checkbox class=\"ma-0 \"\n                                                    v-model=\"account.is_taxable\"\n                                                    :label=\"$t('taxable')\"\n                                                    false-value=\"0\"\n                                                    true-value=\"1\"\n                                        />\n\n                                        <div v-if=\"account.is_taxable\">\n                                            <label class=\"label\">{{$t('account_sub_label7_in_add_account')}}</label>\n                                            <v-select class=\" mb-3 mt-1\"\n                                                      :items=\"taxes\"\n                                                      no-data-text=\"No data found.\"\n                                                      return-object\n                                                      clearable\n                                                      outlined\n                                            />\n                                        </div>\n\n                                    </v-col>\n                                </v-row>\n                            </div>\n                            <v-divider class=\"mt-1\" />\n                            <v-card outlined dense class=\"no_border function_footer py-2\">\n                                <v-btn\n                                class=\"float-right save_option mx-1 capitalize\"\n                                color=\"primary\"\n                                >\n                                {{ $t(\"print\") }}\n                                </v-btn>\n                                <v-btn\n                                class=\"float-right mx-1 white--text capitalize\"\n                                color=\"blue\"\n                                >\n                                {{ $t(\"delete\") }}\n                                </v-btn>\n                                <v-btn\n                                class=\"float-right mx-1 white--text capitalize\"\n                                color=\"lightBlue\"\n                                >\n                                {{ $t(\"edit\") }}\n                                </v-btn>\n                            </v-card>\n                            <v-divider />\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n    /* Cookie */\n    const cookieJS = require(\"@/cookie.js\");\n    const { instituteId } = cookieJS.getCookie();\n\n    const accountHandler = require(\"@/scripts/handler/accounting/account.js\")\n    const accountTypeHandler = require(\"@/scripts/handler/accounting/accountType.js\")\n    const accountGroupHandler = require(\"@/scripts/handler/accounting/accountGroup.js\")\n    import LoadingMe from '@/components/Loading'\n\n    export default {\n        name: \"Account\",\n        components: {\n            LoadingMe\n        },\n        data: () => ({\n            account         : [],//Obj\n            accountTypes   : [],\n            parentAccounts  : [],\n            accountGroups   : [],\n            taxes           : [],\n            // Form validation\n            valid           : true,\n            isEdit          : false,\n            saveMode        : '',\n            showLoading     : false,\n            loadingAlert    : false,\n            loadingColorAlert: '',\n            loadingTextAlert: '',\n        }),\n        methods: {\n             // Set default\n            setDefaultData () {\n                this.account = {\n                    number          : '',\n                    name            : '',\n                    description     : '',\n                    is_taxable      : 0,\n                    status          : 1,\n                    institute       : instituteId,\n                    account_type    : undefined,\n                    account_group   : undefined,\n                    parent_account  : undefined,\n                }\n            },\n            // Load account according to query string {id}\n            loadObj() {\n                let self = this\n\n                // Access Query String\n                let q = this.$route.params\n                if (q.id !== undefined) {\n                    // Set Edit Mode\n                    this.isEdit = true\n\n                    accountHandler.getOne(q.id)\n                    .then(res => {\n                        if(res.data){\n                            // Bind Obj\n                            this.account = res.data\n\n                            let accountTypeNumber = this.account.account_type.number\n                            accountGroupHandler.getByAccountType(accountTypeNumber)\n                            .then(res => {\n                                if (res.data.length > 0) {\n                                    this.accountGroups = res.data\n                                }\n                            })\n\n                            // Parent Account by Account Type\n                            accountHandler.getByAccountType(accountTypeNumber)\n                            .then(res => {\n                                if (res.data.length > 0) {\n                                    this.parentAccounts = res.data\n                                }\n                            })\n                        }\n                    })\n                    .finally(function () {\n\t\t\t\t\t\tself.showLoading = false\n\t\t\t\t\t})\n                } else {\n                    this.isEdit = false\n                }\n            },\n            // Number\n            generateNumber() {\n                let acc = this.account\n\n                if (acc.account_type !== undefined && acc.parent_account !== undefined) {\n                    acc.number = acc.parent_account.number\n                } else if (acc.account_type !== undefined) {\n                    acc.number = acc.account_type.number\n                }\n            },\n            // On Account Type Changes\n            onAccountTypeChanges() {\n                let account = this.account;\n                this.alertMessage = false\n                // Clear data\n                this.accountGroups = [];\n                this.parentAccounts = [];\n                account.account_group = undefined;\n                account.parent_account = undefined;\n\n                let accountTypeNumber = account.account_type.number\n                accountGroupHandler.getByAccountType(accountTypeNumber)\n                .then(res => {\n                    if (res.data.length > 0) {\n                        this.accountGroups = res.data\n                    }\n                })\n\n                // Parent Account by Account Type\n                accountHandler.getByAccountType(accountTypeNumber)\n                .then(res => {\n                    if (res.data.length > 0) {\n                        this.parentAccounts = res.data\n                    }\n                })\n            },\n            // Shrink Data\n            shrinkData() {\n                let acc = this.account,\n                    pa = acc.parent_account,\n                    ag = acc.account_group\n\n                // Parent Account\n                if (pa !== undefined) {\n                    acc.parent_account = {\n                        uuid: pa.uuid,\n                        number: pa.number,\n                        name: pa.name,\n                    }\n                }\n                // Account Group\n                if (ag !== undefined) {\n                    acc.account_group = {\n                        uuid: ag.uuid,\n                        name: ag.name,\n                    }\n                }\n            },\n            // All Saves\n            saveNew() {\n                if (this.$refs.form.validate()) {\n                    this.saveMode = \"saveNew\"\n                    this.save()\n                } else {\n                    this.alertError()\n                }\n            },\n            saveClose() {\n                if (this.$refs.form.validate()) {\n                    this.saveMode = \"saveClose\"\n                    this.save()\n                } else {\n                    this.alertError()\n                }\n            },\n            cancel() {\n                this.$swal({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#4d4848',\n                    cancelButtonColor: '#ED1A3A',\n                    confirmButtonText: 'Yes, discard it!'\n                }).then((result) => {\n                    if (result.value) {\n                        this.$refs.form.reset()\n                        this.$router.go(-1)\n                    }\n                })\n            },\n            save() {\n                let self = this\n\n                // Shrink Data\n                this.shrinkData()\n                \n                this.showLoading = true\n                // Sync Data\n                accountHandler.save(this.account)\n                    .then(function (response) {\n                        if (response) {\n                            self.responseStatus(response.status)\n                        } else {\n                            self.alertError()\n                        }\n                    })\n                    .catch(function (error) {\n                        self.alertError(error)\n                    });\n            },\n            // Response Status\n            responseStatus(status) {\n                switch (status) {\n                    case 200:// Ok\n                        this.showAlert()\n                        // Reset form\n                        this.$refs.form.reset()\n\n                        break\n                    case 201:// Duplicate\n                        this.alertError('Duplicate entry!')\n                        break\n                    default:\n                        break\n                }\n            },\n            // Sweetalert2\n            changeAlertStatus() {\n                this.loadingAlert = true\n                setTimeout(() => {\n                    this.loadingAlert = false\n                }, 6200);\n            },\n            showAlert() {\n                this.showLoading = false\n                this.changeAlertStatus()\n                this.loadingTextAlert = \"Added Successful\"\n                this.loadingColorAlert = \"#3DA72E\"\n                switch (this.saveMode) {\n                    case 'saveClose':// Save Close\n                        // this.$swal({\n                        // \tposition: 'products',\n                        // \ticon: 'success',\n                        // \ttitle: 'Your work has been saved',\n                        // \tshowConfirmButton: true,\n                        // }).then((result) => {\n                        // \tif (result.value) {\n                        // \t\twindow.history.go(-1)\n\n                        // \t\treturn false\n                        // \t}\n                        // })\n                        this.$router.go(-1)\n                        break\n                    default:// Save New\n                        // this.$swal({\n                        // \tposition: 'products',\n                        // \ticon: 'success',\n                        // \ttitle: 'Your work has been saved',\n                        // \tshowConfirmButton: false,\n                        // \ttimer: 1500\n                        // })\n                        break\n                }\n                this.saveMode = ''\n            },\n            alertError(msg) {\n                if (msg) {\n                    // Code here\n                } else {\n                    msg = 'Something went wrong!'\n                }\n                this.showLoading = false\n                this.loadingTextAlert = \"Failed!\"\n                this.loadingColorAlert = \"#eb8334\"\n                this.changeAlertStatus()\n                // this.$swal({\n                // \tposition: 'products',\n                // \ticon: 'error',\n                // \ttitle: 'Oops...!',\n                // \ttext: msg,\n                // \tshowConfirmButton: true\n                // })\n            },\n        },\n        watch: {\n\t\t\t// call again the method if the route changes\n            '$route': 'loadObj',\n        },\n\t\tcreated () {\n\t\t\t// fetch the data when the view is created and the data is\n\t\t\t// already being observed\n\t\t\tthis.loadObj()\n\t\t},\n        mounted() {\n            // Set default\n            this.setDefaultData();\n\n            // Call Account Type\n            accountTypeHandler.getAll()\n            .then(res => {\n                this.accountTypes = res\n            })\n        }\n    };\n</script>\n<style scoped>\n    .function_content {\n        padding: 0 25px 25px;\n        border-bottom: 0;\n    }\n\n    @media (min-width: 1264px) {\n        .container {\n            /* max-width: 1185px; */\n            max-width: 1080px !important;\n        }\n    }\n\n    @media (max-width: 576px) {\n        ..mb-6 {\n            margin-bottom: 0 !important;\n        }\n    }\n</style>"]}]}