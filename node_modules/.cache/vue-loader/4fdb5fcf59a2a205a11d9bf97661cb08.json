{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_financial_position/StatementOfFinancialPositionBySegment.vue?vue&type=style&index=0&id=0cb89090&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/statement_financial_position/StatementOfFinancialPositionBySegment.vue","mtime":1642155812618},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlcG9ydHNfbGlzdCB7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBwYWRkaW5nOiAyMHB4IDIwcHggNXB4Owp9Ci5yZXBvcnRfZmlsdGVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY5OwogIHBhZGRpbmc6IDAgMjBweCA1cHggMjBweDsKfQouZHZfbXQgewogIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmR2X210OCB7CiAgbWFyZ2luLXRvcDogMzBweDsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQudGhpcmQgewogIGJvcmRlcjogbm9uZTsKICBib3gtc2hhZG93OiBub25lOwogIGNvbG9yOiAjZmZmOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KLnJlcG9ydF9ibG9jayAudi1jYXJkLnRoaXJkIHAudGV4dCB7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBmb250LXNpemU6IDE2cHg7Cn0KLnJlcG9ydF9ibG9jayAudi1jYXJkLnRoaXJkIHAubnVtYmVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAyNXB4OwogIGZvbnQtd2VpZ2h0OiA3MDA7CiAgbWFyZ2luLWJvdHRvbTogMDsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQuYmdfZ3JheSB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmOTsKICBib3JkZXI6IG5vbmU7CiAgYm94LXNoYWRvdzogbm9uZTsKICBjb2xvcjogIzAwMDsKICBmbG9hdDogbGVmdDsKICB3aWR0aDogMTAwJTsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQuYmdfZ3JheSBwIHNwYW4udGV4dCB7CiAgd2lkdGg6IDI1JTsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQuYmdfZ3JheSBwIHNwYW4ubnVtYmVyIHsKICB3aWR0aDogNzAlOwogIGZvbnQtc2l6ZTogMTlweDsKICBmb250LXdlaWdodDogNzAwOwogIHBhZGRpbmc6IDdweCAwIDAgMDsKICB0ZXh0LWFsaWduOiByaWdodDsKfQpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAuZHZfbXQsCiAgLmR2X210OCB7CiAgICBtYXJnaW4tdG9wOiAwOwogIH0KICAucmVwb3J0c19saXN0IHsKICAgIG1hcmdpbi10b3A6IDA7CiAgfQp9Cg=="},{"version":3,"sources":["StatementOfFinancialPositionBySegment.vue"],"names":[],"mappingsomBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StatementOfFinancialPositionBySegment.vue","sourceRoot":"src/views/accounting/reports/statement_financial_position","sourcesContent":["<template>\n  <v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n        <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <v-row>\n              <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                <label class=\"label\">{{ $t(\"disable_column_by\") }}</label>\n                <v-select\n                  class=\"mt-1\"\n                  v-model=\"columnBy\"\n                  :items=\"columnsBy\"\n                  item-text=\"text\"\n                  placeholder=\"Total\"\n                  item-value=\"value\"\n                  clearable\n                  outlined\n                />\n              </v-col>\n              <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                <div v-if=\"columnBy === '1'\">\n                  <label class=\"label pt-5\">{{ $t(\"as_of\") }}</label>\n                  <app-datepicker\n                    :initialDate=\"asOfDate\"\n                    @emitDate=\"asOfDate = $event\"\n                  />\n                </div>\n                <div v-else>\n                  <label class=\"label\">{{ $t(\"fiscaldate\") }}</label>\n                  <v-select\n                    class=\"mt-1\"\n                    placeholder=\"Select Ficaldate\"\n                    :items=\"fiscalDates\"\n                    item-text=\"start_date\"\n                    item-value=\"uuid\"\n                    v-model=\"fiscalDate\"\n                    return-object\n                    outlined\n                  >\n                    <template slot=\"selection\" slot-scope=\"{ item }\">\n                      {{ Helper.formatFiscalDate(item.start_date) }} -\n                      {{ Helper.formatFiscalDate(item.end_date) }}\n                    </template>\n                    <template slot=\"item\" slot-scope=\"{ item }\">\n                      {{ Helper.formatFiscalDate(item.start_date) }} -\n                      {{ Helper.formatFiscalDate(item.end_date) }}\n                    </template>\n                  </v-select>\n                </div>\n              </v-col>\n              <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                <label class=\"label\">{{ $t(\"segment\") }}</label>\n                <app-segment-dropdownlist\n                  :initSegment=\"segment\"\n                  @emitSegment=\"segment = $event\"\n                />\n              </v-col>\n              <v-col sm=\"2\" cols=\"12\" class=\"pt-7\">\n                <v-btn class=\"white--text\" color=\"primary\" @click=\"search\">\n                  <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                </v-btn>\n              </v-col>\n              <v-col sm=\"1\" cols=\"12\" class=\"py-0\">\n                <app-reporting-language\n                  :initLanguage=\"reportingLanguage\"\n                  @emitLanguage=\"reportingLanguage = $event\"\n                />\n              </v-col>\n            </v-row>\n          </v-col>\n        </v-row>\n        <!-- Card -->\n        <v-row class=\"mt-1\">\n          <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n            <v-card\n              outlined\n              dense\n              class=\"pa-3 rounded-4 no_border white--text\"\n              color=\"third\"\n              height=\"60px\"\n            >\n              <h3 class=\"text-left flex-1 text-uppercase font_12 py-0\">\n                {{ $t(\"asset\") }}\n              </h3>\n              <h3 class=\"text-right flex-1 font_20\">\n                {{ Number(totalAsset).toLocaleString() }}\n              </h3>\n            </v-card>\n          </v-col>\n          <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n            <v-card\n              outlined\n              dense\n              class=\"pa-3 rounded-4 no_border white--text\"\n              color=\"third\"\n              height=\"60px\"\n            >\n              <h3 class=\"text-left flex-1 font_12 text-uppercase\">\n                {{ $t(\"liabilities_and_equity\") }}\n              </h3>\n              <h3 class=\"text-right flex-1 font_20\">\n                {{ Number(totalLiabilityAndEquity).toLocaleString() }}\n              </h3>\n            </v-card>\n          </v-col>\n        </v-row>\n        <!-- Table -->\n        <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <kendo-datasource\n              ref=\"dataSource\"\n              :data=\"statementFPList\"\n              :schema=\"schemaDefinition\"\n              :group=\"groupDefinition\"\n              :aggregate=\"aggregateDefinition\"\n            />\n\n            <kendo-grid\n              id=\"gridSFP\"\n              class=\"custom_grid\"\n              :data-source-ref=\"'dataSource'\"\n              :change=\"onGridChanges\"\n              :selectable=\"true\"\n              :persistSelection=\"true\"\n              :sortable=\"true\"\n              :column-menu=\"true\"\n              :reorderable=\"true\"\n              :resizable=\"true\"\n              :noRecords=\"true\"\n              :toolbar=\"['excel']\"\n              :excel-file-name=\"'balanceSheetReport.xlsx'\"\n              :excel-filterable=\"true\"\n              :columns=\"columns\"\n            />\n          </v-col>\n        </v-row>\n\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"false\"\n          :myLoading=\"true\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { dataStore } from \"@/observable/store\";\n\n/* Store */\nimport store from \"@/store\";\nconst institute = store.state.institute.institute;\n\nconst { balanceSheetHandler } = require(\"@/scripts/AppHandlers\");\nconst { columnsBy } = require(\"@/scripts/default_setup/DateSearch.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-datepicker\": () =>\n      import(\"@/components/custom_templates/DatePickerComponent\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-segment-dropdownlist\": () =>\n      import(\"@/components/dropdownlist/Segment\"),\n  },\n  data: () => ({\n    asOfDate: new Date().toISOString().substr(0, 10),\n    segment: null,\n    statementFPList: [],\n    totalAsset: 0,\n    totalLiabilityAndEquity: 0,\n    columnBy: \"1\", //Default Total\n    columnsBy: columnsBy,\n    fiscalDate: institute.fiscalDate[0],\n    fiscalDates: institute.fiscalDate,\n    fiscalMonths: Helper.generateFiscalMonths(\n      institute.fiscalDate[0].start_date,\n      institute.fiscalDate[0].end_date,\n      \"12\"\n    ),\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    // LoadingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    groupDefinition: [],\n    aggregateDefinition: [\n      { field: \"balance\", aggregate: \"sum\" },\n      { field: \"zero\", aggregate: \"sum\" },\n      { field: \"one\", aggregate: \"sum\" },\n      { field: \"two\", aggregate: \"sum\" },\n      { field: \"three\", aggregate: \"sum\" },\n      { field: \"four\", aggregate: \"sum\" },\n      { field: \"five\", aggregate: \"sum\" },\n      { field: \"six\", aggregate: \"sum\" },\n      { field: \"seven\", aggregate: \"sum\" },\n      { field: \"eight\", aggregate: \"sum\" },\n      { field: \"nine\", aggregate: \"sum\" },\n      { field: \"ten\", aggregate: \"sum\" },\n      { field: \"eleven\", aggregate: \"sum\" },\n    ],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSFP\").data(\"kendoGrid\");\n      let selectedItem = grid.dataItem(grid.select());\n\n      let asOf = new Date(this.asOfDate);\n\n      /* if day = 1 need to minus 1 month */\n      if (asOf.getDate() === 1) {\n        asOf.setMonth(asOf.getMonth() - 1);\n      }\n      asOf.setDate(1);\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedItem.accountUUID,\n          start_date: kendo.toString(asOf, \"yyyy-MM-dd\"),\n          end_date: this.asOfDate,\n        },\n      });\n    },\n    // Search\n    search() {\n      // Empty dataSource\n      let ds = this.$refs.dataSource.kendoWidget();\n      ds.data([]);\n\n      if (this.segment !== null) {\n        let asOfDate = new Date(this.asOfDate);\n\n        // Generate Fiscal Months\n        if (this.columnBy !== \"1\") {\n          let sdate = this.fiscalDate.start_date,\n            edate = this.fiscalDate.end_date;\n\n          asOfDate = new Date(edate);\n\n          this.fiscalMonths = Helper.generateFiscalMonths(\n            sdate,\n            edate,\n            this.columnBy\n          );\n        }\n\n        // Query\n        this.showLoading = true;\n        balanceSheetHandler\n          .getBalanceSheet({\n            params: {\n              group_by: this.columnBy,\n              as_of_date:\n                kendo.toString(asOfDate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n              segment_uuid: this.segment.id,\n            },\n          })\n          .then((res) => {\n            if (res) {\n              let entries = [],\n                totalAsset = 0,\n                totalLiabilityAndEquity = 0;\n              res.data.forEach((value) => {\n                let entry = value;\n\n                // Order\n                if (entry.groupNature.toLowerCase() === \"equity\") {\n                  // Equity\n                  entry.order = entry.account_type_number * 100;\n                } else {\n                  entry.order = entry.account_type_number;\n                }\n\n                // Sum Asset, Liabilities and Equtity\n                if (entry.groupNature.toLowerCase() === \"asset\") {\n                  // Asset\n                  totalAsset += entry.balance;\n                } else {\n                  // Liability and Equity\n                  // Covert Cr side to normal\n                  entry.balance = entry.balance * -1;\n                  totalLiabilityAndEquity += entry.balance;\n                }\n\n                // Group Nature local name\n                entry.group_nature_local_name = this.localTranslation(\n                  entry.groupNature\n                );\n\n                // Statement Group local name\n                entry.statement_group_local_name = this.localTranslation(\n                  entry.statementGroup\n                );\n\n                entries.push(entry);\n              });\n\n              this.totalAsset = totalAsset;\n              this.totalLiabilityAndEquity = totalLiabilityAndEquity;\n              this.statementFPList = entries;\n              this.generateColumn();\n            }\n          })\n          .finally(() => {\n            this.showLoading = false;\n          });\n      } else {\n        Helper.alertErrorMsg(\"Please select segment\");\n      }\n    },\n    // Transalate to local language\n    localTranslation(lang) {\n      let word = lang;\n\n      if (lang.toLowerCase() === \"asset\") {\n        word = \"ទ្រព្យសកម្ម\";\n      } else if (lang.toLowerCase() === \"current asset\") {\n        word = \"ទ្រព្យសកម្មរយៈពេលខ្លី\";\n      } else if (lang.toLowerCase() === \"non-current asset\") {\n        word = \"ទ្រព្យសកម្មរយៈពេលវែង\";\n      } else if (lang.toLowerCase() === \"liabilities\") {\n        word = \"បំណុល\";\n      } else if (lang.toLowerCase() === \"current liabilities\") {\n        word = \"បំណុលរយៈពេលខ្លី\";\n      } else if (lang.toLowerCase() === \"non-current liabilities\") {\n        word = \"បំណុលរយៈពេលវែង\";\n      } else if (lang.toLowerCase() === \"equity\") {\n        word = \"ដើមទុន\";\n      } else if (lang.toLowerCase() === \"retained earning\") {\n        word = \"ប្រាក់ចំណេញរក្សាទុក\";\n      }\n\n      return word;\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    statementGroupHeaderTmpl(dataItem) {\n      let name = dataItem.value;\n\n      if (this.reportingLanguage === \"local\") {\n        name = this.localTranslation(name);\n      }\n\n      return name;\n    },\n    natureGroupHeaderTmpl(dataItem) {\n      let name = dataItem.value;\n\n      if (this.reportingLanguage === \"local\") {\n        name = this.localTranslation(name);\n      }\n\n      return name;\n    },\n    generateColumn() {\n      let wordNums = [\n        \"zero\",\n        \"one\",\n        \"two\",\n        \"three\",\n        \"four\",\n        \"five\",\n        \"six\",\n        \"seven\",\n        \"eight\",\n        \"nine\",\n        \"ten\",\n        \"eleven\",\n      ];\n      let defaultColumns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          locked: true,\n          width: 300,\n          template: this.accountTmpl,\n        },\n        {\n          field: \"type\",\n          title: \"TYPE\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n        },\n        {\n          field: \"statementGroup\",\n          title: \"STATEMENT GROUP\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.statementGroupHeaderTmpl,\n        },\n        {\n          field: \"groupNature\",\n          title: \"NATURE\",\n          hidden: true,\n          width: 300,\n          groupHeaderTemplate: this.natureGroupHeaderTmpl,\n        },\n      ];\n\n      switch (this.columnBy) {\n        case \"12\": // MONTH\n          for (let i = 0; i < 12; i++) {\n            defaultColumns.push({\n              field: wordNums[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:#,##0.##;(#,##0.##)}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div style=text-align:right>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: {\n                class: \"table-header-cell\",\n                style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n              },\n              attributes: {\n                class: \"table-cell\",\n                style: \"text-align: right; font-size: 14px\",\n              },\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"4\": // QUARTER\n          for (let i = 0; i < 4; i++) {\n            defaultColumns.push({\n              field: wordNums[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:#,##0.##;(#,##0.##)}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div style=text-align:right>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: {\n                class: \"table-header-cell\",\n                style: \"text-align: right; font-size: 14px\",\n              },\n              attributes: {\n                class: \"table-cell\",\n                style: \"text-align: right; font-size: 14px\",\n              },\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"2\": // SEMI-ANNUAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 400;\n\n          for (let i = 0; i < 2; i++) {\n            defaultColumns.push({\n              field: wordNums[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:#,##0.##;(#,##0.##)}\",\n              width: 300,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div style=text-align:right>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: {\n                class: \"table-header-cell\",\n                style: \"text-align: right; font-size: 14px\",\n              },\n              attributes: {\n                class: \"table-cell\",\n                style: \"text-align: right; font-size: 14px\",\n              },\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        default:\n          // TOTAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 600;\n\n          defaultColumns.push({\n            field: \"balance\",\n            title: \"TOTAL\",\n            format: \"{0:#,##0.##;(#,##0.##)}\",\n            width: 250,\n            aggregates: \"['sum']\",\n            groupHeaderColumnTemplate:\n              \"<div style=text-align:right>#=kendo.toString(sum, 'n')#</div>\",\n            headerAttributes: {\n              class: \"table-header-cell\",\n              style: \"text-align: right; font-size: 14px\",\n            },\n            attributes: {\n              class: \"table-cell\",\n              style: \"text-align: right; font-size: 14px\",\n            },\n          });\n\n          this.columns = defaultColumns;\n\n          break;\n      }\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n      }\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      this.groupDefinition = [\n        {\n          field: \"groupNature\",\n          aggregates: this.aggregateDefinition,\n          compare: function (a, b) {\n            if (a.items[0].order === b.items[0].order) {\n              return 0;\n            } else if (a.items[0].order > b.items[0].order) {\n              return 1;\n            } else {\n              return -1;\n            }\n          },\n        },\n        { field: \"statementGroup\", aggregates: this.aggregateDefinition },\n        {\n          field: \"type\",\n          aggregates: this.aggregateDefinition,\n          compare: function (a, b) {\n            if (\n              a.items[0].account_type_number === b.items[0].account_type_number\n            ) {\n              return 0;\n            } else if (\n              a.items[0].account_type_number > b.items[0].account_type_number\n            ) {\n              return 1;\n            } else {\n              return -1;\n            }\n          },\n        },\n      ];\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: {\n    appType() {\n      return dataStore.productType;\n    },\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.reports_list {\n  width: 100%;\n  background-color: #fff;\n  padding: 20px 20px 5px;\n}\n.report_filter {\n  background-color: #f8f8f9;\n  padding: 0 20px 5px 20px;\n}\n.dv_mt {\n  margin-top: 20px;\n}\n.dv_mt8 {\n  margin-top: 30px;\n}\n.report_block .v-card.third {\n  border: none;\n  box-shadow: none;\n  color: #fff;\n  text-transform: uppercase;\n}\n.report_block .v-card.third p.text {\n  text-align: left;\n  font-size: 16px;\n}\n.report_block .v-card.third p.number {\n  text-align: center;\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 0;\n}\n.report_block .v-card.bg_gray {\n  background-color: #f8f8f9;\n  border: none;\n  box-shadow: none;\n  color: #000;\n  float: left;\n  width: 100%;\n}\n.report_block .v-card.bg_gray p span.text {\n  width: 25%;\n}\n.report_block .v-card.bg_gray p span.number {\n  width: 70%;\n  font-size: 19px;\n  font-weight: 700;\n  padding: 7px 0 0 0;\n  text-align: right;\n}\n@media (max-width: 576px) {\n  .dv_mt,\n  .dv_mt8 {\n    margin-top: 0;\n  }\n  .reports_list {\n    margin-top: 0;\n  }\n}\n</style>\n"]}]}