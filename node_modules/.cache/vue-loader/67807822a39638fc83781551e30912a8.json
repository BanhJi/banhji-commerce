{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/fund_balance/Segment.vue?vue&type=style&index=0&id=920f7074&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/fund_balance/Segment.vue","mtime":1642155812610},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlcG9ydHNfbGlzdCB7Cgl3aWR0aDogMTAwJTsKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CglwYWRkaW5nOiAyMHB4IDIwcHggNXB4Owp9Ci5yZXBvcnRfZmlsdGVyIHsKCWJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7CglwYWRkaW5nOiAwIDIwcHggNXB4IDIwcHg7Cn0KLmR2X210IHsKCW1hcmdpbi10b3A6IDIwcHg7Cn0KLmR2X210OCB7CgltYXJnaW4tdG9wOiAzMHB4Owp9Ci5yZXBvcnRfYmxvY2sgLnYtY2FyZC50aGlyZCB7Cglib3JkZXI6IG5vbmU7Cglib3gtc2hhZG93OiBub25lOwoJY29sb3I6ICNmZmY7Cgl0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9Ci5yZXBvcnRfYmxvY2sgLnYtY2FyZC50aGlyZCBwLnRleHQgewoJdGV4dC1hbGlnbjogbGVmdDsKCWZvbnQtc2l6ZTogMTZweDsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQudGhpcmQgcC5udW1iZXIgewoJdGV4dC1hbGlnbjogY2VudGVyOwoJZm9udC1zaXplOiAyNXB4OwoJZm9udC13ZWlnaHQ6IDcwMDsKCW1hcmdpbi1ib3R0b206IDA7Cn0KLnJlcG9ydF9ibG9jayAudi1jYXJkLmJnX2dyYXkgewoJYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmOTsKCWJvcmRlcjogbm9uZTsKCWJveC1zaGFkb3c6IG5vbmU7Cgljb2xvcjogIzAwMDsKCWZsb2F0OiBsZWZ0OwoJd2lkdGg6IDEwMCU7Cn0KLnJlcG9ydF9ibG9jayAudi1jYXJkLmJnX2dyYXkgcCBzcGFuLnRleHQgewoJd2lkdGg6IDI1JTsKfQoucmVwb3J0X2Jsb2NrIC52LWNhcmQuYmdfZ3JheSBwIHNwYW4ubnVtYmVyIHsKCXdpZHRoOiA3MCU7Cglmb250LXNpemU6IDE5cHg7Cglmb250LXdlaWdodDogNzAwOwoJcGFkZGluZzogN3B4IDAgMCAwOwoJdGV4dC1hbGlnbjogcmlnaHQ7Cn0KQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CgkuZHZfbXQsCgkuZHZfbXQ4IHsKCQltYXJnaW4tdG9wOiAwOwoJfQoJLnJlcG9ydHNfbGlzdCB7CgkJbWFyZ2luLXRvcDogMDsKCX0KfQo="},{"version":3,"sources":["Segment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAimBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Segment.vue","sourceRoot":"src/views/accounting/reports/fund_balance","sourcesContent":["<template>\n\t<v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"8\" cols=\"12\" class=\"py-0\" v-if=\"columnBy === '1'\">\n\t\t\t\t\t\t<app-searchdate\n\t\t\t\t\t\t\t:initStartDate=\"startDate\"\n\t\t\t\t\t\t\t@emitStartDate=\"startDate = $event\"\n\t\t\t\t\t\t\t:initEndDate=\"endDate\"\n\t\t\t\t\t\t\t@emitEndDate=\"endDate = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"6\" cols=\"12\" class=\"py-0\" v-else>\n\t\t\t\t\t\t<app-fiscal-date-dropdownlist\n\t\t\t\t\t\t\t:initFiscalDate=\"fiscalDate\"\n\t\t\t\t\t\t\t@emitFiscalDate=\"fiscalDate = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<app-segment-dropdownlist\n\t\t\t\t\t\t\t:initSegment=\"segment\"\n\t\t\t\t\t\t\t@emitSegment=\"segment = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"1\" cols=\"12\" class=\"pt-0\">\n\t\t\t\t\t\t<app-reporting-language\n\t\t\t\t\t\t\t:initLanguage=\"reportingLanguage\"\n\t\t\t\t\t\t\t@emitLanguage=\"reportingLanguage = $event\"\n\t\t\t\t\t\t\t@onChanged=\"onReportingLanguageChanges\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<label class=\"mb-1\">{{ $t(\"column_by\") }}:</label>\n\t\t\t\t\t\t<column-by-dropdownlist\n\t\t\t\t\t\t\t:initColumnBy=\"columnBy\"\n\t\t\t\t\t\t\t@emitColumnBy=\"columnBy = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<label class=\"label\">{{\n\t\t\t\t\t\t\t$t(\"level_chart_of_account\")\n\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t<level-coa-dropdownlist\n\t\t\t\t\t\t\t:initLevelCoa=\"levelCoa\"\n\t\t\t\t\t\t\t@emitLevelCoa=\"levelCoa = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"2\" cols=\"12\" class=\"pt-7\">\n\t\t\t\t\t\t<v-btn class=\"white--text\" color=\"primary\" @click=\"search\">\n\t\t\t\t\t\t\t\t<i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t\n\t\t\t\t<!-- Table -->\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n\t\t\t\t\t\t<treelistdatasource \n\t\t\t\t\t\t\tref=\"statementDS\"\n\t\t\t\t\t\t\t:data=\"statementList\"\n\t\t\t\t\t\t\t:sort=\"sortDefinition\"\n\t\t\t\t\t\t\t:schema-model=\"model\" />\n\n\t\t\t\t\t\t<treelist \n\t\t\t\t\t\t\tref=\"statementTreeList\"\n\t\t\t\t\t\t\tdata-source-ref=\"statementDS\"\n\t\t\t\t\t\t\t:resizable=\"true\"\n\t\t\t\t\t\t\t:columns=\"columns\"\n\t\t\t\t\t\t\t:dataBound=\"onDataBound\" />\n\n\t\t\t\t\t\t<LoadingMe\n\t\t\t\t\t\t\ttype=\"loading\"\n\t\t\t\t\t\t\t:isLoading=\"showLoading\"\n\t\t\t\t\t\t\t:myLoading=\"true\"\n\t\t\t\t\t\t\t:fullPage=\"false\" />\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { dataStore } from \"@/observable/store\";\n\n/* TreeList */\nimport { TreeList } from '@progress/kendo-treelist-vue-wrapper';\nimport { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n\nimport AccountModel from \"@/scripts/model/Account.js\";\nimport StatementOfFinancialPositionModel from \"@/scripts/model/StatementOfFinancialPosition\";\n\nconst balanceSheetHandler = require(\"@/scripts/handler/accounting/balanceSheetHandler\");\nconst incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode\");\n\nexport default {\n\tcomponents: {\n\t\tLoadingMe: () => import(\"@/components/Loading\"),\n\t\t\"column-by-dropdownlist\": () =>\n\t\t\timport(\"@/components/dropdownlist/ColumnBy\"),\n\t\t\"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n\t\t\"app-reporting-language\": () =>\n\t\t\timport(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n\t\t\"app-fiscal-date-dropdownlist\": () =>\n\t\t\timport(\"@/components/kendo_templates/FiscalDateDropDownList\"),\n\t\t\"level-coa-dropdownlist\": () =>\n\t\t\timport(\"@/components/dropdownlist/LevelCoa\"),\n\t\t\"app-segment-dropdownlist\": () =>\n\t\t\timport(\"@/components/dropdownlist/Segment\"),\n\t\t'treelist': TreeList,\n\t\t'treelistdatasource': TreeListDataSource,\n\t},\n\tdata: () => ({\n\t\tstartDate: \"\",\n\t\tendDate: \"\",\n\t\tsegment: null,\n\t\tstatementList: [],\n\t\tlevelCoa: \"\",// Default primary\n\t\tcolumnBy: \"1\", //Default Total\n\t\t/* Fiscal Date */\n\t\tfiscalDate: null,\n\t\tfiscalMonths: [],\n\t\t// Reporting Language\n\t\treportingLanguage: \"english\",\n\t\tfieldName: \"name\",\n\t\tfieldType: \"type\",\n\t\t// LoadingMe\n\t\tshowLoading: false,\n\t\t/* KENDO */\n\t\tcolumns: [],\n\t\tsortDefinition : [\n\t\t\t{ field: \"order\", dir: \"asc\" },\n\t\t\t{ field: \"number\", dir: \"asc\" },\n\t\t],\n\t\tmodel: {\n\t\t\tid: \"uuid\",\n\t\t\texpanded: true\n\t\t},\n\t}),\n\tmethods: {\n\t\t/* Validating */\n\t\tvalidating(){\n\t\t\tlet isValid = true;\n\n\t\t\tif(this.segment === null){\n\t\t\t\tisValid = false;\n\t\t\t\tthis.$snotify.warning(i18n.t(\"please_select_segment\"));\n\t\t\t}\n\t\t\t\n\t\t\tif(this.columnBy !== \"1\"){\n\t\t\t\tif(this.fiscalDate === null){\n\t\t\t\t\tisValid = false;\n\t\t\t\t\tthis.$snotify.warning(i18n.t(\"please_select_fiscal_year\"));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn isValid;\n\t\t},\n\t\t// Search\n\t\tasync search() {\n\t\t\tif(this.validating()){\n\t\t\t\tthis.showLoading = true;\n\n\t\t\t\t// Empty dataSource\n\t\t\t\tlet ds = this.$refs.statementDS.kendoWidget();\n\t\t\t\tds.data([]);\n\t\t\t\t\n\t\t\t\tlet sdate = this.startDate,\n\t\t\t\t\tedate = this.endDate;\n\n\t\t\t\t// Generate Fiscal Months\n\t\t\t\tif (this.columnBy !== \"1\") {\n\t\t\t\t\tsdate = this.fiscalDate.start_date;\n\t\t\t\t\tedate = this.fiscalDate.end_date;\n\n\t\t\t\t\tthis.fiscalMonths = Helper.generateFiscalMonths(\n\t\t\t\t\t\tsdate,\n\t\t\t\t\t\tedate,\n\t\t\t\t\t\tthis.columnBy\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t/* Previouse Fiscal Date */\n\t\t\t\tlet isPrevFiscalDate = true;\n\t\t\t\tlet prevFiscalDate = Helper.getFiscalDateByDate(sdate, isPrevFiscalDate);\n\n\t\t\t\t// Balance Sheet\n\t\t\t\tlet bsResponse = await balanceSheetHandler.getBalanceSheet({\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tgroup_by: this.columnBy,\n\t\t\t\t\t\t\tas_of_date: kendo.toString(new Date(edate), \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\t\tsegment_uuid: this.segment.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t}, this.levelCoa);\n\t\t\n\t\t\t\t/* Balance Sheet - beginning Balance */\n\t\t\t\tlet beginBSResponse = await balanceSheetHandler.getBalanceSheet({\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tgroup_by: \"1\",\n\t\t\t\t\t\t\tas_of_date: kendo.toString(new Date(prevFiscalDate.end_date), \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\t\tsegment_uuid: this.segment.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t}, this.levelCoa);\n\n\t\t\t\t/* Income Statement - Surplus/Defictit */\n\t\t\t\tlet plResponse = await incomeStatementHandler.getIncomeStatement({\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tstart_date: kendo.toString(new Date(sdate), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n\t\t\t\t\t\t\tend_date: kendo.toString(new Date(edate), 'yyyy-MM-dd') + 'T23:59:59.999Z',\n\t\t\t\t\t\t\tgroup_by: this.columnBy,\n\t\t\t\t\t\t\tsegment_uuid: this.segment.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t}, this.levelCoa);\n\n\t\t\t\tlet g = {}, childIds = [], typeCodeIds = [1,2,3,4,5,6];\n\t\t\t\t\n\t\t\t\t// Load Account List\n\t\t\t\tlet accounts = await this.$store.dispatch('accounting/getAccounts');\n\t\t\t\t\n\t\t\t\t/* beginning Balance */\n\t\t\t\tif(beginBSResponse){\n\t\t\t\t\tg[\"beginningBalance\"] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\tuuid : \"\",\n\t\t\t\t\t\tnumber : \"\",\n\t\t\t\t\t\tname : i18n.t(\"beginning_balance\"),\n\t\t\t\t\t\tlocal_name : i18n.t(\"beginning_balance\"),\n\t\t\t\t\t\torder : 0.1,\n\t\t\t\t\t});\n\n\t\t\t\t\tbeginBSResponse.data.forEach(value => {\n\t\t\t\t\t\t/* Filter Cash Accounts Only */\n\t\t\t\t\t\tif(~AccountTypeCode.CASH_ACCOUNTS.indexOf(value.account_type_number)){\n\t\t\t\t\t\t\tg[\"beginningBalance\"].balance += value.balance;\n\n\t\t\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\t\t\tconst property = NumberInWord[i];\n\t\t\t\t\t\t\t\tg[\"beginningBalance\"][property] += value.balance;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/* Surplus/Deficit */\n\t\t\t\tif(plResponse){\n\t\t\t\t\tg[\"surplusDeficit\"] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\tuuid : \"\",\n\t\t\t\t\t\tnumber : \"\",\n\t\t\t\t\t\tname : i18n.t(\"surplus_deficit\"),\n\t\t\t\t\t\tlocal_name : i18n.t(\"surplus_deficit\"),\n\t\t\t\t\t\torder : 0.2,\n\t\t\t\t\t});\n\n\t\t\t\t\tplResponse.data.forEach(value => {\n\t\t\t\t\t\t/* Filter Profit for the period only */\n\t\t\t\t\t\tif(value.account_type_number === AccountTypeCode.PROFIT_FOR_THE_PERIOD){\n\t\t\t\t\t\t\tg[\"surplusDeficit\"].balance = value.balance;\n\n\t\t\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\t\t\tconst property = NumberInWord[i];\n\t\t\t\t\t\t\t\tg[\"surplusDeficit\"][property] += value[property];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/* Closing Balance */\n\t\t\t\tg[\"closingBalance\"] = new StatementOfFinancialPositionModel({\n\t\t\t\t\tuuid : \"\",\n\t\t\t\t\tnumber : \"\",\n\t\t\t\t\tname : i18n.t(\"closing_balance\"),\n\t\t\t\t\tlocal_name : i18n.t(\"closing_balance\"),\n\t\t\t\t\torder : 0.3,\n\t\t\t\t});\n\n\t\t\t\tfor (let key in g){\n\t\t\t\t\t/* Filter Non Closing Balance */\n\t\t\t\t\tif(key !== \"closingBalance\"){\n\t\t\t\t\t\tg[\"closingBalance\"].balance += g[key].balance;\n\n\t\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\t\tconst property = NumberInWord[i];\n\t\t\t\t\t\t\tg[\"closingBalance\"][property] += g[key][property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* End Closing Balance */\n\t\t\t\t\n\t\t\t\t/* Balance Sheet */\n\t\t\t\tbsResponse.data.forEach(value => {\n\t\t\t\t\t/* Filter account type from 1 to 6 */\n\t\t\t\t\tif(~typeCodeIds.indexOf(value.account_type_number)){\n\t\t\t\t\t\t/* Get Account */\n\t\t\t\t\t\tlet account = accounts.find((item) => item.uuid === value.accountUUID);\n\t\t\t\t\t\tif(account){\n\t\t\t\t\t\t\t/* Child Id */\n\t\t\t\t\t\t\tchildIds.push(value.accountUUID);\n\n\t\t\t\t\t\t\t/* Order */\n\t\t\t\t\t\t\tlet order = account.type_code;\n\n\t\t\t\t\t\t\t/* GROUPING TOP LEVEL */\n\t\t\t\t\t\t\t/* Account Type */\n\t\t\t\t\t\t\tif(!g[account.type_code]){\n\t\t\t\t\t\t\t\tg[account.type_code] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\t\t\t\tuuid : account.type_code,\n\t\t\t\t\t\t\t\t\tnumber : account.type_code,\n\t\t\t\t\t\t\t\t\tname : account.account_type.name,\n\t\t\t\t\t\t\t\t\tlocal_name : account.account_type.local_name,\n\t\t\t\t\t\t\t\t\torder : order,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/* Parent Account */\n\t\t\t\t\t\t\tlet currentParentAccount = new AccountModel(account.parent_account);\n\t\t\t\t\t\t\twhile (currentParentAccount.number !== \"\") {\n\t\t\t\t\t\t\t\t/* Get account by parent number */\n\t\t\t\t\t\t\t\tlet accountParent = accounts.find((item) => item.number === currentParentAccount.number);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/* Set New Parent Account */\n\t\t\t\t\t\t\t\tcurrentParentAccount = new AccountModel(accountParent.parent_account);\n\n\t\t\t\t\t\t\t\tif(!g[accountParent.number]){\n\t\t\t\t\t\t\t\t\t/* First Parent Account Under Top Level */\n\t\t\t\t\t\t\t\t\tlet parentId = accountParent.type_code;\n\n\t\t\t\t\t\t\t\t\t/* Sub Of Parent Account */\n\t\t\t\t\t\t\t\t\tif(currentParentAccount.number !== \"\"){\n\t\t\t\t\t\t\t\t\t\tlet parentAccount = accounts.find((item) => item.number === currentParentAccount.number);\n\t\t\t\t\t\t\t\t\t\tparentId = parentAccount.number;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tg[accountParent.number] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\t\t\t\t\tuuid : accountParent.number,\n\t\t\t\t\t\t\t\t\t\tnumber : accountParent.number,\n\t\t\t\t\t\t\t\t\t\tname : accountParent.name,\n\t\t\t\t\t\t\t\t\t\tlocal_name : accountParent.local_name,\n\t\t\t\t\t\t\t\t\t\tparentId : parentId,\n\t\t\t\t\t\t\t\t\t\torder : order,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Single Account Level */\n\t\t\t\t\t\t\tif(!g[account.uuid]){\n\t\t\t\t\t\t\t\tg[account.uuid] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\t\t\t\tuuid : value.accountUUID,\n\t\t\t\t\t\t\t\t\tnumber : account.number,\n\t\t\t\t\t\t\t\t\tname : account.name,\n\t\t\t\t\t\t\t\t\tlocal_name : account.local_name,\n\t\t\t\t\t\t\t\t\torder : order,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Set Parent Id for a single account */\n\t\t\t\t\t\t\tif(account.parent_account.number){\n\t\t\t\t\t\t\t\tg[account.uuid].parentId = account.parent_account.number;\n\t\t\t\t\t\t\t}else{ /* Non Parent */\n\t\t\t\t\t\t\t\tif(!g[account.number]){ /* Parent as child */\n\t\t\t\t\t\t\t\t\tg[account.number] = new StatementOfFinancialPositionModel({\n\t\t\t\t\t\t\t\t\t\tuuid : account.number,\n\t\t\t\t\t\t\t\t\t\tnumber : account.number,\n\t\t\t\t\t\t\t\t\t\tname : account.name,\n\t\t\t\t\t\t\t\t\t\tlocal_name : account.local_name,\n\t\t\t\t\t\t\t\t\t\tparentId : account.type_code,\n\t\t\t\t\t\t\t\t\t\torder : order,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tg[account.uuid].parentId = account.number;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Balance */\n\t\t\t\t\t\t\tg[account.uuid].balance = value.balance;\n\n\t\t\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\t\t\tconst property = NumberInWord[i];\n\t\t\t\t\t\t\t\tg[account.uuid][property] = value[property];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t/* Parse Object Array */\n\t\t\t\tlet entries = Object.values(g);\n\t\t\t\t\n\t\t\t\t/* Parent aggregate sum */\n\t\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\t\tlet entry = entries[i];\n\t\t\t\t\t\n\t\t\t\t\tif(~childIds.indexOf(entry.uuid)){\n\t\t\t\t\t\tlet parentId = entry.parentId;\n\t\t\t\t\t\twhile(parentId !== null){\n\t\t\t\t\t\t\tif(parentId){\n\t\t\t\t\t\t\t\tlet parent = entries.find((item) => item.uuid === parentId);\n\t\t\t\t\t\t\t\tif(parent){\n\t\t\t\t\t\t\t\t\tparent.balance += entry.balance;\n\n\t\t\t\t\t\t\t\t\t/* Define Segments */\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < 12; j++) {\n\t\t\t\t\t\t\t\t\t\tconst property = NumberInWord[j];\n\t\t\t\t\t\t\t\t\t\tparent[property] += entry[property];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t/* Set new parent id */\n\t\t\t\t\t\t\t\t\tparentId = parent.parentId;\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t/* Set loop to end */\n\t\t\t\t\t\t\t\t\tparentId = null;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t/* Set loop to end */\n\t\t\t\t\t\t\t\tparentId = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* Total */\n\t\t\t\tlet totalEntry = new StatementOfFinancialPositionModel({\n\t\t\t\t\tuuid : \"\",\n\t\t\t\t\tnumber : \"\",\n\t\t\t\t\tname : i18n.t(\"total\"),\n\t\t\t\t\tlocal_name : i18n.t(\"total\"),\n\t\t\t\t\torder : 9999999999,\n\t\t\t\t});\n\t\t\t\tentries.forEach(value => {\n\t\t\t\t\tif(~childIds.indexOf(value.uuid)){\n\t\t\t\t\t\ttotalEntry.balance += value.balance;\n\n\t\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\t\tconst property = NumberInWord[i];\n\t\t\t\t\t\t\ttotalEntry[property] += value[property];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tentries.push(totalEntry);\n\t\t\t\t\n\t\t\t\t/* BIND STATMENT */\n\t\t\t\tthis.statementList = entries;\n\t\t\t\t\n\t\t\t\tthis.generateColumn();\n\n\t\t\t\tthis.showLoading = false;\n\t\t\t}\n\t\t},\n\t\t// Row Template\n\t\tnameTmpl(dataItem){\n\t\t\t/* Name in language */\n\t\t\tlet name = dataItem.name;\n\t\t\tif(this.reportingLanguage === \"local\"){\n\t\t\t\tname = dataItem.local_name;\n\t\t\t}\n\n\t\t\t/* Define result */\n\t\t\tlet result = `<span>${dataItem.number} - ${name}</span>`;\n\n\t\t\t/* Top Level */\n\t\t\tif(dataItem.parentId === null){\n\t\t\t\tresult = `<span style='font-weight: bolder;'>${name}</span>`;\n\t\t\t}\n\n\t\t\t/* Parent Level */\n\t\t\tif(dataItem.hasChildren && dataItem.number.length > 3){\n\t\t\t\tresult = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t/* On databound */\n\t\tonDataBound (e) {\n\t\t\tvar headers = e.sender.thead.children();\n\t\t\tfor (var i = 0; i < headers.length; i++) {\n\t\t\t\tvar th = kendo.jQuery(headers[i]);\n\t\t\t\tth.css(\"font-weight\", \"bold\");\n\t\t\t\tth.css(\"text-align\", \"center\");\n\t\t\t}\n\n\t\t\tvar rows = e.sender.tbody.children();\n\t\t\tfor (var j = 0; j < rows.length; j++) {\n\t\t\t\tvar row = kendo.jQuery(rows[j]);\n\t\t\t\tvar dataItem = e.sender.dataItem(row);\n\t\t\t\t\n\t\t\t\t/* Amount align right */\n\t\t\t\trow.css(\"text-align\", \"right\");\n\t\t\t\t\n\t\t\t\t/* Parent in bold */\n\t\t\t\tif(dataItem.get(\"hasChildren\") || dataItem.get(\"parentId\") === null){\n\t\t\t\t\trow.css(\"font-weight\", \"bold\");\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgenerateColumn() {\n\t\t\tlet headerAttributes = {\n\t\t\t\tclass: \"table-header-cell\",\n\t\t\t\tstyle: \"text-align: center;padding-right: 35px; font-size: 14px\",\n\t\t\t},\n\t\t\tattributes = {\n\t\t\t\tclass: \"table-cell\",\n\t\t\t\tstyle: \"text-align: right; font-size: 14px\",\n\t\t\t};\n\n\t\t\tlet defaultColumns = [\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldName,\n\t\t\t\t\ttitle: i18n.t(\"account\"),\n\t\t\t\t\ttemplate: this.nameTmpl,\n\t\t\t\t\tlocked: true,\n\t\t\t\t\twidth: 300,\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tswitch (this.columnBy) {\n\t\t\t\tcase \"12\": // MONTH\n\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"4\": // QUARTER\n\t\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\": // SEMI-ANNUAL\n\t\t\t\t\t// Expand Column [0] width\n\t\t\t\t\tdefaultColumns[0].width = 400;\n\n\t\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// TOTAL\n\t\t\t\t\t// Expand Column [0] width\n\t\t\t\t\tdefaultColumns[0].width = 600;\n\n\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\tfield: \"balance\",\n\t\t\t\t\t\ttitle: i18n.t(\"total\"),\n\t\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\t\twidth: 250,\n\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t});\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\t/* Set All Columns */\n\t\t\tthis.columns = defaultColumns;\n\t\t},\n\t\t// On Reporint Language Changes\n\t\tonReportingLanguageChanges() {\n\t\t\tthis.fieldName = \"name\";\n\t\t\tthis.fieldType = \"type\";\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tthis.fieldName = \"local_name\";\n\t\t\t\tthis.fieldType = \"type_local_name\";\n\t\t\t}\n\n\t\t\t// Generate column with new language\n\t\t\tthis.generateColumn();\n\t\t},\n\t},\n\tcomputed: {\n\t\tappType() {\n\t\t\treturn dataStore.productType;\n\t\t},\n\t},\n\tmounted() {\n\t},\n};\n</script>\n\n<style scoped>\n.reports_list {\n\twidth: 100%;\n\tbackground-color: #fff;\n\tpadding: 20px 20px 5px;\n}\n.report_filter {\n\tbackground-color: #f8f8f9;\n\tpadding: 0 20px 5px 20px;\n}\n.dv_mt {\n\tmargin-top: 20px;\n}\n.dv_mt8 {\n\tmargin-top: 30px;\n}\n.report_block .v-card.third {\n\tborder: none;\n\tbox-shadow: none;\n\tcolor: #fff;\n\ttext-transform: uppercase;\n}\n.report_block .v-card.third p.text {\n\ttext-align: left;\n\tfont-size: 16px;\n}\n.report_block .v-card.third p.number {\n\ttext-align: center;\n\tfont-size: 25px;\n\tfont-weight: 700;\n\tmargin-bottom: 0;\n}\n.report_block .v-card.bg_gray {\n\tbackground-color: #f8f8f9;\n\tborder: none;\n\tbox-shadow: none;\n\tcolor: #000;\n\tfloat: left;\n\twidth: 100%;\n}\n.report_block .v-card.bg_gray p span.text {\n\twidth: 25%;\n}\n.report_block .v-card.bg_gray p span.number {\n\twidth: 70%;\n\tfont-size: 19px;\n\tfont-weight: 700;\n\tpadding: 7px 0 0 0;\n\ttext-align: right;\n}\n@media (max-width: 576px) {\n\t.dv_mt,\n\t.dv_mt8 {\n\t\tmargin-top: 0;\n\t}\n\t.reports_list {\n\t\tmargin-top: 0;\n\t}\n}\n</style>\n"]}]}