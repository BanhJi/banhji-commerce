{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/bill_of_material/BillOfMaterial.vue?vue&type=template&id=16645368&scoped=true&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/bill_of_material/BillOfMaterial.vue","mtime":1638760538981},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LWFwcD4KICA8di1jb250YWluZXI+CiAgICA8di1yb3c+CiAgICAgIDx2LWNvbCBjb2xzPSIxMiIgc209IjEyIj4KICAgICAgICA8di1jYXJkCiAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgZGVuc2UKICAgICAgICAgIGNsYXNzPSJwYS00IG5vX2JvcmRlciByb3VuZGVkLXNtIgogICAgICAgICAgY29sb3I9IndoaXRlIgogICAgICAgID4KICAgICAgICAgIDx2LWZvcm0gcmVmPSJmb3JtIiB2LW1vZGVsPSJ2YWxpZCIgbGF6eS12YWxpZGF0aW9uPgogICAgICAgICAgICA8di1jYXJkIG91dGxpbmVkIGRlbnNlIGNsYXNzPSJub19ib3JkZXIiPgogICAgICAgICAgICAgIDxoMiBjbGFzcz0ibWItMCI+e3sgJHQoImJpbGxfb2ZfbWF0ZXJpYWwiKSB9fTwvaDI+CiAgICAgICAgICAgICAgPHYtaWNvbgogICAgICAgICAgICAgICAgQGNsaWNrPSJjYW5jZWwoKSIKICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMzMzOyBmb250LXNpemU6IDQwcHg7IgogICAgICAgICAgICAgICAgY2xhc3M9ImZsb2F0LXJpZ2h0IgogICAgICAgICAgICAgICAgPmNsb3NlCiAgICAgICAgICAgICAgPC92LWljb24+CiAgICAgICAgICAgIDwvdi1jYXJkPgoKICAgICAgICAgICAgPHYtY2FyZCBvdXRsaW5lZCBkZW5zZSBjbGFzcz0icHgtMyBub19ib3JkZXIiIGNvbG9yPSJncmF5QmciPgogICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iNCIgY29scz0iMTIiIGNsYXNzPSJwYi0wIj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCAgbWItMCI+e3sgJHQoImJvbV9ubyIpIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPHYtcm93IGNsYXNzPSJtdC0xIG1yLTAiPgogICAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMyIgY29scz0iMyIgY2xhc3M9InB0LTAgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2RlX3RleHQiPnt7IGJvbS5hYmJyIH19PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjciIGNvbHM9IjciIGNsYXNzPSJwdC0wIHBsLTAgcHItMSI+CiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSIgY3VzdG9tLWJvcmRlciAiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImJvbS5udW1iZXIiCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkCiAgICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICAgICAgICAgICAgICAgIHRhZ2U9IkJvbSBOby4iCiAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWyh2KSA9PiAhIXYgfHwgJ051bWJlciBpcyByZXF1aXJlZCddIgogICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMiIgY29scz0iMiIgY2xhc3M9InB0LTAgcHgtMCI+CiAgICAgICAgICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPSJibGFjayIKICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT0iMzAiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJib3JkZXJfcXJjb2RlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZGlzYWJsZWQ9ImRpc2FibGVkTWUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZ2VuZXJhdGVOdW1iZXIiCiAgICAgICAgICAgICAgICAgICAgICAgID5tZGktcXJjb2RlCiAgICAgICAgICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iNCIgY29scz0iMTIiIGNsYXNzPSJwYi0wIj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCAgbWItMCBtdC0xIiBzdHlsZT0iIj57ewogICAgICAgICAgICAgICAgICAgICR0KCJib21fdHlwZSIpCiAgICAgICAgICAgICAgICAgIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJib21UeXBlcyIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJib20udHlwZUJvbSIKICAgICAgICAgICAgICAgICAgICBpdGVtLXRleHQ9Im5hbWUiCiAgICAgICAgICAgICAgICAgICAgaXRlbS12YWx1ZT0iaWQiCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuLW9iamVjdAogICAgICAgICAgICAgICAgICAgIDpwbGFjZWhvbGRlcj0iJHQoJ3R5cGUnKSIKICAgICAgICAgICAgICAgICAgICB0YWdlPSJCb20gVHlwZSIKICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iNCIgY29scz0iMTIiIGNsYXNzPSJwYi0wIj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCAgbWItMCBtdC0xIiBzdHlsZT0iIj57ewogICAgICAgICAgICAgICAgICAgICR0KCJ3YXJlaG91c2UiKQogICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtdC0xIgogICAgICAgICAgICAgICAgICAgIDppdGVtcz0id2FyZWhvdXNlcyIKICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJib20ud2FyZWhvdXNlIgogICAgICAgICAgICAgICAgICAgIHJldHVybi1vYmplY3QKICAgICAgICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJpZCIKICAgICAgICAgICAgICAgICAgICBpdGVtLXRleHQ9Im5hbWUiCiAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSIkdCgnd2FyZWhvdXNlJykiCiAgICAgICAgICAgICAgICAgICAgdGFnZT0iV2FyZWhvdXNlIgogICAgICAgICAgICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMyIgY29scz0iMTIiIGNsYXNzPSJteV9yYWRpbyI+LS0+CiAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPSJib20ubWF0ZXJpYWxUeXBlIiBpZD0icmFkaW8xIiA6c2VsZWN0ZWQtdmFsdWU9IntpZDogMSwgbmFtZTogJ0J1aWxkIEFzc2VtYmx5J30iIG5hbWU9InJhZGlvIiB0eXBlPSJyYWRpbyI+LS0+CiAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJhZGlvMSI+e3sgJHQoJ2J1aWxkX2Fzc2VtYmx5JykgfX08L2xhYmVsPi0tPgogICAgICAgICAgICAgICAgPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdi1tb2RlbD0iYm9tLm1hdGVyaWFsVHlwZSIgOnNlbGVjdGVkLXZhbHVlPSJ7aWQ6IDIsIG5hbWU6ICdQcm9kdWN0aW9uJ30iIGlkPSJyYWRpbzIiIG5hbWU9InJhZGlvIiB0eXBlPSJyYWRpbyI+LS0+CiAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9InJhZGlvMiI+e3sgJHQoJ3Byb2R1Y3Rpb24nKSB9fTwvbGFiZWw+LS0+CiAgICAgICAgICAgICAgICA8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4tLT4KICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIiBjbGFzcz0icHQtMCI+CiAgICAgICAgICAgICAgICA8IS0tIEdyaWQgT25lIC0tPgogICAgICAgICAgICAgICAgPHYtcm93IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgY2xhc3M9InB5LTEgcGItMCI+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcmltYXJ5LS10ZXh0IG1iLTAgZm9udF8xOCB0ZXh0LXVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgICAgICAgICB7eyAkdCgiZmluaXNoZWRfcHJvZHVjdCIpIH19CiAgICAgICAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJwdC0xIj4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICAgICAgcmVmPSJmaW5pc2hQcm9kdWN0RFMiCiAgICAgICAgICAgICAgICAgICAgICA6Y2hhbmdlPSJkYXRhU291cmNlQ2hhbmdlZCIKICAgICAgICAgICAgICAgICAgICAgIDpkYXRhPSJib20uZmluaXNoUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkCiAgICAgICAgICAgICAgICAgICAgICBpZD0iZ3JpZEZpbmlzaFByb2R1Y3QiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZ3JpZC1mdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIDpkYXRhLXNvdXJjZS1yZWY9IidmaW5pc2hQcm9kdWN0RFMnIgogICAgICAgICAgICAgICAgICAgICAgOnNvcnRhYmxlPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgIDpmaWx0ZXJhYmxlPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgIDpjb2x1bW4tbWVudT0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICAgIDpzY3JvbGxhYmxlLXZpcnR1YWw9InRydWUiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0icm93TnVtYmVyRlAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ25vLicpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjU1IgogICAgICAgICAgICAgICAgICAgICAgICA6Y29sdW1uLW1lbnU9ImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNTsnLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAndGV4dC12YXJpYW50cycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiB2YXJpYW50cycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2l0ZW0nIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdpdGVtcycpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRhYmxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJpdGVtVGVtcGxhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9Ikl0ZW1Ecm9wRG93bkVkaXRvckZQIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2J1b20nIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdiYXNlX3VvbScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE1MCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJVT01UZW1wbGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0iVU9NRHJvcERvd25FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9Insgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodDsgJyB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Rlc2NyaXB0aW9uJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGVzY3JpcHRpb24nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+IC0tPgoKICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9Iid5aWVsZFF0eSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ3lpZWxkX3F0eScpIgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnay1zdGF0ZS1kaXNhYmxlZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTUwIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICc8c3Bhbj4jPWtlbmRvLnRvU3RyaW5nKHlpZWxkUXR5IHx8IDAsIGRlY2ltYWxGb3JtYXQpIHx8IDAjPC9zcGFuPicKICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInY29zdCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Nvc3QnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNTAiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9Im51bWJlckVkaXRvciIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4+Iz1rZW5kby50b1N0cmluZyhjb3N0IHx8IDAsIGRlY2ltYWxGb3JtYXQpIHx8IDAjPC9zcGFuPicKICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInYW1vdW50JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnYW1vdW50JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTUwIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICc8c3Bhbj4jPWtlbmRvLnRvU3RyaW5nKGFtb3VudCB8fCAwLCBkZWNpbWFsRm9ybWF0KSB8fCAwIzwvc3Bhbj4nCiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiByaWdodDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwva2VuZG8tZ3JpZD4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICA8IS0tIEdyaWQgVHdvIC0tPgogICAgICAgICAgICAgICAgPHYtcm93IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgY2xhc3M9InB0LTAgcGItMCI+CiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzPSJwcmltYXJ5LS10ZXh0IG1iLTAgZm9udF8xOCB0ZXh0LXVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgICAgICAgICB7eyAkdCgiYnlfcHJvZHVjdCIpIH19CiAgICAgICAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJwdC0xIj4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICAgICAgcmVmPSJvdGhlclByb2R1Y3REUyIKICAgICAgICAgICAgICAgICAgICAgIDpjaGFuZ2U9ImRhdGFTb3VyY2VDaGFuZ2VkT1AiCiAgICAgICAgICAgICAgICAgICAgICA6ZGF0YT0iYm9tLm90aGVyRmluaXNoUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkCiAgICAgICAgICAgICAgICAgICAgICBpZD0iZ3JpZE90aGVyUHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJncmlkLWZ1bmN0aW9uIgogICAgICAgICAgICAgICAgICAgICAgOmRhdGEtc291cmNlLXJlZj0iJ290aGVyUHJvZHVjdERTJyIKICAgICAgICAgICAgICAgICAgICAgIDpzb3J0YWJsZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICA6ZmlsdGVyYWJsZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICA6Y29sdW1uLW1lbnU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6c2Nyb2xsYWJsZS12aXJ0dWFsPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9InJvd051bWJlck9QIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCduby4nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSI1NSIKICAgICAgICAgICAgICAgICAgICAgICAgOmNvbHVtbi1tZW51PSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNFREYxRjU7JywKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ3RleHQtdmFyaWFudHMnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjogdmFyaWFudHMnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidpdGVtJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnaXRlbScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJpdGVtVGVtcGxhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9Ikl0ZW1Ecm9wRG93bkVkaXRvckZQIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPCEtLSA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInZGVzY3JpcHRpb24nIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdkZXNjcmlwdGlvbicpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ2JhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4gLS0+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInYnVvbSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Jhc2VfdW9tJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTUwIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9IlVPTVRlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJVT01Ecm9wRG93bkVkaXRvck9QIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiByaWdodDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7IHN0eWxlOiAndGV4dC1hbGlnbjogcmlnaHQ7ICcgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSIneWllbGRRdHknIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCd5aWVsZF9xdHknKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNTAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoeWllbGRRdHkgfHwgMCwgZGVjaW1hbEZvcm1hdCkgfHwgMCM8L3NwYW4+JwogICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogcmlnaHQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjogcmlnaHQnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9Iidjb3N0JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnY29zdCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE1MCIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4+Iz1rZW5kby50b1N0cmluZyhjb3N0IHx8IDAsIGRlY2ltYWxGb3JtYXQpIHx8IDAjPC9zcGFuPicKICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInYW1vdW50JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnYW1vdW50JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTUwIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAnPHNwYW4+Iz1rZW5kby50b1N0cmluZyhhbW91bnQgfHwgMCwgZGVjaW1hbEZvcm1hdCkgfHwgMCM8L3NwYW4+JwogICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogcmlnaHQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjogcmlnaHQnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6Y29tbWFuZD0iewogICAgICAgICAgICAgICAgICAgICAgICAgIGljb25DbGFzczogJ2staWNvbiBrLWktdHJhc2gnLAogICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICdEZWxldGUnLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiByZW1vdmVSb3dPUCwKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogJ2J0bi1wbHVzJywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSInJm5ic3A7JyIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogcmlnaHQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQ+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgY2xhc3M9InB0LTAiPgogICAgICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmxvYXQtbGVmdCBidG5fcGx1cyByb3VuZGVkLTQgd2hpdGUtLXRleHQgbXItMiIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkUm93T3RoZXJQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24gc2l6ZT0iIiBjbGFzcz0ibWEtMSI+bWRpLXBsdXM8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICAgIDwhLS0gR3JpZCBUaHJlZSAtLT4KICAgICAgICAgICAgICAgIDx2LXJvdyBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsiPgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIGNsYXNzPSJwdC0wIHBiLTAiPgogICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0icHJpbWFyeS0tdGV4dCBtYi0wIGZvbnRfMTggdGV4dC11cHBlcmNhc2UiPgogICAgICAgICAgICAgICAgICAgICAge3sgJHQoImNvbXBvbmVudHNfdXNlZCIpIH19CiAgICAgICAgICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJwdC0xIj4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICAgICAgcmVmPSJjb21wb25lbnRVc2VEUyIKICAgICAgICAgICAgICAgICAgICAgIDpjaGFuZ2U9ImRhdGFTb3VyY2VDaGFuZ2VkQ1UiCiAgICAgICAgICAgICAgICAgICAgICA6ZGF0YT0iYm9tLmNvbXBvbmVudFVzZWQiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZAogICAgICAgICAgICAgICAgICAgICAgaWQ9ImdyaWRDb21wb25lbnRVc2UiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZ3JpZC1mdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIDpkYXRhLXNvdXJjZS1yZWY9Iidjb21wb25lbnRVc2VEUyciCiAgICAgICAgICAgICAgICAgICAgICA6c29ydGFibGU9ImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgOmZpbHRlcmFibGU9ImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgOmNvbHVtbi1tZW51PSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgOmVkaXRhYmxlPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgOnNjcm9sbGFibGUtdmlydHVhbD0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJyb3dOdW1iZXJDVSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnbm8uJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iNTUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpjb2x1bW4tbWVudT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1OycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICd0ZXh0LXZhcmlhbnRzJywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3RleHQtYWxpZ246IHZhcmlhbnRzJywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmZpZWxkPSInaXRlbSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2l0ZW0nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iaXRlbVRlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJJdGVtRHJvcERvd25FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IidkZXNjcmlwdGlvbiciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Rlc2NyaXB0aW9uJykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPiAtLT4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9IlVPTVRlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJVT01Ecm9wRG93bkVkaXRvck9QIgogICAgICAgICAgICAgICAgICAgICAgICA6ZmllbGQ9IididW9tJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnYmFzZV91b20nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNjAiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3F0eSciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ3F0eScpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE1MCIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRvcj0ibnVtYmVyRWRpdG9yIgogICAgICAgICAgICAgICAgICAgICAgICA6dGVtcGxhdGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICc8c3Bhbj4jPWtlbmRvLnRvU3RyaW5nKHF0eSB8fCAwLCBkZWNpbWFsRm9ybWF0KSB8fCAwIzwvc3Bhbj4nCiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiByaWdodDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Nvc3QnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdjb3N0JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTUwIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJudW1iZXJFZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoY29zdCB8fCAwLCBkZWNpbWFsRm9ybWF0KSB8fCAwIzwvc3Bhbj4nCiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOmhlYWRlckF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0ZXh0LWFsaWduOiByaWdodDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Ftb3VudCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Ftb3VudCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE1MCIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRhYmxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoYW1vdW50IHx8IDAsIGRlY2ltYWxGb3JtYXQpIHx8IDAjPC9zcGFuPicKICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOmF0dHJpYnV0ZXM9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZ3JpZC1jb2x1bW4KICAgICAgICAgICAgICAgICAgICAgICAgOmNvbW1hbmQ9InsKICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uQ2xhc3M6ICdrLWljb24gay1pLXRyYXNoJywKICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnRGVsZXRlJywKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogcmVtb3ZlUm93Q1UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6ICdidG4tcGx1cycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJyZuYnNwOyciCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTAwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IHJpZ2h0OyBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPC9rZW5kby1ncmlkPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIGNsYXNzPSJwdC0wIj4KICAgICAgICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZsb2F0LWxlZnQgYnRuX3BsdXMgcm91bmRlZC00IHdoaXRlLS10ZXh0IG1yLTIiCiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZFJvd0NvbXBvbmVudFVzZSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8di1pY29uIHNpemU9IiIgY2xhc3M9Im1hLTEiPm1kaS1wbHVzPC92LWljb24+CiAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICA8di1yb3cgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6ICNmZmY7Ij4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJweS0wIj4KICAgICAgICAgICAgICAgICAgICA8di1yb3c+CiAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjYiIGNvbHM9IjYiIGNsYXNzPSJweS0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGV4dGFyZWEKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXQtMSIKICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgICAgICAgICAgIHJvd3M9IjMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgbm8tcmVzaXplCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iYm9tLnRyYW5zYWN0aW9uTm90ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjkwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnPSJNZW1vIgogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJNZW1vIgogICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iNiIgY29scz0iNiIgY2xhc3M9InB5LTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8di1zaW1wbGUtdGFibGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpkZWZhdWx0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxlZnQgdGV4dC11cHBlcmNhc2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoInRvdGFsX2Nvc3QiKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWNlbnRlciI+OjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWJvbGQgdGV4dC1yaWdodCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBudW1iZXJGb3JtYXQoYm9tLmV4Y2hhbmdlQW1vdW50KSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtbGVmdCB0ZXh0LXVwcGVyY2FzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyAkdCgidmFyaWFuY2UiKSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWNlbnRlciI+OjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWJpbmQ6Y2xhc3M9IlsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9tLnZhcmlhbmNlID49IDAgPyAnJyA6ICdyZWRUZXh0JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC1yaWdodCB0ZXh0LWJvbGQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbnVtYmVyRm9ybWF0KGJvbS52YXJpYW5jZSkgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICA8L3Ytc2ltcGxlLXRhYmxlPgogICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICA8di1kaXZpZGVyIC8+CiAgICAgICAgICAgIDx2LWNhcmQgb3V0bGluZWQgZGVuc2UgY2xhc3M9Im5vX2JvcmRlciBmdW5jdGlvbl9mb290ZXIiPgogICAgICAgICAgICAgIDx2LWFsZXJ0IHR5cGU9Indhcm5pbmciIHYtbW9kZWw9ImFsZXJ0IiBkaXNtaXNzaWJsZT4KICAgICAgICAgICAgICAgIDxzcGFuIHYtaHRtbD0iZXJyb3JNZXNzYWdlIiAvPgogICAgICAgICAgICAgIDwvdi1hbGVydD4KICAgICAgICAgICAgICA8di1tZW51PgogICAgICAgICAgICAgICAgPHYtbGlzdD4KICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtCiAgICAgICAgICAgICAgICAgICAgdi1mb3I9IihpdGVtLCBpbmRleCkgaW4gdGVtcGxhdGVzIgogICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlPnt7IGl0ZW0udGl0bGUgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPC92LWxpc3Q+CiAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICBjb2xvcj0iYmxhY2siCiAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC1jYXBpdGFsaXplIHJvdW5kZWQtcGlsbCB3aGl0ZS0tdGV4dCBmbG9hdC1sZWZ0IgogICAgICAgICAgICAgICAgQGNsaWNrPSJjYW5jZWwiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAge3sgJHQoImNhbmNlbCIpIH19CiAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgQGNsaWNrPSJzYXZlQ2xvc2UoKSIKICAgICAgICAgICAgICAgIGNsYXNzPSJtci0yIGZsb2F0LXJpZ2h0IHdoaXRlLS10ZXh0IHRleHQtY2FwaXRhbGl6ZSByb3VuZGVkLXBpbGwiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAge3sgJHQoInNhdmVfY2xvc2UiKSB9fQogICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgPC92LWZvcm0+CiAgICAgICAgPC92LWNhcmQ+CiAgICAgIDwvdi1jb2w+CiAgICA8L3Ytcm93PgogICAgPExvYWRpbmdNZQogICAgICA6aXNMb2FkaW5nPSJzaG93TG9hZGluZyIKICAgICAgOmZ1bGxQYWdlPSJmYWxzZSIKICAgICAgdHlwZT0ibG9hZGluZyIKICAgICAgOm15TG9hZGluZz0idHJ1ZSIKICAgIC8+CiAgPC92LWNvbnRhaW5lcj4KPC92LWFwcD4K"},null]}