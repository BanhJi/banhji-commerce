{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/TaxOnSalary.vue?vue&type=style&index=0&id=049d5544&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/compliance/monthly_tax/TaxOnSalary.vue","mtime":1638499443159},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0cjpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpOm5vdCgudi1kYXRhLXRhYmxlX19lbXB0eS13cmFwcGVyKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIucHJpbWFyeTpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpOm5vdCgudi1kYXRhLXRhYmxlX19lbXB0eS13cmFwcGVyKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJkMDUwICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGhlYWQgPiB0cjpsYXN0LWNoaWxkID4gdGggewogICAgZm9udC1zaXplOiAxNHB4OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpOwogICAgaGVpZ2h0OiAzN3B4ICFpbXBvcnRhbnQ7CiAgICBjb2xvcjogIzAwMDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKICAgIGJvcmRlci10b3A6IHRoaW4gc29saWQgI2RkZDsKICAgIGJvcmRlci1ib3R0b206IHRoaW4gc29saWQgI2RkZDsKICAgIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOm5vdCg6bGFzdC1jaGlsZCkgPiB0ZDpub3QoLnYtZGF0YS10YWJsZV9fbW9iaWxlLXJvdyksCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0cjpub3QoOmxhc3QtY2hpbGQpID4gdGg6bm90KC52LWRhdGEtdGFibGVfX21vYmlsZS1yb3cpIHsKICAgIGJvcmRlci1ib3R0b206IHRoaW4gc29saWQgI2RkZDsKfQoKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgICBoZWlnaHQ6IDMycHggIWltcG9ydGFudDsKICAgIGJvcmRlci1ib3R0b206IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKSAhaW1wb3J0YW50Owp9CgouYm9yZGVyX3RvcCB7CiAgICBib3JkZXItdG9wOiB0aGluIHNvbGlkICNmZmYgIWltcG9ydGFudDsKfQoKLnYtYXBwbGljYXRpb24gLnByaW1hcnksCi52LWFwcGxpY2F0aW9uIC50aGlyZCB7CiAgICBib3JkZXItY29sb3I6ICNmZmYgIWltcG9ydGFudDsKfQoKLnZhdCB7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgY29sb3I6ICNmZmY7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGZvbnQtZmFtaWx5OiAnTmlyYWRlaS1Cb2xkJyAhaW1wb3J0YW50Owp9CgouYW1vdW50IHsKICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7Cn0KCi5oZWFkLXN1bW1hcnkgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["TaxOnSalary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAubA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"TaxOnSalary.vue","sourceRoot":"src/views/compliance/monthly_tax","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                            <h2 class=\"mb-0 font_20\">{{ $t('tax_on_salary') }}</h2>\n                            <p class=\"mb-0\">{{ $t('for_the_month_of') }}: <span class=\"text-bold\">{{ monthOf }}</span></p>\n                        </v-col>\n                        <v-col sm=\"6\" cols=\"12\" class=\"py-0 d-flex justify-end hide_form_alert\">\n                            <div class=\"d-flex\">\n                                <month-picker :initialMonth=\"end_date\" @emitMonth=\"end_date = $event\"\n                                              :min=\"start_date\"/>\n                                <v-btn class=\"ma-1 ml-2\" color=\"primary white--text text-capitalize\" @click=\"onSearch\">\n                                    {{ $t('view') }}\n                                </v-btn>\n                            </div>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0 mb-2\">\n                    <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_resident_employees') }}</h2>\n                </v-col>\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table>\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('no') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('spouse') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_minor') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                                <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td class=\"\">1</td>\n                                <td class=\"text-right\">{{ amountR0.numEmp }}</td>\n                                <td class=\"text-right\">{{ amountR0.amountPaid }}</td>\n                                <td class=\"text-right\">{{ amountR0.spouse }}</td>\n                                <td class=\"text-right\">{{ amountR0.numMinor }}</td>\n                                <td>0%</td>\n                                <td class=\"text-right\">{{ amountR0.taxSalary }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">2</td>\n                                <td class=\"text-right\">{{ amountR5.numEmp }}</td>\n                                <td class=\"text-right\">{{ amountR5.amountPaid }}</td>\n                                <td class=\"text-right\">{{ amountR5.spouse }}</td>\n                                <td class=\"text-right\">{{ amountR5.numMinor }}</td>\n                                <td>5%</td>\n                                <td class=\"text-right\">{{ amountR5.taxSalary }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">3</td>\n                                <td class=\"text-right\">{{ amountR10.numEmp }}</td>\n                                <td class=\"text-right\">{{ amountR10.amountPaid }}</td>\n                                <td class=\"text-right\">{{ amountR10.spouse }}</td>\n                                <td class=\"text-right\">{{ amountR10.numMinor }}</td>\n                                <td>10%</td>\n                                <td class=\"text-right\">{{ amountR10.taxSalary }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">4</td>\n                                <td class=\"text-right\">{{ amountR15.numEmp }}</td>\n                                <td class=\"text-right\">{{ amountR15.amountPaid }}</td>\n                                <td class=\"text-right\">{{ amountR15.spouse }}</td>\n                                <td class=\"text-right\">{{ amountR15.numMinor }}</td>\n                                <td>15%</td>\n                                <td class=\"text-right\">{{ amountR15.taxSalary }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">5</td>\n                                <td class=\"text-right\">{{ amountR20.numEmp }}</td>\n                                <td class=\"text-right\">{{ amountR20.amountPaid }}</td>\n                                <td class=\"text-right\">{{ amountR20.spouse }}</td>\n                                <td class=\"text-right\">{{ amountR20.numMinor }}</td>\n                                <td>20%</td>\n                                <td class=\"text-right\">{{ amountR20.taxSalary }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"white--text third text-uppercase\">{{ $t('total') }}</td>\n                                <td class=\"white--text third text-right\">{{ amountTotal.numEmp }}</td>\n                                <td class=\"white--text third text-right\">{{ amountTotal.amountPaid }}</td>\n                                <td class=\"white--text third text-right\">{{ amountTotal.spouse }}</td>\n                                <td class=\"white--text third text-right\">{{ amountTotal.numMinor }}</td>\n                                <td class=\"white--text third\"></td>\n                                <td class=\"white--text third text-right\">{{ amountTotal.taxSalary }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0 mt-4 mb-2\">\n                        <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_resident_non_employees') }}</h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <v-simple-table>\n                            <template v-slot:default>\n                                <thead>\n                                <tr>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr>\n                                    <td class=\"text-right\">{{ amountNr20.numEmp }}</td>\n                                    <td class=\"text-right\">{{ amountNr20.amountPaid }}</td>\n                                    <td>20%</td>\n                                    <td class=\"text-right\">{{ amountNr20.taxSalary }}</td>\n                                </tr>\n                                </tbody>\n                            </template>\n                        </v-simple-table>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0 mt-4 mb-2\">\n                        <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_fringe_benefit') }}</h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <v-simple-table>\n                            <template v-slot:default>\n                                <thead>\n                                <tr>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                                    <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr>\n                                    <td class=\"text-right\">{{ amountFB20.numEmp }}</td>\n                                    <td class=\"text-right\">{{ amountFB20.amountPaid }}</td>\n                                    <td>20%</td>\n                                    <td class=\"text-right\">{{ amountFB20.taxSalary }}</td>\n                                </tr>\n                                </tbody>\n                            </template>\n                        </v-simple-table>\n                    </v-col>\n<!--                    <v-btn color=\"primary\" class=\"mt-3 float-right capitalize\" outlined>-->\n<!--                        <span class=\"black&#45;&#45;text \">{{ $t('view_detail_record') }}</span>-->\n<!--                    </v-btn>-->\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\nconst salaryHandler = require(\"@/scripts/compliance/handler/salaryHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n\n        search: {\n            start_date: \"\",\n            end_date: \"\"\n        },\n        monthOf: 'All Monthly',\n        salaries: [],\n    }),\n    props: {},\n    methods: {\n        async onloadSalary() {\n            this.showLoading = true\n            await salaryHandler.getAll().then(res => {\n                this.salaries = res.data.data\n                this.showLoading = false\n            })\n        },\n        Change() {\n        },\n\n        onSearch() {\n            this.showLoading = true\n            this.monthOf = kendo.toString(new Date(this.end_date), 'MMMM yyyy')\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    salaryHandler.getByMonth(this.end_date).then(res => {\n                        window.console.log(res)\n                        this.salaries = res.data.data\n                        this.showLoading = false\n                    })\n                }, 200)\n            })\n        }\n    },\n    async mounted() {\n        await this.onloadSalary()\n    },\n    computed: {\n        amountTotal() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalary = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    amount += i.amountToPaid\n                    amountTaxSalary += i.amountTaxSalary\n                    numEmp += 1\n                    numMinor += kendo.parseFloat(i.numMinor)\n                    spouse += i.spouse\n                })\n                this.$emit('getTaxSalary', amountTaxSalary)\n                window.console.log(amountTaxSalary, 'amount tax salary')\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalary, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR0() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 0) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += kendo.parseFloat(i.numMinor)\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR5() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 5) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR10() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalary = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 10) {\n                                amount += i.amountToPaid\n                                amountTaxSalary += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalary, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR15() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 15) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR20() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 20) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountNr20() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0\n                this.salaries.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Non-Resident\") {\n                            if (i.taxRate == 20) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                            }\n                        }\n                    }\n                })\n                return {\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {numEmp: 0, amountPaid: 0, taxSalary: 0}\n            }\n        },\n        amountFB20() {\n            if (this.salaries.length > 0) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0\n                this.salaries.filter(i => {\n                    if (i.totalBenefit > 0) {\n                        amount += i.totalBenefit\n                        amountTaxSalaryUS += i.taxAmountBenefit\n                        numEmp += 1\n                    }\n                })\n                this.$emit('getTaxBenefit', amountTaxSalaryUS)\n                return {\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {numEmp: 0, amountPaid: 0, taxSalary: 0}\n            }\n        },\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        'month-picker': () => import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold' !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"]}]}