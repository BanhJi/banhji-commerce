{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/items/services_items/Images.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/items/services_items/Images.vue","mtime":1638499443303},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHNlcnZpY2VJdGVtSGFuZGxlciA9IHJlcXVpcmUoIkAvc2NyaXB0cy9zZXJ2aWNlSXRlbUhhbmRsZXIiKQpleHBvcnQgZGVmYXVsdCB7CiAgICBwcm9wczogWydzZXJ2aWNlJ10sCiAgICBkYXRhOiAoKSA9PiAoewogICAgICAgIHNyYzogJycsCiAgICAgICAgdXJsOiAnaHR0cHM6Ly9zMy1hcC1zb3V0aGVhc3QtMS5hbWF6b25hd3MuY29tL2ltYWdlcy5iYW5oamkvJywKICAgICAgICBpbWdQcmV2aWV3OiAnJywKICAgICAgICBmaWxlU2l6ZVJ1bGVzOiBbCiAgICAgICAgICAgIGZpbGVzID0+ICFmaWxlcyB8fCAhZmlsZXMuc29tZShmaWxlID0+IGZpbGUuc2l6ZSA+IDEwMjQgKiAxMDI0KSB8fCAnSW1hZ2Ugc2l6ZSBzaG91bGQgYmUgbGVzcyB0aGFuIDEgTUIhJwogICAgICAgIF0KICAgIH0pLAogICAgbWV0aG9kczogewogICAgICAgIG9uVXBkYXRlKCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdvblVwZGF0ZScsIHRoaXMuc2VydmljZSA/IHRoaXMuc2VydmljZSA6IHt9KQogICAgICAgIH0sCiAgICAgICAgcHJldmlldyhpbWcpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2VydmljZSkgewogICAgICAgICAgICAgICAgaWYgKHRoaXMuc2VydmljZS5pZCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9IHRoaXMudXJsICsgaW1nLmJpZ1RodW1iCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmltZ1ByZXZpZXcgPSAnJwogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgZGVmYXVsdFByZXZpZXcoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNlcnZpY2UpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlcnZpY2UuaWQpIHsKICAgICAgICAgICAgICAgICAgICAvLyB3aW5kb3cuY29uc29sZS5sb2codGhpcy5wcm9kdWN0LmltYWdlcy5kZWZhdWx0LmJpZ1RodW1iKQogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9IHRoaXMudXJsICsgdGhpcy5zZXJ2aWNlLmltYWdlcy5kZWZhdWx0LmJpZ1RodW1iCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9ICcnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmltZ1ByZXZpZXcgPSAnJwogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgICAgICAgbGV0IGlucHV0ID0gZS50YXJnZXQKICAgICAgICAgICAgLy8gRW5zdXJlIHRoYXQgeW91IGhhdmUgYSBmaWxlIGJlZm9yZSBhdHRlbXB0aW5nIHRvIHJlYWQgaXQKICAgICAgICAgICAgaWYgKGlucHV0LmZpbGVzICYmIGlucHV0LmZpbGVzWzBdKSB7CiAgICAgICAgICAgICAgICBpZiAoaW5wdXQuZmlsZXNbMF0uc2l6ZSA+IDEwMjQgKiAxMDI0KSB7CiAgICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCdGaWxlIHRvbyBiaWcgKD4gMU1CKScpOwogICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gJycKICAgICAgICAgICAgICAgICAgICB0aGlzLmltZ0ZpbGUgPSAnJwogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuZmlsZVVwbG9hZC52YWx1ZSA9IG51bGw7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBGaWxlUmVhZGVyIHRvIHJlYWQgdGhpcyBpbWFnZSBhbmQgY29udmVydCB0byBiYXNlNjQgZm9ybWF0CiAgICAgICAgICAgICAgICAgICAgbGV0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgICAgICAgICAgICAgICAvLyBEZWZpbmUgYSBjYWxsYmFjayBmdW5jdGlvbiB0byBydW4sIHdoZW4gRmlsZVJlYWRlciBmaW5pc2hlcyBpdHMgam9iCiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZGVuZCA9IChlKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE5vdGU6IGFycm93IGZ1bmN0aW9uIHVzZWQgaGVyZSwgc28gdGhhdCAidGhpcy5pbWFnZURhdGEiIHJlZmVycyB0byB0aGUgaW1hZ2VEYXRhIG9mIFZ1ZSBjb21wb25lbnQKICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVhZCBpbWFnZSBhcyBiYXNlNjQgYW5kIHNldCB0byBpbWFnZURhdGEKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWdGaWxlID0gZS50YXJnZXQucmVzdWx0CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIC8vIFN0YXJ0IHRoZSByZWFkZXIgam9iIC0gcmVhZCBmaWxlIGFzIGEgZGF0YSB1cmwgKGJhc2U2NCBmb3JtYXQpCiAgICAgICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0JpbmFyeVN0cmluZyhpbnB1dC5maWxlc1swXSkKICAgICAgICAgICAgICAgICAgICB0aGlzLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZS50YXJnZXQuZmlsZXNbMF0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGFzeW5jIHVwbG9hZEltYWdlKCkgewogICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJyk7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaW1nRmlsZSkgewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLnNlcnZpY2UuaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlOiB0aGlzLmltZ0ZpbGUKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlSXRlbUhhbmRsZXIudXBsb2FkKGRhdGEpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3RhdHVzQ29kZSA9PT0gMjAxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5zZXJ2aWNlID0gcmVzcG9uc2UuZGF0YS5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnb25VcGRhdGUnLCByZXNwb25zZS5kYXRhLmRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc25vdGlmeS5zdWNjZXNzKCdTdWNjZXNzJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVycm9ycy5wdXNoKGUpCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kc25vdGlmeS5lcnJvcignUGxlYXNlIGJyb3dzZSB0byB1cGxvYWQgaW1hZ2UnKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sIDEwMCkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBidG5FbmFibGVkKCkgewogICAgICAgICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gIXRoaXMuc2VydmljZS5pZDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZQogICAgICAgICAgICB9CgogICAgICAgIH0sCiAgICAgICAgZGVmYXVsdFRodW1iKCkgewogICAgICAgICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXJ2aWNlLmlkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudXJsICsgdGhpcy5zZXJ2aWNlLmltYWdlcy5kZWZhdWx0LnRodW1iCiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB7fQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgIH0KCiAgICAgICAgfSwKICAgICAgICBnYWxsZXJ5VGh1bWIoKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNlcnZpY2UpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLnNlcnZpY2UuaWQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5zZXJ2aWNlLmltYWdlcy5nYWxsZXJ5CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB7fQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIHt9CiAgICAgICAgICAgIH0KCiAgICAgICAgfQogICAgfSwKICAgIHdhdGNoOiB7CiAgICAgICAgZGVmYXVsdFRodW1iKCkgewogICAgICAgICAgICBpZiAodGhpcy5zZXJ2aWNlKSB7CiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZXJ2aWNlLmlkKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWdQcmV2aWV3ID0gdGhpcy51cmwgKyB0aGlzLnNlcnZpY2UuaW1hZ2VzLmRlZmF1bHQuYmlnVGh1bWIKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5pbWdQcmV2aWV3ID0gJycKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuaW1nUHJldmlldyA9ICcnCiAgICAgICAgICAgIH0KCiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Images.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Images.vue","sourceRoot":"src/views/services_projects/items/services_items","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" sm=\"12\" class=\" pt-0\">\n            <v-row>\n                <v-col sm=\"7\" class=\"py-0\">\n                    <p class=\"font_18 mb-0 mt-3\">{{ service.name }}</p>\n                </v-col>\n                <v-col sm=\"5\" class=\"py-0\">\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        id=\"image\"\n                        :rules=\"fileSizeRules\"\n                        accept=\".png, .jpg, .jpeg\"\n                        ref=\"fileUpload\"\n                        @change=\"onFileChange\"/>\n                </v-col>\n            </v-row>\n            <v-divider/>\n            <v-row>\n                <v-col sm=\"5\" style=\"height: 400px; overflow: hidden; overflow-x: auto;\n                overflow-y: scroll; white-space: nowrap; \">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-3\">\n                            <v-img v-bind:src=\"`${defaultThumb}`\" style=\"width:70%;\" @click=\"defaultPreview\"/>\n                        </v-col>\n                    </v-row>\n                    <v-row v-for=\"img in galleryThumb\" v-bind:key=\"img.thumb\">\n                        <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-3\">\n                            <v-img v-bind:src=\"url + `${img.thumb}`\" style=\"width:70%;\" @click=\"preview(img)\"/>\n                        </v-col>\n                    </v-row>\n                </v-col>\n\n                <v-col sm=\"7\" cols=\"12\" class=\"pb-0\">\n                    <v-img :src=\"imgPreview\"/>\n                    <p class=\"mb-0 text-center font_16\">\n                        <v-icon size=\"13\" class=\"mr-2 primary--text\">fa fa-check</v-icon>\n                        {{ $t('default_image') }}\n                    </p>\n                    <p class=\"mt-4 text-center text-grey\">{{ $t('hint_you_can') }}</p>\n                </v-col>\n\n            </v-row>\n            <v-divider class=\"mb-3\"/>\n            <v-row>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                </v-col>\n                <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                    <v-btn color=\"primary\" :disabled=\"btnEnabled\" class=\"px-3  white--text text-capitalize\"\n                           @click=\"uploadImage\">\n                        {{ $t('upload') }}\n                    </v-btn>\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nconst serviceItemHandler = require(\"@/scripts/serviceItemHandler\")\nexport default {\n    props: ['service'],\n    data: () => ({\n        src: '',\n        url: 'https://s3-ap-southeast-1.amazonaws.com/images.banhji/',\n        imgPreview: '',\n        fileSizeRules: [\n            files => !files || !files.some(file => file.size > 1024 * 1024) || 'Image size should be less than 1 MB!'\n        ]\n    }),\n    methods: {\n        onUpdate() {\n            this.$emit('onUpdate', this.service ? this.service : {})\n        },\n        preview(img) {\n            if (this.service) {\n                if (this.service.id) {\n                    this.imgPreview = this.url + img.bigThumb\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        },\n        defaultPreview() {\n            if (this.service) {\n                if (this.service.id) {\n                    // window.console.log(this.product.images.default.bigThumb)\n                    this.imgPreview = this.url + this.service.images.default.bigThumb\n                } else {\n                    this.imgPreview = ''\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        },\n        onFileChange(e) {\n            let input = e.target\n            // Ensure that you have a file before attempting to read it\n            if (input.files && input.files[0]) {\n                if (input.files[0].size > 1024 * 1024) {\n                    e.preventDefault();\n                    alert('File too big (> 1MB)');\n                    this.src = ''\n                    this.imgFile = ''\n                    this.$refs.fileUpload.value = null;\n                } else {\n                    // create a new FileReader to read this image and convert to base64 format\n                    let reader = new FileReader()\n                    // Define a callback function to run, when FileReader finishes its job\n                    reader.onloadend = (e) => {\n                        // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n                        // Read image as base64 and set to imageData\n                        this.imgFile = e.target.result\n                    }\n                    // Start the reader job - read file as a data url (base64 format)\n                    reader.readAsBinaryString(input.files[0])\n                    this.src = URL.createObjectURL(e.target.files[0])\n                }\n            }\n        },\n        async uploadImage() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    if (this.imgFile) {\n                        let data = {\n                            id: this.service.id,\n                            file: this.imgFile\n                        }\n                        serviceItemHandler.upload(data).then(response => {\n                            if (response.data.statusCode === 201) {\n                                // this.service = response.data.data\n                                this.$emit('onUpdate', response.data.data)\n                                this.$snotify.success('Success')\n                            }\n                        }).catch(e => {\n                            this.errors.push(e)\n                        })\n                    } else {\n                        this.$snotify.error('Please browse to upload image')\n                    }\n                }, 100)\n            })\n        }\n    },\n    computed: {\n        btnEnabled() {\n            if (this.service) {\n                return !this.service.id;\n            } else {\n                return false\n            }\n\n        },\n        defaultThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    return this.url + this.service.images.default.thumb\n                } else {\n                    return {}\n                }\n            } else {\n                return {}\n            }\n\n        },\n        galleryThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    return this.service.images.gallery\n                } else {\n                    return {}\n                }\n            } else {\n                return {}\n            }\n\n        }\n    },\n    watch: {\n        defaultThumb() {\n            if (this.service) {\n                if (this.service.id) {\n                    this.imgPreview = this.url + this.service.images.default.bigThumb\n                } else {\n                    this.imgPreview = ''\n                }\n            } else {\n                this.imgPreview = ''\n            }\n\n        }\n    }\n}\n</script>"]}]}