{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/SaleDeposit.vue?vue&type=style&index=0&id=008f6d53&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/SaleDeposit.vue","mtime":1642155812653},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZQo+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKPiB0YWJsZQo+IHRib2R5Cj4gdHI6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKLmhpZGVfc21hbGxfYmFyX2NsYXNzIHsKICAgIG1heC13aWR0aDogMDsKICAgIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbjsKICAgIGZsZXg6IDAgMCAwOwp9CgouaGlkZV9iaWdfYmFyX2NsYXNzIHsKICAgIG1heC13aWR0aDogMTAwJTsKICAgIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbjsKICAgIGZsZXg6IDAgMCAxMDAlOwp9Cgouc21hbGxfc2lkZWJhciB7CiAgICBoZWlnaHQ6IDk2JTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHBhZGRpbmc6IDEycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMWY1Owp9CgouaWNvbkFycm93IHsKICAgIHJpZ2h0OiAtMzVweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGJvdHRvbTogLTEwcHg7Cn0KCi5pY29uQXJyb3dIaWRlIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAtN3B4OwogICAgYm90dG9tOiAtMTBweDsKfQoKLmRldGlhbF9zbWFsbHNpZGVfcCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBib3R0b206IDEycHg7Cn0KCi52LWRhdGEtdGFibGVfX3dyYXBwZXIgdGQgewogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM4MDgwODA7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgIzgwODA4MDsKfQoKZWxlbWVudC5zdHlsZSB7Cn0KCi52LWxpc3QtaXRlbSAudi1saXN0LWl0ZW1fX3RpdGxlLAoudi1saXN0LWl0ZW0gLnYtbGlzdC1pdGVtX19zdWJ0aXRsZSB7CiAgICBsaW5lLWhlaWdodDogMS4yOwp9Cg=="},{"version":3,"sources":["SaleDeposit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAy5CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"SaleDeposit.vue","sourceRoot":"src/views/customers","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-row>\n                            <v-col\n                                class=\"bigSide pr-2 py-0\"\n                                sm=\"8\"\n                                cols=\"12\"\n                                style=\"transition: .3s ease-in;\"\n                                :class=\"{ hide_big_bar_class: isHideBar }\">\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <v-card outlined dense class=\"no_border\">\n                                        <h2 class=\"mb-0\">{{ $t(\"sale_deposit\") }}</h2>\n                                        <v-icon\n                                            v-if=\"isHideBar\"\n                                            @click=\"cancel()\"\n                                            style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                            class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                        <span\n                                            style=\"transition: .3s ease-in; z-index:10;\"\n                                            :class=\"{iconArrow: !isHideBar, iconArrowHide: isHideBar}\">\n                                        <v-icon\n                                            size=\"22\"\n                                            class=\"arr_icon\"\n                                            @click=\"hideSmallSiteBar\"\n                                            v-if=\"isHideBar\">mdi-chevron-left-circle\n                                        </v-icon>\n                                        <v-icon\n                                            size=\"22\"\n                                            class=\"arr_icon\"\n                                            @click=\"hideSmallSiteBar\"\n                                            v-if=\"!isHideBar\">mdi-chevron-right-circle\n                                        </v-icon>\n                                    </span>\n                                    </v-card>\n                                    <v-card\n                                        outlined\n                                        dense\n                                        class=\"px-3 rounded-4 no_border mb-3\"\n                                        color=\"grayBg\">\n                                        <v-row>\n                                            <v-col sm=\"5\" cols=\"12\" class=\"pb-0 px-4 pt-4 \">\n                                                <label class=\"label  mb-0\">{{ $t(\"customer\") }}</label>\n                                                <div class=\"kendo_dropdown_custom mt-1 pb-3\">\n                                                    <dropdownlist\n                                                        :disabled=\"disableMe\"\n                                                        :data-items=\"customerList\"\n                                                        @change=\"onChange\"\n                                                        :value=\"customer\"\n                                                        :data-item-key=\"dataItemKey\"\n                                                        :text-field=\"textField\"\n                                                        :default-item=\"defaultItem\"\n                                                        :filterable=\"true\"\n                                                        @filterchange=\"onFilterChange\"\n                                                        :required=\"true\">\n                                                    </dropdownlist>\n                                                </div>\n                                                <label class=\"label  mb-0\">{{ $t(\"date\") }}</label>\n                                                <app-datepicker\n                                                    :initialDate=\"transactionDate\"\n                                                    :disabled=\"disabled\"\n                                                    @emitDate=\"transactionDate = $event\"/>\n                                                <label class=\"label mb-0\">{{ $t(\"number\") }}</label>\n                                                <v-row class=\"mt-1 mr-0\">\n                                                    <v-col sm=\"3\" cols=\"3\" class=\"py-0 pr-0\">\n                                                        <div class=\"code_text text-bold\">\n                                                            {{ saleDeposit.transactionType.abbr }}\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"7\" cols=\"7\" class=\"py-0 pl-0\">\n                                                        <v-text-field\n                                                            class=\" custom-border \"\n                                                            v-model=\"saleDeposit.number\"\n                                                            outlined\n                                                            readonly\n                                                            tage=\"Number\"\n                                                            :rules=\"[(v) => !!v || 'Number is required']\"\n                                                            required/>\n                                                    </v-col>\n                                                    <v-col sm=\"2\" cols=\"2\" class=\"py-0 px-0\">\n                                                        <v-icon\n                                                            color=\"black\"\n                                                            size=\"30\"\n                                                            class=\"border_qrcode\"\n                                                            @click=\"generateNumber\">mdi-qrcode\n                                                        </v-icon>\n                                                    </v-col>\n                                                </v-row>\n                                                <label class=\"label mb-0\">{{ $t(\"transaction_currency\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    v-model=\"saleDeposit.currency\"\n                                                    :items=\"currencyList\"\n                                                    @change=\"loadTransactionRate\"\n                                                    item-value=\"id\"\n                                                    :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                    return-object\n                                                    tage=\"Transaction Currency\"\n                                                    placeholder=\"Currency\"\n                                                    outlined/>\n                                            </v-col>\n                                            <v-col sm=\"7\" cosl=\"12\" class=\"px-4 pt-4 pb-0\">\n                                                <v-row>\n                                                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                        <v-row>\n                                                            <v-col sm=\"6\" cols=\"12\" class=\"pt-0 pb-2\">\n                                                                <p class=\"mb-1 pt-0 d-block\">\n                                                                    {{ $t(\"current_deposit_balance\") }}\n                                                                </p>\n                                                                <h3 class=\"color_green float-right\">\n                                                                    {{ amountFormat(depositBalance) }}{{ currencyCode }}\n                                                                </h3>\n                                                            </v-col>\n                                                        </v-row>\n                                                    </v-col>\n                                                    <v-col sm=\"12\" cols=\"12\" class=\"pl-0 \">\n                                                        <v-card\n                                                            outlined\n                                                            dense\n                                                            class=\"no_border px-3\"\n                                                            color=\"white\">\n                                                            <v-row>\n                                                                <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                                                    <label\n                                                                        class=\"label mb-0\">{{\n                                                                            $t(\"deposit_to_account\")\n                                                                        }}</label>\n                                                                    <v-select\n                                                                        class=\"mt-1\"\n                                                                        v-model=\"saleDeposit.saleDepositAcc\"\n                                                                        :items=\"accCustomerDeposit\"\n                                                                        item-value=\"id\"\n                                                                        readonly\n                                                                        :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                                        return-object\n                                                                        placeholder=\"Deposit Account\"\n                                                                        tage=\"Deposit Account\"\n                                                                        outlined/>\n                                                                    <label\n                                                                        class=\"label mb-0\">{{\n                                                                            $t(\"sale_order\")\n                                                                        }}</label>\n                                                                    <v-select\n                                                                        class=\"mt-1\"\n                                                                        v-model=\"saleDeposit.saleOrder\"\n                                                                        :items=\"saleOrders\"\n                                                                        @change=\"onSOChanged\"\n                                                                        item-value=\"id\"\n                                                                        item-text=\"number\"\n                                                                        return-object\n                                                                        tage=\"Sale Order\"\n                                                                        placeholder=\"Sale Order\"\n                                                                        outlined/>\n                                                                </v-col>\n                                                                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                                    <v-row>\n                                                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                                                            <label\n                                                                                class=\"label mb-0\">{{\n                                                                                    $t(\"amount\")\n                                                                                }}</label>\n                                                                            <p class=\"mt-3\">\n                                                                                {{\n                                                                                    numberFormat(saleDeposit.saleOrder, \"amount\")\n                                                                                }}</p>\n                                                                        </v-col>\n                                                                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                                                            <label\n                                                                                class=\"label mb-0\">{{\n                                                                                    $t(\"currency\")\n                                                                                }}</label>\n                                                                            <p class=\"mt-3\">\n                                                                                {{\n                                                                                    numberFormat(saleDeposit.saleOrder, \"currency\")\n                                                                                }}</p>\n                                                                        </v-col>\n                                                                    </v-row>\n                                                                </v-col>\n                                                            </v-row>\n                                                        </v-card>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n                                    <v-card outlined dense class=\"no_border\" color=\"white\">\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0 pt-1\">\n                                                <kendo-datasource\n                                                    ref=\"saleDepositDS\"\n                                                    :change=\"dataSourceChanged\"\n                                                    :data=\"depositLine\"/>\n                                                <kendo-grid\n                                                    id=\"gridSaleDeposit\"\n                                                    class=\"grid-function\"\n                                                    :data-source-ref=\"'saleDepositDS'\"\n                                                    :sortable=\"false\"\n                                                    :filterable=\"false\"\n                                                    :column-menu=\"true\"\n                                                    :editable=\"true\"\n                                                    :scrollable-virtual=\"true\">\n                                                    <kendo-grid-column\n                                                        :command=\"{iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus'}\"\n                                                        :title=\"''\"\n                                                        :width=\"63\"\n                                                        :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"/>\n                                                    <kendo-grid-column\n                                                        :title=\"$t('no.')\"\n                                                        :width=\"54\"\n                                                        :template=\"rowNumberTmpl\"\n                                                        :column-menu=\"false\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5;', class: 'text-products'}\"\n                                                        :attributes=\"{style: 'text-align: products'}\"/>\n                                                    <kendo-grid-column\n                                                        :field=\"'paymentOption'\"\n                                                        :title=\"$t('payment_option')\"\n                                                        :width=\"250\"\n                                                        :template=\"methodTemplate\"\n                                                        :editor=\"PaymentOptionEditor\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                                    <kendo-grid-column\n                                                        :field=\"'account'\"\n                                                        :title=\"$t('account')\"\n                                                        :width=\"200\"\n                                                        :editable=\"() => {return false}\"\n                                                        :template=\"accountTemplate\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                                    <kendo-grid-column\n                                                        :field=\"'description'\"\n                                                        :title=\"$t('description')\"\n                                                        :width=\"200\"\n                                                        :template=\"'<span>#=description#</span>'\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                                    <kendo-grid-column\n                                                        :field=\"'amount'\"\n                                                        :title=\"$t('amount')\"\n                                                        :width=\"200\"\n                                                        :template=\"amountTemplate\"\n                                                        :editor=\"amountEditor\"\n                                                        :headerAttributes=\"{style:'text-align: right; background-color: #EDF1F5'}\"\n                                                        :attributes=\"{style: 'text-align: right'}\"/>\n                                                    <kendo-grid-column\n                                                        :field=\"'refNo'\"\n                                                        :title=\"$t('payment_ref')\"\n                                                        :width=\"200\"\n                                                        :headerAttributes=\"{style: 'text-align: right; background-color: #EDF1F5'}\"\n                                                        :attributes=\"{style: 'text-align: right'}\"/>\n                                                </kendo-grid>\n                                            </v-col>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"pt-1 \">\n                                                <v-btn\n                                                    class=\"btn_plus white--text mr-2\"\n                                                    color=\"primary\"\n                                                    @click=\"addRow\">\n                                                    <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                </v-btn>\n                                            </v-col>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                <v-row>\n                                                    <v-col class=\"pt-0\" sm=\"7\" cols=\"12\">\n                                                        <v-card\n                                                            class=\"no-boxshadow rounded-4 pa-3\"\n                                                            color=\"grayBg\"\n                                                            height=\"138px\">\n                                                            <v-row>\n                                                                <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                                    <label>{{ $t(\"message_on_deposit\") }}</label>\n                                                                    <v-textarea\n                                                                        class=\"mt-1\"\n                                                                        no-resize\n                                                                        height=\"90px\"\n                                                                        v-model=\"saleDeposit.transactionNote\"\n                                                                        outlined\n                                                                        clearable\n                                                                        rows=\"3\"\n                                                                        placeholder=\"This will appear on the deposit\"/>\n                                                                </v-col>\n                                                                <v-col class=\"py-0\" sm=\"6\" cols=\"12\">\n                                                                    <label>{{ $t(\"message_for_journal\") }}</label>\n                                                                    <v-textarea\n                                                                        class=\"mt-1\"\n                                                                        no-resize\n                                                                        height=\"90px\"\n                                                                        outlined\n                                                                        v-model=\"saleDeposit.journalNote\"\n                                                                        clearable\n                                                                        rows=\"3\"\n                                                                        placeholder=\"This will appear on the journal\"/>\n                                                                </v-col>\n                                                            </v-row>\n                                                        </v-card>\n                                                    </v-col>\n                                                    <v-col sm=\"5\" cols=\"12\" class=\"pt-1 pb-0\">\n                                                        <v-simple-table>\n                                                            <template v-slot:default>\n                                                                <tbody>\n                                                                <tr>\n                                                                    <td class=\"text-left text-uppercase\">{{\n                                                                            $t(\"total\")\n                                                                        }}\n                                                                    </td>\n                                                                    <td class=\"text-center\">:</td>\n                                                                    <td class=\"text-left color_green text-bold\">\n                                                                        {{ amountFormat(saleDeposit.amount) }}\n                                                                    </td>\n                                                                </tr>\n                                                                </tbody>\n                                                            </template>\n                                                        </v-simple-table>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n                                    <v-divider/>\n                                    <v-card outlined dense class=\"no_border function_footer\">\n                                        <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                                            <span v-html=\"errorMessage\"/>\n                                        </v-alert>\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn\n                                                    class=\" text-capitalize  black--text float-left mr-2\"\n                                                    v-on=\"on\">{{ $t(\"select_template\") }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list>\n                                                <v-list-item>\n                                                    <v-list-item-title>\n                                                        Sale Deposit\n                                                    </v-list-item-title>\n                                                </v-list-item>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn\n                                            color=\"primary\"\n                                            outlined\n                                            class=\"text-capitalize  black--text float-left mr-2\"\n                                            @click=\"cancel\">{{ $t(\"cancel\") }}\n                                        </v-btn>\n                                        <v-btn\n                                            color=\"primary\"\n                                            @click=\"onSaveClose('close')\"\n                                            class=\"float-right white--text text-capitalize \">{{ $t(\"save_close\") }}\n                                        </v-btn>\n                                        <v-btn color=\"secondary\"\n                                               style=\"margin-right: 10px !important\"\n                                               class=\"white--text float-right text-capitalize\"\n                                               @click=\"onSaveClose('new')\" :hidden=\"hiddenButton\">{{ $t(\"save_new\") }}\n                                        </v-btn>\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n                            <v-col\n                                class=\"smallSide pl-2\"\n                                sm=\"4\"\n                                style=\"transition: .3s ease-in;\"\n                                :class=\"{ hide_small_bar_class: isHideBar }\">\n                                <h3 style=\"color: #b3b5bc; font-size:20px;\"\n                                    v-if=\"!isHideBar\"\n                                    class=\"text-uppercase float-right mt-n3\">\n                                    <span class=\"pointer\" @click=\"Help('sale deposit')\">{{ $t(\"help\") }}</span>\n                                    <v-icon\n                                        @click=\"cancel()\"\n                                        style=\"cursor: pointer; font-size: 40px;\"\n                                        color=\"grey\"\n                                        class=\"float-right mt-n1\">close\n                                    </v-icon>\n                                </h3>\n                                <div v-if=\"!isHideBar\" class=\"small_sidebar mt-8 px-4 grayBg\">\n                                    <v-card\n                                        class=\"pa-3 no-boxshadow rounded-4 d-flex justify-space-between align-center\"\n                                        min-height=\"60px\"\n                                        color=\"primary\">\n                                        <h3 style=\"font-size: 18px\"\n                                            class=\"text-white text-uppercase\">{{ $t(\"amount_deposit\") }}\n                                        </h3>\n                                        <h3\n                                            class=\"text-bold float-right text-white\"\n                                            style=\"font-size: 22px\">{{ amountFormat(saleDeposit.amount) }}\n                                        </h3>\n                                    </v-card>\n                                    <v-row>\n                                        <v-col sm=\"12\" cols=\"12\">\n                                            <v-row>\n                                                <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                                                    <v-row>\n                                                        <v-col sm=\"12\" cols=\"12\" class=\"py-1\">\n                                                            <label class=\"label\">{{ $t(\"segment\") }}</label>\n                                                            <v-select\n                                                                class=\"mt-1\"\n                                                                v-model=\"saleDeposit.segment\"\n                                                                :items=\"segments\"\n                                                                item-value=\"id\"\n                                                                :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                                return-object\n                                                                :rules=\"[(v) => !!v || 'Segment is required']\"\n                                                                outlined=\"\"/>\n                                                            <label class=\"label\">{{ $t(\"location\") }}</label>\n                                                            <v-select\n                                                                class=\"mt-1\"\n                                                                v-model=\"saleDeposit.location\"\n                                                                :items=\"locations\"\n                                                                item-value=\"id\"\n                                                                :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                                return-object\n                                                                outlined=\"\"/>\n                                                        </v-col>\n                                                    </v-row>\n                                                    <!--                                                    <label class=\"label font_14\">{{ $t('project') }}</label>-->\n                                                    <!--                                                    <label-->\n                                                    <!--                                                        class=\"label text-bold text-uppercase font_14\">{{-->\n                                                    <!--                                                            $t('tnc_to_be_added')-->\n                                                    <!--                                                        }}</label>-->\n                                                    <!--                                                    <v-select class=\" mt-1\"-->\n                                                    <!--                                                              :items=\"transaction\"-->\n                                                    <!--                                                              tage=\"Transactions to be added\"-->\n                                                    <!--                                                              :rules=\"[v => !!v || 'Payble Account is required']\"-->\n                                                    <!--                                                              return-object-->\n                                                    <!--                                                              outlined-->\n                                                    <!--                                                    >-->\n                                                    <!--                                                        <template v-slot:item=\"{ item }\">-->\n                                                    <!--                                                            <p class=\"d-block text-center\">{{ item.id }}.-->\n                                                    <!--                                                                {{ item.name }}</p>-->\n                                                    <!--                                                            <br>-->\n                                                    <!--                                                            <div class=\"item_list d-flex\">-->\n                                                    <!--                                                                <span>-->\n                                                    <!--                                                                    {{ item.no }}-->\n                                                    <!--                                                                </span>-->\n                                                    <!--                                                                <v-btn>{{ $t('add') }}</v-btn>-->\n                                                    <!--                                                            </div>-->\n                                                    <!--                                                        </template>-->\n                                                    <!--                                                    </v-select>-->\n\n                                                    <!--                                                    <v-row>-->\n                                                    <!--                                                        <label class=\"text-bold ml-9 mt-2\" style=\"font-size: 12px;\">1.-->\n                                                    <!--                                                            {{ $t('sale_quote') }}</label>-->\n                                                    <!--                                                        <v-col sm=\"9\" cols=\"9\" class=\"py-0 pr-0\">-->\n                                                    <!--                                                            <v-card outlined-->\n                                                    <!--                                                                    class=\"px-3 py-1 text-white no-boxshadow no_border justify-left d-flex\"-->\n                                                    <!--                                                                    style=\"background-color: #92d050; height: 30px\">-->\n                                                    <!--                                                                <input type=\"checkbox\" class=\"checkbox_inv float-left\"/>-->\n                                                    <!--                                                                <p class=\"mb-0\" style=\"width: 100%\">-->\n                                                    <!--                                                                    <span class=\"pl-3 float-left\">No. 00224</span>-->\n                                                    <!--                                                                    <span class=\"float-right\">2,500.00</span>-->\n                                                    <!--                                                                </p>-->\n                                                    <!--                                                            </v-card>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                        <v-col sm=\"3\" cols=\"3\" class=\"py-0  pl-1\">-->\n                                                    <!--                                                            <v-btn-->\n                                                    <!--                                                                class=\"text-white text-bold rounded-0 float-right text-uppercase\"-->\n                                                    <!--                                                                style=\"height: 30px !important; background-color: rgb(0, 176, 80) !important\">-->\n                                                    <!--                                                                {{ $t('add') }}-->\n                                                    <!--                                                            </v-btn>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                    </v-row>-->\n                                                    <!--                                                    <v-row>-->\n                                                    <!--                                                        <label class=\"text-bold ml-9\" style=\"font-size: 12px;\">2.-->\n                                                    <!--                                                            {{ $t('sale_quote') }}</label>-->\n                                                    <!--                                                        <v-col sm=\"9\" cols=\"9\" class=\"py-0 pr-0\">-->\n                                                    <!--                                                            <v-card outlined-->\n                                                    <!--                                                                    class=\"px-3 py-1 text-white no-boxshadow no_border justify-left d-flex\"-->\n                                                    <!--                                                                    style=\"background-color: #92d050; height: 30px\">-->\n                                                    <!--                                                                <input type=\"checkbox\" class=\"checkbox_inv float-left\"/>-->\n                                                    <!--                                                                <p class=\"mb-0\" style=\"width: 100%\">-->\n                                                    <!--                                                                    <span class=\"pl-3 float-left\">No. 00224</span>-->\n                                                    <!--                                                                    <span class=\"float-right\">2,500.00</span>-->\n                                                    <!--                                                                </p>-->\n                                                    <!--                                                            </v-card>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                        <v-col sm=\"3\" cols=\"3\" class=\"py-0  pl-1\">-->\n                                                    <!--                                                            <v-btn-->\n                                                    <!--                                                                class=\"text-white text-bold rounded-0 float-right text-uppercase\"-->\n                                                    <!--                                                                style=\"height: 30px !important; background-color: rgb(0, 176, 80) !important\">-->\n                                                    <!--                                                                {{ $t('add') }}-->\n                                                    <!--                                                            </v-btn>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                    </v-row>-->\n                                                    <!--                                                    <v-row>-->\n                                                    <!--                                                        <label class=\"text-bold ml-9 mt-2\" style=\"font-size: 12px;\">4.-->\n                                                    <!--                                                            {{ $t('sale_quote') }}</label>-->\n                                                    <!--                                                        <v-col sm=\"9\" cols=\"9\" class=\"py-0 pr-0\">-->\n                                                    <!--                                                            <v-card outlined-->\n                                                    <!--                                                                    class=\"px-3 py-1 text-white no-boxshadow no_border justify-left d-flex\"-->\n                                                    <!--                                                                    style=\"background-color: #92d050; height: 30px\">-->\n                                                    <!--                                                                <input type=\"checkbox\" class=\"checkbox_inv float-left\"/>-->\n                                                    <!--                                                                <p class=\"mb-0\" style=\"width: 100%\">-->\n                                                    <!--                                                                    <span class=\"pl-3 float-left\">No. 00224</span>-->\n                                                    <!--                                                                    <span class=\"float-right\">2,500.00</span>-->\n                                                    <!--                                                                </p>-->\n                                                    <!--                                                            </v-card>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                        <v-col sm=\"3\" cols=\"3\" class=\"py-0  pl-1\">-->\n                                                    <!--                                                            <v-btn-->\n                                                    <!--                                                                class=\"text-white text-bold rounded-0 float-right text-uppercase\"-->\n                                                    <!--                                                                style=\"height: 30px !important; background-color: rgb(0, 176, 80) !important\">-->\n                                                    <!--                                                                {{ $t('add') }}-->\n                                                    <!--                                                            </v-btn>-->\n                                                    <!--                                                        </v-col>-->\n                                                    <!--                                                    </v-row>-->\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n                                    <p class=\"mb-0 detial_smallside_p pr-4 font_14\">{{ $t(\"sale_deposit_desc\") }}</p>\n                                </div>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\nimport SaleDepositModel from \"@/scripts/sale_deposit/model/SaleDeposit\";\nimport {DropDownList} from \"@progress/kendo-vue-dropdowns\";\nimport {uuid} from \"vue-uuid\";\nimport ItemLineModel from \"@/scripts/sale_deposit/model/ItemLine\";\nimport {dataStore, ShowResource} from \"@/observable/store\";\nimport SaleFormContentModel from \"@/scripts/model/SaleFormContent\";\nimport PaymentOptionEditor from \"@/scripts/kendo_editor/PaymentOptionEditor\";\nimport Helper from \"@/helper\";\n\nconst saleOrderHandler = require(\"@/scripts/transactionHandler\");\nconst customerHandler = require(\"@/scripts/customerHandler\");\nconst saleFormContentHandler = require(\"@/scripts/saleFormContentHandler\");\n\nconst locationHandler = require(\"@/scripts/locationHandler\");\nconst settingsHandler = require(\"@/scripts/settingsHandler\");\nconst saleDepositModel = new SaleDepositModel({});\nconst prefixHandler = require(\"@/scripts/prefixHandler\");\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst accountHandler = require(\"@/scripts/handler/accounting/account\");\nconst itemLineModel = new ItemLineModel({});\nconst $ = require(\"jquery\");\nconst paymentOptionHandler = require(\"@/scripts/paymentOptionHandler\");\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\");\nconst saleFormContentModel = new SaleFormContentModel({});\n\nconst defaultItem = {[\"numberName\"]: \"Select customer...\", [\"id\"]: null};\nconst emptyItem = {[\"numberName\"]: \"loading ...\"};\nconst itemLinePrefix = \"lin-\";\nconst OPTION_TYPE = \"Customer\";\nconst strFilter = \"?optionType=\" + OPTION_TYPE;\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default {\n    name: \"SaleDeposit\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        \"app-datepicker\": DatePickerComponent,\n        dropdownlist: DropDownList,\n    },\n    data: () => ({\n        isEdit: false,\n        showLoading: false,\n        alert: false,\n        files: [],\n        segments: [],\n        locations: [],\n        saleDeposit: saleDepositModel,\n        itemLine: itemLineModel,\n        customerList: [],\n        customer: {},\n        textField: \"numberName\",\n        defaultItem: defaultItem,\n        dataItemKey: \"id\",\n        filter: \"\",\n        cusBaseUrl: customerHandler.searchv1(),\n        saleFormContent: saleFormContentModel,\n        transactionTypes: [],\n        accCustomerDeposit: [],\n        paymentMethod: [],\n        saleOrders: [],\n        saleOrderAmount: 0,\n        saleOrderCurrency: \"\",\n        currencyCode: \"\",\n        accCash: [],\n        depositLine: [],\n        currencyList: [],\n        decimalFormat: \"n2\",\n        depositBalance: 0,\n        valid: true,\n        disableMe: false,\n        loggedUser: {\n            id: cookie.creator,\n            name: cookie.email,\n        },\n        transactionDate: new Date().toISOString().substr(0, 10),\n        templates: [\n            {title: \"Draft\"},\n            {title: \"Open\"},\n            {title: \"Partially Closed\"},\n            {title: \"Closed\"},\n        ],\n        isHideBar: false,\n        PaymentOptionEditor: PaymentOptionEditor,\n        // refFrom: []\n    }),\n    methods: {\n        onSOChanged() {\n            if (this.saleDeposit) {\n                this.saleDeposit.refFrom = []\n                if (this.saleDeposit.saleOrder) {\n                    const saleOrder = this.saleDeposit.saleOrder || {};\n                    const segment = saleOrder.segment || {};\n                    const location = saleOrder.location || {};\n                    this.saleDeposit.segment = segment;\n                    this.saleDeposit.location = location;\n                    this.saleDeposit.refFrom.push({\n                        id: saleOrder.id || '',\n                        reference: saleOrder.number || '',\n                        type: 'Sale Order'\n                    })\n                    // window.console.log(this.saleDeposit.refFrom,'refFrom')\n                }\n            }\n        },\n        Help(key_search) {\n            ShowResource(key_search);\n        },\n        saveNew() {\n        },\n        removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridSaleDeposit\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        numberFormat(obj, type) {\n            if (obj) {\n                // this.saleDeposit.location = obj.hasOwnProperty(\"location\")\n                //     ? obj.location\n                //     : {};\n                // this.saleDeposit.segment = obj.hasOwnProperty(\"segment\")\n                //     ? obj.segment\n                //     : {};\n                if (type === \"amount\") {\n                    const value = obj.hasOwnProperty(\"amount\") ? obj.amount : 0;\n                    const decimalFormat = obj.hasOwnProperty(\"decimalFormat\")\n                        ? obj.decimalFormat\n                        : `n2`;\n                    return kendo.toString(parseFloat(value), decimalFormat);\n                } else if (type === \"currency\") {\n                    const currency = obj.hasOwnProperty(\"currency\") ? obj.currency : \"\";\n                    return currency.code;\n                }\n            }\n            return \"-\";\n        },\n        amountFormat(value) {\n            return kendo.toString(parseFloat(value), `${this.decimalFormat}`);\n        },\n        generateNumber() {\n            if (this.$route.params.id) {\n                const tranDate = new Date(this.transactionDate);\n                const tranDateInvoice = new Date(this.saleDeposit.transactionDate);\n                const tranDateM = tranDate.getFullYear() + tranDate.getMonth();\n                const tranDateInvoiceM =\n                    tranDateInvoice.getFullYear() + tranDateInvoice.getMonth();\n                if (tranDateM === tranDateInvoiceM) {\n                    this.saleDeposit.referenceNo = this.referenceNo;\n                    return;\n                }\n            }\n\n            if (this.transactionDate !== \"\" && this.transactionTypes.length > 0) {\n                let data = {\n                    abbr: this.saleDeposit.transactionType.abbr,\n                    structure: this.saleDeposit.transactionType.structure,\n                    transactionDate: this.transactionDate,\n                    prefixSeparator: this.saleDeposit.transactionType.prefixSeparator || '',\n                    numberSeparator: this.saleDeposit.transactionType.numberSeparator || '',\n                    format: this.saleDeposit.transactionType.format || 5,\n                    sequcencing: this.saleDeposit.transactionType.sequcencing,\n                    type: \"Sale Deposit\",\n                    entity: 1,\n                };\n                billingHandler\n                    .lastNumber(data)\n                    .then((response) => {\n                        if (response.data.statusCode === 200) {\n                            const res = response.data.data;\n                            const lastNumber = this.zeroPad(\n                                parseInt(res.lastNumber),\n                                this.saleDeposit.transactionType.format\n                            );\n                            this.saleDeposit.number =\n                                res.suffix +\n                                this.saleDeposit.transactionType.numberSeparator +\n                                lastNumber;\n                        }\n                    })\n                    .catch((e) => {\n                        this.errors.push(e);\n                    });\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        suffix(transactionDate) {\n            return kendo.toString(new Date(transactionDate), `yymm`);\n        },\n        errorMessage() {\n        },\n        accountDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=number# - #= name#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.accCash,\n                    }),\n                });\n        },\n        methodDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=code# - #= name#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.paymentMethod,\n                    }),\n                });\n        },\n        accountTemplate(dataItem) {\n            const acc = dataItem.account;\n            if (acc) {\n                return `<span>${acc.name ? acc.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        methodTemplate(dataItem) {\n            const method = dataItem.paymentOption || {};\n            if (method) {\n                return `<span>${method.bankAccountName || ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        amountTemplate(dataItem) {\n            const amt = dataItem.amount;\n            if (amt) {\n                return kendo.toString(\n                    parseFloat(amt),\n                    `n${this.saleFormContent.decimal}`\n                );\n            } else {\n                return kendo.toString(\n                    parseFloat(0),\n                    `n${this.saleFormContent.decimal}`\n                );\n            }\n        },\n        amountEditor(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    min: 0,\n                    decimals: 30,\n                    format: `n${this.saleFormContent.decimal}`,\n                });\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((result) => {\n                if (result.value) {\n                    this.clear();\n                    this.$router.go(-1);\n                }\n            });\n        },\n        clear() {\n            this.showLoading = false;\n            this.customer = {};\n            const segment = this.saleDeposit.segment;\n            const location = this.saleDeposit.location;\n            const txnType = this.saleDeposit.transactionType;\n            const txnCurrency = this.saleDeposit.currency;\n            this.saleDeposit = new SaleDepositModel({});\n            this.saleDeposit.transactionType = txnType;\n            this.saleDeposit.segment = segment;\n            this.saleDeposit.location = location;\n            this.saleDeposit.currency = txnCurrency;\n            let ds = this.$refs.saleDepositDS.kendoWidget();\n            ds.data([]);\n            this.saleOrders = [];\n            this.addRow();\n            this.generateNumber();\n        },\n        close() {\n            this.showLoading = false;\n            window.history.go(-1);\n        },\n        hideSmallSiteBar() {\n            this.isHideBar = !this.isHideBar;\n        },\n        onFilterChange(event) {\n            const filter = event.filter.value;\n            this.requestData(0, filter, this.cusBaseUrl);\n            this.filter = filter;\n        },\n        requestData(skip, filter, baseUrl) {\n            const url = baseUrl + `?filter=${filter}`;\n            fetch(url)\n                .then((response) => {\n                    return response.json();\n                })\n                .then(this.afterFetch);\n        },\n        afterFetch(json) {\n            this.customerList = json.data;\n        },\n        onChange(event) {\n            const value = event.value;\n            if (value && value[\"numberName\"] === emptyItem[\"numberName\"]) {\n                return;\n            }\n            this.customer = value;\n            this.saleDeposit.saleDepositAcc = value.saleDepositAcc;\n            this.decimalFormat = this.customer.decimalFormat;\n            this.loadSaleOrders();\n            this.loadCustomerBalance(value.id);\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                this.decimalFormat = \"n\" + this.saleFormContent.decimal;\n                                this.initData();\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadLocation() {\n            this.locations = []\n            const roleType = dataStore.roleType || 0\n            if (roleType === 0) {\n                if (dataStore.roleData) {\n                    const roleData = dataStore.roleData || []\n                    const location = roleData.filter(itm => itm.type === 'location')\n                    const locationDefault = location.filter(m => m.isDefault === 1)\n                    this.locations = location\n                    if (this.$route.params.id === undefined || this.$route.params.id === '') {\n                        if (locationDefault.length > 0) {\n                            this.saleDeposit.location = locationDefault[0];\n                        }\n                    }\n                }\n            } else if (roleType === 1) {\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        this.locations = [];\n                        locationHandler\n                            .list()\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.locations = res.data.data;\n                                    if (this.locations.length > 0) {\n                                        this.saleDeposit.location = this.locations[0];\n                                    }\n                                }\n                            })\n                    }, 10);\n                });\n            }\n\n        },\n        async loadSegment() {\n            const roleType = dataStore.roleType || 0\n            if (roleType === 0) {\n                if (dataStore.roleData) {\n                    const roleData = dataStore.roleData || []\n                    const segment = roleData.filter(itm => itm.type === 'segment')\n                    const segmentDefault = segment.filter(m => m.isDefault === 1)\n                    this.segments = segment\n                    if (this.$route.params.id === undefined || this.$route.params.id === '') {\n                        if (segmentDefault.length > 0) {\n                            this.saleDeposit.segment = segmentDefault[0];\n                        }\n                    }\n                }\n            } else if (roleType === 1) {\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        this.segments = [];\n                        settingsHandler\n                            .getSeg()\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.segments = res.data.data;\n                                    if (this.segments.length > 0) {\n                                        this.saleDeposit.segment = this.segments[0];\n                                    }\n                                }\n                            })\n                    }, 10);\n                });\n            }\n        },\n        async loadPrefix() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"sale deposit\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionTypes = res.data.data;\n                            if (this.transactionTypes.length > 0) {\n                                this.saleDeposit.transactionType = this.transactionTypes[0];\n                                if (this.$route.params.id === undefined) {\n                                    this.generateNumber();\n                                }\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadAccount() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    accountHandler.getAll().then((res) => {\n                        this.showLoading = false;\n                        this.accCustomerDeposit = res.data\n                            .filter(\n                                (m) =>\n                                    m.account_type.number === 20 || m.account_type.number === 28\n                            )\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        this.accCash = res.data\n                            .filter((m) => m.account_type.number <= 5)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                        if (this.accCustomerDeposit.length > 0) {\n                            this.saleDeposit.accReceivable = this.accCustomerDeposit[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadSaleOrders() {\n            if (this.customer) {\n                this.showLoading = true;\n                this.saleOrders = [];\n                new Promise((resolve) => {\n                    setTimeout(() => {\n                        resolve(\"resolved\");\n                        let data = {\n                            method: \"by_customer\",\n                            customer: this.customer.id,\n                            type: \"Sale Order\",\n                        };\n                        saleOrderHandler.search(data).then((res) => {\n                            this.showLoading = false;\n                            const response = res.data.data;\n                            response.forEach((m) => {\n                                const soCurrency = m.txnData;\n                                this.saleOrders.push({\n                                    id: m.id,\n                                    amount: m.total,\n                                    number: m.number,\n                                    currency: soCurrency.currency,\n                                    decimalFormat: m.decimalFormat,\n                                    location: soCurrency.location,\n                                    segment: soCurrency.segment,\n                                });\n                            });\n                        });\n                    }, 10);\n                });\n            }\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        addRow() {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                total = ds.total();\n            this.itemLine.id = itemLinePrefix + uuid.v1();\n            this.itemLine.decimalFormat = this.decimalFormat;\n            this.itemLine.optionType = OPTION_TYPE;\n            ds.insert(total, this.itemLine);\n            // this.itemLines.push(this.itemLine)\n            // this.itemLines.push(this.itemLine)a\n            // window.console.log('item Line', this.itemLine)\n        },\n        async loadPaymentOption() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.paymentMethod = [];\n                    paymentOptionHandler\n                        .list(strFilter)\n                        .then((res) => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.paymentMethod = res.data.data;\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 10);\n            });\n        },\n        async loadCurrencyData() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    currencyHandler\n                        .list(\"fun-c\")\n                        .then((response) => {\n                            if (response.data.statusCode === 200) {\n                                this.currencyList = response.data.data.filter(\n                                    (o) => o.used === 1\n                                );\n                                if (this.currencyList.length > 0) {\n                                    this.saleDeposit.currency = this.currencyList[0];\n                                    this.loadTransactionRate();\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 10);\n            });\n        },\n        async loadTransactionRate() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const date = new Date(this.transactionDate)\n                        .toISOString()\n                        .substr(0, 10);\n                    const currency = this.saleDeposit.currency;\n                    let code = \"\";\n                    if (currency.hasOwnProperty(\"code\")) {\n                        code = currency.code;\n                    }\n\n                    if (code !== undefined || code !== \"\") {\n                        this.showLoading = true;\n                        currencyHandler\n                            .getLastExchangeRateByDate(date, code)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    const response = res.data.data[0];\n                                    this.saleDeposit.exchangeRate = response;\n                                    this.saleDeposit.txnRate = response.rate;\n                                    this.showLoading = false;\n                                }\n                            });\n                    }\n                }, 10);\n            });\n        },\n        autoCalculate() {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                convertedAmount = 0,\n                amount = 0;\n            ds.data().forEach((value) => {\n                if (value.amount) {\n                    amount += kendo.parseFloat(value.amount);\n                    convertedAmount +=\n                        kendo.parseFloat(value.amount) * this.saleDeposit.txnRate;\n                }\n            });\n            window.console.log(convertedAmount, \"convertedAmount\");\n            this.saleDeposit.exchangeAmount = convertedAmount;\n            this.saleDeposit.amount = amount;\n        },\n        dataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0],\n                    pOption = {};\n                switch (e.field) {\n                    case \"paymentOption\":\n                        pOption = dataRow.paymentOption || {};\n                        dataRow.set(\"account\", pOption.account || {});\n                        break;\n                    default:\n                        break;\n                }\n                if (e.field) {\n                    this.autoCalculate();\n                }\n            }\n        },\n        removeEmptyLine() {\n            const grid = kendo.jQuery(\"#gridSaleDeposit\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource;\n            dataSource.data().forEach((m) => {\n                if (m.account.id === undefined) {\n                    dataSource.remove(m);\n                }\n            });\n        },\n        async onSaveClose(flag) {\n            if (!this.$refs.form.validate()) {\n                // this.$refs.form.validate()\n                this.$snotify.error(\n                    \"Field is required, please check field each of tabs!\"\n                );\n                return;\n            }\n            let id = \"\";\n            if (this.customer.hasOwnProperty(\"id\")) {\n                id = this.customer.id || \"\";\n            }\n            const cur = this.saleDeposit.currency || {};\n            if (cur.hasOwnProperty(\"id\")) {\n                if (cur.id === \"\") {\n                    this.$snotify.error(\"Currency is require\");\n                    return;\n                }\n            }\n            if (id === \"\") {\n                this.$snotify.error(\"Customer is require\");\n                return;\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.removeEmptyLine();\n                    let itemLineDS = this.$refs.saleDepositDS.kendoWidget();\n                    const dataRow = itemLineDS\n                        .data()\n                        .filter((n) => n.amount > 0)\n                        .map((m) => {\n                            return new ItemLineModel(m);\n                        });\n\n                    if (dataRow.length > 0) {\n                        let isAutoGenerate = 1;\n                        if (this.$route.params.id) {\n                            const tranDate = new Date(this.transactionDate);\n                            const tranDateReceipt = new Date(\n                                this.saleDeposit.transactionDate\n                            );\n                            const tranDateM = tranDate.getFullYear() + tranDate.getMonth();\n                            const tranDateReceiptM =\n                                tranDateReceipt.getFullYear() + tranDateReceipt.getMonth();\n                            if (tranDateM === tranDateReceiptM) {\n                                isAutoGenerate = 0;\n                            }\n                        }\n                        let data = {\n                            id: this.saleDeposit.id ? this.saleDeposit.id : \"\",\n                            type: \"Sale Deposit\",\n                            number: this.saleDeposit.number,\n                            uuid: this.saleDeposit.uuid,\n                            transactionDate: this.transactionDate,\n                            transactionDateTZ: Helper.toISODate(this.transactionDate),\n                            journal_uuid: this.saleDeposit.journal_uuid,\n                            abbr: this.saleDeposit.transactionType.abbr,\n                            customer: this.customer,\n                            transactionType: this.saleDeposit.transactionType,\n                            itemLine: dataRow,\n                            transactionNote: this.saleDeposit.transactionNote,\n                            journalNote: this.saleDeposit.journalNote,\n                            referenceNo: this.saleDeposit.referenceNo,\n                            amount: this.saleDeposit.amount,\n                            currency: this.saleDeposit.currency,\n                            exchangeAmount: this.saleDeposit.exchangeAmount, // amount to base currency\n                            txnRate: this.saleDeposit.txnRate,\n                            exchangeRate: this.saleDeposit.exchangeRate,\n                            saleDepositAcc: this.saleDeposit.saleDepositAcc,\n                            segment: this.saleDeposit.segment,\n                            location: this.saleDeposit.location,\n                            saleOrder: this.saleDeposit.saleOrder,\n                            status: 1,\n                            approvedBy: this.saleDeposit.approvedBy,\n                            rejectedBy: this.saleDeposit.rejectedBy,\n                            formTemplate: {},\n                            createdAt: this.saleDeposit.createdAt,\n                            loggedUser: this.loggedUser,\n                            isAutoGenerate: isAutoGenerate,\n                            refFrom: this.saleDeposit.refFrom,\n                            refTo: this.saleDeposit.refTo,\n                            actionType: this.$route.params.id\n                                ? this.$route.query.type\n                                : \"new\",\n                        };\n                        this.showLoading = true;\n                        billingHandler\n                            .createDeposit(data)\n                            .then((response) => {\n                                if (response.data.statusCode === 201) {\n                                    this.showLoading = false;\n                                    this.$snotify.success(\"Successfully\");\n                                    if (flag === \"close\") {\n                                        this.clear();\n                                        this.close();\n                                    } else if (flag === \"new\") {\n                                        this.clear();\n                                    }\n                                }\n                            })\n                            .catch((e) => {\n                                this.showLoading = false;\n                                this.$snotify.error(\"Something went wrong\");\n                                this.errors.push(e);\n                            });\n                    } else {\n                        this.$snotify.error(\"Account or Amount is require\");\n                        return;\n                    }\n                }, 10);\n            });\n        },\n        async loadCustomerBalance(id) {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const strFilter = id + \"?type=dep\";\n                    this.depositBalance = 0;\n                    this.currencyCode = \"\";\n                    billingHandler\n                        .balance(strFilter)\n                        .then((res) => {\n                            if (res.data.statusCode === 200) {\n                                const data = res.data.data;\n                                if (data.length > 0) {\n                                    this.depositBalance = data[0].balance;\n                                    this.currencyCode = data[0].currency;\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 10);\n            });\n        },\n        async loadViewDeposit() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    if (this.$route.params.id) {\n                        this.showLoading = true;\n                        const strFilter = \"?id=\" + this.$route.params.id;\n                        billingHandler\n                            .depositList(strFilter)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    this.disableMe = true;\n                                    this.saleDeposit = res.data.data[0];\n                                    this.decimalFormat = this.saleDeposit.decimalFormat;\n                                    this.depositLine = this.saleDeposit.itemLine;\n                                    this.customer = this.saleDeposit.customer;\n                                    this.loadCustomerBalance(this.customer.id);\n                                    this.transactionDate = this.saleDeposit.transactionDate;\n                                    this.loadSaleOrders();\n                                    // this.onChange(this)\n                                    // this.numberFormat(this.saleDeposit.saleOrder, 'amount')\n                                    // this.numberFormat(this.saleDeposit.saleOrder, 'currency')\n                                    // this.saleOrders = this.saleDeposit.saleOrder\n                                }\n                            })\n                            .catch();\n                        {\n                            this.showLoading = false;\n                        }\n                    }\n                }, 10);\n            });\n        },\n        async initData() {\n            if (this.$route.params.id !== undefined) {\n                await this.loadViewDeposit();\n            } else {\n                this.addRow();\n            }\n        },\n    },\n    created() {\n        this.loadAccount();\n        this.loadCurrencyData();\n    },\n    watch: {\n        id() {\n            if (this.$route.params.id === undefined) {\n                this.clear();\n            } else {\n                this.showLoading = true;\n                this.loadViewDeposit();\n            }\n        },\n        '$route': 'loadViewDeposit'\n    },\n    mounted: async function () {\n        await this.loadSaleFormContent();\n        await this.loadPrefix();\n        await this.loadLocation();\n        await this.loadSegment();\n        await this.loadPaymentOption();\n        await this.loadViewDeposit();\n        this.requestData(0, this.filter, this.cusBaseUrl);\n        // await this.initData()\n    },\n    computed: {\n        disabled() {\n            return !!this.$route.params.id;\n        },\n        segment() {\n            if (this.saleDeposit) {\n                if (this.saleDeposit.saleOrder) {\n                    if (this.saleDeposit.saleOrder.hasOwnProperty(\"segment\")) {\n                        if (this.saleDeposit.saleOrder.hasOwnProperty(\"id\")) {\n                            return this.saleDeposit.saleOrder.segment.name;\n                        }\n                    }\n                }\n            }\n            return \"\";\n        },\n        location() {\n            if (this.saleDeposit) {\n                if (this.saleDeposit.saleOrder) {\n                    if (this.saleDeposit.saleOrder.hasOwnProperty(\"location\")) {\n                        if (this.saleDeposit.saleOrder.location.hasOwnProperty(\"id\")) {\n                            return this.saleDeposit.saleOrder.location.name;\n                        }\n                    }\n                }\n            }\n            return \"\";\n        },\n        validCustomer() {\n            return this.customer.id !== undefined && this.customer.id !== null;\n        },\n        hiddenButton() {\n            return !!this.$route.params.id;\n        }\n    },\n};\n</script>\n\n<style scoped>\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.hide_small_bar_class {\n    max-width: 0;\n    transition: 0.5s ease-in;\n    flex: 0 0 0;\n}\n\n.hide_big_bar_class {\n    max-width: 100%;\n    transition: 0.5s ease-in;\n    flex: 0 0 100%;\n}\n\n.small_sidebar {\n    height: 96%;\n    position: relative;\n    padding: 12px;\n    background-color: #edf1f5;\n}\n\n.iconArrow {\n    right: -35px;\n    position: absolute;\n    bottom: -10px;\n}\n\n.iconArrowHide {\n    position: absolute;\n    right: -7px;\n    bottom: -10px;\n}\n\n.detial_smallside_p {\n    position: absolute;\n    bottom: 12px;\n}\n\n.v-data-table__wrapper td {\n    border-bottom: 1px solid #808080;\n    border-top: 1px solid #808080;\n}\n\nelement.style {\n}\n\n.v-list-item .v-list-item__title,\n.v-list-item .v-list-item__subtitle {\n    line-height: 1.2;\n}\n</style>\n"]}]}