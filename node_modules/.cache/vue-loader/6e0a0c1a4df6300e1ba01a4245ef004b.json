{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/Price.vue?vue&type=style&index=0&id=09b17b50&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/Price.vue","mtime":1638499443267},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZ1bmN0aW9uX2Zvb3RlciB7CiAgcGFkZGluZzogMTVweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCnAgewogIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpOwp9CgouYWN0aW9uQnRuIHsKICBoZWlnaHQ6IDQ3LjJweCAhaW1wb3J0YW50Owp9CgoudGV4dF90aXAgewogIGZvbnQtc2l6ZTogOXB4OwogIGxpbmUtaGVpZ2h0OiAxMHB4Owp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKfQo="},{"version":3,"sources":["Price.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"Price.vue","sourceRoot":"src/views/products","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n      <h2 class=\"mb-0 float-left\">{{ $t('price_level') }}</h2>\n\n      <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pr-0\">\n          <v-dialog v-model=\"dialogm3\" max-width=\"600px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn color=\"primary\" class=\" white--text float-right text-capitalize\"\n                     v-on=\"on\"\n                     @click=\"onNewClick\">\n                {{ $t('new_price') }}\n              </v-btn>\n            </template>\n            <v-card>\n              <div class=\"modal_header\">\n                <v-card-title>{{ $t('new_price') }}</v-card-title>\n                <v-icon  @click=\"dialogm3 = false\">close</v-icon>\n              </div>\n              <v-card-text class=\"modal_text_content\">\n                <v-row>\n                  <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                    <label>{{ $t('price_list_name') }}</label>\n                    <v-text-field class=\" my-2\"\n                                  v-model=\"priceLevel.name\"\n                                  outlined\n                                  tage=\"Pirce List Name\"\n                                  clearable/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label\">{{ $t('type') }}</label>\n                    <v-select class=\" my-2\"\n                              tag=\"priceLevelType\"\n                              v-model=\"mPriceLevelType\"\n                              :items=\"priceLevelType\"\n                              return-object\n                              clearable\n                              outlined/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                    <label>{{ $t('code') }}</label>\n                    <v-text-field class=\" my-2\"\n                                  v-model=\"priceLevel.code\"\n                                  outlined\n                                  tage=\"Code\"\n                                  clearable/>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                    <label>{{ $t('currency') }}</label>\n                    <v-select class=\" my-2\"\n                              outlined\n                              tage=\"Currency\"\n                              v-model=\"mCurrency\"\n                              :items=\"currencies\"\n                              item-value=\"id\"\n                              :item-text=\"item =>`${item.code} - ${item.name}`\"\n                              return-object\n                              clearable/>\n                  </v-col>\n                </v-row>\n              </v-card-text>\n              <v-card-actions class=\"modal_footer\">\n                <v-row>\n                  <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                    <v-btn color=\"primary\" outlined\n                           class=\" text-capitalize  black--text float-left\"\n                           @click=\"dialogm3 = false\">{{ $t('cancel') }}\n                    </v-btn>\n                  </v-col>\n                  <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                    <v-btn color=\"primary\" class=\"px-3  white--text text-capitalize\"\n                           @click=\"onSaveClose\">\n                      {{ $t('save_close') }}\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n\n        </v-col>\n      </v-row>\n\n      <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n          <template>\n            <v-simple-table class=\"attachment_table\">\n              <template v-slot:default>\n                <thead>\n                <tr>\n                  <th>{{ $t('name') }}</th>\n                  <th>{{ $t('code') }}</th>\n                  <th>{{ $t('currency') }}</th>\n                  <th>{{ $t('type') }}</th>\n                  <th>{{ $t('products') }}</th>\n                  <th>{{ $t('contacts') }}</th>\n                  <th>{{ $t('action') }}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr v-for=\"pl in priceLevels\" v-bind:key=\"pl.id\">\n                  <td class=\"text-bold\">{{ pl.name }}</td>\n                  <td>{{ pl.code }}</td>\n                  <td>{{ pl.currency.code }}</td>\n                  <td>{{ pl.type }}</td>\n                  <td>0</td>\n                  <td>0</td>\n                  <td>\n                    <v-btn class=\"btn_edit_setting\" @click=\"onEditClick(pl)\">\n                      <v-icon class=\"white--text\" size=\"14\">mdi-pen</v-icon>\n                      <span class=\"capitalize ml-1 white--text font_14\">{{ $t('edit') }}</span>\n                    </v-btn>\n                  </td>\n                </tr>\n                <LoadingMe\n                    :isLoading=\"compeletLoading\"\n                    :fullPage=\"false\"\n                    type=\"loading\"\n                    :myLoading=\"true\"/>\n                </tbody>\n              </template>\n            </v-simple-table>\n          </template>\n        </v-col>\n      </v-row>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nexport default {\n  data: () => ({\n    mPriceLevelType: '',\n    priceLevelType: [\n      'Buy', 'Sell', 'Rent', 'Purchase'\n    ],\n    mCurrency: '',\n    currencies: [],\n    priceLevels: [],\n    priceLevel: {\n      id: '',\n      name: '',\n      code: '',\n      type: '',\n      currency: ''\n    },\n    compeletLoading: false,\n    dialogm3: false,\n  }),\n  props: {},\n  methods: {\n    async onEditClick(value) {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          this.priceLevel = value\n          this.mCurrency = value.currency\n          this.mPriceLevelType = value.type\n          this.dialogm3 = true\n        }, 300);\n      })\n    },\n    onNewClick() {\n      this.priceLevel.id = ''\n      this.clear()\n    },\n    close() {\n      this.dialogm3 = false\n    },\n    clear() {\n      this.priceLevel = {}\n    },\n    async onSaveClose() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          if (this.priceLevel.id === '' || this.priceLevel.id === undefined) {\n            let data = {\n              \"code\": this.priceLevel.code,\n              \"name\": this.priceLevel.name,\n              \"type\": this.mPriceLevelType,\n              \"currency\": this.mCurrency\n            }\n            priceLevelHandler.create(data).then(response => {\n              if (response.data.statusCode === 201) {\n                this.loadPriceLevel()\n                this.clear()\n                this.close()\n              }\n            }).catch(e => {\n              this.errors.push(e)\n            })\n          } else {\n            let isTypeChanged = 1;\n            if (this.mPriceLevelType === this.priceLevel.type) {\n              isTypeChanged = 0\n            }\n            let isCurrencyChanged = 1;\n            if (this.mCurrency.id === this.priceLevel.currency.id) {\n              isCurrencyChanged = 0\n            }\n            let data = {\n              \"code\": this.priceLevel.code,\n              \"name\": this.priceLevel.name,\n              \"type\": this.mPriceLevelType,\n              \"currency\": this.mCurrency,\n              \"isTypeChanged\": isTypeChanged,\n              \"isCurrencyChanged\": isCurrencyChanged,\n              \"delPriceLevelTypeId\": this.priceLevel.type,\n              \"delCurrencyId\": this.priceLevel.currency.id,\n\n            }\n            priceLevelHandler.update(this.priceLevel.id, data).then(response => {\n              if (response.data.statusCode === 201) {\n                this.loadPriceLevel()\n                this.clear()\n                this.close()\n              }\n            }).catch(e => {\n              this.errors.push(e)\n            })\n          }\n        }, 300);\n      })\n    },\n    async loadCurrency() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          currencyHandler.get().then(res => {\n            this.compeletLoading = false\n            this.currencies = res.filter(o => o.used === 1)\n          })\n        }, 300);\n      })\n    },\n    async loadPriceLevel() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          this.compeletLoading = true\n          priceLevelHandler.get().then(res => {\n            this.compeletLoading = false\n            this.priceLevels = res\n          })\n        }, 50);\n      })\n    },\n  },\n  mounted: async function () {\n    await this.loadCurrency()\n    await this.loadPriceLevel()\n  },\n  computed: {},\n  components: {\n    LoadingMe: () => import(`@/components/Loading`)\n  },\n};\n</script>\n\n<style scoped>\n.function_footer {\n  padding: 15px;\n  display: inline-block;\n}\n\np {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.actionBtn {\n  height: 47.2px !important;\n}\n\n.text_tip {\n  font-size: 9px;\n  line-height: 10px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}