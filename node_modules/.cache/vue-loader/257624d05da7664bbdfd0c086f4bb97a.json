{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/settings/CustomerGroup.vue?vue&type=style&index=0&id=6e09f7c9&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/settings/CustomerGroup.vue","mtime":1638499443226},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXR0YWNobWVudF90YWJsZSB0YWJsZSB0ciB0aCB7CiAgICBoZWlnaHQ6IDU1cHggIWltcG9ydGFudDsKfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7Cn0K"},{"version":3,"sources":["CustomerGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwSA;AACA;AACA;;AAEA;AACA","file":"CustomerGroup.vue","sourceRoot":"src/views/customers/settings","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"10\" cols=\"12\" class=\"pt-0\">\n            <h2 class=\"mb-0 font_20\">{{ $t(\"customer_group\") }}</h2>\n            <p class=\"mb-0\">{{ $t(\"customer_group_desc\") }}</p>\n        </v-col>\n        <v-col sm=\"2\" cols=\"12\" class=\"pt-0\">\n            <v-dialog v-model=\"dialogM2\" max-width=\"700px\">\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                        class=\"white--text float-right text-capitalize\"\n                        color=\"primary\"\n                        v-on=\"on\"\n                        @click=\"onNewClick\"\n                    >\n                        {{ $t(\"create_new\") }}\n                    </v-btn>\n                </template>\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"customer_group\") }}</v-card-title>\n                        <v-icon @click=\"dialogM2 = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-row>\n                                <v-col sm=\"6\" cols=\"12\" class=\"\">\n                                    <label class=\"label\">{{ $t(\"group_name\") }}</label>\n                                    <v-text-field\n                                        class=\"mt-1\"\n                                        outlined\n                                        placeholder=\"\"\n                                        :rules=\"[(v) => !!v || $t('name_is_required')]\"\n                                        tage=\"GroupName\"\n                                        v-model=\"customerGroup.name\"\n                                    />\n\n                                </v-col>\n                                <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                    <v-row>\n                                        <v-col sm=\"11\" cols=\"11\" class=\"py-0\">\n                                            <label class=\"label\">{{\n                                                    $t(\"default_discount_rate\")\n                                                }}</label>\n                                            <v-select\n                                                class=\"mt-1\"\n                                                id=\"default_price_level\"\n                                                :items=\"discountItems\"\n                                                item-text=\"name\"\n                                                tage=\"DefaultPriceLevel\"\n                                                item-value=\"id\"\n                                                v-model=\"mDiscountItem\"\n                                                :rules=\"[(v) => !!v['id'] || $t('is_required')]\"\n                                                outlined\n                                                return-object\n                                            />\n                                        </v-col>\n                                        <v-col sm=\"1\" cols=\"1\" class=\"pl-0 py-0\">\n                                            <v-icon class=\"float-left mt-9\" size=\"15\">\n                                                mdi-percent\n                                            </v-icon>\n                                        </v-col>\n                                    </v-row>\n                                    <!-- <label class=\"label\">{{ $t(\"default_price_level\") }}</label>\n                                    <v-select\n                                      class=\"mt-1\"\n                                      id=\"default_price_level\"\n                                      :items=\"priceLevel\"\n                                      item-text=\"name\"\n                                      tage=\"DefaultPriceLevel\"\n                                      item-value=\"id\"\n                                      :rules=\"[(v) => !!v['id'] || $t('is_required')]\"\n                                      v-model=\"mPriceLevel\"\n                                      outlined\n                                      return-object\n                                    /> -->\n                                </v-col>\n                            </v-row>\n                        </v-form>\n                    </v-card-text>\n                    <v-card-actions class=\"modal_footer\">\n                        <v-row>\n                            <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                                <v-btn\n                                    color=\"black\"\n                                    outlined\n                                    class=\" text-capitalize black--text float-left\"\n                                    @click=\"dialogM2 = false\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n                            </v-col>\n                            <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                                <v-btn\n                                    color=\"primary\"\n                                    class=\"px-3  white--text text-capitalize float-right\"\n                                    @click.native=\"onSaveClose\"\n                                >\n                                    {{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\">\n            <template>\n                <LoadingMe\n                    :isLoading=\"showLoading\"\n                    :fullPage=\"false\"\n                    :myLoading=\"true\"\n                    type=\"loading\"\n                />\n                <kendo-datasource ref=\"gridCustomerGroupDS\" :data=\"customerGroupList\"/>\n                <kendo-grid\n                    id=\"gridCustomerGroup\"\n                    class=\"grid-function\"\n                    :data-source-ref=\"'gridCustomerGroupDS'\"\n                    :editable=\"false\"\n                    :scrollable-virtual=\"true\"\n                >\n                    <kendo-grid-column\n                        :field=\"'no'\"\n                        :title=\"$t('no')\"\n                        :template=\"rowNumberTmpl\"\n                        :width=\"40\"\n                        :column-menu=\"false\"\n                        :headerAttributes=\"{\n              style: 'background-color: #EDF1F5;',\n              class: 'text-center',\n            }\"\n                        :attributes=\"{ style: 'text-align: center' }\"\n                    />\n                    <kendo-grid-column\n                        :field=\"'name'\"\n                        :title=\"$t('name')\"\n                        :width=\"50\"\n                        :attributes=\"{ class: 'tb_name_td' }\"\n                        :template=\"'<span>#=name#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                    />\n                    <kendo-grid-column\n                        :field=\"'discountItem'\"\n                        :title=\"$t('discount')\"\n                        :width=\"90\"\n                        :template=\"'<span>#=discountItem.name#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                    />\n                    <kendo-grid-column\n                        :field=\"''\"\n                        :title=\"$t('action')\"\n                        :width=\"70\"\n                        :command=\"[\n              { iconClass: 'k-icon k-i-edit', text: 'Edit', click: goEdit },\n            ]\"\n                        :headerAttributes=\"{\n              style: 'text-align: left; background-color: #EDF1F5',\n            }\"\n                    />\n                </kendo-grid>\n            </template>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\nimport CustomerGroupModel from \"@/scripts/model/CustomerGroup\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst $ = kendo.jQuery\nconst customerGroupHandler = require(\"@/scripts/customerGroupHandler\");\nconst customerGroupModel = new CustomerGroupModel({});\nconst discountItemHandler = require(\"@/scripts/discountItemHandler\");\nconst OPTION_TYPE = \"?type=Sale\";\nexport default {\n    components: {LoadingMe: () => import(`@/components/Loading`)},\n    data: () => ({\n        dialogM2: false,\n        showLoading: true,\n        valid: true,\n        // priceLevel: [],\n        // mPriceLevel: {},\n        mDiscountItem: {},\n        customerGroupList: [],\n        discountItems: [],\n        customerGroup: customerGroupModel,\n    }),\n    props: {},\n    computed: {},\n    watch: {\n        dialogm2(val) {\n            val || this.close();\n        },\n    },\n    created() {\n    },\n    methods: {\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.gridCustomerGroupDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        goEdit(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridCustomerGroup\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            this.customerGroup = dataItem;\n            // this.mPriceLevel = dataItem.priceLevel;\n            this.mDiscountItem = dataItem.discountItem;\n            this.dialogM2 = true;\n        },\n        close() {\n            this.dialogM2 = false;\n        },\n        onNewClick() {\n            this.clear();\n            this.customerGroup.id = undefined;\n            this.customerGroup.discountItem = 0;\n        },\n        clear() {\n            this.customerGroup = {};\n        },\n        async onSaveClose() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate();\n                return;\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    let data = {\n                        id: this.customerGroup.id ? this.customerGroup.id : \"\",\n                        name: this.customerGroup.name,\n                        // priceLevel: this.mPriceLevel,\n                        discountItem: this.mDiscountItem,\n                    };\n                    customerGroupHandler\n                        .create(data)\n                        .then((response) => {\n                            if (response.data.statusCode === 201) {\n                                const res = response.data.data;\n                                const index = this.customerGroupList.findIndex((item) => {\n                                    return res.id === item.id;\n                                });\n                                if (this.customerGroupList.length === 0) {\n                                    this.loadCustomerGroup();\n                                }\n                                if (index < 0) {\n                                    this.customerGroupList.push(res);\n                                } else {\n                                    this.customerGroupList.splice(index, 1, res);\n                                }\n                                this.$refs.form.reset();\n                                this.$snotify.success(\"Success\");\n                                this.close();\n                            }\n                        })\n                        .catch((e) => {\n                            this.$snotify.error(\"Something went wrong\");\n                            this.errors.push(e);\n                        });\n                }, 10);\n            });\n        },\n        async loadCustomerGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    customerGroupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.customerGroupList = res;\n                    });\n                }, 10);\n            });\n        },\n        async loadDiscountItems() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    discountItemHandler.list(OPTION_TYPE).then((res) => {\n                        if (res.data.statusCode === 200) this.showLoading = false;\n                        this.discountItems = res.data.data;\n                    });\n                }, 10);\n            });\n        },\n    },\n    mounted: async function () {\n        await this.loadCustomerGroup();\n        await this.loadDiscountItems();\n    },\n};\n</script>\n<style scoped>\n.attachment_table table tr th {\n    height: 55px !important;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}