{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/s_ledgers/ChartOfAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/s_ledgers/ChartOfAccount.vue","mtime":1642478961300},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChartOfAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"ChartOfAccount.vue","sourceRoot":"src/views/accounting/s_ledgers","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-card color=\"white\" class=\"no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col sm=\"10\" cols=\"12\">\n                        <h2 class=\"mb-0 font_20\">{{ $t(\"s_chart_of_accounts\") }}</h2>\n                        <p class=\"mb-4\">{{$t('chart_of_accounts_desc2')}}</p>\n                    </v-col>\n                    <v-col sm=\"2\" cols=\"12\">\n                        <v-btn color=\"primary\" class=\"float-right\">\n                            <v-icon @click=\"onClickSearch\" size=\"30\" color=\"white\">mdi-reload</v-icon>\n                        </v-btn>\n                    </v-col>\n                </v-row>\n\n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <template>\n                            <treelistdatasource \n                                ref=\"coaDS\"\n                                :data=\"coaList\"\n                                :sort=\"sortDefinition\"\n                                :schema-model=\"model\" />\n\n                            <treelist \n                                ref=\"coaTreeList\"\n                                data-source-ref=\"coaDS\"\n                                :resizable=\"true\"\n                                :column-menu=\"true\"\n                                :columns=\"columns\"\n                                :toolbar=\"['excel']\"\n\t\t\t\t\t\t\t\t:excel-file-name=\"'Chart of accounts.xlsx'\"\n\t\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t\t:excel-all-pages=\"true\"\n                                :dataBound=\"onDataBound\" />\n                        </template>\n                        <LoadingMe \n\t\t\t\t\t\t\t:isLoading =\"showLoading\" \n\t\t\t\t\t\t\t:fullPage  =\"false\" \n\t\t\t\t\t\t\t:myLoading =\"true\"\n                            type=\"loading\"/>\n\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    // import Helper from \"@/helper.js\";\n    /* TreeList */\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n\n    import JSZip from \"jszip\";\n    window.JSZip = JSZip;\n    \n    import AccountModel from \"@/scripts/model/Account.js\";\n    import AccountingReportTreeListModel from \"@/scripts/model/AccountingReportTreeList\";\n    // import store from \"@/store\";\n    import { mapState } from 'vuex';\n\n    const { trialBalanceHandler } = require(\"@/scripts/AppHandlers\");\n\n    export default {\n        components: {\n            \"LoadingMe\": () => import('@/components/Loading'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            // Obj\n            coa: [],\n            coaList: [],\n            // LoadingMe\n            showLoading: false,\n            /* KENDO */\n            columns: [],\n            sortDefinition : [\n                { field: \"account.type_code\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n            model: {\n                id: \"uuid\",\n                expanded: true\n            },\n        }),\n        methods: {\n            onClickSearch(){\n                /* Clear */\n                // store.state.accounting.accountLoaded = false;\n\n                // Empty dataSource\n                let ds = this.$refs.coaDS.kendoWidget();\n                ds.data([]);\n\n                this.search();\n            },\n            // Search\n            search(){\n                this.showLoading = true;\n                trialBalanceHandler.getTrialBalance({\n                    params : {\n                        as_of_date: kendo.toString(new Date(), 'yyyy-MM-dd') + 'T23:59:59.999Z',\n                        include_0_balance: true\n                    }\n                })\n                .then((res)=>{\n                    if(res){\n                        this.coa = res.data;\n                        this.bindData();\n                    }\n                });\n            },\n            /* Bind Data */\n            async bindData() {\n                let g = {}, childIds = [];\n\n                /* Call account list */\n                await this.$store.dispatch('accounting/getAccounts');\n                \n                /* Balance Sheet */\n                this.coa.tbdetails.forEach(value => {\n                    let account = new AccountModel(value.account);\n                    if(account.is_secondary === 1){/* Filter secondary Account Only */\n                        /* GROUPING */\n                        /* Top Level Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new AccountingReportTreeListModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.account_type.local_name,\n                                account : account.account_type,\n                            });\n                        }\n\n                        /* Parent Level */\n                        let thisAccountParentId = \"\";\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            let currentParentAccount = new AccountModel(account.parent_account), counter = 0;\n                            while (currentParentAccount.number !== \"\") {\n                                /* Get account by uuid or banhji_account_number */\n                                let accountParent = new AccountModel();\n                                if(currentParentAccount.uuid !== \"\"){/* Get by uuid */\n                                    accountParent = new AccountModel(this.accounts.find((item) => item.uuid === currentParentAccount.uuid));\n                                }else{/* Get by banhji_account_number because default data has no uuid */\n                                    if(currentParentAccount.banhji_account_number !== \"\"){\n                                        accountParent = new AccountModel(this.accounts.find((item) => item.banhji_account_number === currentParentAccount.banhji_account_number));\n                                    }\n                                }\n\n                                /* Set This Account Parent Id */\n                                if(counter === 0){\n                                    thisAccountParentId = accountParent.uuid;\n                                }\n\n                                /* Find Next Parent */\n                                let nextParent = new AccountModel();\n                                if(accountParent.hasOwnProperty(\"parent_account\")){\n                                    let parentOfAccountParent = new AccountModel(accountParent.parent_account);\n                                    if(parentOfAccountParent.number !== \"\"){\n                                        if(parentOfAccountParent.uuid !== \"\"){/* Get by uuid */\n                                            nextParent = this.accounts.find((item) => item.uuid === parentOfAccountParent.uuid);\n                                        }else{/* Get by banhji_account_number because default data has no uuid */\n                                            if(parentOfAccountParent.banhji_account_number !== \"\"){\n                                                nextParent = this.accounts.find((item) => item.banhji_account_number === parentOfAccountParent.banhji_account_number);\n                                            }\n                                        }\n                                    }\n                                }\n                                \n                                /* Set Parent Id */\n                                let parentId = accountParent.type_code;\n                                if(nextParent.number !== \"\"){\n                                    parentId = nextParent.uuid;\n\n                                    /* Set next parent account */\n                                    Object.assign(currentParentAccount, nextParent);\n                                }else{\n                                    /* Set loop to end */\n                                    currentParentAccount.number = \"\";\n                                }\n\n                                /* Add Parent Level */\n                                if(!g[accountParent.uuid]){\n                                    g[accountParent.uuid] = new AccountingReportTreeListModel({\n                                        uuid : accountParent.uuid,\n                                        number : accountParent.number,\n                                        name : accountParent.name,\n                                        local_name : accountParent.local_name,\n                                        parentId : parentId,\n                                        account : accountParent,\n                                    });\n                                }\n                                \n                                counter++;\n                            }/* End While Loop */\n                        }\n\n                        /* Account Nature */\n                        let balance = value.balance;\n                        if(account.account_type.nature.toLowerCase() === \"cr\"){\n                            balance *= -1;\n                        }\n\n                        /* Child Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new AccountingReportTreeListModel({\n                                uuid : account.uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                account : account,\n                                balance : balance,\n                            });\n                        }\n\n                        let childId = account.uuid;\n                        if(thisAccountParentId !== \"\"){/* Child Level */\n                            g[account.uuid].parentId = thisAccountParentId;\n                        }else{/* Child As Parent */\n                            g[account.uuid].parentId = account.type_code; /* Self As Parent */\n\n                            if(value.balance !== 0){\n                                g[account.uuid].balance = 0;\n                                childId = account.number;\n\n                                /* Self As Child With Balance */\n                                if(!g[account.number]){\n                                    g[account.number] = new AccountingReportTreeListModel({\n                                        uuid : account.number,\n                                        number : account.number,\n                                        name : account.name,\n                                        local_name : account.local_name,\n                                        parentId : account.uuid,\n                                        account : account,\n                                        balance : balance,\n                                    });\n                                }\n                            }\n                        }\n\n                        /* Child Id */\n                        childIds.push(childId);\n                    }\n                });\n                \n                /* Parse Object Array */\n                let entries = Object.values(g);\n\n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    parent.balance += entry.balance;\n                                    \n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n                \n                /* BIND ACCOUNTS */\n                this.coaList = entries;\n                \n                this.generateColumn();\n\n                this.showLoading = false;\n            },\n            // Row Template\n            nameTmpl(dataItem){\n                /* Name in language */\n                let name = dataItem.name;\n                if(this.reportingLanguage === \"local\"){\n                    name = dataItem.local_name;\n                }\n\n                /* Define result */\n                let result = `<span>${dataItem.number} - ${name}</span>`;\n\n                /* Top Level */\n                if(dataItem.parentId === null){\n                    result = `<span style='font-weight: bolder;'>${name}</span>`;\n                }\n\n                /* Parent Level */\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    result = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    // row.css(\"text-align\", \"right\");\n                    \n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.get(\"parentId\") === null){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            generateColumn() {\n                let headerAttributes = {\n                    class: \"table-header-cell\",\n                    style: \"font-weight: bold;text-align: center;padding-right: 35px; font-size: 14px\",\n                },\n                attributes = {\n                    class: \"table-cell\",\n                    style: \"text-align: right; font-size: 14px\",\n                };\n\n                let columns = [\n                    {\n                        field: \"name\",\n                        title: i18n.t(\"account\"),\n                        template: this.nameTmpl,\n                        width: 300,\n                        headerAttributes: headerAttributes,\n                    },\n                    {\n                        field: \"account.local_name\",\n                        title: i18n.t(\"local_name\"),\n                        width: 300,\n                        hidden: true,\n                        headerAttributes: headerAttributes,\n                    },\n                    {\n                        field: \"account.account_type.name\",\n                        title: i18n.t(\"type\"),\n                        width: 200,\n                        headerAttributes: headerAttributes,\n                    },\n                   \n                    {\n                        field: \"balance\",\n                        title: i18n.t(\"balance\"),\n                        format: \"{0:n}\",\n                        width: 100,\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    },\n                ];\n                \n                /* Set All Columns */\n                this.columns = columns;\n            },\n        },\n        watch: {\n            accounts: \"onClickSearch\"\n        },\n        computed: mapState({\n            accounts: state => state.accounting.accounts\n        }),\n        mounted() {\n            this.search();\n        },\n    };\n</script>\n<style scoped>\n</style>"]}]}