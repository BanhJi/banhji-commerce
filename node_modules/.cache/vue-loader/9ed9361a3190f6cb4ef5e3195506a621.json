{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/closing/VarianceRule.vue?vue&type=style&index=0&id=432dfbd7&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/closing/VarianceRule.vue","mtime":1641438291843},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXR0YWNobWVudF90YWJsZS52LWRhdGEtdGFibGUKICA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKICA+IHRhYmxlCiAgPiB0aGVhZAogID4gdHIKICA+IHRoLAouYXR0YWNobWVudF90YWJsZS52LWRhdGEtdGFibGUKICA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKICA+IHRhYmxlCiAgPiB0Ym9keQogID4gdHIKICA+IHRkIHsKICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["VarianceRule.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VarianceRule.vue","sourceRoot":"src/views/accounting/closing","sourcesContent":["<template>\n  <v-row>\n    <v-col cols=\"12\" sm=\"12\" class=\"pt-3\">\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-row>\n          <v-col sm=\"6\" class=\"py-0\">\n            <h2 class=\"mb-3 font_20 float-left\">\n              {{ $t(\"variance_rule\") }}\n            </h2>\n            <!-- <p class=\"mb-0 float-left\">\n                            {{ $t(\"variance_report_desc\") }}\n                        </p> -->\n          </v-col>\n          <v-col sm=\"6\" class=\"py-0\">\n            <v-btn\n              @click=\"showDialog = true\"\n              color=\"primary\"\n              class=\"white--text float-right text-capitalize\"\n            >\n              {{ $t(\"new_variance_rule\") }}\n            </v-btn>\n          </v-col>\n          <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n            <template>\n              <v-data-table\n                :headers=\"headers\"\n                :items=\"varianceRules\"\n                :items-per-page=\"50\"\n                sort-by=\"name\"\n                class=\"attachment_table elevation-1\"\n              >\n                <template v-slot:[`item.value`]=\"{ item }\">\n                  {{ Number(item.value).toLocaleString() }}\n                </template>\n\n                <template v-slot:[`item.actions`]=\"{ item }\">\n                  <v-icon small class=\"mr-2\" @click=\"editItem(item)\">\n                    mdi-pencil\n                  </v-icon>\n                  <v-icon small @click=\"deleteItem(item)\">\n                    mdi-delete\n                  </v-icon>\n                </template>\n              </v-data-table>\n            </template>\n          </v-col>\n        </v-row>\n        <v-dialog v-model=\"showDialog\" max-width=\"550px\">\n          <v-card>\n            <div class=\"modal_header\">\n              <v-card-title>{{ $t(\"variance_rule\") }}</v-card-title>\n              <v-icon @click=\"close()\">close</v-icon>\n            </div>\n            <v-card-text class=\"modal_text_content\">\n              <v-row>\n                <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                  <label class=\"label\">{{ $t(\"name\") }}*</label>\n                  <v-text-field\n                    class=\"\"\n                    outlined\n                    placeholder=\"Name\"\n                    v-model=\"varianceRule.name\"\n                    :rules=\"[(v) => !!v || $t('name_is_required')]\"\n                  />\n                </v-col>\n                <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                  <label class=\"label\">{{ $t(\"rule\") }}*</label>\n                  <v-select\n                    class=\"\"\n                    :items=\"rules\"\n                    item-value=\"value\"\n                    item-text=\"text\"\n                    v-model=\"varianceRule.rule\"\n                    :rules=\"[(v) => !!v || $t('is_required')]\"\n                    outlined\n                  />\n                </v-col>\n                <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                  <label class=\"label\">{{ $t(\"rule_value\") }}*</label>\n                  <v-text-field\n                    class=\"\"\n                    outlined\n                    type=\"number\"\n                    placeholder=\"Value\"\n                    v-model=\"varianceRule.value\"\n                    :rules=\"[(v) => !!v || $t('is_required')]\"\n                  />\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions class=\"modal_footer d-flex justify-space-between\">\n              <v-btn outlined color=\"primary\" class=\"black--text capitalize\" @click=\"cancel\">\n                {{ $t(\"cancel\") }}\n              </v-btn>\n              <v-btn class=\"btn_save_new\" @click=\"onSaveClick\">\n                {{ $t(\"save\") }}\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"true\"\n          :myLoading=\"true\"\n          :alertMessage=\"loadingAlert\"\n          :color=\"loadingColorAlert\"\n          :alertText=\"loadingTextAlert\"\n        />\n      </v-form>\n    </v-col>\n  </v-row>\n</template>\n<script>\nimport { i18n } from \"@/i18n\";\n// import kendo from \"@progress/kendo-ui\";\nimport Helper from \"@/helper.js\";\nimport { VarianceRuleModel } from \"@/scripts/model/AppModels\";\n\nconst { varianceRuleHandler } = require(\"@/scripts/AppHandlers\");\nconst { VarianceRule } = require(\"@/scripts/default_setup/Collections\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n  },\n  data: () => ({\n    // Obj\n    varianceRule: new VarianceRuleModel(),\n    showDialog: false,\n    rules: VarianceRule,\n    headers: [\n      { text: i18n.t(\"name\"), value: \"name\" },\n      { text: i18n.t(\"value\"), value: \"value\" },\n      { text: i18n.t(\"rule\"), value: \"rule\" },\n      { text: i18n.t(\"action\"), value: \"actions\", sortable: false },\n    ],\n    varianceRules: [],\n    // Form validation\n    valid: true,\n    editedIndex: -1,\n    // LoadingMe\n    showLoading: false,\n    loadingAlert: false,\n    loadingColorAlert: \"\",\n    loadingTextAlert: \"\",\n  }),\n  methods: {\n    editItem(item) {\n      this.editedIndex = this.varianceRules.indexOf(item);\n      this.varianceRule = Object.assign({}, item);\n      this.showDialog = true;\n    },\n    deleteItem(item) {\n      this.editedIndex = this.varianceRules.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.dialogDelete = true;\n    },\n    deleteItemConfirm() {\n      this.varianceRules.splice(this.editedIndex, 1);\n      this.closeDelete();\n    },\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, new VarianceRuleModel());\n        this.editedIndex = -1;\n      });\n    },\n    // All Saves\n    onSaveClick() {\n      if (this.$refs.form.validate()) {\n        this.save();\n      }\n    },\n    cancel() {\n      this.$swal({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#4d4848\",\n        cancelButtonColor: \"#ED1A3A\",\n        confirmButtonText: \"Yes, discard it!\",\n      }).then((result) => {\n        if (result.value) {\n          this.clear();\n        }\n      });\n    },\n    clear() {\n      // Reset Form\n      // this.$refs.form.reset();\n      this.editedIndex = -1;\n      this.varianceRule = new VarianceRuleModel();\n      this.showDialog = false;\n    },\n    close(){\n      this.clear()\n    },\n    save() {\n      let self = this;\n\n      this.showLoading = true;\n      // Sync Data\n      varianceRuleHandler\n        .save(this.varianceRule)\n        .then((response) => {\n          if (response) {\n            if (this.editedIndex > -1) {\n              Object.assign(\n                this.varianceRules[this.editedIndex],\n                this.varianceRule\n              );\n            } else {\n              this.varianceRules.push(new VarianceRuleModel(response.data));\n            }\n            self.responseStatus(response.status);\n          }\n        })\n        .catch((error) => {\n          Helper.alertErrorMsg(error);\n        })\n        .finally(() => {\n          this.showLoading = false;\n        });\n    },\n    // Response Status\n    responseStatus(status) {\n      switch (status) {\n        case 200: // Ok\n          this.showAlert();\n\n          break;\n        case 201: // Duplicate\n          Helper.alertErrorMsg(\"Duplicate entry!\");\n          break;\n        default:\n          break;\n      }\n    },\n    // Sweetalert2\n    changeAlertStatus() {\n      this.loadingAlert = true;\n      setTimeout(() => {\n        this.loadingAlert = false;\n      }, 6200);\n    },\n    showAlert() {\n      this.changeAlertStatus();\n      this.loadingTextAlert = \"Added Successful\";\n      this.loadingColorAlert = \"#3DA72E\";\n\n      this.clear();\n    },\n  },\n  created() {\n    // Call Variance Rule\n    varianceRuleHandler.getAll().then((res) => {\n      this.varianceRules = res.data;\n    });\n  },\n};\n</script>\n\n<style scoped>\n.attachment_table.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > thead\n  > tr\n  > th,\n.attachment_table.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr\n  > td {\n  border-right: none !important;\n}\n</style>\n"]}]}