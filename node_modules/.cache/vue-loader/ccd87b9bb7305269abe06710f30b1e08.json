{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLoss.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/statement_profit_lost/StatementOfProfitOrLoss.vue","mtime":1638499443110},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatementOfProfitOrLoss.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"StatementOfProfitOrLoss.vue","sourceRoot":"src/views/accounting/reports/statement_profit_lost","sourcesContent":["<template>\n\t<v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col class=\"pt-0\" sm=\"12\" cols=\"12\">\n\t\t\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<div v-if=\"columnBy === '1'\">\n\t\t\t\t\t\t\t\t\t<app-searchdate\n\t\t\t\t\t\t\t\t\t\t:initStartDate=\"startDate\"\n\t\t\t\t\t\t\t\t\t\t@emitStartDate=\"startDate = $event\"\n\t\t\t\t\t\t\t\t\t\t:initEndDate=\"endDate\"\n\t\t\t\t\t\t\t\t\t\t@emitEndDate=\"endDate = $event\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div v-else>\n\t\t\t\t\t\t\t\t\t<app-fiscal-date-dropdownlist\n\t\t\t\t\t\t\t\t\t\t:initFiscalDate=\"fiscalDate\"\n\t\t\t\t\t\t\t\t\t\t@emitFiscalDate=\"fiscalDate = $event\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\n\t\t\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t\t\t<v-col class=\"py-0\" sm=\"4\" cols=\"4\">\n\t\t\t\t\t\t\t\t<label class=\"label\">{{\n\t\t\t\t\t\t\t\t\t$t(\"disable_column_by\")\n\t\t\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t\t\t<v-select\n\t\t\t\t\t\t\t\t\tclass=\"mt-1\"\n\t\t\t\t\t\t\t\t\t:items=\"columnsBy\"\n\t\t\t\t\t\t\t\t\titem-text=\"text\"\n\t\t\t\t\t\t\t\t\titem-value=\"value\"\n\t\t\t\t\t\t\t\t\tv-model=\"columnBy\"\n\t\t\t\t\t\t\t\t\tclearable\n\t\t\t\t\t\t\t\t\toutlined\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col sm=\"3\" cols=\"4\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<div class=\"report_expor\">\n\t\t\t\t\t\t\t\t\t<label class=\"mb-1\">{{ $t(\"reporting_language\") }}:</label>\n\t\t\t\t\t\t\t\t\t<app-reporting-language\n\t\t\t\t\t\t\t\t\t\t:initLanguage=\"reportingLanguage\"\n\t\t\t\t\t\t\t\t\t\t@emitLanguage=\"reportingLanguage = $event\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col class=\"py-0\" sm=\"3\" cols=\"4\">\n\t\t\t\t\t\t\t\t<v-btn\n\t\t\t\t\t\t\t\t\tclass=\"white--text dv_mt\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t@click=\"search\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{{ $t(\"run_report\") }}\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"custom_expansion pt-0\">\n\t\t\t\t\t\t<kendo-datasource\n\t\t\t\t\t\t\tref=\"statementPLDS\"\n\t\t\t\t\t\t\t:data=\"statementPLList\"\n\t\t\t\t\t\t\t:schema=\"schemaDefinition\"\n\t\t\t\t\t\t\t:sort=\"sortDefinition\"\n\t\t\t\t\t\t\t:group=\"groupDefinition\"\n\t\t\t\t\t\t\t:aggregate=\"aggregateDefinition\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<kendo-grid\n\t\t\t\t\t\t\tid=\"gridSPL\"\n\t\t\t\t\t\t\tref=\"gridSPL\"\n\t\t\t\t\t\t\tclass=\"custom_grid\"\n\t\t\t\t\t\t\t:data-source-ref=\"'statementPLDS'\"\n\t\t\t\t\t\t\t:dataBound=\"dataBound\"\n\t\t\t\t\t\t\t:change=\"onGridChanges\"\n\t\t\t\t\t\t\t:selectable=\"true\"\n\t\t\t\t\t\t\t:persistSelection=\"true\"\n\t\t\t\t\t\t\t:sortable=\"true\"\n\t\t\t\t\t\t\t:column-menu=\"true\"\n\t\t\t\t\t\t\t:reorderable=\"true\"\n\t\t\t\t\t\t\t:resizable=\"true\"\n\t\t\t\t\t\t\t:noRecords=\"true\"\n\t\t\t\t\t\t\t:toolbar=\"['excel']\"\n\t\t\t\t\t\t\t:excel-file-name=\"'incomeStatement.xlsx'\"\n\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t:columns=\"columns\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<LoadingMe\n\t\t\t\t\t:isLoading=\"showLoading\"\n\t\t\t\t\t:fullPage=\"false\"\n\t\t\t\t\t:myLoading=\"true\"\n\t\t\t\t/>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\n\n/* Store */\nimport store from \"@/store\";\nconst institute = store.state.institute.institute;\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst { columnsBy } = require(\"@/scripts/default_setup/DateSearch.js\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\nexport default {\n\tcomponents: {\n\t\tLoadingMe: () => import(\"@/components/Loading\"),\n\t\t\"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n\t\t\"app-reporting-language\": () =>\n\t\t\timport(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n\t\t\"app-fiscal-date-dropdownlist\": () =>\n\t\t\timport(\"@/components/kendo_templates/FiscalDateDropDownList\"),\n\t},\n\tdata: () => ({\n\t\t// Obj\n\t\tstartDate: \"\",\n\t\tendDate: \"\",\n\t\tstatementPLList: [],\n\t\tcolumnBy: \"1\", //Default Total\n\t\tcolumnsBy: columnsBy,\n\t\tfiscalDate: institute.fiscalDate[0],\n\t\tfiscalDates: institute.fiscalDate,\n\t\tfiscalMonths: Helper.generateFiscalMonths(\n\t\t\tinstitute.fiscalDate[0].start_date,\n\t\t\tinstitute.fiscalDate[0].end_date,\n\t\t\t\"12\"\n\t\t),\n\t\tHelper: Helper,\n\t\t// Reporting Language\n\t\treportingLanguage: \"english\",\n\t\tfieldName: \"name\",\n\t\tfieldType: \"type\",\n\t\t// LodingMe\n\t\tshowLoading: false,\n\t\t/* KENDO */\n\t\tcolumns: [],\n\t\tsortDefinition: { field: \"number\", dir: \"asc\" },\n\t\tgroupDefinition: [],\n\t\taggregateDefinition: [\n\t\t\t{ field: \"balance\", aggregate: \"sum\" },\n\t\t\t{ field: \"zero\", aggregate: \"sum\" },\n\t\t\t{ field: \"one\", aggregate: \"sum\" },\n\t\t\t{ field: \"two\", aggregate: \"sum\" },\n\t\t\t{ field: \"three\", aggregate: \"sum\" },\n\t\t\t{ field: \"four\", aggregate: \"sum\" },\n\t\t\t{ field: \"five\", aggregate: \"sum\" },\n\t\t\t{ field: \"six\", aggregate: \"sum\" },\n\t\t\t{ field: \"seven\", aggregate: \"sum\" },\n\t\t\t{ field: \"eight\", aggregate: \"sum\" },\n\t\t\t{ field: \"nine\", aggregate: \"sum\" },\n\t\t\t{ field: \"ten\", aggregate: \"sum\" },\n\t\t\t{ field: \"eleven\", aggregate: \"sum\" },\n\t\t],\n\t\tschemaDefinition: {\n\t\t\tmodel: { id: \"accountUUID\" },\n\t\t},\n\t}),\n\tmethods: {\n\t\t/* KENDO */\n\t\t/* On grid changes => link to GL */\n\t\tonGridChanges() {\n\t\t\tlet grid = this.$refs.gridSPL.kendoWidget();\n\t\t\tlet selectedItem = grid.dataItem(grid.select());\n\n\t\t\tthis.$router.push({\n\t\t\t\tname: \"General Ledger\",\n\t\t\t\tparams: { \n\t\t\t\t\tinitParams: {\n\t\t\t\t\t\taccount_id: selectedItem.accountUUID,\n\t\t\t\t\t\tstart_date: new Date(this.startDate),\n\t\t\t\t\t\tend_date: new Date(this.endDate),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/* Clear Selection */\n\t\t\tgrid.clearSelection();\n\t\t},\n\t\t// Search journals\n\t\tsearch() {\n\t\t\tlet sdate = this.startDate,\n\t\t\t\tedate = this.endDate;\n\n\t\t\t// Generate Fiscal Months\n\t\t\tif (this.columnBy !== \"1\") {\n\t\t\t\tsdate = this.fiscalDate.start_date;\n\t\t\t\tedate = this.fiscalDate.end_date;\n\n\t\t\t\tthis.fiscalMonths = Helper.generateFiscalMonths(\n\t\t\t\t\tsdate,\n\t\t\t\t\tedate,\n\t\t\t\t\tthis.columnBy\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (sdate && edate) {\n\t\t\t\tsdate =\n\t\t\t\t\tkendo.toString(new Date(sdate), \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n\n\t\t\t\tedate = new Date(edate);\n\t\t\t\tedate = kendo.toString(edate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n\t\t\t} else {\n\t\t\t\tsdate = 0;\n\t\t\t\tedate = 0;\n\t\t\t}\n\n\t\t\t// Empty dataSource\n\t\t\tlet ds = this.$refs.statementPLDS.kendoWidget();\n\t\t\tds.data([]);\n\n\t\t\t// Query\n\t\t\tthis.showLoading = true;\n\t\t\tincomeStatementHandler\n\t\t\t\t.getIncomeStatement({\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart_date: sdate,\n\t\t\t\t\t\tend_date: edate,\n\t\t\t\t\t\tgroup_by: this.columnBy,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.data) {\n\t\t\t\t\t\tlet entries = [];\n\t\t\t\t\t\tres.data.forEach((value) => {\n\t\t\t\t\t\t\tlet entry = value;\n\n\t\t\t\t\t\t\t// Order\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tvalue.account_type_number == OrderNumberPL.GrossProfit.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Gross Profit\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.GrossProfit.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number == OrderNumberPL.OtherRevenue.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Other Revenue\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.OtherRevenue.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number ==\n\t\t\t\t\t\t\t\tOrderNumberPL.OperatingExpense.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Operating Expense\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.OperatingExpense.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number ==\n\t\t\t\t\t\t\t\tOrderNumberPL.OperatingIncomeEBITDA.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Operating Income (EBITDA)\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number ==\n\t\t\t\t\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Earning Before Interest And Tax(EBIT)\n\t\t\t\t\t\t\t\tentry.order =\n\t\t\t\t\t\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number ==\n\t\t\t\t\t\t\t\tOrderNumberPL.ProfitBeforeTax.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Profit Before Tax\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.ProfitBeforeTax.order;\n\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\tvalue.account_type_number ==\n\t\t\t\t\t\t\t\tOrderNumberPL.ProfitForThePeriod.number\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Profit For The Period\n\t\t\t\t\t\t\t\tentry.order = OrderNumberPL.ProfitForThePeriod.order;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tentry.order = value.account_type_number;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tentries.push(entry);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tthis.statementPLList = entries;\n\t\t\t\t\t\tthis.generateColumn();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.showLoading = false;\n\t\t\t\t});\n\t\t},\n\t\t// Row Template\n\t\taccountTmpl(dataItem) {\n\t\t\tlet name = dataItem.number;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname += \" - \" + dataItem.local_name;\n\t\t\t} else {\n\t\t\t\tname += \" - \" + dataItem.name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\ttypeGroupHeaderTmpl(dataItem) {\n\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t}\n\n\t\t\treturn \"<span class='text-bold text-black'>\" + name + \"</span>\";\n\t\t},\n\t\t/* Databound */\n\t\tdataBound(e) {\n\t\t\tlet grid = e.sender;\n\n\t\t\tgrid.dataSource.data().forEach((value) => {\n\t\t\t\tif (value.account_type_number >= 100) {\n\t\t\t\t\tlet row = grid.tbody\n\t\t\t\t\t\t.find(\"tr[data-uid='\" + value.uid + \"']\")\n\t\t\t\t\t\t.prev(\".k-grouping-row\");\n\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// Generate Columns\n\t\tgenerateColumn() {\n\t\t\tlet defaultColumns = [\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldName,\n\t\t\t\t\ttitle: i18n.t(\"account\"),\n\t\t\t\t\ttemplate: this.accountTmpl,\n\t\t\t\t\tlocked: true,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldType,\n\t\t\t\t\ttitle: \"TYPE\",\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate: this.typeGroupHeaderTmpl,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"statementGroup\",\n\t\t\t\t\ttitle: \"STATEMENT GROUP\",\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"<span class='text-bold text-black'>#=value#</span>\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"groupNature\",\n\t\t\t\t\ttitle: \"NATURE\",\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"<span class='text-bold text-black'>#=value#</span>\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tlet headerAttributes = {\n\t\t\t\t\tclass: \"table-header-cell\",\n\t\t\t\t\tstyle: \"text-align: right;padding-right: 35px; font-size: 14px\",\n\t\t\t\t},\n\t\t\t\tattributes = {\n\t\t\t\t\tclass: \"table-cell\",\n\t\t\t\t\tstyle: \"text-align: right; font-size: 14px\",\n\t\t\t\t};\n\n\t\t\tswitch (this.columnBy) {\n\t\t\t\tcase \"12\": // MONTH\n\t\t\t\t\tfor (let i = 0; i < 12; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:n}\",\n\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.columns = defaultColumns;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"4\": // QUARTER\n\t\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:n}\",\n\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.columns = defaultColumns;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"2\": // SEMI-ANNUAL\n\t\t\t\t\t// Expand Column [0] width\n\t\t\t\t\tdefaultColumns[0].width = 400;\n\n\t\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\t\tfield: NumberInWord[i],\n\t\t\t\t\t\t\ttitle: this.fiscalMonths[i],\n\t\t\t\t\t\t\tformat: \"{0:n}\",\n\t\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.columns = defaultColumns;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// TOTAL\n\t\t\t\t\t// Expand Column [0] width\n\t\t\t\t\tdefaultColumns[0].width = 600;\n\n\t\t\t\t\tdefaultColumns.push({\n\t\t\t\t\t\tfield: \"balance\",\n\t\t\t\t\t\ttitle: i18n.t(\"total\"),\n\t\t\t\t\t\tformat: \"{0:n}\",\n\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\t\tattributes: attributes,\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.columns = defaultColumns;\n\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t// On Reporint Language Changes\n\t\tonReportingLanguageChanges() {\n\t\t\tthis.fieldName = \"name\";\n\t\t\tthis.fieldType = \"type\";\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tthis.fieldName = \"local_name\";\n\t\t\t\tthis.fieldType = \"type_local_name\";\n\t\t\t}\n\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Generate column with new language\n\t\t\tthis.generateColumn();\n\t\t},\n\t\t// Generate Group By\n\t\tgenerateGroupBy() {\n\t\t\tthis.groupDefinition = {\n\t\t\t\tfield: this.fieldType,\n\t\t\t\taggregates: this.aggregateDefinition,\n\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t},\n\twatch: {\n\t\treportingLanguage() {\n\t\t\tthis.onReportingLanguageChanges();\n\t\t},\n\t},\n\tmounted() {\n\t\t// Generate Group By\n\t\tthis.generateGroupBy();\n\n\t\t// Initial Grid Columns\n\t\tthis.generateColumn();\n\t},\n};\n</script>\n\n<style scoped>\n.reports_list {\n\twidth: 100%;\n\tbackground-color: #fff;\n\tpadding: 20px 20px 5px;\n}\n.report_filter {\n\tbackground-color: #f8f8f9;\n\tpadding: 0 20px 5px 20px;\n\tposition: relative;\n}\n.dv_mt {\n\tmargin-top: 24px;\n}\n.report_export {\n\tposition: absolute;\n\ttop: 15px;\n}\n.report_total {\n\tpadding: 12.5px;\n\ttext-align: right;\n\ttext-transform: uppercase;\n\tfont-weight: 700;\n\tborder-top: 1px solid #333;\n\tborder-bottom: 1px solid #333;\n}\n.custom_expansion\n\t.v-expansion-panel-header\n\t.v-expansion-panel-header__icon\n\t.v-icon {\n\tdisplay: none !important;\n}\n.v-expansion-panel {\n\tborder-bottom: 1px solid #cccccc;\n\tborder-radius: 0;\n}\n.v-expansion-panel::before {\n\tbox-shadow: none;\n}\n.v-expansion-panel-header {\n\tpadding: 15px;\n}\n.v-expansion-panel-content__wrap {\n\tpadding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n\t.dv_mt,\n\t.dv_mt8 {\n\t\tmargin-top: 0;\n\t}\n\t.reports_list {\n\t\tmargin-top: 0;\n\t}\n}\n</style>\n"]}]}