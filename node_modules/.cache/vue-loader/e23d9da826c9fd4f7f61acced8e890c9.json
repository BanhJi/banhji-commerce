{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/service/ServicesSaleTransactions.vue?vue&type=style&index=0&id=1587c304&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/service/ServicesSaleTransactions.vue","mtime":1643016964594},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmstY2hhcnQgewogICAgaGVpZ2h0OiAxODBweDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgICBoZWlnaHQ6IDMycHggIWltcG9ydGFudDsKICAgIGJvcmRlci1ib3R0b206IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKSAhaW1wb3J0YW50Owp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0cjpmaXJzdC1jaGlsZCA+IHRkIHsKICAgIGJvcmRlci10b3A6IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKSAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZQo+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKPiB0YWJsZQo+IHRib2R5Cj4gdHI6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["ServicesSaleTransactions.vue"],"names":[],"mappingslBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ServicesSaleTransactions.vue","sourceRoot":"src/views/products_services/service","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-card color=\"white\" class=\"no_border\" elevation=\"0\">\n                <h2 class=\"mb-0 font_20\">{{ $t(\"service_report\") }}</h2>\n                <v-row>\n                    <v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n                        <app-searchdate\n                            :initStartDate=\"startDate\"\n                            @emitStartDate=\"startDate = $event\"\n                            :initEndDate=\"endDate\"\n                            @emitEndDate=\"endDate = $event\"\n                        />\n                    </v-col>\n\n                    <v-col sm=\"1\" cols=\"12\" class=\"py-0 mt-1\">\n                        <v-btn\n                            class=\"btn_search\"\n                            style=\"background-color: rgb(237, 241, 245)\"\n                            @click=\"searchTransaction('Cash Receipt')\"\n                        >\n                            <i\n                                class=\"b-search\"\n                                style=\"font-size: 18px; color:#fff !important;\"\n                            />\n                        </v-btn>\n                    </v-col>\n                    <v-col sm=\"2\" cols=\"12\" class=\"py-0 mt-1\">\n                        <v-dialog v-model=\"dialogm2\" max-width=\"500px\">\n                            <template v-slot:activator=\"{ on }\">\n                                <v-btn outlined class=\"secondary--text  capitalize float-right\" color=\"primary\" v-on=\"on\" @click=\"importShow\">\n                                    {{ $t('import') }}\n                                </v-btn>\n                            </template>\n                            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                <v-card>\n                                    <v-card-title>{{ $t('import_employee') }}</v-card-title>\n                                    <v-icon class=\"btn_close\" @click=\"dialogm2 = false\">close</v-icon>\n                                    <v-divider/>\n                                    <v-card-text style=\"background-color: #EDF1F5; color: #333333;\">\n                                        <v-row>\n                                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label  mb-0\">{{ $t(\"category\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    tage=\"Service Category\"\n                                                    :placeholder=\"$t('select_type')\"\n                                                    outlined\n                                                    v-model=\"impCategory\"\n                                                    :items=\"categories\"\n                                                    item-value=\"id\"\n                                                    :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                                    @change=\"onCategoryChanged\"\n                                                    return-object\n                                                    :rules=\"[(v) => !!v || 'Category is required']\"\n                                                    required/>\n                                                <label class=\"label  mb-0\">{{ $t(\"group\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    tage=\"Product Group\"\n                                                    :placeholder=\"$t('select_grou')\"\n                                                    outlined\n                                                    v-model=\"impGroup\"\n                                                    :disabled=\"disabled\"\n                                                    :items=\"groupss\"\n                                                    @change=\"loadSubGroup(impGroup)\"\n                                                    item-value=\"id\"\n                                                    :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                                    return-object\n                                                />\n                                                <label class=\"label  mb-0\">{{ $t(\"sub_group\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    :placeholder=\"$t('select_sub_group')\"\n                                                    outlined\n                                                    tage=\"Sub Group\"\n                                                    v-model=\"impSubGroup\"\n                                                    :items=\"subGroups\"\n                                                    :disabled=\"disabledS\"\n                                                    item-value=\"id\"\n                                                    return-object\n                                                    :item-text=\"(item) => `${item.abbr} - ${item.name}`\"\n                                                    required\n                                                />\n                                                <v-row>\n                                                    <v-col sm=\"6\" cols=\"6\" class=\"pb-0\">\n                                                        <upload-excel-component :on-success=\"handleSuccess\" :before-upload=\"beforeUpload\" />\n                                                    </v-col>\n                                                    <v-col sm=\"6\" cols=\"6\" class=\"pb-0\">\n                                                        <v-btn outlined class=\"secondary--text  capitalize float-right\" href=\"/files/member.xlsx\" download>\n                                                            <span class=\"\">{{$t('download_file')}}</span>\n                                                        </v-btn>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card-text>\n                                    <v-divider/>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                        <v-card-actions class=\"pa-4\">\n                                            <v-row>\n                                                <v-col sm=\"6\" cols=\"6\" class=\"py-0 pl-0\">\n                                                    <v-btn color=\"black\"\n                                                           outlined\n                                                           class=\" text-capitalize black--text float-left\"\n                                                           @click=\"dialogm2 = false\">{{ $t('cancel') }}\n                                                    </v-btn>\n                                                </v-col>\n                                                <v-col sm=\"6\" cols=\"6\" class=\"py-0 pr-0\">\n                                                    <v-btn color=\"secondary\"\n                                                           class=\"px-3  white--text text-capitalize float-right\"\n                                                           @click=\"saveImport\">\n                                                        {{ $t('save_close') }}\n                                                    </v-btn>\n                                                </v-col>\n                                            </v-row>\n                                        </v-card-actions>\n                                    </v-col>\n                                </v-card>\n                            </v-form>\n                        </v-dialog>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <template>\n                            <LoadingMe\n                                :isLoading=\"showLoading\"\n                                :fullPage=\"false\"\n                                type=\"loading\"\n                                :myLoading=\"true\"\n                            />\n                            <kendo-datasource\n                                ref=\"productTxnDS\"\n                                :group=\"group\"\n                                :data=\"transactions\"\n                            />\n                            <kendo-grid\n                                id=\"gridProductTXN\"\n                                class=\"grid-function\"\n                                :data-source-ref=\"'productTxnDS'\"\n                                :sortable=\"false\"\n                                :groupable=\"true\"\n                                :filterable=\"false\"\n                                :column-menu=\"true\"\n                                :editable=\"false\"\n                                :style=\"{ width: '100%' }\"\n                                :noRecords=\"true\"\n                                :scrollable-virtual=\"true\"\n                            >\n                                <kendo-grid-column\n                                    :field=\"'type'\"\n                                    :title=\"$t('type')\"\n                                    :template=\"'<span>#=type#</span>'\"\n                                    :width=\"150\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'txnDate'\"\n                                    :title=\"$t('date')\"\n                                    :template=\"\n                    '<span>#=kendo.toString(new Date(txnDate), dateFormat)#</span>'\n                  \"\n                                    :width=\"150\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'name'\"\n                                    :title=\"$t('name')\"\n                                    :template=\"'<span>#=name#</span>'\"\n                                    :width=\"200\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'txnNumber'\"\n                                    :title=\"$t('reference_no')\"\n                                    :template=\"referenceTemplate\"\n                                    :width=\"200\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'itemName'\"\n                                    :title=\"$t('item')\"\n                                    :template=\"'<span>#=itemName || ``#</span>'\"\n                                    :width=\"150\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'uom'\"\n                                    :title=\"$t('txn_uom')\"\n                                    :template=\"UOMTemplate\"\n                                    :width=\"150\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'qty'\"\n                                    :title=\"$t('txn_qty')\"\n                                    :template=\"\n                    '<span>#=kendo.toString(qty, decimalFormat)#</span>'\n                  \"\n                                    :width=\"150\"\n                                    :attributes=\"{ style: 'text-align: right' }\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'exchangePrice'\"\n                                    :title=\"$t('price')\"\n                                    :template=\"\n                    '<span>#=kendo.toString(exchangePrice, decimalFormat)#</span>'\n                  \"\n                                    :width=\"150\"\n                                    :attributes=\"{ style: 'text-align: right' }\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'exchangeBAmount'\"\n                                    :title=\"$t('amount')\"\n                                    :template=\"\n                    '<span>#=kendo.toString(exchangeBAmount, decimalFormat)#</span>'\n                  \"\n                                    :width=\"180\"\n                                    :attributes=\"{ style: 'text-align: right' }\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n\n                                <kendo-grid-column\n                                    :field=\"'buom'\"\n                                    :title=\"$t('base_uom')\"\n                                    :template=\"BUOMTemplate\"\n                                    :width=\"150\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n\n                                <kendo-grid-column\n                                    :field=\"'bQty'\"\n                                    :title=\"$t('base_qty')\"\n                                    :template=\"\n                    '<span>#=kendo.toString(bQty, decimalFormat)#</span>'\n                  \"\n                                    :width=\"150\"\n                                    :attributes=\"{ style: 'text-align: right' }\"\n                                    :headerAttributes=\"{\n                    style: 'background-color: #EDF1F5',\n                  }\"\n                                />\n                            </kendo-grid>\n                        </template>\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\nimport SearchDateComponent from \"@/components/custom_templates/SearchDate\";\nimport LinkTemplate from \"@/components/kendo_templates/LinkTemplate\";\nimport kendo from \"@progress/kendo-ui\";\nimport ItemLineModel from \"@/scripts/cash-receipt/model/ItemLine\";\nimport customerHandler from \"@/scripts/customerHandler\";\nimport UploadExcelComponent from \"@/components/upload_excel/TimeCard\";\nimport categoryHandler from \"@/scripts/categoryHandler\";\nimport groupHandler from \"@/scripts/groupHandler\";\nimport subGroupHandler from \"@/scripts/subGroupHandler\";\nimport uomHandler from \"@/scripts/uomHandler\";\nimport priceLevelHandler from \"@/scripts/priceLevelHandler\";\n\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst itemLineModel = new ItemLineModel({});\nexport default {\n    data: () => ({\n        impCategory: {},\n        disabled: true,\n        disabledS: true,\n        dialogm2: false,\n        valid: true,\n        startDate: new Date().toISOString().substr(0, 10),\n        endDate: new Date().toISOString().substr(0, 10),\n        mDateSorter: \"Today\",\n        dateSorters: [\"Today\", \"This Week\", \"This Month\", \"This Year\"],\n        group: {field: \"itemName\"},\n        transactions: [],\n        dateFormat: itemLineModel.dateFormat,\n        showLoading: false,\n        decimalFormat: \"n2\",\n        categories: [],\n        groups: [],\n        groupss: [],\n        subGroups: [],\n        uoms: [],\n        impGroup: {},\n        impSubGroup: {},\n        priceLevels: []\n    }),\n    components: {\n        \"app-searchdate\": SearchDateComponent,\n        LoadingMe: () => import(`@/components/Loading`),\n        'upload-excel-component':UploadExcelComponent,\n    },\n    methods: {\n        importShow(){\n            if(this.categories.length > 0){\n                this.impCategory = this.categories[0]\n                this.onCategoryChanged()\n            }\n        },\n        saveImport(){\n            if(this.tableData.length > 0) {\n                let data ={\n                    data: this.tableData\n                }\n                this.showLoading = true\n                window.console.log(data, 'here data')\n                customerHandler.importServiceCreate(data).then(response => {\n                    this.showLoading = false\n                    if (response.data.statusCode === 201) {\n                        this.$refs.form.reset()\n                        this.$snotify.success('Successfully')\n                        this.dialogm2 = false\n                    }\n                }).catch(e => {\n                    this.showLoading = false\n                    this.$snotify.error('Something went wrong')\n                    this.errors.push(e)\n                })\n            }\n        },\n        beforeUpload(file) {\n            const isLt1M = file.size / 1024 / 1024 < 1\n            if (isLt1M) {\n                return true\n            }\n            this.$message({\n                message: 'Please do not upload files larger than 1m in size.',\n                type: 'warning'\n            })\n            return false\n        },\n        handleSuccess({ results, header }) {\n            results.forEach(element => {\n                let c = this.impCategory\n                element.typeIs = 'Service'\n                let uo = this.uoms.filter((obj) => {return obj.name == element.uom})\n                if(uo.length > 0){\n                    element.uom = uo[0]\n                }else{\n                    this.$snotify.error('uom not found!')\n                    return\n                }\n                element.category = c\n                element.group = this.impGroup\n                element.subGroup = this.impSubGroup\n                let p = this.priceLevels.filter((obj) => {return obj.name == element.priceLevel})\n                if(p.length > 0){\n                    element.priceLevel = p[0]\n                }else{\n                    this.$snotify.error('price level not found!')\n                    return\n                }\n                element.warehouse = {}\n                element.base = 100\n                element.value = element.price\n                element.incomeAcc = c.account.hasOwnProperty(\"incomeAcc\") ? c.account.incomeAcc : {}\n                element.costOfGoodsSoldAcc = c.account.hasOwnProperty(\"costOfGoodsSoldAcc\") ? c.account.costOfGoodsSoldAcc : {}\n                element.defaultTax = c.tax.hasOwnProperty(\"defaultTax\") ? c.tax.defaultTax : {}\n                element.purchaseTax = c.tax.hasOwnProperty(\"purchaseTax\") ? c.tax.purchaseTax : {}\n                element.specificTax = c.tax.hasOwnProperty(\"specificTax\") ? c.tax.specificTax : {}\n                element.otherTax =  c.tax.hasOwnProperty(\"otherTax\") ? c.tax.otherTax : {}\n                element.canBeSold = false\n                element.canBeSubContracted = false\n                element.isDelayedRevenue = false\n                element.isConsignmentItem = false\n                element.canBeRecurringSubscribed = false\n                element.isMeteredService = false\n                element.isTimeBounded = false\n                element.loggedUser = this.loggedUser\n                element.type = 'new'\n                element.saveOption = 'imported'\n            });\n            this.tableData = results\n            this.tableHeader = header\n            window.console.log(this.tableData, this.tableHeader, 'dataaaaa')\n        },\n        onSorterChanges(val) {\n            let today = new Date();\n            switch (val) {\n                case \"Today\":\n                    this.startDate = kendo.toString(today, \"yyyy-MM-dd\");\n                    this.endDate = kendo.toString(today, \"yyyy-MM-dd\");\n\n                    break;\n                case \"This Week\":\n                    var first = today.getDate() - today.getDay(),\n                        last = first + 6;\n\n                    this.startDate = kendo.toString(\n                        new Date(today.setDate(first)),\n                        \"yyyy-MM-dd\"\n                    );\n                    this.endDate = kendo.toString(\n                        new Date(today.setDate(last)),\n                        \"yyyy-MM-dd\"\n                    );\n\n                    break;\n                case \"This Month\":\n                    this.startDate = kendo.toString(\n                        new Date(today.getFullYear(), today.getMonth(), 1),\n                        \"yyyy-MM-dd\"\n                    );\n                    this.endDate = kendo.toString(\n                        new Date(today.getFullYear(), today.getMonth(), 31),\n                        \"yyyy-MM-dd\"\n                    );\n\n                    break;\n                case \"This Year\":\n                    this.startDate = kendo.toString(\n                        new Date(today.getFullYear(), 0, 1),\n                        \"yyyy-MM-dd\"\n                    );\n                    this.endDate = kendo.toString(\n                        new Date(today.getFullYear(), 11, 31),\n                        \"yyyy-MM-dd\"\n                    );\n\n                    break;\n                default:\n                    this.startDate = \"\";\n                    this.endDate = \"\";\n            }\n        },\n        async searchTransaction() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    const startDate = this.startDate;\n                    const endDate = this.endDate;\n                    let strFilter =\n                        \"?start=\" + startDate + \"&end=\" + endDate + \"&item=0&group=1\";\n                    billingHandler.inventoryListByFunction(strFilter).then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.transactions = res.data.data;\n                        }\n                        this.showLoading = false;\n                    });\n                }, 10);\n            });\n        },\n        referenceTemplate(data) {\n            let url = `#`;\n            if (data.type === \"Invoice\") {\n                url = `invoice_view/${data.id}`;\n            } else if (data.type === \"Sale Quote\") {\n                url = `sale_quote_view/${data.id}`;\n            } else if (data.type === \"Delayed Invoice\") {\n                url = `delayed_invoice_view/${data.id}`;\n            } else if (data.type === \"Sale Order\") {\n                url = `sale_order_view/${data.id}`;\n            } else if (data.type === \"Purchase Order\") {\n                url = `purchase_order_view/${data.id}`;\n            } else if (data.type === \"Credit Memo\") {\n                url = `sale_return_view/${data.id}`;\n            } else if (data.type === \"Debit Memo\") {\n                url = `purchase_return_view/${data.id}`;\n            } else if (data.type === \"Inventory Adjustment\") {\n                url = `inventory_adjustment_view/${data.id}`;\n            } else if (data.type === \"Purchase\") {\n                url = `credit_purchase_view/${data.id}`;\n            }\n\n            let args = {\n                text: data.txnNumber,\n                url: url,\n                data: data,\n            };\n            return {\n                template: LinkTemplate,\n                templateArgs: args,\n            };\n        },\n        UOMTemplate(dataItem) {\n            if (dataItem.hasOwnProperty(\"uom\")) {\n                const uom = dataItem.uom;\n                if (uom.hasOwnProperty(\"uom\")) {\n                    if (uom.uom.hasOwnProperty(\"name\")) {\n                        return uom.uom.name;\n                    }\n                }\n            }\n            return ``;\n        },\n        BUOMTemplate(dataItem) {\n            if (dataItem.hasOwnProperty(\"buom\")) {\n                const buom = dataItem.buom;\n                if (buom.hasOwnProperty(\"name\")) {\n                    return buom.name;\n                }\n            }\n            return ``;\n        },\n        async loadCategory() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    categoryHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.categories = res;\n                        // window.console.log(res)\n                        this.categories = this.categories.filter(i => i.hasOwnProperty('type') && i.type.name === 'Service')\n                    });\n                }, 10);\n            });\n        },\n        async loadGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    groupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.groups = res.filter(m => m.category.hasOwnProperty('type') && m.category.type.name === 'Service');\n                    });\n                }, 10);\n            });\n        },\n        async loadSubGroup(group) {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    subGroupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        if (group) {\n                            if (group.hasOwnProperty('id')) {\n                                this.subGroups = res.filter(m => m.group.id === group.id)\n                                this.disabledS = false\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async onCategoryChanged() {\n            this.disabled = false\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    // this.loadCategoryAccountAndTax()\n                    this.groupss = this.groups.filter(\n                        (m) => m.category.id === this.impCategory.id\n                    );\n                }, 10);\n            });\n        },\n        async loadPriceLevel() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    priceLevelHandler.get().then(res => {\n                        this.priceLevels = res\n                    })\n                }, 10)\n            })\n        },\n        async loadUOM() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    uomHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.uoms = res;\n                    });\n                }, 10);\n            });\n        },\n    },\n    computed: {},\n    mounted: async function () {\n        await this.loadCategory();\n        await this.loadGroup();\n        await this.loadUOM()\n        await this.loadPriceLevel()\n    },\n};\n</script>\n<style scoped>\n.k-chart {\n    height: 180px;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n    border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}