{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/AccountSecondary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/AccountSecondary.vue","mtime":1642155812564},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBBY2NvdW50TW9kZWwgZnJvbSAiQC9zY3JpcHRzL21vZGVsL0FjY291bnQiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1NlY29uZGFyeUFjY291bnREcm9wRG93bkxpc3QnLAogICAgcHJvcHM6IHsKICAgICAgICBpbml0QWNjb3VudDogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgfSwKICAgICAgICBpbml0QWNjb3VudFR5cGVDb2RlOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICB9LAogICAgICAgIGluaXRBY2NvdW50R3JvdXBDb2RlOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICB9LAogICAgICAgIGluaXRQcmltYXJ5QWNjb3VudElkOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICB9LAogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWNjb3VudCA6IG5ldyBBY2NvdW50TW9kZWwoKSwKICAgICAgICAgICAgYWNjb3VudHMgOiBbXSwKICAgICAgICAgICAgbG9hZGluZyA6IGZhbHNlLAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgaW5pdGlhbGl6ZSAoKSB7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDYWxsIExpc3QKICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FjY291bnRpbmcvZ2V0U2Vjb25kYXJ5QWNjb3VudHMnKTsKCiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgaW5pdGlhbERhdGEoKXsKICAgICAgICAgICAgdGhpcy5hY2NvdW50ID0gdGhpcy5pbml0QWNjb3VudDsKICAgICAgICB9LAogICAgICAgIGVtaXRBY2NvdW50KCkgewogICAgICAgICAgICBsZXQgYWNjb3VudCA9IG5ldyBBY2NvdW50TW9kZWwoKTsKICAgICAgICAgICAgaWYodGhpcy5hY2NvdW50KXsKICAgICAgICAgICAgICAgIGFjY291bnQgPSB0aGlzLmFjY291bnQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy4kZW1pdCgnZW1pdEFjY291bnQnLCBhY2NvdW50KTsKICAgICAgICB9LAogICAgICAgIGZpbHRlckJ5VHlwZUNvZGUoKXsKICAgICAgICAgICAgdGhpcy5hY2NvdW50cyA9IHRoaXMuc2Vjb25kYXJ5QWNjb3VudHMuZmlsdGVyKGkgPT4gaS50eXBlX2NvZGUgPT09IHRoaXMuaW5pdEFjY291bnRUeXBlQ29kZSk7CiAgICAgICAgfSwKICAgICAgICBmaWx0ZXJCeUdyb3VwQ29kZSgpewogICAgICAgICAgICB0aGlzLmFjY291bnRzID0gdGhpcy5zZWNvbmRhcnlBY2NvdW50cy5maWx0ZXIoaSA9PiBpLmdyb3VwX2NvZGUgPT09IHRoaXMuaW5pdEFjY291bnRHcm91cENvZGUpOwogICAgICAgIH0sCiAgICAgICAgZmlsdGVyQnlQcmltYXJ5QWNjb3VudElkICgpIHsKICAgICAgICAgICAgdGhpcy5hY2NvdW50cyA9IHRoaXMuc2Vjb25kYXJ5QWNjb3VudHMuZmlsdGVyKGkgPT4gaS5wcmltYXJ5X2FjY291bnRfdXVpZCA9PT0gdGhpcy5pbml0UHJpbWFyeUFjY291bnRJZCk7CiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGluaXRBY2NvdW50OiAiaW5pdGlhbERhdGEiLAogICAgICAgIGluaXRBY2NvdW50VHlwZUNvZGUgOiAiZmlsdGVyQnlUeXBlQ29kZSIsCiAgICAgICAgaW5pdFByaW1hcnlBY2NvdW50SWQgOiAiZmlsdGVyQnlQcmltYXJ5QWNjb3VudElkIgogICAgfSwKICAgIGNvbXB1dGVkOiBtYXBTdGF0ZSh7CiAgICAgICAgc2Vjb25kYXJ5QWNjb3VudHM6IHN0YXRlID0+IHN0YXRlLmFjY291bnRpbmcuc2Vjb25kYXJ5QWNjb3VudHMsCiAgICAgICAgbGFuZ3VhZ2U6IHN0YXRlID0+IHN0YXRlLmFjY291bnRpbmcuYWNjb3VudExhbmd1YWdlLAogICAgfSksCiAgICBjcmVhdGVkKCkgewogICAgICAgIC8qIEluaXRpYWxpemUgKi8KICAgICAgICB0aGlzLmluaXRpYWxpemUoKTsKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIC8qIEluaXRpYWwgRGF0YSAqLwogICAgICAgIHRoaXMuaW5pdGlhbERhdGEoKTsKICAgIH0KfQo="},{"version":3,"sources":["AccountSecondary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSecondary.vue","sourceRoot":"src/components/dropdownlist","sourcesContent":["<template>\n    <v-select\n        class=\"mt-1\"\n        :loading=\"loading\"\n        placeholder=\"Select Secondary Account\"\n        v-model=\"account\"\n        :items=\"accounts\"\n        :item-text=\"(item) => `${item.number} - ${language ==='English' ? item.name : item.local_name}`\"\n        item-value=\"uuid\"\n        @change=\"emitAccount\"\n        return-object\n        clearable\n        outlined>\n        <template slot=\"item\" slot-scope=\"{ item }\">\n             {{ item.number }} - {{ language ==='English' ? item.name : item.local_name }}\n        </template>\n    </v-select>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\nimport AccountModel from \"@/scripts/model/Account\";\n\nexport default {\n    name: 'SecondaryAccountDropDownList',\n    props: {\n        initAccount: {\n            type: Object,\n        },\n        initAccountTypeCode: {\n            type: Number,\n        },\n        initAccountGroupCode: {\n            type: Number,\n        },\n        initPrimaryAccountId: {\n            type: String,\n        },\n    },\n    data() {\n        return {\n            account : new AccountModel(),\n            accounts : [],\n            loading : false,\n        }\n    },\n    methods: {\n        async initialize () {\n            this.loading = true;\n            \n            // Call List\n            await this.$store.dispatch('accounting/getSecondaryAccounts');\n\n            this.loading = false;\n        },\n        initialData(){\n            this.account = this.initAccount;\n        },\n        emitAccount() {\n            let account = new AccountModel();\n            if(this.account){\n                account = this.account;\n            }\n            this.$emit('emitAccount', account);\n        },\n        filterByTypeCode(){\n            this.accounts = this.secondaryAccounts.filter(i => i.type_code === this.initAccountTypeCode);\n        },\n        filterByGroupCode(){\n            this.accounts = this.secondaryAccounts.filter(i => i.group_code === this.initAccountGroupCode);\n        },\n        filterByPrimaryAccountId () {\n            this.accounts = this.secondaryAccounts.filter(i => i.primary_account_uuid === this.initPrimaryAccountId);\n        },\n    },\n    watch: {\n        initAccount: \"initialData\",\n        initAccountTypeCode : \"filterByTypeCode\",\n        initPrimaryAccountId : \"filterByPrimaryAccountId\"\n    },\n    computed: mapState({\n        secondaryAccounts: state => state.accounting.secondaryAccounts,\n        language: state => state.accounting.accountLanguage,\n    }),\n    created() {\n        /* Initialize */\n        this.initialize();\n    },\n    mounted() {\n        /* Initial Data */\n        this.initialData();\n    }\n}\n</script>"]}]}