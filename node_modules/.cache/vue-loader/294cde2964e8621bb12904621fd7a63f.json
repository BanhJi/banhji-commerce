{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/insightnpo/FundReceiptGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/insightnpo/FundReceiptGraph.vue","mtime":1638843525750},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBrZW5kbyBmcm9tICdAcHJvZ3Jlc3Mva2VuZG8tdWknOwppbXBvcnQgeyBpMThuIH0gZnJvbSAiQC9pMThuIjsKaW1wb3J0IEhlbHBlciBmcm9tICJAL2hlbHBlci5qcyI7CmltcG9ydCB7IENoYXJ0IH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWNoYXJ0cy12dWUtd3JhcHBlcic7Cgpjb25zdCBKb3VybmFsSGFuZGxlciA9IHJlcXVpcmUoIkAvc2NyaXB0cy9qb3VybmFsSGFuZGxlciIpOwpjb25zdCBFbnRpdHlUeXBlID0gcmVxdWlyZSgiQC9zY3JpcHRzL2RlZmF1bHRfc2V0dXAvRW50aXR5VHlwZSIpOwpjb25zdCBBY2NvdW50VHlwZUNvZGUgPSByZXF1aXJlKCJAL3NjcmlwdHMvZGVmYXVsdF9zZXR1cC9BY2NvdW50VHlwZUNvZGUiKTsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdGdW5kUmVjZWlwdEdyYXBoJywKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICAnY2hhcnQnOiBDaGFydCwKICAgICAgICBMb2FkaW5nTWU6ICgpID0+IGltcG9ydChgQC9jb21wb25lbnRzL0xvYWRpbmdgKSwKICAgIH0sCiAgICBkYXRhOiBmdW5jdGlvbigpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0cmFuc2FjdGlvbnMgOiBbXSwKICAgICAgICAgICAgdHJhbnNhY3Rpb25MaXN0IDogW10sCiAgICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICAgIGZpZWxkOiAnYW1vdW50JywKICAgICAgICAgICAgICAgIGNhdGVnb3J5RmllbGQ6ICJtb250aF9vZiIsCiAgICAgICAgICAgIH1dLAogICAgICAgICAgICBjYXRlZ29yeVRlbXBsYXRlOiAiIzoga2VuZG8udG9TdHJpbmcobmV3IERhdGUodmFsdWUpLCAnTU1NJykgIyIsCiAgICAgICAgICAgIHRvb2x0aXB0ZW1wbGF0ZTogIiM9IGtlbmRvLnRvU3RyaW5nKG5ldyBEYXRlKGRhdGFJdGVtLm1vbnRoX29mKSwgJ01NTU0nKSAjOiAjPSBrZW5kby50b1N0cmluZyh2YWx1ZSwgJ24nKSAjIiwKICAgICAgICAgICAgc2hvd0xvYWRpbmcgOiBmYWxzZSwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGluaXRpYWxpemUoKXsKICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIEpvdXJuYWxIYW5kbGVyLmdldEpvdXJuYWxCeVRyYW5zYWN0aW9uVHlwZShFbnRpdHlUeXBlLkZVTkRfUkVDRUlQVCwgewogICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgYXNfb2ZfZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnN1YnN0cigwLCAxMCkgKyAiVDIzOjU5OjU5Ljk5OVoiLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLnRoZW4oKHJlcyk9PnsKICAgICAgICAgICAgICAgIGlmKHJlcyl7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50cmFuc2FjdGlvbnMgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgICAgICB0aGlzLmJpbmREYXRhKCk7CiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRzbm90aWZ5LmVycm9yKGkxOG4udCgiZXJyb3Jfc29tZXRoaW5nX3dyb25nIikpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICAuZmluYWxseSgoKT0+ewogICAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIGJpbmREYXRhKCl7CiAgICAgICAgICAgIGxldCBnID0ge30sCiAgICAgICAgICAgICAgICBmaXNjYWxEYXRlID0gSGVscGVyLmdldEZpc2NhbERhdGVCeURhdGUobmV3IERhdGUoKSksCiAgICAgICAgICAgICAgICBzZGF0ZSA9IG5ldyBEYXRlKGZpc2NhbERhdGUuc3RhcnRfZGF0ZSksCiAgICAgICAgICAgICAgICBlZGF0ZSA9IG5ldyBEYXRlKGZpc2NhbERhdGUuZW5kX2RhdGUpOwoKICAgICAgICAgICAgLyogU2V0IGRlZmF1bHQgMTIgbW9udGhzICovCiAgICAgICAgICAgIHdoaWxlIChzZGF0ZSA8PSBlZGF0ZSkgewogICAgICAgICAgICAgICAgbGV0IGQgPSBrZW5kby50b1N0cmluZyhzZGF0ZSwgInl5eXktTU0iKTsKICAgICAgICAgICAgICAgIGdbZF0gPSB7CiAgICAgICAgICAgICAgICAgICAgbW9udGhfb2YgOiBkLAogICAgICAgICAgICAgICAgICAgIGFtb3VudCA6IDAsCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgLy8gTmV4dCBNb250aAogICAgICAgICAgICAgICAgc2RhdGUuc2V0TW9udGgoc2RhdGUuZ2V0TW9udGgoKSArIDEpOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aGlzLnRyYW5zYWN0aW9ucy5mb3JFYWNoKHZhbHVlID0+IHsKICAgICAgICAgICAgICAgIC8qIEZpbHRlciBSZXZlbnVlIEFjY291bnRzICovCiAgICAgICAgICAgICAgICBpZih2YWx1ZS5hY2NvdW50LnR5cGVfY29kZSA9PT0gQWNjb3VudFR5cGVDb2RlLlJFVkVOVUUpewogICAgICAgICAgICAgICAgICAgIGdbdmFsdWUuam91cm5hbC5tb250aF9vZl0uYW1vdW50ICs9IHZhbHVlLmFtb3VudCAqIC0xOyAvKiBSZXZlcnNlIG5lZ2F0aXZlIGFtb3VudCBvZiBDciAqLwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIC8qIEJpbmQgZGF0YSAqLwogICAgICAgICAgICB0aGlzLnRyYW5zYWN0aW9uTGlzdCA9IE9iamVjdC52YWx1ZXMoZyk7CiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKXsKICAgICAgICB0aGlzLmluaXRpYWxpemUoKTsKICAgIH0KfQo="},{"version":3,"sources":["FundReceiptGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FundReceiptGraph.vue","sourceRoot":"src/views/customers/insightnpo","sourcesContent":["<template>\n    <div>\n        <LoadingMe\n            :isLoading=\"showLoading\"\n            :fullPage=\"false\"\n            :myLoading=\"true\"\n            :type=\"'loading'\"\n        />\n\n        <chart ref=\"chart\"\n            :data-source=\"transactionList\"\n            :legend-visible=\"false\"\n            :chart-area-background=\"''\"\n            :series-defaults-type=\"'line'\"\n            :series-defaults-style=\"'smooth'\"\n            :value-axis-line-visible=\"false\"\n            :category-axis-major-grid-lines-visible=\"false\"\n            :category-axis-labels-rotation=\"'auto'\"\n            :category-axis-labels-template=\"categoryTemplate\"\n            :tooltip-visible=\"true\"\n            :tooltip-template=\"tooltiptemplate\"\n            :series=\"series\"\n            :theme=\"'sass'\" />\n    </div>\n</template>\n\n<script>\nimport kendo from '@progress/kendo-ui';\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { Chart } from '@progress/kendo-charts-vue-wrapper';\n\nconst JournalHandler = require(\"@/scripts/journalHandler\");\nconst EntityType = require(\"@/scripts/default_setup/EntityType\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode\");\n\nexport default {\n    name: 'FundReceiptGraph',\n    components: {\n        'chart': Chart,\n        LoadingMe: () => import(`@/components/Loading`),\n    },\n    data: function() {\n        return {\n            transactions : [],\n            transactionList : [],\n            series: [{\n                field: 'amount',\n                categoryField: \"month_of\",\n            }],\n            categoryTemplate: \"#: kendo.toString(new Date(value), 'MMM') #\",\n            tooltiptemplate: \"#= kendo.toString(new Date(dataItem.month_of), 'MMMM') #: #= kendo.toString(value, 'n') #\",\n            showLoading : false,\n        }\n    },\n    methods: {\n        initialize(){\n            this.showLoading = true;\n            JournalHandler.getJournalByTransactionType(EntityType.FUND_RECEIPT, {\n                params: {\n                    as_of_date: new Date().toISOString().substr(0, 10) + \"T23:59:59.999Z\",\n                },\n            })\n            .then((res)=>{\n                if(res){\n                    this.transactions = res.data;\n                    this.bindData();\n                }else{\n                    this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                }\n            })\n            .finally(()=>{\n                this.showLoading = false;\n            });\n        },\n        bindData(){\n            let g = {},\n                fiscalDate = Helper.getFiscalDateByDate(new Date()),\n                sdate = new Date(fiscalDate.start_date),\n                edate = new Date(fiscalDate.end_date);\n\n            /* Set default 12 months */\n            while (sdate <= edate) {\n                let d = kendo.toString(sdate, \"yyyy-MM\");\n                g[d] = {\n                    month_of : d,\n                    amount : 0,\n                }\n\n                // Next Month\n                sdate.setMonth(sdate.getMonth() + 1);\n            }\n\n            this.transactions.forEach(value => {\n                /* Filter Revenue Accounts */\n                if(value.account.type_code === AccountTypeCode.REVENUE){\n                    g[value.journal.month_of].amount += value.amount * -1; /* Reverse negative amount of Cr */\n                }\n            });\n\n            /* Bind data */\n            this.transactionList = Object.values(g);\n        }\n    },\n    mounted(){\n        this.initialize();\n    }\n}\n</script>"]}]}