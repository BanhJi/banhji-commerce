{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/settings/TypeOfLoans.vue?vue&type=style&index=0&id=a06c2fdc&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/settings/TypeOfLoans.vue","mtime":1638499443241},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWNjX2dyb3VwIGhlYWRlciB7CiAgICBoZWlnaHQ6IDEwcHggIWltcG9ydGFudDsKfQoKdGFibGUuYWNjX2dyb3VwIHRyIHRkIHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjOwogICAgcGFkZGluZzogOHB4OwogICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKfQoKdGFibGUuYWNjX2dyb3VwIHRyIHRkOmZpcnN0LWNoaWxkIHsKICAgIGZvbnQtd2VpZ2h0OiA3MDA7Cn0KCnRhYmxlLmFjY19ncm91cCB0ciB0ZDpsYXN0LWNoaWxkIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLnYtY2FyZF9fYWN0aW9ucyAudi1idG4udi1idG4gewogICAgcGFkZGluZzogMCAxNnB4Owp9CgouZXhjaGFuZ2UtdGFibGUudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZQo+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKPiB0YWJsZQo+IHRoZWFkCj4gdHIKPiB0aCB7CiAgICBmb250LWZhbWlseTogIk5pcmFkZWktQm9sZCIsIHNlcmlmOwogICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwICFpbXBvcnRhbnQ7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzAwMCAhaW1wb3J0YW50OwogICAgZm9udC1zaXplOiAxNXB4ICFpbXBvcnRhbnQ7Cn0KCi5leGNoYW5nZS10YWJsZS50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGhlYWQKPiB0cgo+IHRkIHsKICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7CiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDsKfQoKLmV4Y2hhbmdlLXRhYmxlLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUKPiAudi1kYXRhLXRhYmxlX193cmFwcGVyCj4gdGFibGUKPiB0Ym9keQo+IHRyOmxhc3QtY2hpbGQKdGQgewogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDAgIWltcG9ydGFudDsKfQoKLmZ1bmN0aW9uX2Zvb3RlciB7CiAgICBwYWRkaW5nOiAxNXB4OwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKfQo="},{"version":3,"sources":["TypeOfLoans.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"TypeOfLoans.vue","sourceRoot":"src/views/finances/settings","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"10\" cols=\"12\" class=\"py-0\">\n            <h2 class=\"font_20 mb-0\">{{ $t(\"type_of_loan\") }}</h2>\n            <p class=\"mb-0\">\n                This payment method can be applicable for customer collections, supplier\n                payment, and other cash related transaction\n            </p>\n        </v-col>\n        <v-col sm=\"2\" cols=\"12\">\n            <v-dialog v-model=\"dialogm2\" max-width=\"380px\">\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn\n                        color=\"primary\"\n                        class=\" float-right capitalize white--text\"\n                        v-on=\"on\"\n                        @click=\"onNewClick\"\n                    >\n                        {{ $t(\"create_new\") }}\n                    </v-btn>\n                </template>\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"type_of_loan\") }}</v-card-title>\n                        <v-icon @click=\"dialogm2 = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-row>\n                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                <label class=\"label\">{{ $t(\"code\") }}</label>\n                                <v-text-field\n                                    class=\"mt-1\"\n                                    outlined\n                                    name=\"code\"\n                                    placeholder=\"\"\n                                    v-model=\"loanType.code\"\n                                />\n\n                                <label class=\"label\">{{ $t(\"name\") }}</label>\n                                <v-text-field\n                                    class=\"mt-1\"\n                                    outlined\n                                    name=\"name\"\n                                    placeholder=\"\"\n                                    v-model=\"loanType.name\"\n                                />\n                                <label class=\"label\">{{ $t(\"description\") }}</label>\n                                <v-text-field\n                                    class=\"mt-1\"\n                                    outlined\n                                    name=\"description\"\n                                    placeholder=\"\"\n                                    v-model=\"loanType.description\"\n                                />\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n\n                    <v-card-actions class=\"modal_footer d-flex justify-space-between\">\n                        <v-btn\n                            outlined\n                            color=\"primary\"\n                            class=\"black--text float-left\"\n                            @click=\"dialogm2 = false\"\n                        >{{ $t(\"cancel\") }}\n                        </v-btn\n                        >\n                        <v-btn\n                            color=\"primary\"\n                            class=\"btn_save_close float-right\"\n                            @click.native=\"onSaveClick(false, option)\"\n                        >\n                            {{ $t(\"save_close\") }}\n                        </v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </v-col>\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"attachment_table\">\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-uppercase\">{{ $t(\"code\") }}</th>\n                                <th class=\"text-uppercase\">{{ $t(\"name\") }}</th>\n                                <th class=\"text-uppercase\">{{ $t(\"description\") }}</th>\n                                <th style=\"width: 50px\"/>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr v-for=\"type in loanTypes\" v-bind:key=\"type.id\">\n                                <td class=\"\">{{ type.code }}</td>\n                                <td class=\"\">{{ type.name }}</td>\n                                <td class=\"\">{{ type.description }}</td>\n                                <td style=\"width:90px;\" v-if=\"type.isSystem !== 1\">\n                                    <v-btn class=\"btn_edit_setting\" @click=\"onEditClick(type)\">\n                                        <v-icon class=\"white--text\" size=\"12\">fa fa-pen</v-icon>\n                                        <span class=\"capitalize ml-1 white--text font_14\">{{ $t('edit') }}</span>\n                                    </v-btn>\n                                </td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n        </v-row>\n        <LoadingMe\n            :isLoading=\"showLoading\"\n            :fullPage=\"true\"\n            :myLoading=\"true\" />\n    </v-row>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport {LoanTypeModel} from \"@/scripts/model/AppModels\";\n\nconst {entityTypeHandler} = require(\"@/scripts/AppHandlers\");\nconst {EntityType} = require(\"@/scripts/default_setup/Collections\");\n\nconst option = {\n    update: 1,\n    create: 2,\n    detele: 0,\n};\nexport default {\n    components: {\n        LoadingMe: () => import(\"@/components/Loading\"),\n    },\n    data: () => ({\n        showLoading: false,\n        dialogm1: \"\", // Name should be meaningful\n        dialogm2: false,\n        compeletLoading: true,\n        isFullpage: false,\n        snackbar: false,\n        textStatus: \"Success\",\n        color: \"#3DA72E\", // use  css for all color  and other that handle by csss\n        // timeout: 6000,// should be const\n        x: \"right\", // Name must be meaningful\n        y: \"top\", // name muist be meaning\n        loanTypes: [],\n        headers: [\n            {\n                text: i18n.t(\"name\"),\n                align: \"start\",\n                sortable: false,\n                value: \"name\",\n            },\n            {text: i18n.t(\"description\"), value: \"description\", sortable: false},\n            {\n                text: i18n.t(\"account_type\"),\n                value: \"account_type\",\n                sortable: false,\n                align: \" d-none\",\n            },\n            {\n                text: i18n.t(\"account_type\"),\n                value: \"account_type.name\",\n                sortable: false,\n            },\n            {text: i18n.t(\"action\"), value: \"actions\", sortable: false},\n        ],\n        option: option.create, //what is 1 meant?\n\n        loanType: new LoanTypeModel(),\n    }),\n    watch: {\n        dialogm2(val) {\n            val || this.close();\n        },\n    },\n    methods: {\n        async onEditClick(value) {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.loanType = value;\n                    this.dialogm2 = true;\n                    this.option = 2;\n                }, 300);\n            });\n        },\n        onNewClick() {\n            this.option = 1;\n            this.clear();\n        },\n        onSaveClick(isNew) {\n            this.showLoading = true\n            entityTypeHandler.save(EntityType.LOAN, this.loanType).then((res) => {\n                this.showLoading = false\n                //dont use number what is 200 stand for?\n                let isSuccess = res.status === 200;\n                if (isSuccess) {\n                    this.snackbar = true;\n                    this.textStatus = \"Success\";\n                    this.color = \"#3DA72E\"; // avoid using magic value. declare an variable with name. activeColor, disactiveColor\n                    if (isNew === false) {\n                        this.dialogm2 = false;\n                        this.loadData(\"loan\");\n                        this.clear();\n                    }\n                }\n            });\n        },\n        close() {\n            this.dialogm2 = false;\n        },\n        clear() {\n            this.loanType = new LoanTypeModel();\n        },\n        async loadData() {\n            this.showLoading = true\n            entityTypeHandler.getByEntityType(EntityType.LOAN).then((res) => {\n                this.showLoading = false\n                this.loanTypes = res;\n                this.compeletLoading = false;\n            });\n        },\n    },\n    mounted: async function () {\n        await this.loadData();\n    },\n};\n</script>\n\n<style scoped>\n.acc_group header {\n    height: 10px !important;\n}\n\ntable.acc_group tr td {\n    border-bottom: 1px solid #ccc;\n    padding: 8px;\n    vertical-align: middle;\n}\n\ntable.acc_group tr td:first-child {\n    font-weight: 700;\n}\n\ntable.acc_group tr td:last-child {\n    text-align: center;\n}\n\n.v-card__actions .v-btn.v-btn {\n    padding: 0 16px;\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> thead\n> tr\n> th {\n    font-family: \"Niradei-Bold\", serif;\n    color: #000 !important;\n    border-top: 1px solid #000 !important;\n    border-bottom: 1px solid #000 !important;\n    font-size: 15px !important;\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> thead\n> tr\n> td {\n    color: #000 !important;\n    padding: 5px !important;\n}\n\n.exchange-table.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:last-child\ntd {\n    border-bottom: 1px solid #000 !important;\n}\n\n.function_footer {\n    padding: 15px;\n    display: inline-block;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}