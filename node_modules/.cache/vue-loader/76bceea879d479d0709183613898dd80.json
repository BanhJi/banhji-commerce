{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/share_funding/funding/fund_category/FundingCategories.vue?vue&type=style&index=0&id=11b57a94&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/share_funding/funding/fund_category/FundingCategories.vue","mtime":1638499443330},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGV4dF90aXAgewogIGxpbmUtaGVpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewp9Cg=="},{"version":3,"sources":["FundingCategories.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA;;AAEA;AACA","file":"FundingCategories.vue","sourceRoot":"src/views/share_funding/funding/fund_category","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n      <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n        <v-row>\n          <v-col sm=\"10\" cols=\"12\" class=\"py-0\">\n            <div>\n              <h2 class=\"mb-0 font_20\">{{ $t(\"funding_categories\") }}</h2>\n              <!-- <p class=\"mb-0\">{{ $t('_type_desc') }} </p> -->\n            </div>\n          </v-col>\n          <v-col sm=\"2\" cols=\"12\" class=\"pt-0\">\n            <v-dialog v-model=\"dialogM2\" max-width=\"450px\">\n              <template v-slot:activator=\"{ on }\">\n                <v-btn\n                  class=\"white--text float-right text-capitalize\"\n                  color=\"primary\"\n                  v-on=\"on\"\n                  @click=\"onNewClick\">\n                  {{ $t(\"create_new\") }}\n                </v-btn>\n              </template>\n              <v-card>\n                <div class=\"modal_header\">\n                  <v-card-title>{{ $t(\"funding_categories\") }}</v-card-title>\n                  <v-icon @click=\"dialogM2 = false\">close</v-icon>\n                </div>\n                <v-card-text class=\"modal_text_content\">\n                  <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                    <v-row class=\"pt-3\">\n                      <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <label class=\"label\">{{ $t(\"name\") }}</label>\n                        <v-text-field\n                          class=\"mt-1\"\n                          v-model=\"funding.name\"\n                          outlined\n                          :rules=\"[(v) => !!v || $t('name_is_required')]\"/>\n                        <label class=\"label\">{{ $t(\"description\") }}</label>\n                        <v-textarea\n                          class=\"mt-1\"\n                          v-model=\"funding.description\"\n                          no-resize\n                          height=\"130px\"\n                          outlined/>\n                      </v-col>\n                    </v-row>\n                  </v-form>\n                </v-card-text>\n                <v-divider />\n                <v-card-actions class=\"modal_footer\">\n                  <v-row>\n                    <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                      <v-btn\n                        color=\"black\"\n                        outlined\n                        class=\" text-capitalize  black--text float-left\"\n                        @click=\"dialogM2 = false\"\n                        >{{ $t(\"cancel\") }}\n                      </v-btn>\n                    </v-col>\n                    <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                      <v-btn\n                        color=\"primary\"\n                        :disabled=\"disabled\"\n                        class=\"px-3  white--text text-capitalize float-right\"\n                        @click.native=\"onSaveClose\">\n                        {{ $t(\"save_close\") }}\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                </v-card-actions>\n              </v-card>\n            </v-dialog>\n          </v-col>\n\n          <v-col sm=\"12\" cols=\"12\">\n            <template>\n              <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"false\"\n                type=\"loading\"\n                :myLoading=\"true\"/>\n              <kendo-datasource ref=\"fundingDS\" :data=\"fundings\" />\n              <kendo-grid\n                id=\"gridFunding\"\n                class=\"grid-function\"\n                :data-source-ref=\"'fundingDS'\"\n                :sortable=\"false\"\n                :filterable=\"false\"\n                :noRecords=\"true\"\n                :editable=\"false\"\n                :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                  :field=\"'name'\"\n                  :title=\"$t('name')\"\n                  :template=\"'<span>#=name#</span>'\"\n                  :group-footer-template=\"'Total: '\"\n                  :width=\"200\"\n                  :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                <kendo-grid-column\n                  :field=\"'description'\"\n                  :title=\"$t('description')\"\n                  :template=\"'<span>#=description#</span>'\"\n                  :width=\"200\"\n                  :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                  :title=\"$t('action')\"                \n                  :command=\"[\n                    {iconClass: 'k-icon k-i-edit', text: $t(`edit`), click: goEdit, class: 'btn-plus'},\n                    {iconClass: 'k-icon k-i-trash', text: $t(`delete`), click: goDelete, class: 'btn-plus-'}\n                  ]\"\n                  :width=\"100\"\n                  :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"/>\n              </kendo-grid>\n            </template>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport { dataStore } from \"@/observable/store\";\nimport kendo from \"@progress/kendo-ui\";\nimport {i18n} from '@/i18n';\nconst customerHandler = require(\"@/scripts/customerHandler\");\nexport default {\n  components: {\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  data: () => ({\n    dialogM2: false,\n    disabled: false,\n    valid: false,\n    showLoading: false,\n    customerTypes: [],\n    receivableAcc: [],\n    fundings: [],\n    funding: {\n      name: '',\n      description: '',\n      status:   1,\n      deleted: 0\n    }\n  }),\n  props: {},\n  computed: {\n    appType() {\n      return dataStore.productType;\n    },\n  },\n  watch: {},\n  methods: {\n    onNewClick(){\n      this.dialogM2 = true;\n    },\n    goEdit(e){\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          e.preventDefault();\n          let grid = kendo.jQuery(\"#gridFunding\").data(\"kendoGrid\");\n          let dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n          this.funding = dataItem\n          this.dialogM2 = true\n        }, 300);\n      })\n    },\n    goDelete(e){\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          e.preventDefault();\n          let grid = kendo.jQuery(\"#gridFunding\").data(\"kendoGrid\");\n          let dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n          if(dataItem.id !== ''){\n            this.funding = {\n              id:           dataItem.id,\n              name:         dataItem.name || '',\n              description:  dataItem.description || '',\n              status:       dataItem.status || 1,\n              deleted:      1\n            }\n            this.$swal({\n              title: i18n.t('are_you_sure_you_want_to_delete_it'),\n              text: i18n.t('you_wont_be_able_to_revert_this'),\n              icon: \"warning\",\n              showCancelButton: true,\n              cancelButtonText: i18n.t('cancel'),\n              confirmButtonColor: \"#4d4848\",\n              cancelButtonColor: \"#ED1A3A\",\n              confirmButtonText: i18n.t('ok'),\n            }).then((result) => {\n              if (result.value) {\n                window.console.log(1)\n                this.save()\n              }\n            });\n          }\n        }, 300);\n      })\n    },\n    async onSaveClose() {\n      if (!this.$refs.form.validate()) {\n        this.$refs.form.validate()\n        return\n      }\n      this.save()\n    },\n    async save(){\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          let data = {\n            id:           this.funding.id || '',\n            name:         this.funding.name || '',\n            description:  this.funding.description || '',\n            status:       this.funding.status || 1,\n            deleted:      this.funding.deleted || 0\n\n          }\n          window.console.log('data', data)\n          customerHandler.fundingCreate(data).then(response => {\n            window.console.log('response', response)\n            if (response.data.statusCode === 201) {\n              this.loadFunding()\n              this.close()\n              this.$snotify.success('Success')\n            }\n          }).catch(e => {\n            this.$snotify.error('Something went wrong')\n            this.errors.push(e)\n          })\n        }, 300);\n      })\n    },\n    async loadFunding(){\n      new Promise(resolve => {\n        setTimeout(() => {\n              resolve('resolved');\n              customerHandler.fundingGet().then(res => {\n                if(res.statusCode  === 200){\n                  let result = res.data\n                  this.fundings = result\n                }\n              })\n          }, 300);\n      })\n    },\n    close() {\n        this.dialogM2 = false\n        this.funding = {}\n    },\n    clear() {\n      this.funding = {}\n    },\n  },\n  mounted: async function() {\n    await this.loadFunding()\n  },\n\n  // fundingGet\n};\n</script>\n<style scoped>\n.text_tip {\n  line-height: 10px !important;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}