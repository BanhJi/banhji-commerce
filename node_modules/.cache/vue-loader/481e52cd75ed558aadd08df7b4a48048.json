{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/SegmentListItemGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/SegmentListItemGroup.vue","mtime":1640595536764},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTZWdtZW50TGlzdEl0ZW1Hcm91cCcsCiAgICBwcm9wczogewogICAgICAgIGluaXRTZWdtZW50OiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgIH0sCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBzZWxlY3RlZFNlZ21lbnRzOiBbXSwKICAgICAgICAgICAgbG9hZGluZzogZmFsc2UKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIGxvYWREYXRhICgpIHsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIENhbGwgTGlzdAogICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnc2VnbWVudHMvZ2V0TGlzdCcpCgogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9LAogICAgICAgIGVtaXRTZWdtZW50KCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdlbWl0U2VnbWVudCcsIHRoaXMuc2VsZWN0ZWRTZWdtZW50cyk7CiAgICAgICAgfSwKICAgICAgICB0b2dnbGUoKSB7CiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLmxpa2VzQWxsRnJ1aXQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkU2VnbWVudHMgPSBbXTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgbGV0IGlkcyA9IFtdOwogICAgICAgICAgICAgICAgICAgIHRoaXMuc2VnbWVudHMuZm9yRWFjaCh2YWx1ZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlkcy5wdXNoKHZhbHVlLmlkKTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdGVkU2VnbWVudHMgPSBpZHM7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLmVtaXRTZWdtZW50KCk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGluaXRTZWdtZW50KCkgewogICAgICAgICAgICB0aGlzLnNlbGVjdGVkU2VnbWVudHMgPSB0aGlzLmluaXRTZWdtZW50OwogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcFN0YXRlKHsKICAgICAgICAgICAgc2VnbWVudHM6IHN0YXRlID0+IHN0YXRlLnNlZ21lbnRzLmxpc3QKICAgICAgICB9KSwKICAgICAgICBsaWtlc0FsbEZydWl0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFNlZ21lbnRzLmxlbmd0aCA9PT0gdGhpcy5zZWdtZW50cy5sZW5ndGgKICAgICAgICB9LAogICAgICAgIGxpa2VzU29tZUZydWl0KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZFNlZ21lbnRzLmxlbmd0aCA+IDAgJiYgIXRoaXMubGlrZXNBbGxGcnVpdAogICAgICAgIH0sCiAgICAgICAgaWNvbigpIHsKICAgICAgICAgICAgaWYgKHRoaXMubGlrZXNBbGxGcnVpdCkgcmV0dXJuICdtZGktY2xvc2UtYm94JwogICAgICAgICAgICBpZiAodGhpcy5saWtlc1NvbWVGcnVpdCkgcmV0dXJuICdtZGktbWludXMtYm94JwogICAgICAgICAgICByZXR1cm4gJ21kaS1jaGVja2JveC1ibGFuay1vdXRsaW5lJwogICAgICAgIH0sCiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmxvYWREYXRhKCk7CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICAvKiBJbml0aWFsIFNlZ21lbnQgKi8KICAgICAgICB0aGlzLnNlbGVjdGVkU2VnbWVudHMgPSB0aGlzLmluaXRTZWdtZW50OwogICAgfQp9Cg=="},{"version":3,"sources":["SegmentListItemGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SegmentListItemGroup.vue","sourceRoot":"src/components/dropdownlist","sourcesContent":["<template>\n    <div>\n        <v-select\n            :loading=\"loading\"\n            v-model=\"selectedSegments\"\n            :items=\"segments\"\n            item-text=\"name\"\n            item-value=\"id\"\n            @change=\"emitSegment\"\n            placeholder=\"Select Segments\"\n            multiple\n            class=\"mt-1\"\n            outlined\n        >\n            <template v-slot:prepend-item>\n                <v-list-item\n                    ripple\n                    @click=\"toggle\"\n                >\n                    <v-list-item-action>\n                        <v-icon :color=\"selectedSegments.length > 0 ? 'indigo darken-4' : ''\">\n                            {{ icon }}\n                        </v-icon>\n                    </v-list-item-action>\n                    <v-list-item-content>\n                        <v-list-item-title>\n                            Select All\n                        </v-list-item-title>\n                    </v-list-item-content>\n                </v-list-item>\n                <v-divider class=\"mt-2\"></v-divider>\n            </template>\n\n            <template v-slot:selection=\"{ item, index }\">\n                <v-chip v-if=\"index === 0\">\n                    <span>{{ item.name }}</span>\n                </v-chip>\n                <span v-if=\"index === 1\" class=\"font_14\">\n                    (+{{ selectedSegments.length - 1 }} others)\n                </span>\n            </template>\n\n        </v-select>\n    </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'SegmentListItemGroup',\n    props: {\n        initSegment: {\n            type: Array,\n        },\n    },\n    data() {\n        return {\n            selectedSegments: [],\n            loading: false\n        }\n    },\n    methods: {\n        async loadData () {\n            this.loading = true;\n            \n            // Call List\n            await this.$store.dispatch('segments/getList')\n\n            this.loading = false;\n        },\n        emitSegment() {\n            this.$emit('emitSegment', this.selectedSegments);\n        },\n        toggle() {\n            this.$nextTick(() => {\n                if (this.likesAllFruit) {\n                    this.selectedSegments = [];\n                } else {\n                    let ids = [];\n                    this.segments.forEach(value => {\n                        ids.push(value.id);\n                    });\n                    this.selectedSegments = ids;\n                }\n                this.emitSegment();\n            })\n        },\n    },\n    watch: {\n        initSegment() {\n            this.selectedSegments = this.initSegment;\n        }\n    },\n    computed: {\n        ...mapState({\n            segments: state => state.segments.list\n        }),\n        likesAllFruit() {\n            return this.selectedSegments.length === this.segments.length\n        },\n        likesSomeFruit() {\n            return this.selectedSegments.length > 0 && !this.likesAllFruit\n        },\n        icon() {\n            if (this.likesAllFruit) return 'mdi-close-box'\n            if (this.likesSomeFruit) return 'mdi-minus-box'\n            return 'mdi-checkbox-blank-outline'\n        },\n    },\n    created() {\n        this.loadData();\n    },\n    mounted() {\n        /* Initial Segment */\n        this.selectedSegments = this.initSegment;\n    }\n}\n</script>"]}]}