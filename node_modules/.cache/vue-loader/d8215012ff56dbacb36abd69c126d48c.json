{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/components/dropdownlist/AccountSecondary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/components/dropdownlist/AccountSecondary.vue","mtime":1638499442944},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBzdG9yZSBmcm9tICJAL3N0b3JlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdTZWNvbmRhcnlBY2NvdW50RHJvcERvd25MaXN0JywKICAgIHByb3BzOiB7CiAgICAgICAgaW5pdEFjY291bnQ6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgIH0sCiAgICAgICAgaW5pdEFjY291bnRUeXBlQ29kZTogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgfSwKICAgICAgICBpbml0QWNjb3VudEdyb3VwQ29kZTogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgfSwKICAgICAgICBpbml0UHJpbWFyeUFjY291bnRJZDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgfSwKICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGFjY291bnQgOiBudWxsLAogICAgICAgICAgICBhY2NvdW50cyA6IFtdLAogICAgICAgICAgICBsb2FkaW5nIDogZmFsc2UsCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOnsKICAgICAgICBsYW5ndWFnZSgpewogICAgICAgICAgICByZXR1cm4gc3RvcmUuc3RhdGUuYWNjb3VudGluZy5hY2NvdW50TGFuZ3VhZ2UKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGFzeW5jIGluaXRpYWxpemUgKCkgewogICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAKICAgICAgICAgICAgLy8gQ2FsbCBMaXN0CiAgICAgICAgICAgIHRoaXMuYWNjb3VudHMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWNjb3VudGluZy9nZXRTZWNvbmRhcnlBY2NvdW50cycpOwoKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgfSwKICAgICAgICBpbml0aWFsRGF0YSgpewogICAgICAgICAgICB0aGlzLmFjY291bnQgPSB0aGlzLmluaXRBY2NvdW50OwogICAgICAgIH0sCiAgICAgICAgZW1pdEFjY291bnQoKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2VtaXRBY2NvdW50JywgdGhpcy5hY2NvdW50KTsKICAgICAgICB9LAogICAgICAgIGZpbHRlckJ5VHlwZUNvZGUoKXsKICAgICAgICAgICAgdGhpcy5hY2NvdW50cyA9IHN0b3JlLnN0YXRlLmFjY291bnRpbmcuYWNjb3VudHMuZmlsdGVyKGkgPT4gaS50eXBlX2NvZGUgPT09IHRoaXMuaW5pdEFjY291bnRUeXBlQ29kZSk7CiAgICAgICAgfSwKICAgICAgICBmaWx0ZXJCeUdyb3VwQ29kZSgpewogICAgICAgICAgICB0aGlzLmFjY291bnRzID0gc3RvcmUuc3RhdGUuYWNjb3VudGluZy5hY2NvdW50cy5maWx0ZXIoaSA9PiBpLmdyb3VwX2NvZGUgPT09IHRoaXMuaW5pdEFjY291bnRHcm91cENvZGUpOwogICAgICAgIH0sCiAgICAgICAgZmlsdGVyQnlQcmltYXJ5QWNjb3VudElkICgpIHsKICAgICAgICAgICAgdGhpcy5hY2NvdW50cyA9IHN0b3JlLnN0YXRlLmFjY291bnRpbmcuc2Vjb25kYXJ5QWNjb3VudHMuZmlsdGVyKGkgPT4gaS5wcmltYXJ5X2FjY291bnRfdXVpZCA9PT0gdGhpcy5pbml0UHJpbWFyeUFjY291bnRJZCk7CiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGluaXRBY2NvdW50OiAiaW5pdGlhbERhdGEiLAogICAgICAgIGluaXRBY2NvdW50VHlwZUNvZGUgOiAiZmlsdGVyQnlUeXBlQ29kZSIsCiAgICAgICAgaW5pdFByaW1hcnlBY2NvdW50SWQgOiAiZmlsdGVyQnlQcmltYXJ5QWNjb3VudElkIgogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgLyogSW5pdGlhbGl6ZSAqLwogICAgICAgIHRoaXMuaW5pdGlhbGl6ZSgpOwogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgLyogSW5pdGlhbCBEYXRhICovCiAgICAgICAgdGhpcy5pbml0aWFsRGF0YSgpOwogICAgfQp9Cg=="},{"version":3,"sources":["AccountSecondary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSecondary.vue","sourceRoot":"src/components/dropdownlist","sourcesContent":["<template>\n    <v-select\n        class=\"mt-1\"\n        :loading=\"loading\"\n        placeholder=\"Select Secondary Account\"\n        v-model=\"account\"\n        :items=\"accounts\"\n        :item-text=\"(item) => `${item.number} - ${language ==='English' ? item.name : item.local_name}`\"\n        item-value=\"uuid\"\n        @change=\"emitAccount\"\n        return-object\n        clearable\n        outlined>\n        <template slot=\"item\" slot-scope=\"{ item }\">\n             {{ item.number }} - {{ language ==='English' ? item.name : item.local_name }}\n        </template>\n    </v-select>\n</template>\n\n<script>\nimport store from \"@/store\";\n\nexport default {\n    name: 'SecondaryAccountDropDownList',\n    props: {\n        initAccount: {\n            type: Object,\n        },\n        initAccountTypeCode: {\n            type: Number,\n        },\n        initAccountGroupCode: {\n            type: Number,\n        },\n        initPrimaryAccountId: {\n            type: String,\n        },\n    },\n    data() {\n        return {\n            account : null,\n            accounts : [],\n            loading : false,\n        }\n    },\n    computed:{\n        language(){\n            return store.state.accounting.accountLanguage\n        }\n    },\n    methods: {\n        async initialize () {\n            this.loading = true;\n            \n            // Call List\n            this.accounts = await this.$store.dispatch('accounting/getSecondaryAccounts');\n\n            this.loading = false;\n        },\n        initialData(){\n            this.account = this.initAccount;\n        },\n        emitAccount() {\n            this.$emit('emitAccount', this.account);\n        },\n        filterByTypeCode(){\n            this.accounts = store.state.accounting.accounts.filter(i => i.type_code === this.initAccountTypeCode);\n        },\n        filterByGroupCode(){\n            this.accounts = store.state.accounting.accounts.filter(i => i.group_code === this.initAccountGroupCode);\n        },\n        filterByPrimaryAccountId () {\n            this.accounts = store.state.accounting.secondaryAccounts.filter(i => i.primary_account_uuid === this.initPrimaryAccountId);\n        },\n    },\n    watch: {\n        initAccount: \"initialData\",\n        initAccountTypeCode : \"filterByTypeCode\",\n        initPrimaryAccountId : \"filterByPrimaryAccountId\"\n    },\n    created() {\n        /* Initialize */\n        this.initialize();\n    },\n    mounted() {\n        /* Initial Data */\n        this.initialData();\n    }\n}\n</script>"]}]}