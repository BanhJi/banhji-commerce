{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/insight/BudgetVariances.vue?vue&type=style&index=0&id=306b48ec&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/insight/BudgetVariances.vue","mtime":1638499443145},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKLnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgaGVpZ2h0OiAzMnB4ICFpbXBvcnRhbnQ7CiAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpOwp9Cgoudi1kYXRhLXRhYmxlLmF2ZXJhZ2Vfc2FsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7CiAgaGVpZ2h0OiA1MHB4ICFpbXBvcnRhbnQ7Cn0KCi52LWRhdGEtdGFibGUuY29sbGVjdGlvbl9kYXkKICA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKICA+IHRhYmxlCiAgPiB0Ym9keQogID4gdHIKICA+IHRkIHsKICBoZWlnaHQ6IDQycHggIWltcG9ydGFudDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUKICA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKICA+IHRhYmxlCiAgPiB0Ym9keQogID4gdHI6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCiAgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyCiAgPiB0YWJsZQogID4gdGJvZHkKICA+IHRyLnRoaXJkOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjODk4YzhmICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["BudgetVariances.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwPA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BudgetVariances.vue","sourceRoot":"src/views/budgeting/insight","sourcesContent":["<template>\n  <div>\n    <LoadingMe\n      type=\"loading\"\n      :isLoading=\"showLoading\"\n      :myLoading=\"true\"\n      :fullPage=\"false\"\n    />\n\n    <v-simple-table>\n      <template>\n        <tbody>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"revenues\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ revenue }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"cost_of_gods_sold\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ cogs }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"operating_expenses\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ operatingExpense }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                EBITDA\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ ebitda }}\n              </span>\n            </td>\n          </tr>\n          <tr>\n            <td class=\"text-left\">\n              <span class=\"niradei_medium font_14 grey--text\">\n                {{ $t(\"net_profit\") }}\n              </span>\n            </td>\n            <td class=\"text-right\">\n              <span class=\"niradei_heavy font_18 dark_grey\">\n                {{ netProfit }}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </template>\n    </v-simple-table>\n  </div>\n</template>\n\n<script>\n// import {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport Helper from \"@/helper.js\";\nimport AccountModel from \"@/scripts/model/Account.js\";\n\nconst BudgetHandler = require(\"@/scripts/handler/workingcapital/budgetHandler\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\nexport default {\n  name: \"BudgetVariances\",\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n  },\n  data: () => ({\n    revenue: 0,\n    cogs: 0,\n    operatingExpense: 0,\n    ebitda: 0,\n    netProfit: 0,\n    // LoadingMe\n    showLoading: false,\n  }),\n  methods: {\n    async loadData() {\n      this.showLoading = true;\n\n      // Load Account List\n      let accounts = await this.$store.dispatch(\"accounting/getAccounts\");\n\n      let totalRevenue = 0,\n        totalActualRevenue = 0,\n        totalCogs = 0,\n        totalActualCogs = 0,\n        totalOptExp = 0,\n        totalActualOptExp = 0,\n        ebitda = 0,\n        actualEbitda = 0;\n\n      /* Set Current Fiscal Date */\n      let currencyFiscalDate = Helper.getFiscalDateByDate(new Date());\n\n      /* Budget */\n      let budgets = await BudgetHandler.getBudgetForConsolidate({\n        params: {\n          fiscal_year_uuid: currencyFiscalDate.uuid,\n        },\n      });\n\n      budgets.data.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          /* Amount */\n          value.amount = value.amount * -1;\n        }\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalRevenue += kendo.parseFloat(value.amount);\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalCogs += kendo.parseFloat(value.amount);\n        }\n\n        /* Operating Expenses */\n        if (\n          ~AccountTypeCode.OPERATING_EXPENSES.indexOf(\n            account.account_type.number\n          )\n        ) {\n          totalOptExp += kendo.parseFloat(value.amount);\n        }\n\n        /* EBITDA */\n        if(account.account_type.number === 32 || account.account_type.number === 40){\n          ebitda += kendo.parseFloat(value.amount);\n        }\n        if(account.account_type.number >= 33 && account.account_type.number <= 38){\n          ebitda -= kendo.parseFloat(value.amount);\n        }\n      });\n      /* End Budget */\n\n      /* Actual Budget */\n      let actuals = await BudgetHandler.getActualBudgetForConsolidate({\n        params: {\n          as_of_date:\n            kendo.toString(new Date(), \"yyyy-MM-dd\") + \"T23:59:59.999Z\", // As Of Date is Today\n          group_by: \"1\",\n        },\n      });\n\n      actuals.data.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.find((item) => item.uuid === value.accountUUID)\n        );\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalActualRevenue += kendo.parseFloat(value.balance);\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalActualCogs += kendo.parseFloat(value.balance);\n        }\n\n        /* Operating Expenses */\n        if (\n          ~AccountTypeCode.OPERATING_EXPENSES.indexOf(\n            account.account_type.number\n          )\n        ) {\n          totalActualOptExp += kendo.parseFloat(value.balance);\n        }\n\n        /* EBITDA */\n        if(account.account_type.number === 32 || account.account_type.number === 40){\n          actualEbitda += kendo.parseFloat(value.balance);\n        }\n        if(account.account_type.number >= 33 && account.account_type.number <= 38){\n          actualEbitda -= kendo.parseFloat(value.balance);\n        }\n      });\n      /* End Actual Budget */\n\n      /* Bind Data */\n      this.revenue = this.findVariancePercentage(\n        totalActualRevenue,\n        totalRevenue\n      );\n      this.cogs = this.findVariancePercentage(totalActualCogs, totalCogs);\n      this.operatingExpense = this.findVariancePercentage(\n        totalActualOptExp,\n        totalOptExp\n      );\n      this.ebitda = this.findVariancePercentage(actualEbitda, ebitda);\n      \n      let netProfit = totalRevenue - (totalCogs + totalOptExp);\n      let netActualProfit =\n        totalActualRevenue - (totalActualCogs + totalActualOptExp);\n      this.netProfit = this.findVariancePercentage(netActualProfit, netProfit);\n\n      this.showLoading = false;\n    },\n    /* Find Variance Percentage */\n    findVariancePercentage(num1, num2) {\n      let amt = 0;\n      if (num2 !== 0) {\n        amt = num1 / num2;\n      }\n\n      return kendo.toString(amt, \"p\");\n    },\n  },\n  mounted() {\n    this.loadData();\n  },\n};\n</script>\n\n<style scoped>\n.theme--light.v-data-table {\n  background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 32px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.v-data-table.average_sale > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 50px !important;\n}\n\n.v-data-table.collection_day\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr\n  > td {\n  height: 42px !important;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr.third:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: #898c8f !important;\n}\n</style>\n"]}]}