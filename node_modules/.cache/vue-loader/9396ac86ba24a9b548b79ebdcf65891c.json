{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/bill_of_material/BillOfMaterial.vue?vue&type=style&index=0&id=16645368&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/bill_of_material/BillOfMaterial.vue","mtime":1638760538981},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucmVkVGV4dCB7CiAgY29sb3I6IHJlZCAhaW1wb3J0YW50Owp9Cgouc21hbGxfc2lkZWJhciB7CiAgaGVpZ2h0OiA5NyU7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHBhZGRpbmc6IDEycHg7Cn0KCi5oaWRlX3NtYWxsX2Jhcl9jbGFzcyB7CiAgbWF4LXdpZHRoOiAwOwogIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbjsKICBmbGV4OiAwIDAgMDsKICBwYWRkaW5nOiAwOwp9CgouaGlkZV9iaWdfYmFyX2NsYXNzIHsKICBtYXgtd2lkdGg6IDEwMCU7CiAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluOwogIGZsZXg6IDAgMCAxMDAlOwp9CgouaWNvbkFycm93IHsKICByaWdodDogLTM1cHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogLTEwcHg7Cn0KCi5pY29uQXJyb3dIaWRlIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IC03cHg7CiAgYm90dG9tOiAtMTBweDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUKICA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIKICA+IHRhYmxlCiAgPiB0Ym9keQogID4gdHI6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi5kZXRpYWxfc21hbGxzaWRlX3AgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDEwcHg7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAuY29udGFpbmVyIHsKICAgIC8qIG1heC13aWR0aDogMTE4NXB4OyAqLwogICAgbWF4LXdpZHRoOiAxMDgwcHggIWltcG9ydGFudDsKICB9Cn0K"},{"version":3,"sources":["BillOfMaterial.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAq9CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"BillOfMaterial.vue","sourceRoot":"src/views/products/production/bill_of_material","sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <v-row>\n        <v-col cols=\"12\" sm=\"12\">\n          <v-card\n            outlined\n            dense\n            class=\"pa-4 no_border rounded-sm\"\n            color=\"white\"\n          >\n            <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n              <v-card outlined dense class=\"no_border\">\n                <h2 class=\"mb-0\">{{ $t(\"bill_of_material\") }}</h2>\n                <v-icon\n                  @click=\"cancel()\"\n                  style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                  class=\"float-right\"\n                  >close\n                </v-icon>\n              </v-card>\n\n              <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                <v-row>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0\">{{ $t(\"bom_no\") }}</label>\n                    <v-row class=\"mt-1 mr-0\">\n                      <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                        <div class=\"code_text\">{{ bom.abbr }}</div>\n                      </v-col>\n                      <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                        <v-text-field\n                          class=\" custom-border \"\n                          v-model=\"bom.number\"\n                          disabled\n                          outlined\n                          tage=\"Bom No.\"\n                          :rules=\"[(v) => !!v || 'Number is required']\"\n                          required\n                        />\n                      </v-col>\n                      <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                        <v-icon\n                          color=\"black\"\n                          size=\"30\"\n                          class=\"border_qrcode\"\n                          :disabled=\"disabledMe\"\n                          @click=\"generateNumber\"\n                          >mdi-qrcode\n                        </v-icon>\n                      </v-col>\n                    </v-row>\n                  </v-col>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                      $t(\"bom_type\")\n                    }}</label>\n                    <v-select\n                      class=\"mt-1\"\n                      :items=\"bomTypes\"\n                      v-model=\"bom.typeBom\"\n                      item-text=\"name\"\n                      item-value=\"id\"\n                      return-object\n                      :placeholder=\"$t('type')\"\n                      tage=\"Bom Type\"\n                      outlined\n                    />\n                  </v-col>\n                  <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                    <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                      $t(\"warehouse\")\n                    }}</label>\n                    <v-select\n                      class=\"mt-1\"\n                      :items=\"warehouses\"\n                      v-model=\"bom.warehouse\"\n                      return-object\n                      item-value=\"id\"\n                      item-text=\"name\"\n                      :placeholder=\"$t('warehouse')\"\n                      tage=\"Warehouse\"\n                      outlined\n                    />\n                  </v-col>\n                  <!--                                    <v-col sm=\"3\" cols=\"12\" class=\"my_radio\">-->\n                  <!--                                        <input v-model=\"bom.materialType\" id=\"radio1\" :selected-value=\"{id: 1, name: 'Build Assembly'}\" name=\"radio\" type=\"radio\">-->\n                  <!--                                        <label for=\"radio1\">{{ $t('build_assembly') }}</label>-->\n                  <!--                                        <input v-model=\"bom.materialType\" :selected-value=\"{id: 2, name: 'Production'}\" id=\"radio2\" name=\"radio\" type=\"radio\">-->\n                  <!--                                        <label for=\"radio2\">{{ $t('production') }}</label>-->\n                  <!--                                    </v-col>-->\n                </v-row>\n              </v-card>\n              <v-row>\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                  <!-- Grid One -->\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col cols=\"12\" class=\"py-1 pb-0\">\n                      <h2 class=\"primary--text mb-0 font_18 text-uppercase\">\n                        {{ $t(\"finished_product\") }}\n                      </h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                      <kendo-datasource\n                        ref=\"finishProductDS\"\n                        :change=\"dataSourceChanged\"\n                        :data=\"bom.finishProduct\"\n                      />\n                      <kendo-grid\n                        id=\"gridFinishProduct\"\n                        class=\"grid-function\"\n                        :data-source-ref=\"'finishProductDS'\"\n                        :sortable=\"false\"\n                        :filterable=\"false\"\n                        :column-menu=\"true\"\n                        :editable=\"true\"\n                        :scrollable-virtual=\"true\"\n                      >\n                        <kendo-grid-column\n                          :template=\"rowNumberFP\"\n                          :title=\"$t('no.')\"\n                          :width=\"55\"\n                          :column-menu=\"false\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: variants',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'item'\"\n                          :title=\"$t('items')\"\n                          :width=\"200\"\n                          :editable=\"\n                            () => {\n                              return true;\n                            }\n                          \"\n                          :template=\"itemTemplate\"\n                          :editor=\"ItemDropDownEditorFP\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'buom'\"\n                          :title=\"$t('base_uom')\"\n                          :width=\"150\"\n                          :template=\"UOMTemplate\"\n                          :editor=\"UOMDropDownEditor\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{ style: 'text-align: right; ' }\"\n                        />\n                        <!-- <kendo-grid-column\n                          :field=\"'description'\"\n                          :title=\"$t('description')\"\n                          :width=\"200\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        /> -->\n\n                        <kendo-grid-column\n                          :field=\"'yieldQty'\"\n                          :title=\"$t('yield_qty')\"\n                          :attributes=\"{\n                            class: 'k-state-disabled',\n                            style: 'text-align: right',\n                          }\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(yieldQty || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'cost'\"\n                          :title=\"$t('cost')\"\n                          :width=\"150\"\n                          :editor=\"numberEditor\"\n                          :template=\"\n                            '<span>#=kendo.toString(cost || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'amount'\"\n                          :title=\"$t('amount')\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(amount || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                      </kendo-grid>\n                    </v-col>\n                  </v-row>\n                  <!-- Grid Two -->\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <h2 class=\"primary--text mb-0 font_18 text-uppercase\">\n                        {{ $t(\"by_product\") }}\n                      </h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                      <kendo-datasource\n                        ref=\"otherProductDS\"\n                        :change=\"dataSourceChangedOP\"\n                        :data=\"bom.otherFinishProduct\"\n                      />\n                      <kendo-grid\n                        id=\"gridOtherProduct\"\n                        class=\"grid-function\"\n                        :data-source-ref=\"'otherProductDS'\"\n                        :sortable=\"false\"\n                        :filterable=\"false\"\n                        :column-menu=\"true\"\n                        :editable=\"true\"\n                        :scrollable-virtual=\"true\"\n                      >\n                        <kendo-grid-column\n                          :template=\"rowNumberOP\"\n                          :title=\"$t('no.')\"\n                          :width=\"55\"\n                          :column-menu=\"false\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: variants',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'item'\"\n                          :title=\"$t('item')\"\n                          :width=\"200\"\n                          :template=\"itemTemplate\"\n                          :editor=\"ItemDropDownEditorFP\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <!-- <kendo-grid-column\n                          :field=\"'description'\"\n                          :title=\"$t('description')\"\n                          :width=\"200\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        /> -->\n                        <kendo-grid-column\n                          :field=\"'buom'\"\n                          :title=\"$t('base_uom')\"\n                          :width=\"150\"\n                          :template=\"UOMTemplate\"\n                          :editor=\"UOMDropDownEditorOP\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{ style: 'text-align: right; ' }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'yieldQty'\"\n                          :title=\"$t('yield_qty')\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(yieldQty || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'cost'\"\n                          :title=\"$t('cost')\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(cost || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'amount'\"\n                          :title=\"$t('amount')\"\n                          :width=\"150\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"\n                            '<span>#=kendo.toString(amount || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :command=\"{\n                            iconClass: 'k-icon k-i-trash',\n                            text: 'Delete',\n                            click: removeRowOP,\n                            class: 'btn-plus',\n                          }\"\n                          :title=\"'&nbsp;'\"\n                          :width=\"100\"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                        />\n                      </kendo-grid>\n                    </v-col>\n                    <v-col cols=\"12\" class=\"pt-0\">\n                      <v-btn\n                        color=\"primary\"\n                        class=\"float-left btn_plus rounded-4 white--text mr-2\"\n                        @click=\"addRowOtherProduct\"\n                      >\n                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                  <!-- Grid Three -->\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col cols=\"12\" class=\"pt-0 pb-0\">\n                      <h2 class=\"primary--text mb-0 font_18 text-uppercase\">\n                        {{ $t(\"components_used\") }}\n                      </h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                      <kendo-datasource\n                        ref=\"componentUseDS\"\n                        :change=\"dataSourceChangedCU\"\n                        :data=\"bom.componentUsed\"\n                      />\n                      <kendo-grid\n                        id=\"gridComponentUse\"\n                        class=\"grid-function\"\n                        :data-source-ref=\"'componentUseDS'\"\n                        :sortable=\"false\"\n                        :filterable=\"false\"\n                        :column-menu=\"true\"\n                        :editable=\"true\"\n                        :scrollable-virtual=\"true\"\n                      >\n                        <kendo-grid-column\n                          :template=\"rowNumberCU\"\n                          :title=\"$t('no.')\"\n                          :width=\"55\"\n                          :column-menu=\"false\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: variants',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'item'\"\n                          :title=\"$t('item')\"\n                          :width=\"200\"\n                          :template=\"itemTemplate\"\n                          :editor=\"ItemDropDownEditor\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <!-- <kendo-grid-column\n                          :field=\"'description'\"\n                          :title=\"$t('description')\"\n                          :width=\"200\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        /> -->\n                        <kendo-grid-column\n                          :template=\"UOMTemplate\"\n                          :editor=\"UOMDropDownEditorOP\"\n                          :field=\"'buom'\"\n                          :title=\"$t('base_uom')\"\n                          :width=\"160\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'qty'\"\n                          :title=\"$t('qty')\"\n                          :width=\"150\"\n                          :editor=\"numberEditor\"\n                          :template=\"\n                            '<span>#=kendo.toString(qty || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'cost'\"\n                          :title=\"$t('cost')\"\n                          :width=\"150\"\n                          :editor=\"numberEditor\"\n                          :template=\"\n                            '<span>#=kendo.toString(cost || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'amount'\"\n                          :title=\"$t('amount')\"\n                          :width=\"150\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"\n                            '<span>#=kendo.toString(amount || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :command=\"{\n                            iconClass: 'k-icon k-i-trash',\n                            text: 'Delete',\n                            click: removeRowCU,\n                            class: 'btn-plus',\n                          }\"\n                          :title=\"'&nbsp;'\"\n                          :width=\"100\"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                        />\n                      </kendo-grid>\n                    </v-col>\n                    <v-col cols=\"12\" class=\"pt-0\">\n                      <v-btn\n                        color=\"primary\"\n                        class=\"float-left btn_plus rounded-4 white--text mr-2\"\n                        @click=\"addRowComponentUse\"\n                      >\n                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                      <v-row>\n                        <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                          <v-textarea\n                            class=\"mt-1\"\n                            outlined\n                            clearable\n                            rows=\"3\"\n                            no-resize\n                            v-model=\"bom.transactionNote\"\n                            height=\"90px\"\n                            tag=\"Memo\"\n                            placeholder=\"Memo\"\n                          />\n                        </v-col>\n                        <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                          <v-simple-table>\n                            <template v-slot:default>\n                              <tbody>\n                                <tr>\n                                  <td class=\"text-left text-uppercase\">\n                                    {{ $t(\"total_cost\") }}\n                                  </td>\n                                  <td class=\"text-center\">:</td>\n                                  <td class=\"text-bold text-right\">\n                                    {{ numberFormat(bom.exchangeAmount) }}\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td class=\"text-left text-uppercase\">\n                                    {{ $t(\"variance\") }}\n                                  </td>\n                                  <td class=\"text-center\">:</td>\n                                  <td\n                                    v-bind:class=\"[\n                                      bom.variance >= 0 ? '' : 'redText',\n                                    ]\"\n                                    class=\"text-right text-bold\"\n                                  >\n                                    {{ numberFormat(bom.variance) }}\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </template>\n                          </v-simple-table>\n                        </v-col>\n                      </v-row>\n                    </v-col>\n                  </v-row>\n                </v-col>\n              </v-row>\n              <v-divider />\n              <v-card outlined dense class=\"no_border function_footer\">\n                <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                  <span v-html=\"errorMessage\" />\n                </v-alert>\n                <v-menu>\n                  <v-list>\n                    <v-list-item\n                      v-for=\"(item, index) in templates\"\n                      :key=\"index\"\n                    >\n                      <v-list-item-title>{{ item.title }}</v-list-item-title>\n                    </v-list-item>\n                  </v-list>\n                </v-menu>\n                <v-btn\n                  color=\"black\"\n                  class=\"text-capitalize rounded-pill white--text float-left\"\n                  @click=\"cancel\"\n                >\n                  {{ $t(\"cancel\") }}\n                </v-btn>\n                <v-btn\n                  color=\"primary\"\n                  @click=\"saveClose()\"\n                  class=\"mr-2 float-right white--text text-capitalize rounded-pill\"\n                >\n                  {{ $t(\"save_close\") }}\n                </v-btn>\n              </v-card>\n            </v-form>\n          </v-card>\n        </v-col>\n      </v-row>\n      <LoadingMe\n        :isLoading=\"showLoading\"\n        :fullPage=\"false\"\n        type=\"loading\"\n        :myLoading=\"true\"\n      />\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport { i18n } from \"@/i18n\";\nimport BomModel from \"@/scripts/model/Bom\";\nimport kendo from \"@progress/kendo-ui\";\nimport SaleFormContentModel from \"@/scripts/model/SaleFormContent\";\nimport FinishProductModel from \"@/scripts/bom/FinishProduct\";\nimport OtherFinishProductModel from \"@/scripts/bom/OtherFinishProduct\";\nimport ComponentModel from \"@/scripts/bom/ComponentUsed\";\nimport { uuid } from \"vue-uuid\";\n\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\");\nconst uomPriceHandler = require(\"@/scripts/uomPriceHandler\");\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\");\nconst bomHandler = require(\"@/scripts/bomHandler\");\nconst prefixHandler = require(\"@/scripts/prefixHandler\");\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst saleFormContentHandler = require(\"@/scripts/saleFormContentHandler\");\nconst saleFormContentModel = new SaleFormContentModel({});\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\");\n\nconst bomModel = new BomModel({});\nconst $ = require(\"jquery\");\nconst itemLinePrefix = \"lin-\";\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\n\nexport default {\n  name: \"BillOfMaterial\",\n  props: [\"id\"],\n  components: {\n    LoadingMe: () => import(`@/components/Loading`),\n    // 'app-datepicker' : DatePickerComponent,\n  },\n  computed: {\n    disabledMe() {\n      return !!this.$route.params.id;\n    },\n    // totalCost() {\n    //   if (this.costFP !== 0 || this.costOFP !== 0) {\n    //     return this.costOFP + this.costFP\n    //   } else {\n    //     return 0\n    //   }\n    // },\n    // varianceAmount() {\n    //   if (this.costFP !== 0 || this.costOFP !== 0 || this.costCU !== 0 || this.costOC !== 0) {\n    //     return (this.costFP + this.costOFP) - (this.costCU + this.costOC)\n    //   } else {\n    //     return 0\n    //   }\n    // }\n  },\n  data: () => ({\n    isEdit: false,\n    showLoading: false,\n    alert: false,\n    // Form validation\n    valid: true,\n    isHideBar: false,\n    warehouses: [],\n    bom: bomModel,\n    bomNo: \"\",\n    bomTypes: [\n      { id: 1, name: \"One Time Use\" },\n      { id: 2, name: \"Multiple Use\" },\n    ],\n    itemLinesFP: new FinishProductModel({}),\n    itemLinesOP: new OtherFinishProductModel({}),\n    itemLinesCU: new ComponentModel({}),\n    itemLinesOC: bomModel.otherCost,\n    finishProductItems: [],\n    otherFinishProductItems: [],\n    componentUsedItems: [],\n    otherCosts: [],\n    tax: [],\n    vatTax: [],\n    accounts: [],\n    costFP: 0,\n    costOFP: 0,\n    costCU: 0,\n    costOC: 0,\n    itemLineOP: [],\n    itemLineCU: [],\n    itemLineFP: [],\n    itemLineOC: [],\n    saleFormContent: saleFormContentModel,\n    baseCurrency: {},\n    exchangeRate: {},\n    loggedUser: {\n      id: cookie.creator,\n      name: cookie.email,\n    },\n    templates: [\n      { title: \"Draft\" },\n      { title: \"Open\" },\n      { title: \"Partially Closed\" },\n      { title: \"Closed\" },\n    ],\n  }),\n  methods: {\n    async loadViewBOM() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          if (this.$route.params.id) {\n            this.showLoading = true;\n            bomHandler.getAll(\"?id=\" + this.$route.params.id).then((res) => {\n              this.showLoading = false;\n              this.bom = res[0];\n              // this.autoCalculateGrid1()\n              // this.autoCalculateGrid2()\n              // this.autoCalculateGrid3()\n            });\n          } else {\n            // this.bom.finishProduct = []\n            // this.bom.otherFinishProduct = []\n            // this.bom.componentUsed = []\n            this.addRowFinishProduct();\n            this.addRowOtherProduct();\n            this.addRowComponentUse();\n          }\n        }, 10);\n      });\n    },\n    numberFormat(value) {\n      return kendo.toString(value, `n${this.saleFormContent.decimal}`);\n    },\n    numberEditor(container, options) {\n      kendo\n        .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoNumericTextBox({\n          decimals: 30,\n          min: 0,\n          format: `${this.saleFormContent.decimal}`,\n        });\n    },\n    async loadSaleFormContent() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          saleFormContentHandler.list().then(async (res) => {\n            if (res.data.statusCode === 200) {\n              const data = res.data.data;\n              if (data.length > 0) {\n                this.saleFormContent = data[0];\n                this.baseCurrency = data[0].baseCurrency;\n                this.bom.currency = this.baseCurrency;\n                await this.loadTransactionRate();\n              }\n            }\n          });\n        }, 10);\n      });\n    },\n    async loadTransactionRate() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          const date = new Date().toISOString().substr(0, 10);\n          const currency = this.baseCurrency;\n          let code = \"\";\n          if (currency.hasOwnProperty(\"code\")) {\n            code = currency.code;\n          }\n          if (code !== undefined || code !== \"\") {\n            this.showLoading = true;\n            currencyHandler\n              .getLastExchangeRateByDate(date, code)\n              .then((res) => {\n                if (res.data.statusCode === 200) {\n                  this.showLoading = false;\n                  this.exchangeRate = res.data.data[0];\n                  this.bom.txnRate = this.exchangeRate.rate;\n                  this.bom.exchangeRate = this.exchangeRate;\n                  this.showLoading = false;\n                }\n              });\n          }\n        }, 10);\n      });\n    },\n    async loadPrefix() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          prefixHandler.get(\"bill of material\").then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoading = false;\n              this.transactionTypes = res.data.data;\n              if (this.transactionTypes.length > 0) {\n                this.bom.transactionType = this.transactionTypes[0];\n                if (this.$route.params.id === undefined) {\n                  this.generateNumber();\n                }\n              }\n            }\n          });\n        }, 10);\n      });\n    },\n    generateNumber() {\n      let data = {\n        abbr: this.bom.transactionType.abbr,\n        structure: this.bom.transactionType.structure,\n        transactionDate: new Date().toISOString().substr(0, 10),\n        sequcencing: this.bom.transactionType.sequcencing,\n        type: \"Bill Of Material\",\n        entity: 2,\n      };\n      this.bom.abbr = data.abbr;\n      this.bom.structure = data.structure;\n      this.bom.sequcencing = data.sequcencing;\n      this.bom.type = data.type;\n      this.bom.transactionDate = data.transactionDate;\n      this.showLoading = true;\n      billingHandler\n        .lastNumber(data)\n        .then((response) => {\n          if (response.data.statusCode === 200) {\n            this.showLoading = false;\n            const res = response.data.data;\n            const lastNumber = this.zeroPad(\n              parseInt(res.lastNumber),\n              this.bom.transactionType.format\n            );\n            this.bom.number =\n              res.suffix +\n              this.bom.transactionType.numberSeparator +\n              lastNumber;\n            this.bom.lastNumber = res.suffix + lastNumber;\n          }\n        })\n        .catch((e) => {\n          this.showLoading = false;\n          this.errors.push(e);\n        });\n    },\n    zeroPad(num, places) {\n      return String(num).padStart(places, \"0\");\n    },\n    suffix(transactionDate) {\n      return kendo.toString(new Date(transactionDate), `yymm`);\n    },\n    async loadWarehouses() {\n      warehouseHandler.getWarehouseSettingAll().then((res) => {\n        this.warehouses = res;\n      });\n    },\n    async getDataSource() {\n      let dsFP = this.$refs.finishProductDS.kendoWidget();\n      let dataRowFP = dsFP.data();\n      this.itemLineFP = [];\n      dataRowFP.forEach((i) => {\n        this.itemLineFP.push({\n          id: i.id,\n          item: i.item,\n          description: i.description,\n          buom: i.buom,\n          uom: i.uom,\n          yieldQty: i.yieldQty,\n          cost: i.cost,\n          amount: i.amount,\n          sku: i.sku,\n          decimalFormat: i.decimalFormat || \"n2\",\n          inventoryAccount: i.inventoryAccount,\n        });\n      });\n      let dsOP = this.$refs.otherProductDS.kendoWidget(),\n        dataRowOP = dsOP.data();\n      this.itemLineOP = [];\n      dataRowOP.forEach((i) => {\n        this.itemLineOP.push({\n          id: i.id,\n          item: i.item,\n          description: i.description,\n          buom: i.buom,\n          uom: i.uom,\n          yieldQty: i.yieldQty,\n          cost: i.cost,\n          amount: i.amount,\n          sku: i.sku,\n          decimalFormat: i.decimalFormat || \"n2\",\n          inventoryAccount: i.inventoryAccount,\n        });\n      });\n      let dsCU = this.$refs.componentUseDS.kendoWidget(),\n        dataRowCU = dsCU.data();\n      this.itemLineCU = [];\n      dataRowCU.forEach((i) => {\n        this.itemLineCU.push({\n          id: i.id,\n          item: i.item,\n          description: i.description,\n          buom: i.buom,\n          uom: i.uom,\n          qty: i.qty,\n          cost: i.cost,\n          amount: i.amount,\n          sku: i.sku,\n          decimalFormat: i.decimalFormat || \"n2\",\n          inventoryAccount: i.inventoryAccount,\n        });\n      });\n      // let dsOC = this.$refs.otherCostDS.kendoWidget(),\n      //     dataRowOC = dsOC.data()\n      this.itemLineOC = [];\n      // dataRowOC.forEach(i => {\n      //   this.itemLineOC.push({\n      //     id: i.id,\n      //     account: i.account,\n      //     description: i.description,\n      //     amount: i.amount,\n      //     tax: i.tax,\n      //   })\n      // })\n    },\n    savePrint() {},\n    async saveNew() {},\n    async saveClose() {\n      if (this.bom.variance !== 0) {\n        this.$snotify.error(\"Please check your variance amount\");\n        return;\n      }\n      await this.getDataSource();\n      this.bom.finishProduct = this.itemLineFP;\n      this.bom.itemId = this.itemLineFP[0].item\n        ? this.itemLineFP[0].item.id\n        : \"\";\n      this.bom.otherFinishProduct = this.itemLineOP\n      this.bom.componentUsed = this.itemLineCU\n      // this.bom.otherCost = this.itemLineOC\n      // this.bom.amount = this.totalCost\n      // this.bom.exchangeAmount = this.totalCost\n      // this.bom.variance = this.varianceAmount\n      this.bom.status = 1;\n      this.showLoading = true;\n      await bomHandler.save(this.bom).then((res) => {\n        this.showLoading = false;\n        this.$router.push({\n          name: \"Products\",\n          path: \"product\",\n          params: { dataBom: res },\n        });\n      });\n    },\n    removeRow() {},\n    errorMessage() {},\n    async dataSourceChanged(e) {\n      if (e.field) {\n        let dataRow = e.items[0],\n          buom = {};\n        switch (e.field) {\n          case \"item\":\n            // this.attribute_ = this.attributes.filter(m => m.type.id === dataRow.variant.id)\n            dataRow.set(\"description\", dataRow.item.description);\n            dataRow.set(\"yieldQty\", 1);\n            buom = dataRow.item.uom;\n            dataRow.set(\"buom\", buom);\n            await this.inventoryBalanceByItem(dataRow, dataRow.item.id, 1);\n            break;\n          // case \"uom\":\n          //   // window.console.log(dataRow.uom,'row-uom')\n          //   dataRow.set('cost', parseFloat(dataRow.uom.price))\n          //   window.console.log(dataRow.yieldQty)\n          //   if (dataRow.yieldQty !== undefined) {\n          //     dataRow.set('cost', parseFloat(dataRow.uom.price) * parseFloat(dataRow.yieldQty))\n          //     this.costFP = dataRow.cost\n          //   }\n          //   break\n          case \"cost\":\n            dataRow.set(\n              \"amount\",\n              parseFloat(dataRow.cost) * parseFloat(dataRow.yieldQty)\n            );\n            this.costFP = dataRow.amount;\n            break;\n          default:\n            break;\n        }\n        if (e.field) {\n          this.autoCalculateGrid1();\n          this.autoCalculateGrid2();\n          this.autoCalculateGrid3();\n        }\n      }\n    },\n    async dataSourceChangedOP(e) {\n      if (e.field) {\n        let dataRow = e.items[0],\n          buom = {};\n        switch (e.field) {\n          case \"item\":\n            dataRow.set(\"description\", dataRow.item.description);\n            dataRow.set(\"yieldQty\", 1);\n            buom = dataRow.item.uom;\n            dataRow.set(\"buom\", buom);\n            await this.inventoryBalanceByItem(dataRow, dataRow.item.id, 1);\n            break;\n          case \"yieldQty\":\n            dataRow.set(\n              \"amount\",\n              parseFloat(dataRow.cost) * parseFloat(dataRow.yieldQty)\n            );\n            // this.costOFP = dataRow.amount\n            break;\n          case \"cost\":\n            dataRow.set(\n              \"amount\",\n              parseFloat(dataRow.cost) * parseFloat(dataRow.yieldQty)\n            );\n            // this.costOFP = dataRow.amount\n            window.console.log(dataRow.cost);\n            break;\n          default:\n            break;\n        }\n        if (e.field) {\n          this.autoCalculateGrid1();\n          this.autoCalculateGrid2();\n          this.autoCalculateGrid3();\n        }\n      }\n    },\n    autoCalculateGrid1() {\n      let ds = this.$refs.finishProductDS.kendoWidget();\n      const row = ds.data();\n      let amount = 0;\n      row.forEach((n) => {\n        amount += n.amount || 0;\n      });\n      this.costFP = amount;\n      this.bom.amount = this.costOFP + this.costFP;\n      this.bom.exchangeAmount = this.costOFP + this.costFP;\n      this.bom.variance =\n        this.costFP + this.costOFP - (this.costCU + this.costOC);\n    },\n    autoCalculateGrid2() {\n      let ds = this.$refs.otherProductDS.kendoWidget();\n      const row = ds.data();\n      let amount = 0;\n      row.forEach((n) => {\n        amount += n.amount || 0;\n      });\n      this.costOFP = amount;\n      this.bom.amount = this.costOFP + this.costFP;\n      this.bom.exchangeAmount = this.costOFP + this.costFP;\n      this.bom.variance =\n        this.costFP + this.costOFP - (this.costCU + this.costOC);\n    },\n    autoCalculateGrid3() {\n      let ds = this.$refs.componentUseDS.kendoWidget();\n      const row = ds.data();\n      let amount = 0;\n      row.forEach((n) => {\n        amount += n.amount || 0;\n      });\n      this.costCU = amount;\n      this.bom.amount = this.costOFP + this.costFP;\n      this.bom.exchangeAmount = this.costOFP + this.costFP;\n      this.bom.variance =\n        this.costFP + this.costOFP - (this.costCU + this.costOC);\n      window.console.log(\n        \"this.bom.exchangeAmount\",\n        this.bom.exchangeAmount,\n        \"variance\",\n        this.bom.variance\n      );\n    },\n    async dataSourceChangedOC(e) {\n      if (e.field) {\n        let dataRow = e.items[0];\n        switch (e.field) {\n          case \"account\":\n            window.console.log(dataRow.account);\n            break;\n          case \"tax\":\n            break;\n          case \"amount\":\n            this.costOC = dataRow.amount;\n            break;\n          default:\n            break;\n        }\n      }\n    },\n    async dataSourceChangedCU(e) {\n      if (e.field) {\n        let dataRow = e.items[0],\n          buom = {};\n        switch (e.field) {\n          case \"item\":\n            dataRow.set(\"description\", dataRow.item.description);\n            dataRow.set(\"qty\", 1);\n            buom = dataRow.item.uom;\n            dataRow.set(\"buom\", buom);\n            await this.inventoryBalanceByItem(dataRow, dataRow.item.id, 2);\n            break;\n          // case \"uom\":\n          //   // window.console.log(dataRow.uom,'row-uom')\n          //   dataRow.set('cost', parseFloat(dataRow.uom.price))\n          //   window.console.log(dataRow.qty)\n          //   if (dataRow.qty !== undefined) {\n          //     dataRow.set('cost', parseFloat(dataRow.uom.price) * parseFloat(dataRow.qty))\n          //     this.costCU = dataRow.cost\n          //   }\n          //   break\n          case \"qty\":\n            // dataRow.set('price', parseFloat(dataRow.uom.price))\n            // dataRow.set('cost', parseFloat(dataRow.uom.price) * parseFloat(dataRow.qty))\n            dataRow.set(\n              \"amount\",\n              parseFloat(dataRow.cost) * parseFloat(dataRow.qty)\n            );\n            // this.costCU = dataRow.amount\n            break;\n          case \"cost\":\n            dataRow.set(\n              \"amount\",\n              parseFloat(dataRow.cost) * parseFloat(dataRow.qty)\n            );\n            // this.costCU = dataRow.amount\n            break;\n          default:\n            break;\n        }\n        if (e.field) {\n          this.autoCalculateGrid1();\n          this.autoCalculateGrid2();\n          this.autoCalculateGrid3();\n        }\n      }\n    },\n    rowNumberFP(dataItem) {\n      let ds = this.$refs.finishProductDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    UOMDropDownEditor(container, options) {\n      kendo\n        .jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n          autoBind: true,\n          autoWidth: true,\n          height: 400,\n          filter: \"startswith\",\n          dataTextField: \"uom.toUOM.name\",\n          dataValueField: \"uom.toUOM.id\",\n          cascadeFrom: \"item\",\n          template: \"<span>#=uom.toUOM.name#</span>\",\n          optionLabel: \"--- Select ---\",\n          dataSource: new kendo.data.DataSource({\n            serverFiltering: true,\n            transport: {\n              read: {\n                url: uomPriceHandler.getUrl(options.model.item.id),\n              },\n              dataType: \"json\",\n            },\n            schema: {\n              model: {\n                id: \"id\",\n                fields: {\n                  id: { type: \"string\" },\n                  // name: {type: \"string\"},\n                  // sku: {type: \"string\"},\n                },\n              },\n              data: function(response) {\n                return response.data;\n              },\n              total: function(response) {\n                return response.data.count;\n              },\n            },\n            // data: this.variants\n          }),\n        });\n    },\n    UOMTemplate(dataItem) {\n      const uom = dataItem.buom;\n      if (uom) {\n        return `<span>${uom.name ? uom.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    ItemDropDownEditorFP(container, options) {\n      kendo\n        .jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n          autoBind: true,\n          autoWidth: true,\n          height: 400,\n          filter: \"contains\",\n          dataTextField: \"name\",\n          dataValueField: \"id\",\n          headerTemplate:\n            '<div class=\"dropdown-header k-widget k-header\">' +\n            \"<span>Items </span>\" +\n            \"<span></span>\" +\n            \"</div>\",\n          template: \"<span>#=name#</span>\",\n          optionLabel: \"--- Select ---\",\n          dataSource: new kendo.data.DataSource({\n            serverFiltering: true,\n            transport: {\n              read: {\n                url: productVariantHandler.itemVariantSearchURL(), // variant only\n              },\n              dataType: \"json\",\n            },\n            schema: {\n              model: {\n                id: \"id\",\n                fields: {\n                  id: { type: \"string\" },\n                  name: { type: \"string\" },\n                  sku: { type: \"string\" },\n                },\n              },\n              data: function(response) {\n                return response.data;\n              },\n              total: function(response) {\n                return response.data.count;\n              },\n            },\n            // data: this.variants\n          }),\n        });\n    },\n    ItemDropDownEditor(container, options) {\n      kendo\n        .jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n          autoBind: true,\n          autoWidth: true,\n          height: 400,\n          filter: \"contains\",\n          dataTextField: \"name\",\n          dataValueField: \"id\",\n          headerTemplate:\n            '<div class=\"dropdown-header k-widget k-header\">' +\n            \"<span>Items </span>\" +\n            \"<span></span>\" +\n            \"</div>\",\n          template: \"<span>#=name#</span>\",\n          optionLabel: \"--- Select ---\",\n          dataSource: new kendo.data.DataSource({\n            serverFiltering: true,\n            transport: {\n              read: {\n                url: productVariantHandler.itemSearchURL(),\n              },\n              dataType: \"json\",\n            },\n            schema: {\n              model: {\n                id: \"id\",\n                fields: {\n                  id: { type: \"string\" },\n                  name: { type: \"string\" },\n                  sku: { type: \"string\" },\n                },\n              },\n              data: function(response) {\n                return response.data;\n              },\n              total: function(response) {\n                return response.data.count;\n              },\n            },\n            // data: this.variants\n          }),\n        });\n    },\n    itemTemplate(dataItem) {\n      const item = dataItem.item;\n      if (item) {\n        return `<span>${item.name ? item.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    async inventoryBalanceByItem(dataRow, itemId, flag = 1) {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          this.showLoading = true;\n          const startDate = new Date().toISOString().substr(0, 10);\n          let strFilter = \"?asOf=\" + startDate + \"&id=\" + itemId;\n          billingHandler.inventoryBalance(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              const balance = res.data.data;\n              if (balance.length > 0) {\n                dataRow.set(\"cost\", balance[0].wac);\n                dataRow.set(\"qoh\", balance[0].qoh);\n                if (flag === 1) {\n                  dataRow.set(\n                    \"amount\",\n                    parseFloat(balance[0].wac) * parseFloat(dataRow.yieldQty)\n                  );\n                } else {\n                  dataRow.set(\n                    \"amount\",\n                    parseFloat(balance[0].wac) * parseFloat(dataRow.qty)\n                  );\n                }\n              } else {\n                dataRow.set(\"cost\", 0);\n              }\n            }\n            this.showLoading = false;\n          });\n        }, 10);\n      });\n    },\n    async addRowFinishProduct() {\n      let ds = this.$refs.finishProductDS.kendoWidget(),\n        total = ds.total();\n      this.itemLinesFP.id = itemLinePrefix + uuid.v1();\n      this.itemLinesFP.decimalFormat = \"n\" + this.saleFormContent.decimal;\n      if (total === 0) {\n        ds.insert(total, this.itemLinesFP);\n      }\n    },\n\n    UOMDropDownEditorOP(container, options) {\n      kendo\n        .jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n          autoBind: true,\n          autoWidth: true,\n          height: 400,\n          filter: \"startswith\",\n          dataTextField: \"uom.toUOM.name\",\n          dataValueField: \"uom.toUOM.id\",\n          cascadeFrom: \"item\",\n          template: \"<span>#=uom.toUOM.name#</span>\",\n          optionLabel: \"--- Select ---\",\n          dataSource: new kendo.data.DataSource({\n            serverFiltering: true,\n            transport: {\n              read: {\n                url: uomPriceHandler.getUrl(options.model.item.id),\n              },\n              dataType: \"json\",\n            },\n            schema: {\n              model: {\n                id: \"id\",\n                fields: {\n                  id: { type: \"string\" },\n                  // name: {type: \"string\"},\n                  // sku: {type: \"string\"},\n                },\n              },\n              data: function(response) {\n                return response.data;\n              },\n              total: function(response) {\n                return response.data.count;\n              },\n            },\n            // data: this.variants\n          }),\n        });\n    },\n    UOMTemplateOP(dataItem) {\n      const uom = dataItem.uom;\n      if (uom) {\n        return `<span>${uom.uom ? uom.uom.toUOM.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    rowNumberOP(dataItem) {\n      let ds = this.$refs.otherProductDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    addRowOtherProduct() {\n      let ds = this.$refs.otherProductDS.kendoWidget(),\n        total = ds.total();\n      this.itemLinesOP.id = itemLinePrefix + uuid.v1();\n      this.itemLinesOP.decimalFormat = \"n\" + this.saleFormContent.decimal;\n      ds.insert(total, this.itemLinesOP);\n    },\n    removeRowOP(e) {\n      e.preventDefault();\n      const grid = kendo.jQuery(\"#gridOtherProduct\").data(\"kendoGrid\"),\n        dataSource = grid.dataSource,\n        dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n      if (dataSource.total() >= 1) {\n        dataSource.remove(dataItem);\n      }\n    },\n    removeRowCU(e) {\n      e.preventDefault();\n      const grid = kendo.jQuery(\"#gridComponentUse\").data(\"kendoGrid\"),\n        dataSource = grid.dataSource,\n        dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n      if (dataSource.total() > 1) {\n        dataSource.remove(dataItem);\n      }\n    },\n    UOMTemplateCU(dataItem) {\n      const uom = dataItem.uom;\n      if (uom) {\n        return `<span>${uom.uom ? uom.uom.toUOM.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n\n    rowNumberCU(dataItem) {\n      let ds = this.$refs.componentUseDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    addRowComponentUse() {\n      let ds = this.$refs.componentUseDS.kendoWidget(),\n        total = ds.total();\n      this.itemLinesCU.id = itemLinePrefix + uuid.v1();\n      this.itemLinesCU.decimalFormat = \"n\" + this.saleFormContent.decimal;\n      ds.insert(total, this.itemLinesCU);\n    },\n    cancel() {\n      this.$swal({\n        title: i18n.t(\"msg_title_warning\"),\n        text: i18n.t(\"msg_discard\"),\n        icon: \"warning\",\n        showCancelButton: true,\n        cancelButtonText: i18n.t(\"cancel\"),\n        confirmButtonColor: \"#4d4848\",\n        cancelButtonColor: \"#ED1A3A\",\n        confirmButtonText: i18n.t(\"discard\"),\n      }).then((resultCen) => {\n        if (resultCen.value) {\n          this.$router.go(-1);\n        }\n      });\n    },\n  },\n  async mounted() {\n    await this.loadSaleFormContent();\n    await this.loadPrefix();\n    await this.loadWarehouses();\n    await this.loadViewBOM();\n  },\n  async created() {\n    // await this.loadTax()\n    // await this.loadAccount()\n  },\n  activated() {\n    this.bom.finishProduct = [];\n    this.bom.otherFinishProduct = [];\n    this.bom.componentUsed = [];\n    this.loadViewBOM();\n  },\n  deactivated() {\n    this.bom.finishProduct = [];\n    this.bom.otherFinishProduct = [];\n    this.bom.componentUsed = [];\n    // this.addRowFinishProduct()\n    // this.addRowOtherProduct()\n    // this.addRowComponentUse()\n  },\n  watch: {\n    // '$router': 'loadViewBOM'\n  },\n};\n</script>\n<style scoped>\n.redText {\n  color: red !important;\n}\n\n.small_sidebar {\n  height: 97%;\n  position: relative;\n  padding: 12px;\n}\n\n.hide_small_bar_class {\n  max-width: 0;\n  transition: 0.5s ease-in;\n  flex: 0 0 0;\n  padding: 0;\n}\n\n.hide_big_bar_class {\n  max-width: 100%;\n  transition: 0.5s ease-in;\n  flex: 0 0 100%;\n}\n\n.iconArrow {\n  right: -35px;\n  position: absolute;\n  bottom: -10px;\n}\n\n.iconArrowHide {\n  position: absolute;\n  right: -7px;\n  bottom: -10px;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.detial_smallside_p {\n  position: absolute;\n  bottom: 10px;\n}\n\n@media (min-width: 1264px) {\n  .container {\n    /* max-width: 1185px; */\n    max-width: 1080px !important;\n  }\n}\n</style>\n"]}]}