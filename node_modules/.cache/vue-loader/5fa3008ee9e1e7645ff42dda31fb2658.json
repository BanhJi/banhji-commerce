{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/warehouses/setting/Zone.vue?vue&type=style&index=0&id=4ebf0ab9&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/warehouses/setting/Zone.vue","mtime":1638499443297},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKCn0K"},{"version":3,"sources":["Zone.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkSA;;AAEA","file":"Zone.vue","sourceRoot":"src/views/products/warehouses/setting","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pa-0\">\n            <h2 class=\"mb-0\">{{ $t('zone') }}</h2>\n            <v-dialog v-model=\"dialog\" max-width=\"380px\">\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn color=\"primary\" @click=\"onCreate\"\n                           class=\"white--text text-capitalize  float-right\" v-on=\"on\">\n                        {{ $t('create_new') }}\n                    </v-btn>\n                </template>\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t('zone') }}</v-card-title>\n                        <v-icon class=\"btn_close\" @click=\"dialog = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-row>\n                                <v-col sm=\"12\" cols=\"12\" class=\"\">\n                                    <label class=\"label\">{{ $t('warehouse_location') }}</label>\n                                    <v-select class=\" mt-2 mb-3\"\n                                              id=\"wh_selector\"\n                                              :items=\"whList\"\n                                              v-model=\"mZonWh\"\n                                              item-text=\"name\"\n                                              tage=\"Warehouse /Location\"\n                                              item-value=\"id\"\n                                              outlined\n                                              return-object/>\n\n                                    <label class=\"label\">{{ $t('zone_type') }}</label>\n                                    <v-select class=\" mt-2 mb-n2\"\n                                              id=\"zone_type_selector\"\n                                              :items=\"zoneTypes\"\n                                              v-model=\"mZonType\"\n                                              tage=\"Zone Type\"\n                                              item-text=\"name\"\n                                              item-value=\"id\"\n                                              outlined\n                                              return-object/>\n                                </v-col>\n                                <v-col sm=\"6\" cols=\"6\">\n                                    <label class=\"label\">{{ $t('name') }}</label>\n                                    <v-text-field class=\" mt-2\"\n                                                  v-model=\"zone.name\"\n                                                  outlined\n                                                  placeholder=\"\"/>\n                                </v-col>\n                                <v-col sm=\"6\" cols=\"6\">\n                                    <label class=\"label\">{{ $t('code') }}</label>\n                                    <v-text-field class=\" mt-2\"\n                                                  v-model=\"zone.code\"\n                                                  outlined\n                                                  placeholder=\"\"/>\n                                </v-col>\n                            </v-row>\n                        </v-form>\n                    </v-card-text>\n                    <v-divider/>\n                    <v-card-actions class=\"modal_foooter\">\n                        <v-row>\n                            <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                                <v-btn color=\"primary\" outlined\n                                       class=\" text-capitalize  black--text float-left\"\n                                       @click=\"dialog = false\">{{ $t('cancel') }}\n                                </v-btn>\n                            </v-col>\n                            <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                                <v-btn @click=\"addZoneSetting\" color=\"primary\"\n                                       class=\"px-3  white--text text-capitalize\">{{ $t('save_close') }}\n                                </v-btn>\n                            </v-col>\n                        </v-row>\n                        <!--                        <v-btn color=\"white\" class=\" black&#45;&#45;text float-left\" @click=\"dialog = false\">{{$t('cancel')}}</v-btn>-->\n                        <!--                        <v-btn color=\"blue\" class=\" white&#45;&#45;text text-capitalize float-right\" >{{$t('save_new')}}-->\n                        <!--                        </v-btn>-->\n\n                    </v-card-actions>\n\n                </v-card>\n            </v-dialog>\n\n            <p class=\"mb-3\">{{ $t('zone_decs') }}</p>\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <template>\n                        <v-simple-table class=\"attachment_table\">\n                            <template v-slot:default>\n                                <thead>\n                                <tr>\n                                    <th>{{ $t('type') }}</th>\n                                    <th>{{ $t('code') }}</th>\n                                    <th>{{ $t('name') }}</th>\n                                    <th>{{ $t('warehouse') }}</th>\n                                    <th/>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr v-for=\"zon in zoneSettings\" v-bind:key=\"zon.id\">\n                                    <td>{{ zon.type.name }}</td>\n                                    <td>{{ zon.code }}</td>\n                                    <td class=\"text-bold\">{{ zon.name }}</td>\n                                    <td>{{ zon.wh.name }}</td>\n                                    <td class=\"text-center\">\n                                        <v-btn class=\"btn_edit_setting\" @click=\"onEditZone(zon)\">\n                                            <v-icon class=\"white--text\" size=\"14\">mdi-pen</v-icon>\n                                            <span class=\"capitalize ml-1 white--text font_14\">{{ $t('edit') }}</span>\n                                        </v-btn>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </template>\n                        </v-simple-table>\n                    </template>\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport {ZoneModel} from \"@/scripts/model/AppModels\";\n\n\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\")\nexport default {\n    data: () => ({\n        dialog: false,\n        valid: true,\n        whList: [],\n        zoneTypes: [],\n        zone: [],\n        zoneSettings: [],\n        mZonType: {},\n        mZonWh: {},\n        zoneModel: new ZoneModel({})\n    }),\n    methods: {\n        onEditZone(value) {\n            this.zone = value\n            this.mZonType = value.type\n            this.mZonWh = value.wh\n            this.dialog = true\n        },\n        async onCreate() {\n            await this.loadWhSetting()\n            await this.loadZot()\n            this.mZonType = {}\n            this.mZonWh = {}\n            this.zone.id = ''\n            this.clear()\n        },\n        clear() {\n            this.zone = {}\n        },\n        async addZoneSetting() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            let data = {\n                'id': this.zone.id || '',\n                'name': this.zone.name,\n                'code': this.zone.code,\n                'type': this.mZonType,\n                'wh': this.mZonWh\n            }\n            warehouseHandler.saveZoneSetting(data).then(res => {\n                window.console.log(res, 'create zone')\n            })\n\n        },\n        async loadWhSetting() {\n            warehouseHandler.getWarehouseSettingAll().then(res => {\n                if (res) {\n                    this.whList = res\n                }\n            })\n        },\n        async loadZon() {\n            warehouseHandler.getZonAll().then(res => {\n                if (res) {\n                    this.zoneSettings = res\n                    window.console.log(this.zoneSettings)\n                }\n            })\n        },\n        async loadZot() {\n            warehouseHandler.getZotAll().then(res => {\n                if (res.data) {\n                    this.zoneTypes = res.data\n                    window.console.log(\"zoneType: \", this.zoneTypes)\n                }\n            })\n        },\n        // Response Status\n        responseStatus(status) {\n            switch (status) {\n                case 200:// Ok\n                    this.loadWarehouses()\n                    // this.showAlert()\n                    this.close()\n                    // Reset form\n                    this.$refs.form.reset()\n\n                    break\n                case 201:// Duplicate\n                    this.alertError('Duplicate entry!')\n                    break\n                default:\n                    break\n            }\n        },\n        alertError(msg) {\n            if (msg) {\n                // Code here\n            } else {\n                msg = 'Something went wrong!'\n            }\n            this.showLoading = false\n            this.loadingTextAlert = \"Failed!\"\n            this.loadingColorAlert = \"#eb8334\"\n            this.changeAlertStatus()\n            // this.$swal({\n            // \tposition: 'center',\n            // \ticon: 'error',\n            // \ttitle: 'Oops...!',\n            // \ttext: msg,\n            // \tshowConfirmButton: true\n            // })\n        },\n        // Sweetalert2\n        changeAlertStatus() {\n            this.loadingAlert = true\n            setTimeout(() => {\n                this.loadingAlert = false\n            }, 6200);\n        },\n        showAlert() {\n            this.showLoading = false\n            this.changeAlertStatus()\n            this.loadingTextAlert = \"Added Successful\"\n            this.loadingColorAlert = \"#3DA72E\"\n            switch (this.saveMode) {\n                case 'saveClose':// Save Close\n                    // this.$swal({\n                    // \tposition: 'center',\n                    // \ticon: 'success',\n                    // \ttitle: 'Your work has been saved',\n                    // \tshowConfirmButton: true,\n                    // }).then((result) => {\n                    // \tif (result.value) {\n                    // \t\twindow.history.go(-1)\n\n                    // \t\treturn false\n                    // \t}\n                    // })\n                    this.$router.go(-1)\n                    break\n                default:// Save New\n                    // this.$swal({\n                    // \tposition: 'center',\n                    // \ticon: 'success',\n                    // \ttitle: 'Your work has been saved',\n                    // \tshowConfirmButton: false,\n                    // \ttimer: 1500\n                    // })\n                    break\n            }\n            this.saveMode = ''\n        },\n        close() {\n            this.dialog = false\n        }\n    },\n    watch: {\n        dialog(val) {\n            val || this.close()\n        },\n    },\n    mounted() {\n        this.loadZon()\n        this.loadZot()\n        this.loadWhSetting()\n    },\n    computed: {},\n    components: {},\n};\n</script>\n<style scoped>\n@media (max-width: 576px) {\n\n}\n</style>"]}]}