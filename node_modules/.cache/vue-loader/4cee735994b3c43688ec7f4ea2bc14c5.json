{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/Analysis.vue?vue&type=style&index=0&id=171c9f6c&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/Analysis.vue","mtime":1640595536782},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlcG9ydHNfbGlzdCB7Cgl3aWR0aDogMTAwJTsKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CglwYWRkaW5nOiAyMHB4IDIwcHggNXB4Owp9Ci5yZXBvcnRfZmlsdGVyIHsKCWJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7CglwYWRkaW5nOiAwIDIwcHggNXB4IDIwcHg7Cglwb3NpdGlvbjogcmVsYXRpdmU7Cn0KLmR2X210IHsKCW1hcmdpbi10b3A6IDI0cHg7Cn0KLnJlcG9ydF9leHBvcnQgewoJcG9zaXRpb246IGFic29sdXRlOwoJdG9wOiAxNXB4Owp9Ci5yZXBvcnRfdG90YWwgewoJcGFkZGluZzogMTIuNXB4OwoJdGV4dC1hbGlnbjogcmlnaHQ7Cgl0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwoJZm9udC13ZWlnaHQ6IDcwMDsKCWJvcmRlci10b3A6IDFweCBzb2xpZCAjMzMzOwoJYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzMzM7Cn0KLmN1c3RvbV9leHBhbnNpb24KCS52LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIKCS52LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXJfX2ljb24KCS52LWljb24gewoJZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9Ci52LWV4cGFuc2lvbi1wYW5lbCB7Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjY2NjYzsKCWJvcmRlci1yYWRpdXM6IDA7Cn0KLnYtZXhwYW5zaW9uLXBhbmVsOjpiZWZvcmUgewoJYm94LXNoYWRvdzogbm9uZTsKfQoudi1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHsKCXBhZGRpbmc6IDE1cHg7Cn0KLnYtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnRfX3dyYXAgewoJcGFkZGluZzogMCAzNXB4IDEwcHg7Cn0KQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CgkuZHZfbXQsCgkuZHZfbXQ4IHsKCQltYXJnaW4tdG9wOiAwOwoJfQoJLnJlcG9ydHNfbGlzdCB7CgkJbWFyZ2luLXRvcDogMDsKCX0KfQo="},{"version":3,"sources":["Analysis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAybA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Analysis.vue","sourceRoot":"src/views/accounting/reports/receipt_payment","sourcesContent":["<template>\n\t<v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<v-row>\n\t\t\t\t\t\t\t<v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<label class=\"label pt-5\">{{ $t(\"base_month\") }}</label>\n\t\t\t\t\t\t\t\t<app-month-picker\n\t\t\t\t\t\t\t\t\t:initialMonth=\"baseMonth\"\n\t\t\t\t\t\t\t\t\t@emitMonth=\"baseMonth = $event\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t\t\t<label class=\"label pt-5\">{{ $t(\"compare_month\") }}</label>\n\t\t\t\t\t\t\t\t<app-month-picker\n\t\t\t\t\t\t\t\t\t:initialMonth=\"compareMonth\"\n\t\t\t\t\t\t\t\t\t@emitMonth=\"compareMonth = $event\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t\t<v-col sm=\"2\" cols=\"12\" class=\"pt-6\">\n\t\t\t\t\t\t\t\t<v-btn class=\"white--text\" color=\"primary\" @click=\"search\">\n\t\t\t\t\t\t\t\t\t{{ $t(\"run_report\") }}\n\t\t\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t\t\t</v-col>\n\t\t\t\t\t\t</v-row>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<div class=\"report_export\">\n\t\t\t\t\t\t\t<label class=\"mb-1\">{{ $t(\"reporting_language\") }}:</label>\n\t\t\t\t\t\t\t<app-reporting-language\n\t\t\t\t\t\t\t\t:initLanguage=\"reportingLanguage\"\n\t\t\t\t\t\t\t\t@emitLanguage=\"reportingLanguage = $event\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"custom_expansion pt-0\">\n\t\t\t\t\t\t<kendo-datasource\n\t\t\t\t\t\t\tref=\"statementDS\"\n\t\t\t\t\t\t\t:data=\"statementList\"\n\t\t\t\t\t\t\t:schema=\"schemaDefinition\"\n\t\t\t\t\t\t\t:sort=\"sortDefinition\"\n\t\t\t\t\t\t\t:group=\"groupDefinition\"\n\t\t\t\t\t\t\t:aggregate=\"aggregateDefinition\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<kendo-grid\n\t\t\t\t\t\t\tid=\"statementGrid\"\n\t\t\t\t\t\t\tclass=\"custom_grid\"\n\t\t\t\t\t\t\t:data-source-ref=\"'statementDS'\"\n\t\t\t\t\t\t\t:dataBound=\"dataBound\"\n\t\t\t\t\t\t\t:selectable=\"true\"\n\t\t\t\t\t\t\t:persistSelection=\"true\"\n\t\t\t\t\t\t\t:sortable=\"true\"\n\t\t\t\t\t\t\t:column-menu=\"true\"\n\t\t\t\t\t\t\t:reorderable=\"true\"\n\t\t\t\t\t\t\t:resizable=\"true\"\n\t\t\t\t\t\t\t:noRecords=\"true\"\n\t\t\t\t\t\t\t:toolbar=\"['excel']\"\n\t\t\t\t\t\t\t:excel-file-name=\"'incomeStatement.xlsx'\"\n\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t:columns=\"columns\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\n\t\t\t\t<LoadingMe\n\t\t\t\t\t:isLoading=\"showLoading\"\n\t\t\t\t\t:fullPage=\"false\"\n\t\t\t\t\t:myLoading=\"true\"\n\t\t\t\t/>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\n// import Helper from \"@/helper.js\";\nimport BalanceSheetAnalysisModel from \"@/scripts/model/accounting/BalanceSheetAnalysis\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n\nexport default {\n\tcomponents: {\n\t\tLoadingMe: () => import(\"@/components/Loading\"),\n\t\t\"app-month-picker\": () =>\n\t\t\timport(\"@/components/custom_templates/MonthPicker\"),\n\t\t\"app-reporting-language\": () =>\n\t\t\timport(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n\t},\n\tdata: () => ({\n\t\tbaseMonth: new Date().toISOString().substr(0, 7),\n\t\tcompareMonth: new Date().toISOString().substr(0, 7),\n\t\tstatementList: [],\n\t\t// Reporting Language\n\t\treportingLanguage: \"english\",\n\t\tfieldName: \"name\",\n\t\tfieldType: \"type\",\n\t\t// LodingMe\n\t\tshowLoading: false,\n\t\t/* KENDO */\n\t\tcolumns: [],\n\t\tsortDefinition: { field: \"number\", dir: \"asc\" },\n\t\tgroupDefinition: [],\n\t\taggregateDefinition: [\n\t\t\t{ field: \"baseAmount\", aggregate: \"sum\" },\n\t\t\t{ field: \"compareAmount\", aggregate: \"sum\" }\n\t\t],\n\t\tschemaDefinition: {\n\t\t\tmodel: { id: \"accountUUID\" },\n\t\t},\n\t}),\n\tmethods: {\n\t\t// Search journals\n\t\tasync search() {\n\t\t\t// Empty dataSource\n\t\t\tlet ds = this.$refs.statementDS.kendoWidget();\n\t\t\tds.data([]);\n\n\t\t\tlet bm = new Date(this.baseMonth),\n\t\t\t\tcm = new Date(this.compareMonth);\n\n\t\t\t/* Set to day 1 */\n\t\t\tbm.setDate(1);\n\t\t\tcm.setDate(1);\n\n\t\t\t/* Last day of the month */\n\t\t\tlet bmLastDay = new Date(bm.getFullYear(), bm.getMonth()+1, 0),\n\t\t\t\tcmLastDay = new Date(cm.getFullYear(), cm.getMonth()+1, 0);\n\n\t\t\t// Query\n\t\t\tthis.showLoading = true;\n\t\t\tlet baseMonthIS = await incomeStatementHandler\n\t\t\t\t.getIncomeStatement({\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart_date: kendo.toString(bm, \"yyyy-MM-dd\") + \"T00:00:00.000Z\",\n\t\t\t\t\t\tend_date: kendo.toString(bmLastDay, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\tgroup_by: \"1\",\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\tlet compareMonthIS = await incomeStatementHandler\n\t\t\t\t.getIncomeStatement({\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tstart_date: kendo.toString(cm, \"yyyy-MM-dd\") + \"T00:00:00.000Z\",\n\t\t\t\t\t\tend_date: kendo.toString(cmLastDay, \"yyyy-MM-dd\") + \"T23:59:59.999Z\",\n\t\t\t\t\t\tgroup_by: \"1\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t\n\t\t\t/* Grouping */\n\t\t\tlet g = {},\n\t\t\t\ttotalRevenue = 0;\n\n\t\t\t/* Base Month Data */\n\t\t\tbaseMonthIS.data.forEach((value) => {\n\t\t\t\tlet entry = this.applyIncomeStatementRule(value);\n\t\t\t\tentry.baseAmount = value.balance;\n\t\t\t\t\n\t\t\t\t/* Sum Revenue */\n\t\t\t\tif (entry.groupNature.toLowerCase() === \"revenue\") {\n\t\t\t\t\ttotalRevenue += entry.balance;\n\t\t\t\t}\n\n\t\t\t\tlet gname = String(entry.accountUUID) + String(entry.account_type_number);\n\t\t\t\tg[gname] = entry;\n\t\t\t});\n\n\t\t\t/* Compare Month Data */\n\t\t\tcompareMonthIS.data.forEach((value) => {\n\t\t\t\tlet entry = this.applyIncomeStatementRule(value);\n\n\t\t\t\t/* Grouping */\n\t\t\t\tlet gname = String(entry.accountUUID) + String(entry.account_type_number);\n\n\t\t\t\tif(g[gname]){\n\t\t\t\t\tg[gname][\"compareAmount\"] = entry.balance;\n\t\t\t\t\tg[gname][\"changePercentage\"] = this.findChangePercentage(g[gname][\"baseAmount\"], entry.balance);\n\t\t\t\t}else{\n\t\t\t\t\tentry.compareAmount = entry.balance;\n\t\t\t\t\tentry.changePercentage = this.findChangePercentage(entry.baseAmount, entry.balance);\n\n\t\t\t\t\tg[gname] = entry;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* Calculate Common Size */\n\t\t\tfor (let k in g)\n\t\t\tg[k][\"commonSize\"] = this.findCommonSizePercentage(g[k][\"baseAmount\"], totalRevenue);\n\n\t\t\tthis.statementList = Object.values(g);\n\t\t\tthis.generateColumn();\n\t\t\t\n\t\t\tthis.showLoading = false;\n\t\t},\n\t\tapplyIncomeStatementRule(value){\n\t\t\tlet entry = new BalanceSheetAnalysisModel(value);\n\n\t\t\t// Order\n\t\t\tif (\n\t\t\t\tvalue.account_type_number == OrderNumberPL.GrossProfit.number\n\t\t\t) {\n\t\t\t\t// Gross Profit\n\t\t\t\tentry.order = OrderNumberPL.GrossProfit.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number == OrderNumberPL.OtherRevenue.number\n\t\t\t) {\n\t\t\t\t// Other Revenue\n\t\t\t\tentry.order = OrderNumberPL.OtherRevenue.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.OperatingExpense.number\n\t\t\t) {\n\t\t\t\t// Operating Expense\n\t\t\t\tentry.order = OrderNumberPL.OperatingExpense.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.OperatingIncomeEBITDA.number\n\t\t\t) {\n\t\t\t\t// Operating Income (EBITDA)\n\t\t\t\tentry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.number\n\t\t\t) {\n\t\t\t\t// Earning Before Interest And Tax(EBIT)\n\t\t\t\tentry.order =\n\t\t\t\t\tOrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.ProfitBeforeTax.number\n\t\t\t) {\n\t\t\t\t// Profit Before Tax\n\t\t\t\tentry.order = OrderNumberPL.ProfitBeforeTax.order;\n\t\t\t} else if (\n\t\t\t\tvalue.account_type_number ==\n\t\t\t\tOrderNumberPL.ProfitForThePeriod.number\n\t\t\t) {\n\t\t\t\t// Profit For The Period\n\t\t\t\tentry.order = OrderNumberPL.ProfitForThePeriod.order;\n\t\t\t} else {\n\t\t\t\tentry.order = value.account_type_number;\n\t\t\t}\n\n\t\t\treturn entry;\n\t\t},\n\t\t// Row Template\n\t\taccountTmpl(dataItem) {\n\t\t\tlet name = dataItem.number;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname += \" - \" + dataItem.local_name;\n\t\t\t} else {\n\t\t\t\tname += \" - \" + dataItem.name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\ttypeGroupHeaderTmpl(dataItem) {\n\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\t/* Databound */\n\t\tdataBound(e) {\n\t\t\tlet grid = e.sender;\n\n\t\t\tgrid.dataSource.data().forEach((value) => {\n\t\t\t\tif (value.account_type_number >= 100) {\n\t\t\t\t\tlet row = grid.tbody\n\t\t\t\t\t\t.find(\"tr[data-uid='\" + value.uid + \"']\")\n\t\t\t\t\t\t.prev(\".k-grouping-row\");\n\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// Generate Columns\n\t\tgenerateColumn() {\n\t\t\tlet headerAttributes = {\n\t\t\t\t\tclass: \"table-header-cell\",\n\t\t\t\t\tstyle: \"text-align: right;padding-right: 35px; font-size: 14px\",\n\t\t\t\t},\n\t\t\t\tattributes = {\n\t\t\t\t\tclass: \"table-cell\",\n\t\t\t\t\tstyle: \"text-align: right; font-size: 14px\",\n\t\t\t\t};\n\n\t\t\tthis.columns = [\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldName,\n\t\t\t\t\ttitle: i18n.t(\"account\"),\n\t\t\t\t\ttemplate: this.accountTmpl,\n\t\t\t\t\tlocked: true,\n\t\t\t\t\twidth: 400,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldType,\n\t\t\t\t\ttitle: i18n.t(\"type\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate: this.typeGroupHeaderTmpl,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"statementGroup\",\n\t\t\t\t\ttitle: i18n.t(\"statement_group\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"#=value#\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"groupNature\",\n\t\t\t\t\ttitle: i18n.t(\"nature\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"#=value#\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"baseAmount\",\n\t\t\t\t\ttitle: this.baseMonth,\n\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\twidth: 150,\n\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"compareAmount\",\n\t\t\t\t\ttitle: this.compareMonth,\n\t\t\t\t\tformat: \"{0:#,##0.##;(#,##0.##)}\",\n\t\t\t\t\twidth: 150,\n\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"changePercentage\",\n\t\t\t\t\ttitle: i18n.t(\"change_%\"),\n\t\t\t\t\tformat: \"{0:p}\",\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"commonSize\",\n\t\t\t\t\ttitle: i18n.t(\"common_size\"),\n\t\t\t\t\tformat: \"{0:p}\",\n\t\t\t\t\twidth: 100,\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t// On Reporint Language Changes\n\t\tonReportingLanguageChanges() {\n\t\t\tthis.fieldName = \"name\";\n\t\t\tthis.fieldType = \"type\";\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tthis.fieldName = \"local_name\";\n\t\t\t\tthis.fieldType = \"type_local_name\";\n\t\t\t}\n\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Generate column with new language\n\t\t\tthis.generateColumn();\n\t\t},\n\t\t// Generate Group By\n\t\tgenerateGroupBy() {\n\t\t\tthis.groupDefinition = {\n\t\t\t\tfield: this.fieldType,\n\t\t\t\taggregates: this.aggregateDefinition,\n\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tfindChangePercentage(num1, num2){\n            let result = 0;\n\n            if(num2 !== 0){\n                result = (num1 - num2) / num2;\n            }\n\n            return result;\n        },\n\t\tfindCommonSizePercentage(num1, num2){\n            let result = 0;\n\n            if(num2 !== 0){\n                result = num1 / num2;\n            }\n\n            return result;\n        },\n\t},\n\twatch: {\n\t\treportingLanguage() {\n\t\t\tthis.onReportingLanguageChanges();\n\t\t},\n\t},\n\tcomputed: {\n\t\tappType(){\n\t\treturn dataStore.productType;\n\t\t},\n\t},\n\tmounted() {\n\t\t// Generate Group By\n\t\tthis.generateGroupBy();\n\n\t\t// Initial Grid Columns\n\t\tthis.generateColumn();\n\t},\n};\n</script>\n\n<style scoped>\n.reports_list {\n\twidth: 100%;\n\tbackground-color: #fff;\n\tpadding: 20px 20px 5px;\n}\n.report_filter {\n\tbackground-color: #f8f8f9;\n\tpadding: 0 20px 5px 20px;\n\tposition: relative;\n}\n.dv_mt {\n\tmargin-top: 24px;\n}\n.report_export {\n\tposition: absolute;\n\ttop: 15px;\n}\n.report_total {\n\tpadding: 12.5px;\n\ttext-align: right;\n\ttext-transform: uppercase;\n\tfont-weight: 700;\n\tborder-top: 1px solid #333;\n\tborder-bottom: 1px solid #333;\n}\n.custom_expansion\n\t.v-expansion-panel-header\n\t.v-expansion-panel-header__icon\n\t.v-icon {\n\tdisplay: none !important;\n}\n.v-expansion-panel {\n\tborder-bottom: 1px solid #cccccc;\n\tborder-radius: 0;\n}\n.v-expansion-panel::before {\n\tbox-shadow: none;\n}\n.v-expansion-panel-header {\n\tpadding: 15px;\n}\n.v-expansion-panel-content__wrap {\n\tpadding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n\t.dv_mt,\n\t.dv_mt8 {\n\t\tmargin-top: 0;\n\t}\n\t.reports_list {\n\t\tmargin-top: 0;\n\t}\n}\n</style>\n"]}]}