{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/pricing_management/PricingAnalasis.vue?vue&type=style&index=0&id=a8a972ca&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/pricing_management/PricingAnalasis.vue","mtime":1642648523089},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mdW5jdGlvbl9mb290ZXIgewogICAgcGFkZGluZzogMTVweDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKcCB7CiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsKfQoKLmFjdGlvbkJ0biB7CiAgICBoZWlnaHQ6IDQ3LjJweCAhaW1wb3J0YW50Owp9CgoudGV4dF90aXAgewogICAgZm9udC1zaXplOiA5cHg7CiAgICBsaW5lLWhlaWdodDogMTBweDsKfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7Cn0K"},{"version":3,"sources":["PricingAnalasis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"PricingAnalasis.vue","sourceRoot":"src/views/customers/pricing_management","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col sm=\"12\" class=\"py-0\">\n                        <h2 class=\"mb-1 font_20\">{{ $t(\"pricing_analysis\") }}</h2>\n                        <p class=\"mb-2\">{{ $t(\"pricing_analysis_desc\") }}</p>\n                    </v-col>\n                    <v-col sm=\"4\" cols=\"12\" class=\"pt-0 kendo_dropdown_custom\">\n                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0 pb-4 kendo_dropdown_custom\">\n                            <label>{{ $t(\"product_categories\") }}</label>\n                            <product-category-dropdownlist\n                                :initCategory=\"category\"\n                                @onChange=\"onCategoryChanged\"\n                            />\n                        </v-col>\n                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0 kendo_dropdown_custom\">\n                            <label>{{ $t(\"product_group\") }}</label>\n                            <product-group-dropdownlist\n                                :initProductGroup=\"group\"\n                                @onChange=\"onGroupChanged\"\n                            />\n                        </v-col>\n                    </v-col>\n                    <v-col sm=\"4\" cols=\"12\" class=\"pt-0 kendo_dropdown_custom\">\n                        <label>{{ $t(\"price_level\") }}</label>\n                        <div class=\"d-flex\">\n                            <div style=\"width:50px;\" class=\"code_text mt-1  text-bold\">{{ code }}</div>\n                            <v-select class=\"mt-1 custom-border\"\n                                      v-model=\"priceLevel\"\n                                      :items=\"priceLevels\"\n                                      item-value=\"id\"\n                                      item-text=\"name\"\n                                      return-object\n                                      @change=\"onPriceLevelChanged\"\n                                      outlined/>\n                        </div>\n                        <label>{{ $t(\"uom\") }}</label>\n                        <uom-dropdownlist\n                            :initUOM=\"uom\"\n                            @onChange=\"onUOMChanged\"\n                        />\n                    </v-col>\n                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                        <!--                        <label>{{ $t(\"round_rule\") }}</label>-->\n                        <!--                        <v-select :items=\"roundedRule\" v-model=\"round\" class=\"mt-1\" outlined/>-->\n                        <label>{{ $t(\"method\") }}</label>\n                        <v-select :items=\"methodRule\" v-model=\"method\" class=\"mt-1\" outlined/>\n\n                        <label>{{ $t(\"margin\") }}</label>\n                        <div class=\"d-flex\">\n                            <div style=\"width:50px;\" class=\"code_text mt-1  text-bold\">%</div>\n                            <v-text-field class=\"mt-1 flex-1 custom-border\"\n                                          type=\"number\"\n                                          v-model=\"base\"\n                                          min=\"0\"\n                                          max=\"100\"\n                                          outlined/>\n                            <v-btn color=\"primary white--text mt-1 ml-2\" @click=\"loadItems\">\n                                <i\n                                    class=\"b-search\"\n                                    style=\"font-size: 18px; color:#fff !important;\"\n                                />\n                            </v-btn>\n                        </div>\n                    </v-col>\n                </v-row>\n                <v-row class=\"mt-0\">\n                    <v-col sm=\"12\" cols=\"12\" class=\"pb-0 pt-0\">\n                        <template>\n                            <LoadingMe\n                                :isLoading=\"showLoading\"\n                                :fullPage=\"false\"\n                                :myLoading=\"true\"\n                            />\n                            <kendo-datasource ref=\"itemListDS\" :data=\"itemList\"/>\n                            <kendo-grid\n                                id=\"gridItems\"\n                                class=\"grid-function\"\n                                :data-source-ref=\"'itemListDS'\"\n                                :editable=\"false\"\n                                :navigatable=\"true\"\n                                :noRecords=\"true\"\n                                :toolbar=\"['excel']\"\n                                :excel-file-name=\"'PriceBook.xlsx'\"\n                                :excel-filterable=\"true\"\n                                :scrollable-virtual=\"true\">\n                                <kendo-grid-column\n                                    :field=\"'no'\"\n                                    :title=\"'no'\"\n                                    :template=\"rowNumberTmpl\"\n                                    :width=\"40\"\n                                    :column-menu=\"false\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-center'\t}\"\n                                    :attributes=\"{style: 'text-align: center'}\"/>\n                                <kendo-grid-column\n                                    :field=\"'name'\"\n                                    :title=\"$t('item')\"\n                                    :width=\"250\"\n                                    :editable=\"()=>{ return false}\"\n                                    :template=\"'<span>#=name#</span>'\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                                <kendo-grid-column\n                                    :field=\"'code'\"\n                                    :title=\"$t('unit')\"\n                                    :width=\"250\"\n                                    :editable=\"()=>{ return false}\"\n                                    :template=\"'<span>#=code#</span>'\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                                <kendo-grid-column\n                                    :field=\"'price'\"\n                                    :title=\"$t('current_price')\"\n                                    :width=\"120\"\n                                    :template=\"'<span>#=kendo.toString(price, decimalFormat)#</span>'\"\n                                    :editable=\"()=>{ return false}\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                                <kendo-grid-column\n                                    :field=\"'cost'\"\n                                    :title=\"$t('last_cost')\"\n                                    :width=\"120\"\n                                    :editable=\"()=>{ return true}\"\n                                    :template=\"'<span>#=kendo.toString(cost, decimalFormat)#</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                                <kendo-grid-column\n                                    :field=\"'newPrice'\"\n                                    :title=\"$t('new_price')\"\n                                    :width=\"120\"\n                                    :editable=\"()=>{ return true}\"\n                                    :template=\"newPriceTemplate\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                                <kendo-grid-column\n                                    :field=\"'variance'\"\n                                    :title=\"$t('variance')\"\n                                    :width=\"120\"\n                                    :editable=\"()=>{ return true}\"\n                                    :template=\"'<span>#=kendo.toString(variance, decimalFormat)# %</span>'\"\n                                    :attributes=\"{style: 'text-align: right'}\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            </kendo-grid>\n\n                        </template>\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\nimport {UomModel} from \"@/scripts/model/AppModels\";\nimport CategoryModel from \"@/scripts/model/Categories\";\nimport GroupModel from \"@/scripts/model/ProductGroup\";\nimport priceLevelHandler from \"@/scripts/priceLevelHandler\";\nimport productVariantHandler from \"@/scripts/productVariantHandler\";\nimport currencyHandler from \"@/scripts/currency/handler/currencyHandler\";\nimport kendo from \"@progress/kendo-ui\";\n\nexport default {\n    data: () => ({\n        roundedRule: [\"Round Up\", \"Round Down\"],\n        round: 'Round Up',\n        methodRule: [\"Margin\", \"Markup\"],\n        method: \"Margin\",\n        priceLevels: [],\n        itemList: [],\n        priceLevel: {},\n        valid: true,\n        showLoading: false,\n        dialogM3: false,\n        uom: new UomModel({}),\n        category: new CategoryModel({}),\n        group: new GroupModel({}),\n        code: '',\n        base: 100,\n        txnRate: 1\n    }),\n    props: {},\n    methods: {\n        roundDown(number, decimals) {\n            decimals = decimals || 0;\n            const options = {\n                minimumFractionDigits: decimals,\n                maximumFractionDigits: decimals\n            };\n            const formatted = Number(number).toLocaleString('en', options);\n            window.console.log('down', formatted, 'numbher', number)\n            return formatted;\n        },\n        newPriceTemplate(dataItem) {\n            return kendo.toString(parseFloat(dataItem.newPrice), dataItem.decimalFormat)\n            // // const roundOne = (n, d) => Math.round(n * Math.pow(10, d)) / Math.pow(10, d)\n            // if (this.round === 'Round Up') {\n            //     return kendo.toString(parseFloat(dataItem.newPrice), dataItem.decimalFormat)\n            // } else {\n            //     const decimalFormat = dataItem.decimalFormat || 2\n            //     const decimals = decimalFormat.includes('n') ? decimalFormat.replace('n', '') : decimalFormat\n            //     return this.roundDown(dataItem.newPrice, parseInt(decimals))\n            // }\n        },\n        async loadTransactionRate() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const date = new Date().toISOString().substr(0, 10);\n                    const priceLevel = this.priceLevel || {};\n                    const currency = priceLevel.currency || {}\n                    const code = currency.code || ''\n                    if (code) {\n                        this.showLoading = true;\n                        currencyHandler\n                            .getLastExchangeRateByDate(date, code)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    const exchangeRate = res.data.data[0];\n                                    this.txnRate = exchangeRate.rate;\n                                    this.showLoading = false;\n                                }\n                            });\n                    }\n                }, 10);\n            });\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.itemListDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        onPriceLevelChanged() {\n            const pl = this.priceLevel || {}\n            const currency = pl.currency || {}\n            this.code = currency.code || ''\n            this.loadTransactionRate()\n        },\n        onUOMChanged(value) {\n            this.uom = value\n            window.console.log('uom', value)\n        },\n        onCategoryChanged(value) {\n            this.category = value\n            window.console.log('category', value)\n        },\n        onGroupChanged(value) {\n            this.group = value\n            window.console.log('group', value)\n        },\n        async loadPriceLevel() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    const strFilter = '?nature=sale'\n                    priceLevelHandler.get(strFilter).then(res => {\n                        const data = res || []\n                        this.priceLevels = data.filter(n => n.type.name === 'Standard')\n                    })\n\n                }, 10)\n            })\n        },\n        async loadItems() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    let type = 'Variant', plId = '', uomId = '', cateId = '', groupId = ''\n                    if (this.priceLevel) {\n                        plId = this.priceLevel.id || ''\n                    }\n                    if (this.uom) {\n                        uomId = this.uom.id || ''\n                    }\n                    if (this.category) {\n                        cateId = this.category.id || ''\n                    }\n                    if (this.group) {\n                        groupId = this.group.id || ''\n                    }\n                    const strFilter = '?plId=' + plId + '&uomId=' + uomId + '&type=' + type + '&catId=' + cateId +\n                        '&groupId=' + groupId + '&lastCost=' + true + '&base=' + this.base + '&' +\n                        '&round=' + this.round.toLowerCase() + '&method=' + this.method.toLowerCase() + '&rate=' + this.txnRate\n                    this.showLoading = true\n                    productVariantHandler.itemByPriceLevel(strFilter).then(response => {\n                        if (response.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.itemList = response.data.data\n                        }\n                    }).catch(e => {\n                        this.showLoading = false\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n\n                })\n            })\n        },\n    },\n    mounted: async function () {\n        this.group = {}\n        this.category = {}\n        this.uom = {}\n        await this.loadPriceLevel()\n    },\n    computed: {},\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        \"uom-dropdownlist\": () => import(\"@/components/dropdownlist/UOMDropDownList\"),\n        \"product-category-dropdownlist\": () => import(\"@/components/dropdownlist/ProductCategoryDropDownList\"),\n        \"product-group-dropdownlist\": () => import(\"@/components/dropdownlist/ProductGroupDropDownList\"),\n    },\n};\n</script>\n\n<style scoped>\n.function_footer {\n    padding: 15px;\n    display: inline-block;\n}\n\np {\n    color: rgba(0, 0, 0, 0.87);\n}\n\n.actionBtn {\n    height: 47.2px !important;\n}\n\n.text_tip {\n    font-size: 9px;\n    line-height: 10px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}