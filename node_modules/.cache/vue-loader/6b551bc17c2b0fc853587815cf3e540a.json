{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/suppliers/ExpenseVerify.vue?vue&type=style&index=0&id=6d8e153f&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/suppliers/ExpenseVerify.vue","mtime":1638499443340},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1pbnB1dC5jdXN0b20tcmFkaW8KLnYtaW5wdXQtLXNlbGVjdGlvbi1jb250cm9sc19faW5wdXQKLnYtaW5wdXQtLXNlbGVjdGlvbi1jb250cm9sc19fcmlwcGxlIHsKICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsKfQoKLmZ1bmN0aW9uX3dyYXBwZXIgewogICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50Owp9Cgoudi1hcHBsaWNhdGlvbi0taXMtbHRyIC52LXRleHQtZmllbGQgLnYtaW5wdXRfX2FwcGVuZC1pbm5lciB7CiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7Cn0KCi52LWlucHV0X19zbG90IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsKfQoKLmZ1bmN0aW9uX2NvbnRlbnQgLmxhYmVsIHsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCi5ib3JkZXJfcmFkaXVzMTAgewogICAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKfQoKLnBhLTMudi1jYXJkIGg0IHsKICAgIGZvbnQtc2l6ZTogMThweDsKICAgIGNvbG9yOiAjMzMzOwp9CgoucGEtMy52LWNhcmQgcCB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBjb2xvcjogI2I1YjViNTsKfQoKLmF0dGFjaG1lbnRfZmlsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlZGVkOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgouYXR0YWNobWVudF90YWJsZS52LWRhdGEtdGFibGUgdGFibGUgewogICAgYm9yZGVyOiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7Cn0KCi5hdHRhY2htZW50X3RhYmxlIHRhYmxlIHRyIHRoIHsKICAgIGJvcmRlci1sZWZ0OiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7CiAgICBoZWlnaHQ6IDM1cHg7CiAgICBib3JkZXItcmlnaHQ6IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTsKfQoKLmJsb2NrX2RlYml0LAouYmxvY2tfY3JlZGl0IHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmOwp9CgouYmxvY2tfZGViaXQgcC5udW1iZXIsCi5ibG9ja19jcmVkaXQgcC5udW1iZXIgewogICAgZm9udC1zaXplOiAyNXB4OwogICAgY29sb3I6ICM3ZjdmN2Y7Cn0KCi5ibG9ja19kZWJpdCBoNSwKLmJsb2NrX2NyZWRpdCBoNSwKLmJsb2NrX2RpZmZlcmVuY2UgaDUgewogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICAgIGNvbG9yOiAjN2Y3ZjdmOwogICAgZm9udC1zaXplOiAxNXB4OwogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKfQoKLmJsb2NrX2RpZmZlcmVuY2UgaDUgewogICAgZm9udC1zaXplOiAxOHB4Owp9CgouYmxvY2tfZGlmZmVyZW5jZSBoNSBzcGFuIHsKICAgIGZvbnQtc2l6ZTogMTVweDsKfQoKLmN1c3RvbV9ncmlkIHRhYmxlIHRoOmxhc3QtY2hpbGQgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDEyNjRweCkgewogICAgLmNvbnRhaW5lciB7CiAgICAgICAgbWF4LXdpZHRoOiAxMjUwcHg7CiAgICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLnB0LTYuY29sLXNtLTUuY29sLTEyIHsKICAgICAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OwogICAgfQoKICAgIC5jb2RlX3RleHQgewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgfQoKICAgIC5waG9uZV9ub19wdCB7CiAgICAgICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDsKICAgIH0KCiAgICAuc2VsZWN0X3RlbXBsYXRlLAogICAgLnNhdmVfb3B0aW9uIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgfQp9CgouaGlkZV9zbWFsbF9iYXJfY2xhc3MgewogICAgbWF4LXdpZHRoOiAwOwogICAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluOwogICAgZmxleDogMCAwIDA7CiAgICBwYWRkaW5nOiAwOwp9CgouaGlkZV9iaWdfYmFyX2NsYXNzIHsKICAgIG1heC13aWR0aDogMTAwJTsKICAgIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbjsKICAgIGZsZXg6IDAgMCAxMDAlOwp9CgouaW5mb19hZGQgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKfQoKLnNtYWxsX3NpZGViYXIgewogICAgaGVpZ2h0OiA5OCU7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBwYWRkaW5nOiAxMnB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjFmNTsKfQoKLmljb25BcnJvdyB7CiAgICByaWdodDogLTM1cHg7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBib3R0b206IC0xMHB4Owp9CgouaWNvbkFycm93SGlkZSB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICByaWdodDogLTdweDsKICAgIGJvdHRvbTogLTEwcHg7Cn0KCi5jb2xvcl9ncmV5IHsKICAgIGNvbG9yOiAjODA4MDgwOwp9CgouY2FyZF9ncmVlbiB7CiAgICBtaW4taGVpZ2h0OiA3MHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjA1MCAhaW1wb3J0YW50OwogICAgY29sb3I6ICNmZmZmZmY7Cn0KCi5sYl9ib2xkIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKfQoKLmRldGlhbF9zbWFsbHNpZGVfcCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBib3R0b206IDEwcHg7Cn0KCi5jYXJkX2JhY2tncm91bmQgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2VkZjFmNTsKICAgIG1pbi1oZWlnaHQ6IDEyMHB4Owp9CgouZGVwb3NpdGVfaW5wdXQgewogICAgd2lkdGg6IDEwMHB4Owp9CgouYnRuX3NhdmVfZHJhZnQgewogICAgY29sb3I6ICNmZmZmZmY7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiMGYwICFpbXBvcnRhbnQ7CiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKfQoKLnNhdmVfb3B0aW9uIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyMDM4NjQgIWltcG9ydGFudDsKfQoKLmJ0bl9hZGRfc21hbGwgewogICAgaGVpZ2h0OiAyN3B4ICFpbXBvcnRhbnQ7CiAgICBtaW4td2lkdGg6IDI1cHggIWltcG9ydGFudDsKICAgIGZvbnQtc2l6ZTogMTBweDsKICAgIHBhZGRpbmc6IDAgMjJweCAhaW1wb3J0YW50OwogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjA1MCAhaW1wb3J0YW50OwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7Cn0KCi5saXN0X3NpdGVfaW52IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5MmQwNTA7CiAgICBjb2xvcjogI2ZmZmZmZjsKICAgIGZvbnQtc2l6ZTogMTJweDsKfQoKLmxpc3Rfc2l0ZV9leHAgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2M1ZTBiNDsKICAgIGNvbG9yOiAjMDAwMDAwOwogICAgZm9udC1zaXplOiAxMnB4OwogICAgbGluZS1oZWlnaHQ6IDE2cHg7CiAgICBtaW4taGVpZ2h0OiA0MHB4Owp9CgouY2hlY2tib3hfaW52IHsKICAgIHBhZGRpbmc6IDJweDsKICAgIG1hcmdpbi10b3A6IDNweDsKICAgIG1hcmdpbi1yaWdodDogMnB4Owp9CgouZXhwX3NlbGVjdCB7CiAgICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUKPiAudi1kYXRhLXRhYmxlX193cmFwcGVyCj4gdGFibGUKPiB0Ym9keQo+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["ExpenseVerify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiwfile":"ExpenseVerify.vue","sourceRoot":"src/views/suppliers","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-row>\n                            <v-col\n                                class=\"bigSide py-0\"\n                                sm=\"8\"\n                                cols=\"12\"\n                                style=\"transition: 0.3s ease-in\"\n                                :class=\"{ hide_big_bar_class: isHideBar }\"\n                            >\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <v-card outlined dense class=\"no_border\">\n                                        <h2 class=\"mb-0\">\n                                            {{ $t(\"expense_summary_verify\") }}\n                                        </h2>\n\n                                        <v-icon\n                                            v-if=\"isHideBar\"\n                                            @click=\"cancel()\"\n                                            style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                            class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                        <span\n                                            style=\"transition: 0.3s ease-in; z-index: 10;\"\n                                            :class=\"{\n\t\t\t\t\t\t\t\t\t\t\t\ticonArrow: !isHideBar,\n\t\t\t\t\t\t\t\t\t\t\t\ticonArrowHide: isHideBar,\n\t\t\t\t\t\t\t\t\t\t\t}\"\n                                        >\n\t\t\t\t\t\t\t\t\t\t\t<v-icon\n                                                size=\"22\"\n                                                class=\"arr_icon\"\n                                                @click=\"HideSmallSideBar\"\n                                                v-if=\"isHideBar\"\n                                            >mdi-chevron-left-circle\n\t\t\t\t\t\t\t\t\t\t\t</v-icon>\n\t\t\t\t\t\t\t\t\t\t\t<v-icon\n                                                size=\"22\"\n                                                class=\"arr_icon\"\n                                                @click=\"HideSmallSideBar\"\n                                                v-if=\"!isHideBar\"\n                                            >mdi-chevron-right-circle\n\t\t\t\t\t\t\t\t\t\t\t</v-icon>\n\t\t\t\t\t\t\t\t\t\t</span>\n                                    </v-card>\n                                    <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label\">{{ $t(\"employee\") }}</label>\n                                                {{ expenseSummary.employee.name }}\n                                                <br>\n                                                <label class=\"label\">{{ $t(\"number\") }}</label>\n                                                {{ expenseSummary.number }}\n                                            </v-col>\n\n                                            <v-col sm=\"4\" cols=\"12\">\n                                                <label class=\"label\" style=\"\">{{ $t(\"date\") }}</label>\n                                                <app-datepicker\n                                                    :initialDate=\"expenseSummary.date\"\n                                                    @emitDate=\"expenseSummary.date = $event\"\n                                                    @onChanged=\"onDateChanges\"\n                                                />\n\n                                                <label class=\"label\" style=\"\">{{ $t(\"transaction_account\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    :items=\"transactionAccounts\"\n                                                    item-value=\"uuid\"\n                                                    :item-text=\"(item) => `${item.number} - ${item.name}`\"\n                                                    v-model=\"transactionAccount\"\n                                                    no-data-text=\"No data found.\"\n                                                    :rules=\"[(v) => !!v || 'Transaction Account is required']\"\n                                                    placeholder=\"Transaction Account\"\n                                                    return-object\n                                                    outlined\n                                                ></v-select>\n                                            </v-col>\n\n                                            <v-col sm=\"4\" cols=\"12\">\n                                                <label class=\"label\" style=\"\">{{\n                                                        $t(\"description\")\n                                                    }}</label>\n                                                <v-textarea\n                                                    class=\"mt-1\"\n                                                    v-model=\"expenseSummary.description\"\n                                                    no-resize\n                                                    height=\"126\"\n                                                    outlined\n                                                    rows=\"5\"\n                                                >\n                                                </v-textarea>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n\n                                    <v-row style=\"background-color: #fff\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <kendo-datasource\n                                                ref=\"expenseAccountDS\"\n                                                :data=\"expenseEntries\"\n                                                :change=\"onExpenseAccountDSChanges\"\n                                                :schema=\"schemaDefinition\"\n                                            />\n\n                                            <kendo-grid\n                                                id=\"expenseSummaryGrid\"\n                                                ref=\"expenseSummaryGrid\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'expenseAccountDS'\"\n                                                :persistSelection=\"true\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                                :change=\"onExpenseGridChanges\"\n                                            >\n                                                <kendo-grid-column :selectable=\"true\" :width=\"40\"/>\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :template=\"rowNumberTmpl\"\n                                                    :width=\"55\"\n                                                    :column-menu=\"false\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5;',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass: 'text-center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'bill_date'\"\n                                                    :title=\"$t('bill_date')\"\n                                                    :format=\"'{0:dd-MM-yyyy}'\"\n                                                    :editable=\"()=>{return false}\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'bill_number'\"\n                                                    :title=\"$t('bill_number')\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'supplier'\"\n                                                    :title=\"$t('vendor')\"\n                                                    :template=\"'<span>#=supplier.name||``#</span>'\"\n                                                    :editor=\"SupplierEditor\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'account'\"\n                                                    :title=\"$t('account')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#=account.name||``#</span>'\"\n                                                    :editor=\"AccountEditor\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right;',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'quantity'\"\n                                                    :title=\"$t('qty')\"\n                                                    :width=\"150\"\n                                                    :editor=\"NumberEditor\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'uom'\"\n                                                    :title=\"$t('uom')\"\n                                                    :editor=\"UomEditor\"\n                                                    :template=\"'<span>#=uom.name||``#</span>'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right;',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'price'\"\n                                                    :title=\"$t('price')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :editor=\"NumberEditor\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :editable=\"() => {return false;}\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'bill_currency'\"\n                                                    :title=\"$t('currency')\"\n                                                    :template=\"'<span>#=bill_currency.code||``#</span>'\"\n                                                    :editable=\"()=>{return false}\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'discount'\"\n                                                    :title=\"$t('discount')\"\n                                                    :template=\"'<span>#=discount.name||``#</span>'\"\n                                                    :editor=\"PurchaseDiscountItemEditor\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'tax_item'\"\n                                                    :title=\"$t('tax')\"\n                                                    :template=\"'<span>#=tax_item.defaultTax||``#</span>'\"\n                                                    :editor=\"PurchaseTaxEditor\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'text-align: right; background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                    :attributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'text-align: right',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'class1'\"\n                                                    :title=\"$t('class_1')\"\n                                                    :template=\"'<span>#=class1.name||``#</span>'\"\n                                                    :width=\"200\"\n                                                    :editor=\"ClassEditor.class1\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'class2'\"\n                                                    :title=\"$t('class_2')\"\n                                                    :template=\"'<span>#=class2.name||``#</span>'\"\n                                                    :width=\"200\"\n                                                    :editor=\"ClassEditor.class2\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'class3'\"\n                                                    :title=\"$t('class_3')\"\n                                                    :template=\"'<span>#=class3.name||``#</span>'\"\n                                                    :width=\"200\"\n                                                    :editor=\"ClassEditor.class3\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'class4'\"\n                                                    :title=\"$t('class_4')\"\n                                                    :template=\"'<span>#=class4.name||``#</span>'\"\n                                                    :width=\"200\"\n                                                    :editor=\"ClassEditor.class4\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'class5'\"\n                                                    :title=\"$t('class_5')\"\n                                                    :template=\"'<span>#=class5.name||``#</span>'\"\n                                                    :width=\"200\"\n                                                    :editor=\"ClassEditor.class5\"\n                                                    :headerAttributes=\"{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle: 'background-color: #EDF1F5',\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\"\n                                                />\n                                            </kendo-grid>\n                                        </v-col>\n\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <v-row>\n                                                <v-col sm=\"5\" cols=\"12\" class=\"\">\n\n                                                </v-col>\n                                                <v-col sm=\"7\" cols=\"6\">\n                                                    <v-simple-table>\n                                                        <template v-slot:default>\n                                                            <tbody>\n                                                            <tr>\n                                                                <td class=\"text-left\">\n                                                                    {{ $t(\"subtotal\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">\n                                                                    :\n                                                                </td>\n                                                                <td class=\"text-right\">\n                                                                    {{ subTotal }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left\">\n                                                                    {{ $t(\"discount\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">\n                                                                    :\n                                                                </td>\n                                                                <td class=\"text-right\">\n                                                                    ({{ Number(discountAmount).toLocaleString() }})\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left\">\n                                                                    {{ $t(\"purchase_tax\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">\n                                                                    :\n                                                                </td>\n                                                                <td class=\"text-right\">\n                                                                    {{ Number(purchaseTax).toLocaleString() }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left\">\n                                                                    {{ $t(\"withholding_tax\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">\n                                                                    :\n                                                                </td>\n                                                                <td class=\"text-right\">\n                                                                    {{ Number(whdTax).toLocaleString() }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left text-uppercase\">\n                                                                    {{ $t(\"total\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">\n                                                                    :\n                                                                </td>\n                                                                <td\n                                                                    class=\"text-right primary--text text-bold\"\n                                                                >\n                                                                    {{ totalAmount }}\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                        </template>\n                                                    </v-simple-table>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n\n                                    <v-divider/>\n\n                                    <v-card outlined dense class=\"no_border function_footer\">\n                                        <!-- Warning Message -->\n                                        <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                                            <span v-html=\"errorMessage\"/>\n                                        </v-alert>\n\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn\n                                                    color=\"black\"\n                                                    outlined\n                                                    class=\"mr-2 text-capitalize  black--text float-left\"\n                                                    v-on=\"on\"\n                                                >\n                                                    {{ $t(\"select_template\") }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list>\n                                                <v-list-item\n                                                    v-for=\"(item, index) in templates\"\n                                                    :key=\"index\"\n                                                >\n                                                    <v-list-item-title>\n                                                        {{ item.title }}\n                                                    </v-list-item-title>\n                                                </v-list-item>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn\n                                            color=\"black\"\n                                            class=\"text-capitalize  white--text float-left\"\n                                            @click=\"cancel\"\n                                        >{{ $t(\"cancel\") }}\n                                        </v-btn>\n                                        <v-btn\n                                            color=\"primary\"\n                                            class=\"float-right white--text text-capitalize \"\n                                            @click=\"onSaveOptionClick(SaveOption.SAVECLOSE)\"\n                                        >\n                                            {{ $t(\"save_close\") }}\n                                        </v-btn>\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n                            <v-col\n                                class=\"smallSide\"\n                                sm=\"4\"\n                                style=\"transition: 0.3s ease-in\"\n                                :class=\"{ hide_small_bar_class: isHideBar }\"\n                            >\n                                <h3\n                                    style=\"color: #b3b5bc; font-size: 20px\"\n                                    v-if=\"!isHideBar\"\n                                    class=\"text-uppercase float-right mt-n3\"\n                                >\n\t\t\t\t\t\t\t\t\t<span class=\"pointer\" @click=\"Help('expenses')\">\n\t\t\t\t\t\t\t\t\t\t{{ $t(\"help\") }}\n\t\t\t\t\t\t\t\t\t</span>\n                                    <v-icon\n                                        @click=\"cancel()\"\n                                        style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                        class=\"float-right mt-n1\"\n                                    >close\n                                    </v-icon>\n                                </h3>\n\n                                <div v-if=\"!isHideBar\" class=\"small_sidebar mt-8 px-4 grayBg\">\n                                    <v-card\n                                        class=\"pa-3 no-boxshadow d-flex flex-column\"\n                                        color=\"primary\"\n                                        style=\"min-height: 70px;\"\n                                    >\n                                        <h3\n                                            style=\"font-size: 18px\"\n                                            class=\"text-white text-uppercase mb-2 justify-start\"\n                                        >\n                                            {{ $t(\"amount\") }}\n                                        </h3>\n                                        <h3\n                                            class=\"text-bold text-white justify-end\"\n                                            style=\"font-size: 22px\"\n                                        >\n                                            {{ Number(amountDue).toLocaleString() }}\n                                        </h3>\n                                    </v-card>\n                                    <v-row>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0 pt-4\">\n                                            <label class=\"label\">{{ $t(\"segment\") }}</label>\n                                            <app-segment-dropdownlist\n                                                :initSegment=\"segment\"\n                                                @emitSegment=\"segment = $event\"\n                                                @onChanged=\"loadCashAdvance\"\n                                            />\n\n                                            <label class=\"label\">{{ $t(\"location\") }}</label>\n                                            <app-location-dropdownlist\n                                                :initLocation=\"location\"\n                                                @emitLocation=\"location = $event\"\n                                            />\n\n                                            <label class=\"label\">{{ $t(\"project\") }}</label>\n                                            <app-project-dropdownlist\n                                                :initProject=\"project\"\n                                                @emitProject=\"project = $event\"\n                                                :initDisabled=\"disableProject\"\n                                            />\n\n                                            <label class=\"label\">{{ $t(\"for_the_month_of\") }}</label>\n                                            <app-monthof-picker\n                                                :initMonthOf=\"expenseSummary.month_of\"\n                                                @emitMonthOf=\"expenseSummary.month_of = $event\"\n                                            />\n                                        </v-col>\n                                    </v-row>\n\n                                    <v-row>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <v-radio-group\n                                                class=\"mt-0 custom-radio\"\n                                                @change=\"onUseForOptionChanges\"\n                                                v-model=\"expenseSummary.use_for_option\"\n                                                column\n                                            >\n                                                <v-radio :label=\"$t('credit')\" :value=\"0\"/>\n                                                <v-radio :label=\"$t('cash')\" :value=\"3\"/>\n                                                <v-radio\n                                                    :disabled=\"employee.id === ''\"\n                                                    :label=\"$t('for_reimbursement')\"\n                                                    :value=\"1\"\n                                                />\n                                                <v-radio\n                                                    :disabled=\"employee.id === ''\"\n                                                    :label=\"$t('related_to_cash_advance')\"\n                                                    :value=\"2\"\n                                                />\n                                            </v-radio-group>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <v-select\n                                                @change=\"onCashAdvanceChanges\"\n                                                :loading=\"showCashAdvanceLoading\"\n                                                :disabled=\"expenseSummary.use_for_option !== 2\"\n                                                v-model=\"expenseSummary.use_for_transaction_uuid\"\n                                                :items=\"cashAdvances\"\n                                                item-value=\"uuid\"\n                                                item-text=\"number\"\n                                                outlined\n                                            />\n                                        </v-col>\n                                    </v-row>\n                                </div>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                type=\"loading\"\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport Helper from \"@/helper.js\";\n\nimport {\n    ExpenseModel,\n    ExpenseEntryModel,\n    AccountModel,\n    CurrencyModel,\n    EmployeeModel,\n    ContactModel,\n    JournalModel,\n    JournalEntryModel,\n    ClassModel,\n    UomModel,\n    LocationModel,\n    SegmentModel,\n    ProjectModel,\n    DiscountItemModel,\n    TaxModel, Expenses, PaymentTermModel,\n} from \"@/scripts/model/AppModels\";\nimport ExpenseSummaryModel from \"@/scripts/model/ExpenseSummary\";\n// import ExpenseSummaryDetailModel from \"@/scripts/model/ExpenseSummaryDetail\";\nimport ExpenseSummaryDetailExtendedModel from \"@/scripts/model/ExpenseSummaryDetailExtended\";\nimport {ShowResource} from \"@/observable/store\";\n\n/* Editors */\nimport AccountEditor from \"@/scripts/kendo_editor/Account\";\nimport ClassEditor from \"@/scripts/kendo_editor/Clazz\";\nimport UomEditor from \"@/scripts/kendo_editor/Uom\";\nimport PurchaseDiscountItemEditor from \"@/scripts/kendo_editor/PurchaseDiscountItem\";\nimport PurchaseTaxEditor from \"@/scripts/kendo_editor/PurchaseTax\";\nimport NumberEditor from \"@/scripts/kendo_editor/NumberInputBox\";\nimport SupplierEditor from \"@/scripts/kendo_editor/Supplier\";\nimport AccountMappingModel from \"@/scripts/account-map/Account\";\nimport billingHandler from \"@/scripts/invoice/handler/billingHandler\";\nimport {uuid} from \"vue-uuid\";\n\n/* Store */\n// import store from \"@/store\";\n// const institute = store.state.institute.institute;\n\n/* Handlers */\nconst {\n    cashAdvanceHandler,\n} = require(\"@/scripts/AppHandlers\");\n\nconst expenseHandler = require(\"@/scripts/expenseHandler\");\nconst expenseSummaryHandler = require(\"@/scripts/expenseSummaryHandler\");\n\nconst {\n    EntityType,\n    SaveOption,\n    AccountTypeCode,\n    TaxType,\n    Setting,\n} = require(\"@/scripts/default_setup/Collections\");\n\nexport default {\n    name: \"ExpenseSummaryVerify\",\n    components: {\n        LoadingMe: () => import(\"@/components/Loading\"),\n        \"app-datepicker\": () => import(\"@/components/custom_templates/DatePickerComponent\"),\n        \"app-monthof-picker\": () =>\n            import(\"@/components/kendo_templates/MonthOfPicker\"),\n        \"app-location-dropdownlist\": () =>\n            import(\"@/components/dropdownlist/Location\"),\n        \"app-project-dropdownlist\": () =>\n            import(\"@/components/dropdownlist/Project\"),\n        \"app-segment-dropdownlist\": () =>\n            import(\"@/components/dropdownlist/Segment\"),\n    },\n    props: {\n        initExpenseSummary: {\n            type: ExpenseSummaryModel,\n        },\n    },\n    data: () => ({\n        // Obj\n        numbers: null,\n        verifiedExpenses: [],\n        expenseSummary: new ExpenseSummaryModel(),\n        employee: new EmployeeModel(),\n        transactionAccount: new AccountModel(),\n        advanceSettlementClearingAccount: new AccountModel(),\n        location: new LocationModel(),\n        segment: new SegmentModel(),\n        project: new ProjectModel(),\n        // List\n        selectedExpenseIds: [],\n        cashAdvances: [],\n        accounts: [],\n        transactionAccounts: [],\n        expenseEntries: [],\n        // Other\n        subTotal: 0,\n        discountAmount: 0,\n        purchaseTax: 0,\n        whdTax: 0,\n        totalAmount: 0,\n        amountDue: 0,\n        files: [],\n        user: Helper.getUser(),\n        templates: [],\n        maxDecimal: Setting.MAX_DICEMAL,\n        disableProject: false,\n        // Form validation\n        valid: true,\n        isEdit: false,\n        alert: false,\n        errorMessage: \"\",\n        saveMode: \"\",\n        SaveOption: SaveOption,\n        // Editors\n        AccountEditor: AccountEditor,\n        NumberEditor: NumberEditor,\n        ClassEditor: ClassEditor,\n        UomEditor: UomEditor,\n        PurchaseDiscountItemEditor: PurchaseDiscountItemEditor,\n        PurchaseTaxEditor: PurchaseTaxEditor,\n        SupplierEditor: SupplierEditor,\n        // Sidebar\n        isHideBar: false,\n        // LoadingMe\n        showLoading: false,\n        showCashAdvanceLoading: false,\n        // Kendo dataSource\n        schemaDefinition: {\n            model: {id: \"uuid\"},\n        },\n        txnExpense: new Expenses(),\n        txnExpenseList: [],\n        paymentTerm: new PaymentTermModel(),\n    }),\n    methods: {\n        Help(key_search) {\n            ShowResource(key_search);\n        },\n        // Initial Data\n        initialData() {\n            if (this.initExpenseSummary) {\n                this.expenseSummary = this.initExpenseSummary;\n                this.bindData();\n            }\n        },\n        // Set default data\n        async setDefaultData() {\n            this.expenseSummary = new ExpenseSummaryModel();\n            this.generateNumber();\n        },\n        /* Load Data */\n        async loadData() {\n            // Call Account List\n            this.accounts = await this.$store.dispatch(\"accounting/getAccounts\");\n\n            // Advance Settlement Clearing Account by banhji_account_number\n            let advSetClrAcc = this.accounts.find((value) => value.number === AccountTypeCode.ADVANCE_SETTLEMENT_CLEARING_CODE); // Will change later\n            this.advanceSettlementClearingAccount = new AccountModel(advSetClrAcc);\n\n            // Filter Transaction Accounts\n            this.filterTransactionAccount();\n        },\n        // Bind data from prop for edit mode\n        async bindData() {\n            this.showLoading = true;\n\n            this.generateNumber();\n\n            /* Date */\n            this.expenseSummary.date = new Date().toISOString().substr(0, 10);\n\n            // Contacts\n            this.employee = new EmployeeModel(this.expenseSummary.employee);\n\n            // Sidebar\n            let locations = await this.$store.dispatch(\"locations/getList\");\n            this.location = new LocationModel(\n                locations.find((i) => i.id === this.expenseSummary.location_uuid)\n            );\n\n            let segments = await this.$store.dispatch(\"segments/getList\");\n            this.segment = new SegmentModel(\n                segments.find((i) => i.id === this.expenseSummary.segment_uuid)\n            );\n\n            let projects = await this.$store.dispatch(\"projects/getList\");\n            this.project = new ProjectModel(\n                projects.find((i) => i.id === this.expenseSummary.project_uuid)\n            );\n\n            // Cash Advance\n            if (\n                this.employee.id !== \"\" &&\n                this.segment.id !== \"\" &&\n                this.expenseSummary.use_for_option === 2\n            ) {\n                let cashAdvances = await cashAdvanceHandler.getByEmployeeId(\n                    this.employee.id\n                );\n                this.cashAdvances = cashAdvances.data.filter(\n                    (i) => i.segment_uuid === this.segment.id\n                );\n            }\n\n            // Entries\n            let entries = [],\n\t\t\t\tsubTotal = 0,\n\t\t\t\tdiscountAmount = 0,\n\t\t\t\tpurchaseTaxAmount = 0,\n\t\t\t\twhdTaxAmount = 0,\n\t\t\t\tdiscountItems = await this.$store.dispatch(\"discountItems/getList\"),\n\t\t\t\ttaxItems = await this.$store.dispatch(\"taxes/getList\"),\n\t\t\t\tuoms = await this.$store.dispatch(\"unitOfMeasurements/getList\"),\n\t\t\t\tclazz = await this.$store.dispatch(\"classes/getList\");\n\n            this.expenseSummary.summary_details.forEach((value) => {\n                // Purchase Tax\n                if (value.account.account_type.number === AccountTypeCode.PURCHASE_TAX) {\n                    purchaseTaxAmount += value.amount;\n                } else {\n                    if (value.amount > 0 && value.account.number !== AccountTypeCode.TAX_RELATED_EXPENSE_CODE) {\n                        let entry = new ExpenseSummaryDetailExtendedModel(value);\n\n\t\t\t\t\t\t// Date\n\t\t\t\t\t\tentry.bill_date = new Date(value.bill_date);\n\n                        // Subtotal\n                        subTotal += value.amount;\n\n                        // UOM\n                        entry.uom = new UomModel(\n                            uoms.find((item) => item.id === value.uom_uuid)\n                        );\n\n                        // Discount\n                        if (value.hasOwnProperty('discount'))\n                            if (value.discount.hasOwnProperty('uuid'))\n                                entry.discount = new DiscountItemModel(discountItems.find((i) => i.id === value.discount.uuid));\n\n                        // Tax\n                        if (value.hasOwnProperty('tax_item'))\n                            if (value.tax_item.hasOwnProperty('uuid')) {\n                                entry.tax_item = taxItems.find((i) => i.id === value.tax_item.uuid);\n\n                                /* Apply Inclusive Tax to amount */\n                                if (entry.tax_item.hasOwnProperty('taxType'))\n                                    if (entry.tax_item.taxType.hasOwnProperty('typeId'))\n                                        if (entry.tax_item.taxType.typeId === 1 && entry.tax_item.baseAmount.toLowerCase() === TaxType.INCLUSIVE)\n                                            subTotal += entry.tax_amount;\n                            }\n\n                        // Classes\n                        entry.class1 = new ClassModel(\n                            clazz.find((item) => item.id === value.class_1_uuid)\n                        );\n                        entry.class2 = new ClassModel(\n                            clazz.find((item) => item.id === value.class_2_uuid)\n                        );\n                        entry.class3 = new ClassModel(\n                            clazz.find((item) => item.id === value.class_3_uuid)\n                        );\n                        entry.class4 = new ClassModel(\n                            clazz.find((item) => item.id === value.class_4_uuid)\n                        );\n                        entry.class5 = new ClassModel(\n                            clazz.find((item) => item.id === value.class_5_uuid)\n                        );\n\t\t\t\t\t\t\n                        entries.push(entry);\n                    } else {\n                        // Discount\n                        if (value.account.account_type.number === AccountTypeCode.DISCOUNT) {\n                            discountAmount += value.amount * -1;\n                        }\n\n                        // WHD Tax\n                        if (value.account.account_type.number === AccountTypeCode.WHD_TAX) {\n                            whdTaxAmount += value.amount * -1;\n                        }\n\n                        // Transaction Account (Payable Account / Clearing Account)\n                        if (value.account.uuid === this.expense.transaction_account.uuid) {\n                            this.amountDue = value.amount * -1;\n                        }\n                    }\n                }\n            });\n\n            // Bind Expense Entries\n            this.expenseEntries = entries;\n\n            // Calculation\n            this.subTotal = subTotal;\n            this.discountAmount = discountAmount;\n            this.purchaseTax = purchaseTaxAmount;\n            this.whdTax = whdTaxAmount;\n            this.totalAmount = subTotal - this.discountAmount;\n\n            this.showLoading = false;\n        },\n        // Number\n        async generateNumber() {\n            this.numbers = await Helper.generateAccountingNumber(\n                EntityType.EXPENSES,\n                this.expenseSummary.date\n            );\n        },\n        applyPrefixNumber(lastNumber) {\n            /* Prefix */\n            let pf = this.numbers.prefix;\n\n            // Structure\n            let structure = '', txnDate = new Date(this.expenseSummary.date);\n            switch (pf.structure.toLowerCase()) {\n                case 'yyyy':\n                    structure = txnDate.getFullYear().toString();\n                    break;\n                case 'yy':\n                    structure = txnDate.getFullYear().toString().substr(2);\n                    break;\n                case 'yyyymm':\n                    structure = txnDate.getFullYear().toString() + (txnDate.getMonth() + 1).toString().padStart(2, '0');\n                    break;\n                case 'yymm':\n                    structure = txnDate.getFullYear().toString().substr(2) + (txnDate.getMonth() + 1).toString().padStart(2, '0');\n                    break;\n\n                default:// None structure\n                    break;\n            }\n\n            // Starting Number\n            if (lastNumber === 0) {\n                lastNumber = pf.number;\n            } else {\n                // Sequencing Number (Reset Number)\n                pf.sequcencing = 'prefix';// will change later\n                switch (pf.sequcencing.toLowerCase()) {\n                    case 'month':// Month\n                        lastNumber = 1;\n                        break;\n                    case 'year':// Year\n                        lastNumber = 1;\n                        break;\n                    default:// Prefix\n                        lastNumber++;\n                        break;\n                }\n            }\n\n            let number = pf.abbr + pf.prefixSeparator + structure + pf.numberSeparator + lastNumber.toString().padStart(pf.format, '0');\n\n            return number;\n        },\n        // Load Cash Advance\n        loadCashAdvance() {\n            /* Clear */\n            this.cashAdvances = [];\n            this.expenseSummary.use_for_transaction_uuid = \"\";\n\n            if (\n                this.employee.id !== \"\" &&\n                this.segment.id !== \"\" &&\n                this.expenseSummary.use_for_option === 2\n            ) {\n                this.showCashAdvanceLoading = true;\n\n                cashAdvanceHandler\n                    .getByEmployeeId(this.employee.id)\n                    .then((res) => {\n                        if (res.data) {\n                            /* Filter by segment */\n                            this.cashAdvances = res.data.filter(\n                                (item) => item.segment_uuid === this.segment.id\n                            );\n                        }\n                    })\n                    .finally(() => {\n                        this.showCashAdvanceLoading = false;\n                    });\n            }\n        },\n        /* On Cash Advance Changes */\n        onCashAdvanceChanges() {\n            this.setCashAdvanceProject();\n            this.disableProject = false;\n        },\n        /* On Date Chanes */\n\t\tonDateChanges () {\n\t\t\tthis.expenseSummary.month_of = new Date(this.expenseSummary.date).toISOString().substr(0, 7);\n\t\t\tthis.generateNumber();\n\t\t},\n        /* Bind project from cash advance */\n        async setCashAdvanceProject() {\n            if (this.expenseSummary.use_for_transaction_uuid !== \"\") {\n                let cashAdvance = this.cashAdvances.find(\n                    (i) => i.uuid === this.expenseSummary.use_for_transaction_uuid\n                );\n\n                if (cashAdvance.project_uuid !== \"\") {\n                    let projects = await this.$store.dispatch(\"projects/getList\");\n                    this.project = projects.find(\n                        (i) => i.id === cashAdvance.project_uuid\n                    );\n\n                    this.disableProject = true;\n                } else {\n                    this.disableProject = false;\n                }\n            }\n        },\n        // On Employee Radio Changes\n        onUseForOptionChanges() {\n            // Clear Selected Cash Advance\n            this.expenseSummary.use_for_transaction_uuid = \"\";\n            this.transactionAccount = new AccountModel();\n\n            /* Load Cash Advance */\n            if (this.expenseSummary.use_for_option === 2) {\n                this.loadCashAdvance();\n            }\n\n            this.filterTransactionAccount();\n        },\n        // Filter Transation Account\n        filterTransactionAccount() {\n            if (this.expenseSummary.use_for_option === 0) {\n                // Credit (Payable Account)\n                this.transactionAccounts = this.accounts.filter((i) => ~AccountTypeCode.PAYABLE_ACCOUNTS.indexOf(i.account_type.number));\n            } else if (this.expense.use_for_option === 3) {\n                // Cash Account\n                this.transactionAccounts = this.accounts.filter((i) => ~AccountTypeCode.CASH_ACCOUNTS.indexOf(i.account_type.number));\n            } else {\n                // Reimbursement / Cash Advance\n                this.transactionAccount = this.advanceSettlementClearingAccount;\n                this.transactionAccounts = [this.advanceSettlementClearingAccount];\n            }\n        },\n        /* Kendo */\n        // DataSource Changes\n        async onExpenseAccountDSChanges(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n\n                if (e.field === \"supplier\") {\n\t\t\t\t\tdataRow.set(\"account\", new AccountModel(dataRow.supplier.accountTax.expenseAcc));\n\t\t\t\t} else if (e.field === \"account\") {\n                    this.addExtraRow(dataRow.uid);\n                } else if (e.field === \"bill_date\" || e.field === \"bill_currency\") {\n\t\t\t\t\tlet xrate = await this.getExchangeRate(dataRow.bill_date, dataRow.bill_currency.code);\n\n\t\t\t\t\tdataRow.set(\"exchange_rate_uuid\", xrate.id);\n\t\t\t\t\tdataRow.set(\"exchange_rate\", xrate.rate);\n                } else if (e.field === \"quantity\" || e.field === \"price\") {\n                    let amt =\n                        kendo.parseFloat(dataRow.quantity) *\n                        kendo.parseFloat(dataRow.price);\n                    dataRow.set(\"amount\", amt);\n                } else if (e.field === \"uom\") {\n                    if (dataRow.uom) {\n                        dataRow.set(\"uom_uuid\", dataRow.uom.id);\n                    }\n                } else if (e.field === \"class1\") {\n                    if (dataRow.class1 !== null) {\n                        dataRow.set(\"class_1_uuid\", dataRow.class1.id);\n                    } else {\n                        // Set default when deselect\n                        dataRow.set(\"class_1_uuid\", \"\");\n                        dataRow.set(\"class1\", new ClassModel());\n                    }\n                } else if (e.field === \"class2\") {\n                    if (dataRow.class2 !== null) {\n                        dataRow.set(\"class_2_uuid\", dataRow.class2.id);\n                    } else {\n                        // Set default when deselect\n                        dataRow.set(\"class_2_uuid\", \"\");\n                        dataRow.set(\"class2\", new ClassModel());\n                    }\n                } else if (e.field === \"class3\") {\n                    if (dataRow.class3 !== null) {\n                        dataRow.set(\"class_3_uuid\", dataRow.class3.id);\n                    } else {\n                        // Set default when deselect\n                        dataRow.set(\"class_3_uuid\", \"\");\n                        dataRow.set(\"class3\", new ClassModel());\n                    }\n                } else if (e.field === \"class4\") {\n                    if (dataRow.class4 !== null) {\n                        dataRow.set(\"class_4_uuid\", dataRow.class4.id);\n                    } else {\n                        // Set default when deselect\n                        dataRow.set(\"class_4_uuid\", \"\");\n                        dataRow.set(\"class4\", new ClassModel());\n                    }\n                } else if (e.field === \"class5\") {\n                    if (dataRow.class5 !== null) {\n                        dataRow.set(\"class_5_uuid\", dataRow.class5.id);\n                    } else {\n                        // Set default when deselect\n                        dataRow.set(\"class_5_uuid\", \"\");\n                        dataRow.set(\"class5\", new ClassModel());\n                    }\n                }\n\n                this.autoCalculate();\n            }\n        },\n        calculateDiscount(discountItem, subTotal) {\n            if (discountItem) {\n                const nature = discountItem.nature;\n                const amount = discountItem.amount;\n                if (nature === \"Amount\") {\n                    return kendo.parseFloat(amount);\n                } else if (nature === \"Percentage\") {\n                    return subTotal * (kendo.parseFloat(amount) / 100);\n                }\n            }\n        },\n        autoCalculateTax(tax, amount) {\n            if (tax) {\n                var formula = tax.formula;\n                var inAmt = kendo.parseFloat(amount);\n                var nAmt = kendo.parseFloat(amount);\n                var taxBase = kendo.parseFloat(tax.taxBase) / 100;\n                var rate = kendo.parseFloat(tax.rate) / 100;\n                var total = eval(formula);\n                window.console.log(inAmt, nAmt, taxBase, rate, formula, total);\n                return total;\n            }\n            // return 0\n        },\n        // Auto Calculate In DataSource\n        autoCalculate() {\n            let expDS = this.$refs.expenseAccountDS.kendoWidget(),\n                subTotal = 0,\n                discount = 0,\n                purchaseTax = 0,\n                whdTax = 0,\n                inclusiveTax = 0,\n                discountItem = [];\n\n            // Expense\n            expDS.data().forEach((value) => {\n                if (~this.selectedExpenseIds.indexOf(value.uuid)) {\n                    let amt = kendo.parseFloat(value.price) * kendo.parseFloat(value.quantity);\n\n                    /* Exchanged Amount */\n                    value.exchanged_amount = amt * value.exchange_rate;\n                    \n                    /* Subtotal */\n                    subTotal += amt;\n\n                    // Discount\n                    let discountAmount = 0;\n                    if (value.hasOwnProperty('discount'))\n                        if (value.discount.hasOwnProperty('id'))\n                            if (value.discount.id !== \"\") {\n                                discountAmount = this.calculateDiscount(value.discount, amt);\n                                discount += discountAmount;\n                                discountItem.push(value.discount);\n                            }\n\n                    // Tax\n                    if (value.hasOwnProperty('tax_item'))\n                        if (value.tax_item.hasOwnProperty('id'))\n                            if (value.tax_item.id !== \"\") {\n                                let amtAfterDiscount = amt - discountAmount;\n                                const taxAmount = this.autoCalculateTax(value.tax_item, amtAfterDiscount);\n                                if (value.tax_item.baseAmount.toLowerCase() === TaxType.INCLUSIVE) {\n                                    inclusiveTax += taxAmount;\n                                }\n\n                                if (value.tax_item.hasOwnProperty('taxType'))\n                                    if (value.tax_item.taxType.hasOwnProperty('typeId'))\n                                        if (value.tax_item.taxType.typeId === 2) {/* WHD Tax */\n                                            whdTax += taxAmount;\n                                        } else {/* Purchase Tax */\n                                            purchaseTax += taxAmount;\n                                        }\n\n                                /* Set Tax Amount */\n                                if (value.tax_item.taxType.typeId === 1 && value.tax_item.baseAmount.toLowerCase() === TaxType.INCLUSIVE) {/* Inclusive Tax */\n                                    value.set(\"tax_amount\", taxAmount * -1);\n                                } else {\n                                    value.set(\"tax_amount\", taxAmount);\n                                }\n                            }\n                }\n            });\n\n            /* Apply Inclusive Tax */\n            subTotal -= inclusiveTax;\n\n\t\t\tthis.subTotal = subTotal;\n            this.discountAmount = discount;\n            this.purchaseTax = purchaseTax;\n            this.whdTax = whdTax;\n\n            let totalAmount = (this.subTotal - discount) + whdTax + purchaseTax;\n            this.totalAmount = totalAmount;\n\n            let amountDue = this.totalAmount - whdTax;\n            this.amountDue = amountDue;\n        },\n        // Row Number Template\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.expenseAccountDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n\n            return index + 1;\n        },\n        // On Expense Grid Changes\n        onExpenseGridChanges() {\n            let grid = this.$refs.expenseSummaryGrid.kendoWidget();\n\n            // let ids = []\n            // for (let id in grid._selectedIds)\n            // ids.push(id)\n\n            this.selectedExpenseIds = grid.selectedKeyNames();\n            this.autoCalculate();\n        },\n        // Shrink Data\n        shrinkData() {\n            let expenseList = [],\n                expDS = this.$refs.expenseAccountDS.kendoWidget(),\n                lastNumber = this.numbers.last_number,\n                counter = 1;\n\n            /* Update Expense Summary Status */\n            this.expenseSummary.is_cleared = 1;\n\n            // Expense Entries on Dr\n            expDS.data().forEach((value) => {\n                // Filter selected expenses\n                if (~this.selectedExpenseIds.indexOf(value.uuid)) {\n                    let entries = [];\n\n                    /* Update Expense Summary Detail Status Approved */\n                    value.set(\"status\", 1);\n                    \n                    /* Status */\n                    if (this.expenseSummary.use_for_option === 3) {/* Cash */\n                        value.set(\"is_cleared\", 1); /* Paid */\n                    }\n\n                    /* EXPENSE */\n                    let expense = new ExpenseModel(value);\n\n                    /* uuid */\n                    expense.uuid = \"\"; // New\n\n                    /* Number */\n                    if (counter === 1) {\n                        expense.number = this.numbers.number;\n                    } else {\n                        expense.number = this.applyPrefixNumber(lastNumber);\n                        lastNumber++;\n                    }\n                    counter++;\n                    expense.prefix_format = this.numbers.prefix_format;\n\n                    // Date\n                    expense.expense_date = Helper.toISODate(this.expenseSummary.date);\n                    expense.bill_date = Helper.toISODate(value.bill_date);\n\n                    // Supplier\n                    expense.supplier = new ContactModel(value.supplier);\n\n                    // Employee\n                    expense.employee = new ContactModel(this.employee);\n\n                    // Sidebar\n                    expense.location_uuid = this.location.id;\n                    expense.segment_uuid = this.segment.id;\n                    expense.project_uuid = this.project.id;\n\n                    // User\n                    expense.created_by = this.user;\n\n                    /* ENTRIES */\n                    let entry = new ExpenseEntryModel(value);\n\n                    // Account\n                    entry.account = new AccountModel(value.account);\n                    entry.account_uuid = value.account.uuid;\n\n                    // Contact\n                    entry.primary_contact = new ContactModel(value.supplier);\n                    entry.secondary_contacts = [new ContactModel(this.employee)];\n\n                    // Currency\n                    entry.currency = new CurrencyModel(value.bill_currency);\n                    entry.exchange_rate_uuid = value.exchange_rate_uuid;\n                    entry.exchange_rate = value.exchange_rate;\n                    entry.exchanged_amount = value.exchanged_amount;\n\n                    // Discount\n                    entry.discount = new DiscountItemModel(value.discount);\n\n                    // Tax\n                    entry.tax_item = new TaxModel(value.tax_item);\n\n                    /* Expense Account on Dr */\n                    entries.push(new ExpenseEntryModel(entry));\n\n                    // Discount on Cr\n                    let discountAmount = 0;\n                    if (value.hasOwnProperty('discount'))\n                        if (value.discount.hasOwnProperty('id'))\n                            if (value.discount.id !== \"\") {\n                                let subTo = kendo.parseFloat(value.price) * kendo.parseFloat(value.quantity);\n                                discountAmount = this.calculateDiscount(value.discount, subTo);\n                                \n                                /* Discount Entry */\n                                let discountEntry = new ExpenseEntryModel(entry);\n                                discountEntry.account = new AccountModel(value.discount.account);\n                                discountEntry.account_uuid = value.discount.account.uuid;\n                                discountEntry.amount = discountAmount * -1; // Cr side is negative\n                                discountEntry.exchanged_amount = discountAmount * value.exchange_rate;\n                                discountEntry.tax_amount = 0;\n                                discountEntry.exchanged_tax_amount = 0;\n\n                                /* Push Discount Entry */\n                                entries.push(discountEntry);\n                            }\n\n                    // Taxes on Dr\n                    if (value.hasOwnProperty('tax_item'))\n                        if (value.tax_item.hasOwnProperty('id'))\n                            if (value.tax_item.id !== \"\") {\n                                let amtAfterDiscount = kendo.parseFloat(value.amount) - discountAmount;\n                                let taxAmount = this.autoCalculateTax(value.tax_item, amtAfterDiscount);\n\n                                if (value.tax_item.hasOwnProperty('taxType'))\n                                    if (value.tax_item.taxType.hasOwnProperty('typeId'))\n                                        if (value.tax_item.taxType.typeId === 2) {/* WHD Tax on Cr side */\n                                            if (value.tax_item.baseAmount.toLowerCase() === \"net\") {/* WHD Tax Net on Dr side */\n                                                // Add Another Tax Related Expense Account\n                                                let taxRelatedExpenseAccount = new AccountModel(this.accounts.find(i => i.banhjiAccCode === AccountTypeCode.TAX_RELATED_EXPENSE_CODE));\n\n                                                /* Tax Related Expense Entry on Dr */\n                                                let taxRelatedExpenseEntry = new ExpenseEntryModel(entry);\n                                                taxRelatedExpenseEntry.account = taxRelatedExpenseAccount;\n                                                taxRelatedExpenseEntry.account_uuid = taxRelatedExpenseAccount.uuid;\n                                                taxRelatedExpenseEntry.description = i18n.t(\"witholding_tax_expense\");\n                                                taxRelatedExpenseEntry.amount = taxAmount;\n                                                taxRelatedExpenseEntry.exchanged_amount = taxAmount * value.exchange_rate;\n                                                taxRelatedExpenseEntry.tax_amount = 0;\n                                                taxRelatedExpenseEntry.exchanged_tax_amount = 0;\n\n                                                /* Push Tax Related Expense Entry */\n                                                entries.push(taxRelatedExpenseEntry);\n                                            }\n\n                                            // WHD Tax\n                                            taxAmount *= -1; // Cr side\n                                        }\n\n                                /* Tax Entry */\n                                let taxEntry = new ExpenseEntryModel(entry);\n                                taxEntry.account = new AccountModel(value.tax_item.account);\n                                taxEntry.account_uuid = value.tax_item.account.uuid;\n                                taxEntry.amount = taxAmount;\n                                taxEntry.exchanged_amount = taxAmount * value.exchange_rate;\n                                taxEntry.tax_amount = 0;\n                                taxEntry.exchanged_tax_amount = 0;\n\n                                /* Push Tax Entry */\n                                entries.push(taxEntry);\n                            }\n\n                    // Transaction Entries on Cr\n                    entries.push(\n                        new ExpenseEntryModel({\n                            account: new AccountModel(this.transactionAccount),\n                            account_uuid: this.transactionAccount.uuid,\n                            primary_contact: new ContactModel(value.supplier),\n                            secondary_contacts: [new ContactModel(this.employee)],\n                            description: this.expenseSummary.description,\n                            currency: value.bill_currency,\n                            amount: value.amount * -1, // Cr side is negative\n                            exchange_rate_uuid: value.exchange_rate_uuid,\n                            exchange_rate: value.exchange_rate,\n                            exchanged_amount: value.amount * -1 * value.exchange_rate,\n                        })\n                    );\n\n                    /* Add Entries */\n                    expense.expense_entries = entries;\n                    // mapping to Dynamodb ( expense record )\n                    this.mappingExpense(expense, entry);\n\n                    /* JOURNAL */\n                    let journal = new JournalModel();\n                    journal.number = expense.number;\n                    journal.description = expense.journal_note;\n                    journal.journal_date = Helper.toISODate(this.expenseSummary.date);\n                    journal.journal_type = EntityType.AUTO_JOURNAL;\n                    journal.transaction_type = EntityType.EXPENSES;\n                    journal.related_transaction_uuid = this.expenseSummary.use_for_transaction_uuid;\n                    journal.month_of = this.expenseSummary.month_of;\n                    journal.location_uuid = expense.location_uuid;\n                    journal.project_uuid = expense.project_uuid;\n                    journal.segment_uuid = expense.segment_uuid;\n                    journal.prefix_format = this.numbers.prefix_format;\n                    journal.is_draft = expense.is_draft;\n                    journal.created_date = expense.created_date;\n                    journal.created_by = expense.created_by;\n                    journal.modified_by = expense.modified_by;\n\n                    let journalEntries = [];\n                    entries.forEach((value) => {\n                        let entry = new JournalEntryModel(value);\n\n                        /* Apply Inclusive Tax to amount */\n                        if (value.tax_amount !== 0) {\n                            if (value.tax_item.hasOwnProperty(\"taxType\")) {\n                                if (value.tax_item.taxType.hasOwnProperty(\"typeId\")) {\n                                    if (value.tax_item.taxType.typeId === 1 && value.tax_item.baseAmount.toLowerCase() === TaxType.INCLUSIVE) {\n                                        entry.amount = value.amount + value.tax_amount;\n                                    }\n                                }\n                            }\n                        }\n                        entry.exchanged_amount = entry.amount * value.exchange_rate;\n\n                        // Add Entry\n                        journalEntries.push(entry);\n                    });\n\n                    // Add Entry\n                    expenseList.push({\n                        expense: expense,\n                        journal: journal,\n                        journal_entries: journalEntries,\n                    });\n                } else {\n                    /* Update Expense Summary Detail Status Reject */\n                    value.set(\"status\", 2);\n                }\n            });\n\n            /* Add Verified */\n            this.verifiedExpenses = expenseList;\n        },\n        // Validating\n        validateForm() {\n            let result = true,\n                expDS = this.$refs.expenseAccountDS.kendoWidget(),\n                msg = \"\";\n\n            // Expense\n            expDS.data().forEach((value, index) => {\n                if (~this.selectedExpenseIds.indexOf(value.uuid)) {\n                    if (value.supplier.name !== \"\" && value.amount > 0) {\n                        // No date\n                        if (value.bill_date === \"\") {\n                            result = false;\n                            msg += `<p>${i18n.t(\"please_select_date_at_row_number\")} ${index + 1}</p>`;\n                        }\n\n                        // No number\n                        if (value.bill_number === \"\") {\n                            result = false;\n                            msg += `<p>${i18n.t(\"please_input_bill_number_at_row_number\")} ${index + 1}</p>`;\n                        }\n                    }\n\n                    // No supplier\n                    if (value.supplier.name === \"\" && value.amount > 0) {\n                        result = false;\n                        msg += `<p>${i18n.t(\n                            \"please_select_supplier_at_row_number\"\n                        )} ${index + 1}</p>`;\n                    }\n\n                    // No amount\n                    if (value.supplier.name !== \"\" && value.amount === 0) {\n                        result = false;\n                        msg += `<p>${value.supplier.name} ${i18n.t(\"has_no_amount\")}</p>`;\n                    }\n                }\n            });\n\n            // Non selected expense\n            if (this.selectedExpenseIds.length === 0) {\n                msg += `<p>${i18n.t(\"please_select_at_least_one_row\")}</p>`;\n                result = false;\n            }\n\n            // Use for Cash Advance\n            if (\n                this.expenseSummary.use_for_option === 2 &&\n                this.expenseSummary.use_for_transaction_uuid === \"\"\n            ) {\n                msg += `<p>${i18n.t(\"please_select_related_cash_advance\")}</p>`;\n                result = false;\n            }\n\n            /* Transaciton Account */\n            if (this.transactionAccount.uuid === \"\") {\n                msg += `<p>${i18n.t(\"transaction_account_is_required\")}</p>`;\n                result = false;\n            }\n\n            /* Location */\n            if (this.location.id === \"\") {\n                msg += `<p>${i18n.t(\"location_is_required\")}</p>`;\n                result = false;\n            }\n\n            /* Segment */\n            if (this.segment.id === \"\") {\n                msg += `<p>${i18n.t(\"segment_is_required\")}</p>`;\n                result = false;\n            }\n\n            // Show Alert\n            this.errorMessage = msg;\n\n            this.alert = result === false;\n\n            return result;\n        },\n        // All Saves\n        async onSaveOptionClick(mode) {\n            if (this.$refs.form.validate() && this.validateForm()) {\n                let isValidClosingDate = await Helper.validateClosingDate(\n                    this.expenseSummary.date\n                );\n                if (isValidClosingDate) {\n                    this.saveMode = mode;\n                    this.save();\n                }\n            }\n        },\n        cancel() {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((result) => {\n                if (result.value) {\n                    this.clear();\n                    this.setDefaultData();\n                    this.$router.go(-1);\n                }\n            });\n        },\n        clear() {\n            // Reset Form\n            this.isEdit = false;\n            this.saveMode = \"\";\n\n            this.subTotal = 0;\n            this.discountAmount = 0;\n            this.purchaseTax = 0;\n            this.whdTax = 0;\n            this.totalAmount = 0;\n            this.amountDue = 0;\n            this.disableProject = false;\n\n            this.numbers = null;\n            this.selectedExpenseIds = [];\n            this.verifiedExpenses = [];\n            this.expenseSummary = new ExpenseSummaryModel();\n            this.expenseEntries = [];\n            this.employee = new EmployeeModel();\n            this.location = new LocationModel();\n            this.segment = new SegmentModel();\n            this.project = new ProjectModel();\n\n            let expDS = this.$refs.expenseAccountDS.kendoWidget();\n            expDS.data([]);\n        },\n        save() {\n            let self = this;\n\n            // Shrink Data\n            this.shrinkData();\n\n            // Sync Data\n            this.showLoading = true;\n            expenseHandler\n                .saveBatch(this.verifiedExpenses)\n                .then((response) => {\n                    if(response){\n                        self.updateExpenseSummary();\n                        const res = response.data || []\n                        self.saveTxnExpense(res);\n                        self.responseStatus(response);\n                    }else{\n                        Helper.alertErrorMsg(i18n.t(\"error_something_wrong\"));\n                    }\n                })\n                .catch((error) => {\n                    self.showLoading = false;\n                    Helper.alertErrorMsg(error);\n                })\n                .finally(() => {\n                    self.showLoading = false;\n                });\n        },\n        /* Update Expense Summary */\n        updateExpenseSummary() {\n            // let exp = this.getExp();\n            // let expSum = {\n            // \tuuid                       : exp.uuid,\n            // \tnumber                     : exp.number,\n            // \tdate                       : exp.date,\n            // \temployee                   : exp.employee,\n            // \tsegment_uuid               : exp.segment_uuid,\n            // \tlocation_uuid              : exp.location_uuid,\n            // \tproject_uuid               : exp.project_uuid,\n            // \tmonth_of                   : exp.month_of,\n            // \tuse_for_option             : exp.use_for_option,\n            // \tuse_for_transaction_uuid   : exp.use_for_transaction_uuid,\n            // \tdescription                : exp.description,\n            // \tsummary_details            : exp.summary_details,\n            // \tis_draft                   : exp.is_draft,\n            // \tis_cleared                 : exp.is_cleared,\n\n            // \tcreated_by                 : exp.created_by,\n            // \tmodified_by                : exp.modified_by,\n            // \tcreated_date               : exp.created_date,\n            // \tmodified_date              : exp.modified_date,\n            // };\n            expenseSummaryHandler.save(this.expenseSummary);\n        },\n        // Response Status\n        responseStatus(response) {\n            if (response.status === 200) {\n                if (this.saveMode === SaveOption.SAVECLOSE || this.saveMode === SaveOption.DELETE) {\n                    this.clear();\n                    this.setDefaultData();\n\n                    this.$router.go(-1);\n                } else {\n                    /* Save New */\n                    this.clear();\n                    this.setDefaultData();\n                }\n\n                /* Alert Success */\n                this.$snotify.success(i18n.t(\"successful\"));\n            } else {\n                /* Alert Error */\n                this.$snotify.error(i18n.t(\"error_something_wrong\"));\n            }\n        },\n        HideSmallSideBar() {\n            this.isHideBar = !this.isHideBar;\n        },\n        mappingExpense(expense, entry) {\n            if (this.expenseSummary.use_for_option === 0) {\n                this.txnExpense = new Expenses()\n                entry['id'] = 'lin-' + uuid.v1();\n                const subTotal = entry.amount || 0\n                const discount = this.calculateDiscount(entry.discount, subTotal)\n                const amount = entry.amount || 0\n                const amountAfterDiscount = amount - (discount || 0)\n                const taxItem = entry.tax_item || {}\n                const taxAccount = taxItem.account || {}\n                const taxAccountType = taxAccount.account_type || {}\n                const taxAmount = this.autoCalculateTax(entry.tax_item, amountAfterDiscount)\n                let purchaseTaxAmount = 0\n                let whdTaxAmount = 0\n                // Purchase Tax\n                if (taxAccountType.number === AccountTypeCode.PURCHASE_TAX) {\n                    purchaseTaxAmount = taxAmount || 0\n                } else if (taxAccountType.number === AccountTypeCode.WHD_TAX) {\n                    whdTaxAmount = taxAmount || 0\n                }\n                const total = subTotal - (discount || 0) + purchaseTaxAmount - whdTaxAmount;\n                this.txnExpense.id = '';\n                this.txnExpense.journal_uuid = '';\n                this.txnExpense.type = \"Expense\";\n                this.txnExpense.abbr = '';\n                this.txnExpense.transactionType = {};\n                this.txnExpense.referenceNo = expense.number\n                this.txnExpense.transactionDate = expense.expense_date;\n                this.txnExpense.dueDate = expense.expense_date;\n                this.txnExpense.billDate = expense.bill_date;\n                this.txnExpense.billNumber = expense.bill_number;\n                this.txnExpense.currency = this.removeEmptyValues(entry.currency);\n                this.txnExpense.supplier = this.supplierMap(expense.supplier);\n                this.txnExpense.employee = this.removeEmptyValues(expense.employee);\n                this.txnExpense.paymentTerm = this.paymentTerm;\n                this.txnExpense.segment = this.removeEmptyValues(this.segment);\n                this.txnExpense.location = this.removeEmptyValues(this.location);\n                this.txnExpense.project = this.removeEmptyValues(this.project);\n                this.txnExpense.monthOf = this.expenseSummary.month_of;\n\n                this.txnExpense.additionalCostSupplier = this.removeEmptyValues(expense.additional_cost_supplier);\n                this.txnExpense.use_for_transaction_uuid = this.expenseSummary.use_for_transaction_uuid;\n                this.txnExpense.useForOption = this.expenseSummary.use_for_option;\n                this.txnExpense.transactionNote = entry.description || '';\n                this.txnExpense.journalNote = this.expenseSummary.description || ''\n                this.txnExpense.itemLines = [entry];\n                this.txnExpense.account = new AccountMappingModel(this.transactionAccount);\n                this.txnExpense.saveOption = expense.is_draft;\n                this.txnExpense.status = 1;\n                this.txnExpense.createdAt = expense.created_date;\n\n                this.txnExpense.total = parseFloat(total);\n                this.txnExpense.exchangeTotal = parseFloat(total) * (entry.exchange_rate || 1);\n                this.txnExpense.amountDue = total\n                this.txnExpense.remainingAmount = total\n                this.txnExpense.subTotal = subTotal\n                this.txnExpense.purchaseTax = purchaseTaxAmount;\n                this.txnExpense.whdTax = whdTaxAmount;\n                this.txnExpense.supplierDiscountItem = this.removeDuplicate([entry.discount] || []);\n                this.txnExpense.loggedUser = this.loggedUser(expense.created_by);\n\n                this.txnExpense.txnRate = entry.exchange_rate;\n                this.txnExpense.discountTotal = parseFloat((discount || 0));\n                this.txnExpense.depositAmount = 0\n                this.txnExpense.depositDeduction = 0\n                this.txnExpense.exchangeDepositDeduction = 0\n                this.txnExpense.exchangeAmount = total * (entry.exchange_rate || 1);\n                this.txnExpenseList.push(this.txnExpense)\n                window.console.log(\"Expense\", this.txnExpenseList);\n            }\n        },\n        loggedUser(user) {\n            if (user) {\n                return {\n                    id: user.id,\n                    name: user.user_name,\n                    email: user.email,\n                };\n            }\n            return {};\n        },\n        supplierMap(supplier) {\n            if (supplier) {\n                return {\n                    id: supplier.uuid,\n                    name: supplier.name,\n                    email: supplier.email,\n                    phone: supplier.phone,\n                    address: supplier.address,\n                };\n            }\n            return {};\n        },\n        removeEmptyValues(obj) {\n            for (let propName in obj) {\n                if (!obj[propName] || obj[propName].length === 0) {\n                    delete obj[propName];\n                } else if (typeof obj[propName] === \"object\") {\n                    this.removeEmptyValues(obj[propName]);\n                }\n            }\n            return obj;\n        },\n        removeDuplicate(array) {\n            const result = [];\n            const map = new Map();\n            for (const item of array) {\n                if (!map.has(item.id)) {\n                    map.set(item.id, true); // set any value to Map\n                    result.push(item);\n                }\n            }\n            return result;\n        },\n        saveTxnExpense(response) {\n            this.txnExpenseList.forEach(m => {\n                const found = response.filter(n => n.number === m.referenceNo)\n                if (found.length > 0) {\n                    const data = found[0] || {}\n                    m['uuid'] = data.uuid || ''\n                    m['id'] = ''\n                    m['journal_uuid'] = data.journal_uuid || ''\n                    m['actionType'] = 'new'\n                }\n            })\n            let data = this.txnExpenseList;\n            billingHandler\n                .createExpenseBatch(data)\n                .then((response) => {\n                    if (response.data.statusCode === 201) {\n                        this.$snotify.success(\"Successfully\");\n                    }\n                })\n                .catch((e) => {\n                    this.$snotify.error(\"Something went wrong\");\n                    this.errors.push(e);\n                });\n        },\n    },\n    watch: {\n        initExpenseSummary() {\n            this.initialData();\n        },\n    },\n    created() {\n        this.loadData();\n    },\n    mounted() {\n        // Initial Data\n        this.initialData();\n    },\n};\n</script>\n\n<style scoped>\n.v-input.custom-radio\n.v-input--selection-controls__input\n.v-input--selection-controls__ripple {\n    display: none !important;\n}\n\n.function_wrapper {\n    box-shadow: none !important;\n}\n\n.v-application--is-ltr .v-text-field .v-input__append-inner {\n    margin-top: 0 !important;\n}\n\n.v-input__slot {\n    background-color: #fff !important;\n}\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n.border_radius10 {\n    border-radius: 10px !important;\n    background-color: #f2f2f2;\n}\n\n.pa-3.v-card h4 {\n    font-size: 18px;\n    color: #333;\n}\n\n.pa-3.v-card p {\n    font-size: 12px;\n    color: #b5b5b5;\n}\n\n.attachment_file {\n    background-color: #efeded;\n    border-radius: 0 !important;\n}\n\n.attachment_table.v-data-table table {\n    border: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.attachment_table table tr th {\n    border-left: thin solid rgba(0, 0, 0, 0.12);\n    height: 35px;\n    border-right: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.block_debit,\n.block_credit {\n    border-bottom: 1px solid #fff;\n}\n\n.block_debit p.number,\n.block_credit p.number {\n    font-size: 25px;\n    color: #7f7f7f;\n}\n\n.block_debit h5,\n.block_credit h5,\n.block_difference h5 {\n    text-transform: uppercase;\n    color: #7f7f7f;\n    font-size: 15px;\n    font-weight: normal;\n}\n\n.block_difference h5 {\n    font-size: 18px;\n}\n\n.block_difference h5 span {\n    font-size: 15px;\n}\n\n.custom_grid table th:last-child {\n    text-align: right !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1250px;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n.hide_small_bar_class {\n    max-width: 0;\n    transition: 0.5s ease-in;\n    flex: 0 0 0;\n    padding: 0;\n}\n\n.hide_big_bar_class {\n    max-width: 100%;\n    transition: 0.5s ease-in;\n    flex: 0 0 100%;\n}\n\n.info_add {\n    background-color: #ffffff;\n}\n\n.small_sidebar {\n    height: 98%;\n    position: relative;\n    padding: 12px;\n    background-color: #edf1f5;\n}\n\n.iconArrow {\n    right: -35px;\n    position: absolute;\n    bottom: -10px;\n}\n\n.iconArrowHide {\n    position: absolute;\n    right: -7px;\n    bottom: -10px;\n}\n\n.color_grey {\n    color: #808080;\n}\n\n.card_green {\n    min-height: 70px;\n    background-color: #00b050 !important;\n    color: #ffffff;\n}\n\n.lb_bold {\n    font-size: 12px;\n}\n\n.detial_smallside_p {\n    position: absolute;\n    bottom: 10px;\n}\n\n.card_background {\n    background-color: #edf1f5;\n    min-height: 120px;\n}\n\n.deposite_input {\n    width: 100px;\n}\n\n.btn_save_draft {\n    color: #ffffff;\n    background-color: #00b0f0 !important;\n    text-transform: capitalize;\n}\n\n.save_option {\n    background-color: #203864 !important;\n}\n\n.btn_add_small {\n    height: 27px !important;\n    min-width: 25px !important;\n    font-size: 10px;\n    padding: 0 22px !important;\n    background-color: #00b050 !important;\n    color: #ffffff;\n    border-radius: 0 !important;\n}\n\n.list_site_inv {\n    background-color: #92d050;\n    color: #ffffff;\n    font-size: 12px;\n}\n\n.list_site_exp {\n    background-color: #c5e0b4;\n    color: #000000;\n    font-size: 12px;\n    line-height: 16px;\n    min-height: 40px;\n}\n\n.checkbox_inv {\n    padding: 2px;\n    margin-top: 3px;\n    margin-right: 2px;\n}\n\n.exp_select {\n    font-size: 12px !important;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}