{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/TaxOnSalalry.vue?vue&type=style&index=0&id=fffdc0de&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/TaxOnSalalry.vue","mtime":1640595536797},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ci5wcmltYXJ5OmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5MmQwNTAgIWltcG9ydGFudDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0aGVhZCA+IHRyOmxhc3QtY2hpbGQgPiB0aCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBib3JkZXItYm90dG9tOiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7CiAgICBoZWlnaHQ6IDM3cHggIWltcG9ydGFudDsKICAgIGNvbG9yOiAjMDAwOwp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OwogICAgYm9yZGVyLXRvcDogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHI6bm90KDpsYXN0LWNoaWxkKSA+IHRkOm5vdCgudi1kYXRhLXRhYmxlX19tb2JpbGUtcm93KSwKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOm5vdCg6bGFzdC1jaGlsZCkgPiB0aDpub3QoLnYtZGF0YS10YWJsZV9fbW9iaWxlLXJvdykgewogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICAgIGhlaWdodDogMzJweCAhaW1wb3J0YW50OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpICFpbXBvcnRhbnQ7Cn0KCi5ib3JkZXJfdG9wIHsKICAgIGJvcmRlci10b3A6IHRoaW4gc29saWQgI2ZmZiAhaW1wb3J0YW50Owp9Cgoudi1hcHBsaWNhdGlvbiAucHJpbWFyeSwKLnYtYXBwbGljYXRpb24gLnRoaXJkIHsKICAgIGJvcmRlci1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgoudmF0IHsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgICBjb2xvcjogI2ZmZjsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgZm9udC1mYW1pbHk6ICdOaXJhZGVpLUJvbGQnICFpbXBvcnRhbnQ7Cn0KCi5hbW91bnQgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQoKLmhlYWQtc3VtbWFyeSB7CiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["TaxOnSalalry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8ZA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"TaxOnSalalry.vue","sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/review","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0 mb-2\">\n            <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_resident_employees') }}</h2>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <v-simple-table>\n                <template v-slot:default>\n                    <thead>\n                    <tr>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('no') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('spouse') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_minor') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td class=\"\">1</td>\n                        <td class=\"text-right\">{{ amountR0.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountR0.amountPaid }}</td>\n                        <td class=\"text-right\">{{ amountR0.spouse }}</td>\n                        <td class=\"text-right\">{{ amountR0.numMinor }}</td>\n                        <td>0%</td>\n                        <td class=\"text-right\">{{ amountR0.taxSalary }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"\">2</td>\n                        <td class=\"text-right\">{{ amountR5.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountR5.amountPaid }}</td>\n                        <td class=\"text-right\">{{ amountR5.spouse }}</td>\n                        <td class=\"text-right\">{{ amountR5.numMinor }}</td>\n                        <td>5%</td>\n                        <td class=\"text-right\">{{ amountR5.taxSalary }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"\">3</td>\n                        <td class=\"text-right\">{{ amountR10.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountR10.amountPaid }}</td>\n                        <td class=\"text-right\">{{ amountR10.spouse }}</td>\n                        <td class=\"text-right\">{{ amountR10.numMinor }}</td>\n                        <td>10%</td>\n                        <td class=\"text-right\">{{ amountR10.taxSalary }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"\">4</td>\n                        <td class=\"text-right\">{{ amountR15.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountR15.amountPaid }}</td>\n                        <td class=\"text-right\">{{ amountR15.spouse }}</td>\n                        <td class=\"text-right\">{{ amountR15.numMinor }}</td>\n                        <td>15%</td>\n                        <td class=\"text-right\">{{ amountR15.taxSalary }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"\">5</td>\n                        <td class=\"text-right\">{{ amountR20.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountR20.amountPaid }}</td>\n                        <td class=\"text-right\">{{ amountR20.spouse }}</td>\n                        <td class=\"text-right\">{{ amountR20.numMinor }}</td>\n                        <td>20%</td>\n                        <td class=\"text-right\">{{ amountR20.taxSalary }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"white--text third text-uppercase\">{{ $t('total') }}</td>\n                        <td class=\"white--text third text-right\">{{ amountTotal.numEmp - amountNr20.numEmp }}</td>\n                        <td class=\"white--text third text-right\">{{ amountTotal.amountPaid }}</td>\n                        <td class=\"white--text third text-right\">{{ amountTotal.spouse }}</td>\n                        <td class=\"white--text third text-right\">{{ amountTotal.numMinor }}</td>\n                        <td class=\"white--text third\"></td>\n                        <td class=\"white--text third text-right\">{{ amountTotal.taxSalary }}</td>\n                    </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n            <!-- <v-btn color=\"primary\" class=\"mt-2 float-right capitalize\" outlined>\n                <span class=\"black--text \">{{$t('view_detial_record')}}</span>\n            </v-btn> -->\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"false\"\n                :myLoading=\"true\"\n            />\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0 mt-4 mb-2\">\n            <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_resident_non_employees') }}</h2>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <v-simple-table>\n                <template v-slot:default>\n                    <thead>\n                    <tr>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td class=\"text-right\">{{ amountNr20.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountNr20.amountPaid }}</td>\n                        <td>20%</td>\n                        <td class=\"text-right\">{{ amountNr20.taxSalary }}</td>\n                    </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0 mt-4 mb-2\">\n            <h2 class=\"mb-0 font_18\">{{ $t('tax_salary_fringe_benefit') }}</h2>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <v-simple-table>\n                <template v-slot:default>\n                    <thead>\n                    <tr>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('no_of_employees') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('salary_to_be_paid') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_rate') }}</th>\n                        <th class=\"text-bold text-uppercase grayBg\">{{ $t('tax_on_salary') }}</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                        <td class=\"text-right\">{{ amountFB20.numEmp }}</td>\n                        <td class=\"text-right\">{{ amountFB20.amountPaid }}</td>\n                        <td>20%</td>\n                        <td class=\"text-right\">{{ amountFB20.taxSalary }}</td>\n                    </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\"\n\nexport default {\n    data: () => ({\n        showLoading: false,\n        is_month: false,\n        is_start_date: false,\n        is_end_date: false,\n        start_date: \"\",\n        end_date: \"\",\n\n        search: {\n            start_date: \"\",\n            end_date: \"\"\n        },\n\n    }),\n    props: ['salary'],\n    methods: {\n        Change() {\n        },\n        onUpdate() {\n            window.console.log(this.amountTotal, 'amnount salary input12')\n            this.$emit('getTaxSalary', this.amountTotal ? this.amountTotal.taxSalary : 0)\n        },\n        async getSalary() {\n            window.console.log(this.salaries, '12432')\n        },\n        onSearch() {\n            this.search = {\n                'start_date': this.start_date + '-01',\n                'end_date': this.end_date + '-01'\n            }\n        }\n    },\n    async mounted() {\n        await this.getSalary()\n    },\n    watch: {'salaries': 'onUpdate', 'amountTotal': 'onUpdate'},\n    computed: {\n        salaries() {\n            if (this.salary !== undefined) {\n                return this.salary\n            } else {\n                return []\n            }\n        },\n        amountTotal() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalary = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    amount += i.amountToPaid\n                    amountTaxSalary += i.amountTaxSalary\n                    numEmp += 1\n                    numMinor += kendo.parseFloat(i.numMinor)\n                    spouse += i.spouse\n                })\n                this.$emit('getTaxSalary', amountTaxSalary)\n                window.console.log(amountTaxSalary, 'amount tax salary')\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalary, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR0() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 0) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += kendo.parseFloat(i.numMinor)\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR5() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 5) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR10() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 10) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR15() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 15) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountR20() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0, spouse = 0, numMinor = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Resident\") {\n                            if (i.taxRate == 20) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                                numMinor += i.numMinor\n                                spouse += i.spouse\n                            }\n                        }\n                    }\n                })\n                return {\n                    numMinor: numMinor,\n                    spouse: spouse,\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {\n                    numMinor: 0,\n                    spouse: 0, numEmp: 0, amountPaid: 0, taxSalary: 0\n                }\n            }\n        },\n        amountNr20() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0\n                this.salary.filter(i => {\n                    if (i.employee.hasOwnProperty('natureType')) {\n                        if (i.employee.natureType === \"Non-Resident\") {\n                            if (i.taxRate == 20) {\n                                amount += i.amountToPaid\n                                amountTaxSalaryUS += i.amountTaxSalary\n                                numEmp += 1\n                            }\n                        }\n                    }\n                })\n                return {\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {numEmp: 0, amountPaid: 0, taxSalary: 0}\n            }\n        },\n        amountFB20() {\n            if (this.salary !== undefined) {\n                let amount = 0, amountTaxSalaryUS = 0, numEmp = 0\n                this.salary.filter(i => {\n                    if (i.totalBenefit > 0) {\n                        amount += i.totalBenefit\n                        amountTaxSalaryUS += i.taxAmountBenefit\n                        numEmp += 1\n                    }\n                })\n                this.$emit('getTaxBenefit', amountTaxSalaryUS)\n                return {\n                    numEmp: numEmp,\n                    amountPaid: kendo.toString(amount, `n2`),\n                    taxSalary: kendo.toString(amountTaxSalaryUS, `n2`)\n                }\n            } else {\n                return {numEmp: 0, amountPaid: 0, taxSalary: 0}\n            }\n        },\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        // 'month-picker' : ()=> import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    text-transform: uppercase;\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold' !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"]}]}