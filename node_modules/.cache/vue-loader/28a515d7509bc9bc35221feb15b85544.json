{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/settings/CustomerProject.vue?vue&type=style&index=0&id=25ceaa3a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/settings/CustomerProject.vue","mtime":1638499443226},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5rLWFuaW1hdGlvbi1jb250YWluZXIgewogICAgei1pbmRleDogMTAwMDMKfQoKLmstZHJvcGRvd24gewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tdG9wOiAxMnB4Owp9Cg=="},{"version":3,"sources":["CustomerProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CustomerProject.vue","sourceRoot":"src/views/customers/settings","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <h2 class=\"mb-0\">{{ $t('customer_project') }}</h2>\n            <v-btn to=\"project\" class=\"white--text float-right text-capitalize\" color=\"primary\">\n                {{ $t('new_project') }}\n            </v-btn>\n            <p class=\"mb-0\">{{ $t('sale_channel_desc') }} </p>\n        </v-col>\n\n        <v-col sm=\"12\" cols=\"12\">\n            <template>\n                <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"/>\n                <kendo-datasource ref=\"gridProjectDS\"\n                                  :data=\"projectList\"/>\n                <kendo-grid id=\"gridProject\" class=\"grid-function\"\n                            :data-source-ref=\"'gridProjectDS'\"\n                            :editable=\"false\"\n                            :scrollable-virtual=\"true\">\n                    <kendo-grid-column\n                        :field=\"'no'\"\n                        :title=\"$t('no')\"\n                        :template=\"rowNumberTmpl\"\n                        :width=\"40\"\n                        :column-menu=\"false\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-center'\t}\"\n                        :attributes=\"{style: 'text-align: center'}\"/>\n                    <kendo-grid-column\n                        :field=\"'code'\"\n                        :title=\"$t('code')\"\n                        :width=\"50\"\n                        :template=\"'<span>#=code#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                    <kendo-grid-column\n                        :field=\"'name'\"\n                        :title=\"$t('name')\"\n                        :attributes=\"{class:'tb_name_td'}\"\n                        :width=\"90\"\n                        :template=\"'<span>#=name#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                    <kendo-grid-column\n                        :field=\"'description'\"\n                        :title=\"$t('description')\"\n                        :width=\"90\"\n                        :template=\"'<span>#=description#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                    <kendo-grid-column\n                        :field=\"'noOfCustomer'\"\n                        :title=\"$t('customers')\"\n                        :width=\"90\"\n                        :template=\"'<span>#=noOfCustomer#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                    <kendo-grid-column\n                        :field=\"'noOfSupplier'\"\n                        :title=\"$t('suppliers')\"\n                        :width=\"90\"\n                        :template=\"'<span>#=noOfSupplier#</span>'\"\n                        :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                    <kendo-grid-column\n                        :field=\"''\"\n                        :title=\"$t('action')\"\n                        :width=\"70\"\n                        :command=\"[{iconClass: 'k-icon k-i-edit', text: 'Edit', click: goEdit }]\"\n                        :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"/>\n                </kendo-grid>\n            </template>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\nimport ProjectModel from \"@/scripts/model/Project\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst projectModel = new ProjectModel({})\nconst $ = require(\"jquery\")\nconst projectHandler = require(\"@/scripts/projectHandler\")\n\nexport default {\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n    },\n    data: () => ({\n        dialogM2: '',\n        showLoading: true,\n        mCustomer: '',\n        customerList: [],\n        project: projectModel,\n        projectList: [],\n        entries: [],\n        isLoading: false,\n    }),\n    props: {},\n    computed: {},\n    watch: {\n        '$route': 'callback'\n    },\n    created() {\n    },\n    methods: {\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.gridProjectDS.kendoWidget(),\n                index = ds.indexOf(dataItem)\n            return index + 1\n        },\n        goEdit(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridProject\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            this.$router.push({\n                path: 'project' + `/${dataItem.id}`,\n                params: {id: dataItem.id},\n                query: {type: 'edit'}\n            })\n        },\n        close() {\n            this.dialogM2 = false;\n        },\n        async loadProjects() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    projectHandler.list().then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.projectList = res.data.data\n                        }\n                    })\n                }, 300)\n            })\n        },\n        callback() {\n            if (this.$route.params !== null && this.$route.params.hasOwnProperty('data')) {\n                const project = this.$route.params.data\n                let flag = false\n                this.projectList.forEach(function (part, index, item) {\n                    if ((item[index].id === project.id)) {\n                        item[index] = project\n                        flag = true\n                    }\n                    item[index]['no'] = index++\n                })\n                window.console.log(this.projectList)\n                if (flag === false) {\n                    this.projectList.push(project)\n                }\n                let dataSource = new kendo.data.DataSource({\n                    data: this.projectList\n                });\n                let grid = $('#gridProject').data(\"kendoGrid\");\n                dataSource.read();\n                grid.setDataSource(dataSource)\n\n            }\n        },\n    },\n    mounted: async function () {\n        await this.loadProjects()\n    }\n};\n</script>\n<style scoped>\n.k-animation-container {\n    z-index: 10003\n}\n\n.k-dropdown {\n    width: 100%;\n    margin-top: 12px;\n}\n</style>"]}]}