{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/warehouses/operations/ReceiptOrder.vue?vue&type=style&index=0&id=b46ed78a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/warehouses/operations/ReceiptOrder.vue","mtime":1638760538984},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmstZHJvcGRvd24gewogICAgd2lkdGg6IDEwMCU7CiAgICBtYXJnaW4tdG9wOiAzcHg7Cn0KCi5mdW5jdGlvbl93cmFwcGVyIHsKICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKfQoKLnYtYXBwbGljYXRpb24tLWlzLWx0ciAudi10ZXh0LWZpZWxkIC52LWlucHV0X19hcHBlbmQtaW5uZXIgewogICAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50Owp9Cgoudi1pbnB1dF9fc2xvdCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7Cn0KCi5mdW5jdGlvbl9jb250ZW50IC5sYWJlbCB7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwp9CgouYm9yZGVyX3JhZGl1czEwIHsKICAgIGJvcmRlci1yYWRpdXM6IDEwcHggIWltcG9ydGFudDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7Cn0KCi5wYS0zLnYtY2FyZCBoNCB7CiAgICBmb250LXNpemU6IDE4cHg7CiAgICBjb2xvcjogIzMzMzsKfQoKLnBhLTMudi1jYXJkIHAgewogICAgZm9udC1zaXplOiAxMnB4OwogICAgY29sb3I6ICNiNWI1YjU7Cn0KCi5jdXN0b21fZ3JpZCB0YWJsZSB0aDpsYXN0LWNoaWxkIHsKICAgIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAgIC5jb250YWluZXIgewogICAgICAgIG1heC13aWR0aDogMTA4MHB4ICFpbXBvcnRhbnQ7CiAgICB9Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLnB0LTYuY29sLXNtLTUuY29sLTEyIHsKICAgICAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OwogICAgfQoKICAgIC5jb2RlX3RleHQgewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgfQoKICAgIC5waG9uZV9ub19wdCB7CiAgICAgICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDsKICAgIH0KCiAgICAuc2VsZWN0X3RlbXBsYXRlLAogICAgLnNhdmVfb3B0aW9uIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgfQp9CgouaGlkZV9zbWFsbF9iYXJfY2xhc3MgewogICAgbWF4LXdpZHRoOiAwOwogICAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluOwogICAgZmxleDogMCAwIDA7Cn0KCi5oaWRlX2JpZ19iYXJfY2xhc3MgewogICAgbWF4LXdpZHRoOiAxMDAlOwogICAgdHJhbnNpdGlvbjogMC41cyBlYXNlLWluOwogICAgZmxleDogMCAwIDEwMCU7Cn0KCi5pbmZvX2FkZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOwp9Cgouc21hbGxfc2lkZWJhciB7CiAgICBoZWlnaHQ6IDk2JTsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgIHBhZGRpbmc6IDEycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMWY1Owp9CgouaWNvbkFycm93IHsKICAgIHJpZ2h0OiAtMzVweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGJvdHRvbTogLTEwcHg7Cn0KCi5pY29uQXJyb3dIaWRlIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHJpZ2h0OiAtN3B4OwogICAgYm90dG9tOiAtMTBweDsKfQoKLmNvbG9yX2dyZXkgewogICAgY29sb3I6ICM4MDgwODA7Cn0KCi5jYXJkX2dyZWVuIHsKICAgIG1pbi1oZWlnaHQ6IDcwcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiMDUwICFpbXBvcnRhbnQ7CiAgICBjb2xvcjogI2ZmZmZmZjsKfQoKLmxiX2JvbGQgewogICAgZm9udC1zaXplOiAxMnB4Owp9CgouZGV0aWFsX3NtYWxsc2lkZV9wIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGJvdHRvbTogMTBweDsKfQoKLmNhcmRfYmFja2dyb3VuZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMWY1OwogICAgbWluLWhlaWdodDogMTIwcHg7Cn0KCi5kZXBvc2l0ZV9pbnB1dCB7CiAgICB3aWR0aDogMTAwcHg7Cn0KCi5idG5fc2F2ZV9kcmFmdCB7CiAgICBjb2xvcjogI2ZmZmZmZjsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGIwZjAgIWltcG9ydGFudDsKICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9Cgouc2F2ZV9vcHRpb24gewogICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMzg2NCAhaW1wb3J0YW50Owp9CgouYnRuX2FkZF9zbWFsbCB7CiAgICBoZWlnaHQ6IDI3cHggIWltcG9ydGFudDsKICAgIG1pbi13aWR0aDogMjVweCAhaW1wb3J0YW50OwogICAgZm9udC1zaXplOiAxMHB4OwogICAgcGFkZGluZzogMCAyMnB4ICFpbXBvcnRhbnQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDBiMDUwICFpbXBvcnRhbnQ7CiAgICBjb2xvcjogI2ZmZmZmZjsKICAgIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDsKfQoKLmxpc3Rfc2l0ZV9pbnYgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzkyZDA1MDsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgZm9udC1zaXplOiAxMnB4Owp9CgoubGlzdF9zaXRlX2V4cCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzVlMGI0OwogICAgY29sb3I6ICMwMDAwMDA7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBsaW5lLWhlaWdodDogMTZweDsKICAgIG1pbi1oZWlnaHQ6IDQwcHg7Cn0KCi5jaGVja2JveF9pbnYgewogICAgcGFkZGluZzogMnB4OwogICAgbWFyZ2luLXRvcDogM3B4OwogICAgbWFyZ2luLXJpZ2h0OiAycHg7Cn0KCi5leHBfc2VsZWN0IHsKICAgIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50Owp9Cgoudi1kYXRhLXRhYmxlX193cmFwcGVyIHRkIHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjODA4MDgwOwogICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM4MDgwODA7Cn0K"},{"version":3,"sources":["ReceiptOrder.vue"],"names":[],"mappingsyjfile":"ReceiptOrder.vue","sourceRoot":"src/views/products/warehouses/operations","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-row>\n                            <v-col\n                                class=\"bigSide py-0\"\n                                sm=\"12\"\n                                cols=\"12\"\n                                style=\"transition: .3s ease-in;\"\n                                :class=\"{ hide_big_bar_class: isHideBar }\"\n                            >\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <v-card outlined dense class=\"no_border\">\n                                        <h2 class=\"mb-0\">{{ $t(\"receipt_order\") }}</h2>\n                                        <v-icon\n                                            @click=\"cancel\"\n                                            style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                            class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                    </v-card>\n\n                                    <v-card\n                                        outlined\n                                        dense\n                                        class=\"px-4 no_border mb-3\"\n                                        color=\"grayBg\"\n                                    >\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label\">{{ $t(\"supplier\") }}</label>\n                                                <v-col\n                                                    sm=\"12\"\n                                                    cols=\"12\"\n                                                    style=\"margin-top:1px;\"\n                                                    class=\"kendo_dropdown_custom pl-0 pb-4 pr-0  pt-0\"\n                                                >\n                                                    <dropdownlist\n                                                        :data-items=\"supplierList\"\n                                                        @change=\"onChange\"\n                                                        v-model=\"receiptOrder.supplier\"\n                                                        :value=\"receiptOrder.supplier\"\n                                                        :data-item-key=\"dataItemKey\"\n                                                        :text-field=\"textField\"\n                                                        :default-item=\"defaultItem\"\n                                                        :filterable=\"true\"\n                                                        @filterchange=\"onFilterChange\"\n                                                    >\n                                                    </dropdownlist>\n                                                </v-col>\n                                                <label class=\"label\">{{ $t(\"number\") }}</label>\n                                                <div class=\"mt-1 d-flex\">\n                                                    <div class=\"code_text flex-1 text-bold\">\n                                                        {{ receiptOrder.abbr }}\n                                                    </div>\n\n                                                    <v-text-field\n                                                        class=\"flex-2 custom-border \"\n                                                        v-model=\"receiptOrder.number\"\n                                                        outlined\n                                                        disabled\n                                                        :rules=\"[(v) => !!v || 'Number is required']\"\n                                                        required\n                                                    />\n                                                    <v-icon\n                                                        color=\"black\"\n                                                        size=\"30\"\n                                                        style=\"height: 40px;\"\n                                                        class=\"border_qrcode ml-2\"\n                                                        @click=\"generateNumber\"\n                                                    >mdi-qrcode\n                                                    </v-icon>\n                                                </div>\n                                            </v-col>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label\">{{ $t(\"date\") }}</label>\n                                                <app-datepicker\n                                                    :initialDate=\"receiptOrder.date\"\n                                                    @onChanged=\"generateNumber\"\n                                                    @emitDate=\"receiptOrder.date = $event\"\n                                                />\n                                                <label class=\"label\">{{ $t(\"reference\") }}</label>\n                                                <v-select :items=\"purchaseOrders\" @change=\"onChangePO\"\n                                                          v-model=\"purchaseOrder\" return-object\n                                                          :loading=\"purchaseOrders.length <= 0 && showLoadingTxn\"\n                                                          item-text=\"referenceNo\" item-value=\"id\" outlined\n                                                          class=\"mt-1\"/>\n                                            </v-col>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label\">{{ $t(\"warehouse\") }}</label>\n                                                <v-select\n                                                    class=\"mt-1\"\n                                                    :items=\"warehouses\"\n                                                    item-text=\"name\"\n                                                    item-value=\"id\"\n                                                    @change=\"onChangeWarehouse\"\n                                                    v-model=\"receiptOrder.warehouse\"\n                                                    :rules=\"[(v) => !!v || 'Warehouse is required']\"\n                                                    return-object\n                                                    tage=\"Warehouse\"\n                                                    outlined\n                                                />\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n\n                                    <v-row color=\"white\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                            <kendo-datasource\n                                                ref=\"dataSource\"\n                                                @change=\"dataSourceChanged\"\n                                                :data=\"receiptOrder.itemLines\"\n                                            />\n                                            <kendo-grid\n                                                id=\"grid\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'dataSource'\"\n                                                :sortable=\"false\"\n                                                :filterable=\"false\"\n                                                v-on:databound=\"dataBound\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                            >\n                                                <kendo-grid-column\n                                                    :command=\"{\n                                                        iconClass: 'k-icon k-i-trash',\n                                                        text: ' ',\n                                                        click: removeRow,\n                                                        class: 'btn-plus',\n                                                      }\"\n                                                    :title=\"'&nbsp;'\"\n                                                    :width=\"60\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :width=\"55\"\n                                                    :template=\"rowNumber\"\n                                                    :column-menu=\"false\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: variants' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'item'\"\n                                                    :title=\"$t('items')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#=item.name#</span>'\"\n                                                    :editor=\"ItemDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :width=\"170\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'uom'\"\n                                                    :template=\"UOMTemplate\"\n                                                    :editor=\"UOMDropDownEditor\"\n                                                    :title=\"$t('uom')\"\n                                                    :width=\"110\"\n                                                    :attribute=\"{class: 'k-state-disabled'}\"\n                                                    :headerAttributes=\"{\n                                                        style: 'background-color: #EDF1F5',\n                                                      }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'qty'\"\n                                                    :title=\"$t('ordered')\"\n                                                    :format=\"'{0:n0}'\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                    :width=\"120\"\n                                                    :editable=\"function() {return false}\"\n                                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'totalReceived'\"\n                                                    :title=\"$t('total_received')\"\n                                                    :width=\"180\"\n                                                    :editable=\"function() {return false}\"\n                                                    :headerAttributes=\"{style:'text-align: right; background-color: #EDF1F5', }\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'qtyReceived'\"\n                                                    :title=\"$t('qty_received')\"\n                                                    :width=\"160\"\n                                                    :editor=\"numberEditor\"\n                                                    :headerAttributes=\"{style:'text-align: right; background-color: #EDF1F5', }\"\n                                                    :attributes=\"{style: 'text-align: right'}\"\n                                                />\n                                                <kendo-grid-column\n                                                    :command=\"[{\n                                                        iconClass: 'k-icon k-i-plus',\n                                                     text: $t('serial'),\n                                                     click: recordSerial,\n                                                     className: 'k-state-disabled isSerialNumber btn-plus',\n                                                     },{\n                                                    iconClass: 'k-icon k-i-plus',\n                                                     text: $t('batch'),\n                                                     click: recordBatch,\n                                                     className: 'k-state-disabled isBatch btn-plus'\n                                                     }]\"\n                                                    :width=\"190\"\n                                                    :hidden=\"false\"\n                                                    :headerAttributes=\"{style:'text-align: right; background-color: #EDF1F5',}\"\n                                                />\n                                            </kendo-grid>\n                                        </v-col>\n                                        <v-col cols=\"12\" class=\"py-0\">\n                                            <v-btn\n                                                color=\"primary\"\n                                                class=\"float-left btn_plus rounded-4 white--text mr-2\"\n                                                @click=\"addRow\"\n                                            >\n                                                <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                            </v-btn>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                            <v-row>\n                                                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                    <v-row>\n                                                        <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                            <label class=\"label  mb-0\">{{\n                                                                    $t(\"delivered_by\")\n                                                                }}</label>\n                                                            <v-select\n                                                                class=\"mt-1\"\n                                                                :items=\"deliveryAgencies\"\n                                                                :item-text=\"(item) =>item.cusSup ? `${item.cusSup.number} - ${item.cusSup.name}`: ''\"\n                                                                item-value=\"id\"\n                                                                :rules=\"[(v) => !!v || 'Delivered by is required',]\"\n                                                                v-model=\"receiptOrder.deliveredBy\"\n                                                                tage=\"Delivered by\"\n                                                                return-object\n                                                                outlined\n                                                            />\n\n                                                        </v-col>\n                                                        <v-col sm=\"3\" cols=\"10\" class=\"pb-0\">\n                                                            <label class=\"label mb-0\">{{ $t(\"time\") }}</label>\n                                                            <v-menu\n                                                                v-model=\"menu2\"\n                                                                class=\"mt-1\"\n                                                                :close-on-content-click=\"false\"\n                                                                :nudge-right=\"40\"\n                                                                ref=\"menu\"\n                                                                transition=\"scale-transition\"\n                                                                :return-value.sync=\"receiptOrder.timeOfDischarged\"\n                                                                max-width=\"340\"\n                                                            >\n                                                                <template v-slot:activator=\"{ on, attrs }\">\n                                                                    <v-text-field\n                                                                        class=\"mt-1\"\n                                                                        v-model=\"receiptOrder.timeOfDischarged\"\n                                                                        readonly\n                                                                        outlined\n                                                                        append-icon=\"mdi-clock-time-four-outline\"\n                                                                        v-on=\"on\"\n                                                                        v-bind=\"attrs\"\n                                                                        @click:clear=\"receiptOrder.timeOfDischarged = null\"\n                                                                        @click:append=\"menu2 = true\"\n                                                                        required\n                                                                    />\n                                                                </template>\n                                                                <v-time-picker\n                                                                    v-if=\"menu2\"\n                                                                    v-model=\"receiptOrder.timeOfDischarged\"\n                                                                    full-width\n                                                                    no-title\n                                                                    @click:minute=\"$refs.menu.save(receiptOrder.timeOfDischarged)\"\n                                                                ></v-time-picker>\n                                                            </v-menu>\n                                                        </v-col>\n                                                        <v-col sm=\"2\" cols=\"12\" class=\"pb-0\">\n                                                            <label class=\"label  mb-0\">{{\n                                                                    $t(\"vehicle_number\")\n                                                                }}</label>\n                                                            <v-text-field\n                                                                class=\"mt-1\"\n                                                                v-model=\"receiptOrder.vehicleNumber\"\n                                                                outlined\n                                                                tage=\"Vehicle Number\"\n                                                                required\n                                                            />\n                                                        </v-col>\n                                                        <v-col sm=\"3\" cols=\"12\" class=\"pb-0\">\n                                                            <label class=\"label  mb-0\">{{\n                                                                    $t(\"references\")\n                                                                }}</label>\n                                                            <v-text-field\n                                                                class=\"mt-1\"\n                                                                tage=\"Driver References\"\n                                                                v-model=\"receiptOrder.driverReferences\"\n                                                                return-object\n                                                                outlined\n                                                            />\n                                                        </v-col>\n                                                    </v-row>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n                                    <v-divider/>\n                                    <v-card outlined dense class=\"no_border function_footer\">\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn\n                                                    class=\"mr-2 text-capitalize  black--text float-left\"\n                                                    v-on=\"on\"\n                                                >\n                                                    {{ $t(\"select_template\") }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list>\n                                                <v-list-item\n                                                    v-for=\"(item, index) in templates\"\n                                                    :key=\"index\"\n                                                >\n                                                    <v-list-item-title>{{\n                                                            item.title\n                                                        }}\n                                                    </v-list-item-title>\n                                                </v-list-item>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn\n                                            @click=\"cancel\"\n                                            color=\"black\"\n                                            outlined\n                                            class=\"text-capitalize  black--text float-left\"\n                                        >{{ $t(\"cancel\") }}\n                                        </v-btn>\n                                        <!-- <v-menu>\n                                          <template v-slot:activator=\"{ on }\">\n                                            <v-btn\n                                              color=\"primary\"\n                                              class=\"ml-2 float-right text-capitalize  white--text\"\n                                              v-on=\"on\"\n                                            >\n                                              {{ $t(\"save_option\") }}\n                                              <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                            </v-btn>\n                                          </template>\n                                          <v-list rounded>\n                                            <v-list-item-group>\n                                              <v-list-item>\n                                                <v-list-item-content>\n                                                  <v-list-item-title>\n                                                    {{ $t(\"save_new\") }}\n                                                  </v-list-item-title>\n                                                </v-list-item-content>\n                                              </v-list-item>\n                                              <v-list-item>\n                                                <v-list-item-content>\n                                                  <v-list-item-title\n                                                    >{{ $t(\"save_print\") }}\n                                                  </v-list-item-title>\n                                                </v-list-item-content>\n                                              </v-list-item>\n                                            </v-list-item-group>\n                                          </v-list>\n                                        </v-menu> -->\n                                        <v-btn\n                                            @click=\"saveNew\"\n                                            color=\"primary\"\n                                            class=\"float-right white--text text-capitalize \"\n                                        >\n                                            {{ $t(\"save_new\") }}\n                                        </v-btn>\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                    <v-dialog v-model=\"dialogS\" max-width=\"700px\" eager persistent>\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{ $t(\"Serial\") }}</v-card-title>\n                                <v-icon @click=\"onCloseS\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content\">\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                        <kendo-datasource\n                                            ref=\"dataSource1\"\n                                            @change=\"dataSourceChangedS\"\n                                            :data=\"serials\"\n                                        />\n                                        <kendo-grid\n                                            id=\"gridS\"\n                                            class=\"grid-function\"\n                                            :data-source-ref=\"'dataSource1'\"\n                                            :sortable=\"false\"\n                                            :filterable=\"false\"\n                                            :column-menu=\"true\"\n                                            :editable=\"true\"\n                                            v-on:databound=\"dataBoundS\"\n                                            :scrollable-virtual=\"true\"\n                                        >\n                                            <kendo-grid-column\n                                                :title=\"$t('no.')\"\n                                                :width=\"55\"\n                                                :template=\"rowNumberS\"\n                                                :column-menu=\"false\"\n                                                :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5;',\n                                                    class: 'text-variants',\n                                                  }\"\n                                                :attributes=\"{ style: 'text-align: variants' }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'serialNumber1'\"\n                                                :title=\"$t('serial_number_1')\"\n                                                :width=\"150\"\n                                                :attribute=\"{class: 'k-state-disabled'}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5', }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'serialNumber2'\"\n                                                :title=\"$t('serial_number_2')\"\n                                                :width=\"150\"\n                                                :attributes=\"{ class: 'k-state-disabled isSerialNumber2'}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                        </kendo-grid>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                            <v-card-actions class=\"modal_footer\">\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                                        <v-btn\n                                            color=\"black\"\n                                            outlined\n                                            class=\" text-capitalize  black--text float-left\"\n                                            @click=\"onCloseS\"\n                                        >{{ $t(\"cancel\") }}\n                                        </v-btn>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                                        <v-btn\n                                            @click=\"addSerial\"\n                                            color=\"primary\"\n                                            class=\"px-3  white--text text-capitalize\"\n                                        >{{ $t(\"add\") }}\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                    <v-dialog v-model=\"dialog\" max-width=\"700px\" eager persistent>\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{ $t(\"batch\") }}</v-card-title>\n                                <v-icon @click=\"onCloseBatch\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content pa-4\">\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"4\" class=\"py-1\">\n                                                <label class=\"label\">{{ $t(\"on_hand\") }}</label>\n                                                <h3 class=\"text-bold d-block py-1\">{{ amtBatch }}</h3>\n                                            </v-col>\n                                            <v-col sm=\"4\" cols=\"4\" class=\"py-1\">\n                                                <label class=\"label\">{{ $t(\"qty_received\") }}</label>\n                                                <h3 class=\"text-bold d-block py-1\">{{ qtyReceived }}</h3>\n                                            </v-col>\n                                            <v-col sm=\"4\" cols=\"4\" class=\"py-1\">\n                                                <label class=\"label\">{{ $t(\"total\") }}</label>\n                                                <h3 class=\"text-bold d-block py-1\">{{ amtBatch - qtyReceived }}</h3>\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                                        <kendo-datasource\n                                            ref=\"dataSource2\"\n                                            @change=\"dataSourceChangedB\"\n                                            :data=\"batchs\"\n                                        />\n                                        <kendo-grid\n                                            id=\"gridBatch\"\n                                            class=\"grid-function\"\n                                            :data-source-ref=\"'dataSource2'\"\n                                            :sortable=\"false\"\n                                            :filterable=\"false\"\n                                            :column-menu=\"true\"\n                                            :editable=\"true\"\n                                            v-on:databound=\"dataBoundB\"\n                                            :scrollable-virtual=\"true\"\n                                        >\n                                            <kendo-grid-column\n                                                :command=\"{\n                                                        iconClass: 'k-icon k-i-trash',\n                                                        text: ' ',\n                                                        click: removeRowB,\n                                                        class: 'btn-plus',\n                                                      }\"\n                                                :title=\"'&nbsp;'\"\n                                                :width=\"50\"\n                                                :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                            />\n                                            <kendo-grid-column\n                                                :title=\"$t('no.')\"\n                                                :width=\"55\"\n                                                :template=\"rowNumberB\"\n                                                :column-menu=\"false\"\n                                                :headerAttributes=\"{\n                                                    style: 'background-color: #EDF1F5;',\n                                                    class: 'text-variants',\n                                                  }\"\n                                                :attributes=\"{ style: 'text-align: variants' }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'number'\"\n                                                :title=\"$t('number')\"\n                                                :width=\"150\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5', }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'expirationDate'\"\n                                                :title=\"$t('expiration_date')\"\n                                                :width=\"150\"\n                                                :template=\"ExpirationDateToTemplate\"\n                                                :editor=\"ExpirationDateToEditor\"\n                                                :attributes=\"{ class: 'k-state-disabled expirationDate'}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'qty'\"\n                                                :title=\"$t('qty')\"\n                                                :editor=\"numberEditorB\"\n                                                :width=\"100\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5', }\"\n                                            />\n                                        </kendo-grid>\n                                    </v-col>\n                                    <v-col cols=\"12\" class=\"py-0\">\n                                        <v-btn\n                                            v-if=\"totalBatch > 0\"\n                                            color=\"primary\"\n                                            class=\"float-left btn_plus rounded-4 white--text mr-2\"\n                                            @click=\"addRowB\"\n                                        >\n                                            <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                            <v-card-actions class=\"modal_footer\">\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-left\">\n                                        <v-btn\n                                            color=\"black\"\n                                            outlined\n                                            class=\" text-capitalize  black--text float-left\"\n                                            @click=\"onCloseBatch\"\n                                        >{{ $t(\"cancel\") }}\n                                        </v-btn>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"6\" class=\"py-0 text-right\">\n                                        <v-btn\n                                            color=\"primary\"\n                                            @click=\"onSaveBatch\"\n                                            class=\"px-3  white--text text-capitalize\"\n                                        >{{ $t(\"add\") }}\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n// import kendo from '@progress/kendo-ui'\nimport {i18n} from \"@/i18n\";\nimport LoadingMe from \"@/components/Loading\";\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\nimport ReceiptOrder from \"@/scripts/model/ReceiptOrder\";\nimport kendo from \"@progress/kendo-ui\";\nimport {DropDownList} from \"@progress/kendo-vue-dropdowns\";\n// import MonthOfPicker from \"@/components/kendo_templates/MonthOfPicker\";\nimport {ShowResource} from \"@/observable/store\";\nimport {uuid} from \"vue-uuid\";\nimport $ from \"jquery\";\nimport ItemLineModel from \"@/scripts/invoice/model/ItemLine\";\n\n// const transactionHandler = require(\"@/scripts/transactionHandler\");\n\n// const batchHandler = require(\"@/scripts/batchHandler\");\nconst warehouseHandler = require(\"@/scripts/warehouseHandler\");\n\nconst purchaseHandler = require(\"@/scripts/purchase/handler/billingHandler\");\nconst deliveryOrderHandler = require(\"@/scripts/deliveryOrderHandler\");\nconst receiptOrderHandler = require(\"@/scripts/receiptOrderHandler\");\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\");\nconst prefixHandler = require(\"@/scripts/prefixHandler\");\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst supplierHandler = require(\"@/scripts/supplierHandler\");\n// const settingsHandler = require(\"@/scripts/settingsHandler\");\n// const saleChannelHandler = require(\"@/scripts/saleChannelHandler\");\n// const locationHandler = require(\"@/scripts/locationHandler\");\n// const projectHandler = require(\"@/scripts/projectHandler\");\nconst uomPriceHandler = require(\"@/scripts/uomPriceHandler\");\nconst saleOrderHandler = require(\"@/scripts/transactionHandler\");\nconst receiptOrder = new ReceiptOrder({});\nconst keyField = \"id\";\nconst textField = \"name\";\nconst emptyItem = {[textField]: \"loading ...\"};\nconst itemLinePrefix = \"lin-\";\nexport default {\n    name: \"ReceiptOrder\",\n    components: {\n        LoadingMe: LoadingMe,\n        \"app-datepicker\": DatePickerComponent,\n        dropdownlist: DropDownList,\n        // \"app-monthpicker\": MonthOfPicker,\n    },\n    data: () => ({\n        menu2: false,\n        isEdit: false,\n        dialog: false,\n        // LoadingMe\n        showLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: \"\",\n        loadingTextAlert: \"\",\n        bill_date: \"\",\n        alert: false,\n        deposite: 1000,\n        files: [],\n        // Form validation\n        valid: true,\n\n        templates: [\n            {title: \"Draft\"},\n            {title: \"Open\"},\n            {title: \"Partially Closed\"},\n            {title: \"Closed\"},\n        ],\n        col_expand: 9,\n        col_hide: 3,\n        isHideBar: false,\n\n        serials: [],\n        batchs: [],\n        warehouses: [],\n        receiptOrder: receiptOrder,\n        deliveryAgencies: [],\n\n        itemBatch: {},\n        uomBatch: {},\n        amtBatch: 0,\n        qtyReceived: 0,\n        totalBatch: 0,\n        showLoadingTxn: false,\n        purchaseOrders: [],\n        purchaseOrder: {},\n        poItemLine: [],\n        supplierList: [],\n        dataItemKey: \"id\",\n        textField: \"name\",\n        defaultItem: {[textField]: \"Select supplier...\", [keyField]: null},\n        supplierBaseUrl: supplierHandler.url(),\n        filter: \"\",\n        itemLines: [],\n        itemLinesS: [],\n        itemLinesBatch: [],\n        isClose: true,\n        dialogS: false,\n        hideS: true,\n        transactionTypes: []\n    }),\n    computed: {},\n    beforeRouteLeave(to, from, next) {\n        if (this.isClose) {\n            this.$swal({\n                title: i18n.t(\"msg_title_warning\"),\n                text: i18n.t(\"msg_discard\"),\n                icon: \"warning\",\n                showCancelButton: true,\n                cancelButtonText: i18n.t(\"cancel\"),\n                confirmButtonColor: \"#4d4848\",\n                cancelButtonColor: \"#ED1A3A\",\n                confirmButtonText: i18n.t(\"discard\"),\n            }).then((resultCen) => {\n                window.console.log(resultCen);\n                if (resultCen.value) {\n                    this.receiptOrder = receiptOrder;\n                    next()\n                }\n            });\n        } else {\n            next()\n        }\n    },\n    methods: {\n        dataBoundS: function (e) {\n            const grid = kendo.jQuery(\"#gridS\").data(\"kendoGrid\")\n            const items = e.sender.items();\n            items.each(function () {\n                let dataItem = grid.dataItem(this);\n                kendo\n                    .jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\")\n                    .find(\".isSerialNumber2\")\n                    .each(function () {\n                        if (dataItem.batchOrSerial === 2) {\n                            kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                        }\n                    });\n            });\n        },\n        addSerial() {\n            this.getDataSourceS()\n            window.console.log(this.itemLinesS, 'itemline s')\n        },\n        async getDataSourceS() {\n            let ds = this.$refs.dataSource1.kendoWidget();\n            let dataRow = ds.data();\n            const s = dataRow.filter(i => i.serialNumber1 === '')\n            if (s.length > 0) {\n                this.$snotify.error('Please check your serial number')\n                return\n            }\n            if (dataRow.length > 0) {\n                const instituteId = this.$store.state.institute.institute.id\n                receiptOrderHandler.getBatch(dataRow[0].item.id, this.receiptOrder.warehouse.id, instituteId, 'serial').then(res => {\n                    if (res.length > 0) {\n                        dataRow.forEach((i) => {\n                            if (i.serialNumber1 !== '') {\n                                const r = res.filter(p => p.serialNumber1 === i.serialNumber1)\n                                this.itemLinesS.push({\n                                    id: r.length > 0 ? r[0].linId : i.id,\n                                    item: i.item,\n                                    whId: this.receiptOrder.warehouse.id,\n                                    serialNumber1: i.serialNumber1,\n                                    serialNumber2: i.serialNumber2,\n                                    type: 'serial',\n                                    uom: i.uom,\n                                    createdAt: r.length > 0 ? r[0].createdAt : '',\n                                    status: i.status,\n                                    pk: r.length > 0 ? r[0].id : ''\n                                });\n                            }\n                        });\n                    } else {\n                        dataRow.forEach((i) => {\n                            if (i.serialNumber1 !== '') {\n                                this.itemLinesS.push({\n                                    id: i.id,\n                                    item: i.item,\n                                    uom: i.uom,\n                                    whId: this.receiptOrder.warehouse.id,\n                                    serialNumber1: i.serialNumber1,\n                                    serialNumber2: i.serialNumber2,\n                                    type: 'serial',\n                                    createdAt: '',\n                                    status: i.status,\n                                    pk: ''\n                                });\n                            }\n                        })\n                    }\n                })\n            }\n            this.onCloseS()\n        },\n        onChangePO(item) {\n            window.console.log(item, 'onchangePO')\n            this.receiptOrder.itemLines = []\n            this.purchaseOrder.itemLines.forEach(p => {\n                this.receiptOrder.itemLines.push({\n                    ...p,\n                    qtyReceived: p.qty - p.totalReceived,\n                    source: 'purchase order'\n                })\n            })\n            window.console.log(this.receiptOrder.itemLines, 'itemline')\n        },\n        async loadPurchaseOrders() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    let supplierId = \"\",\n                        whId = \"\",\n                        txnDate = \"\"\n                    if (this.receiptOrder.supplier) {\n                        supplierId = this.receiptOrder.supplier.id;\n                    }\n                    if (this.receiptOrder.warehouse) {\n                        whId = this.receiptOrder.warehouse.id\n                    }\n                    if (this.receiptOrder.date) {\n                        txnDate = this.receiptOrder.date;\n                    }\n                    let strFilter = \"\";\n                    if (supplierId !== \"\" && txnDate !== \"\" && whId !== \"\") {\n                        strFilter = \"?id=\" + supplierId + \"&whId=\" + whId + '&wType=RO&type=Purchase Order'\n                    }\n                    if (strFilter !== \"\") {\n                        this.showLoadingTxn = true\n                        saleOrderHandler\n                            .transactionFilter(strFilter)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoadingTxn = false\n                                    this.showLoading = false;\n                                    this.purchaseOrders = res.data.data;\n                                } else {\n                                    this.showLoadingTxn = false\n                                }\n                            })\n                    }\n                }, 10);\n            });\n        },\n        onCloseS() {\n            this.dialogS = false\n            this.serials = []\n        },\n        rowNumberS(dataItem) {\n            let ds = this.$refs.dataSource1.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        addRowSerial(item, uom, qty) {\n            for (let i = 0; i < qty; i++) {\n                let data = {\n                    id: itemLinePrefix + uuid.v1(),\n                    item: item,\n                    uom: uom,\n                    serialNumber1: '',\n                    serialNumber2: '',\n                    whId: this.receiptOrder.warehouse.id,\n                    status: 1\n                };\n                let ds = this.$refs.dataSource1.kendoWidget(),\n                    total = ds.total();\n                ds.insert(total, data);\n            }\n        },\n        dataSourceChangedS(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n                window.console.log(e, \"data source change\");\n                switch (e.field) {\n                    case \"serialNumber1\":\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".isSerialNumber2\")\n                            .each(function () {\n                                if (dataRow.item.isSerialNumber1 !== '') {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                }\n                            });\n                }\n            }\n        },\n        recordSerial(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\")\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"))\n            if (dataItem.item.batchOrSerial == 2 && dataItem.qtyReceived > 0) {\n                if (this.itemLinesS.length > 0) {\n                    const s = this.itemLinesS.filter(p => p.item.id === dataItem.item.id)\n                    if (s.length === 0) {\n                        this.addRowSerial(dataItem.item, dataItem.uom, dataItem.qtyReceived)\n                    } else if (s.length < dataItem.qtyReceived) {\n                        this.serials = s\n                        this.addRowSerial(dataItem.item, dataItem.uom, dataItem.qtyReceived - s.length)\n                    } else {\n                        this.serials = s\n                    }\n                } else {\n                    this.addRowSerial(dataItem.item, dataItem.uom, dataItem.qtyReceived)\n                }\n                this.dialogS = true\n            }\n        },\n        dataBoundB: function (e) {\n            const grid = kendo.jQuery(\"#gridBatch\").data(\"kendoGrid\")\n            const items = e.sender.items();\n            items.each(function () {\n                let dataItem = grid.dataItem(this);\n                kendo\n                    .jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\")\n                    .find(\".expirationDate\")\n                    .each(function () {\n                        if (dataItem.number !== '') {\n                            kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                        }\n                    });\n            });\n        },\n        onSaveBatch() {\n            if ((this.amtBatch - this.qtyReceived) > 0) {\n                this.$snotify.error('Please check your Qty')\n                return\n            }\n            this.getDataSourceB()\n            window.console.log(this.itemLinesBatch, 'itemline b')\n        },\n        onCloseBatch() {\n            this.dialog = false\n            this.batchs = []\n        },\n        async getDataSourceB() {\n            let ds = this.$refs.dataSource2.kendoWidget();\n            let dataRow = ds.data();\n            if (dataRow.length > 0) {\n                const instituteId = this.$store.state.institute.institute.id\n                receiptOrderHandler.getBatch(dataRow[0].item.id, this.receiptOrder.warehouse.id, instituteId, 'batch').then(res => {\n                    if (res.length > 0) {\n                        dataRow.forEach((i) => {\n                            if (i.qty > 0) {\n                                const r = res.filter(p => p.number === i.number)\n                                this.itemLinesBatch.push({\n                                    id: r.length > 0 ? r[0].linId : i.id,\n                                    item: i.item,\n                                    uom: i.uom,\n                                    number: i.number,\n                                    whId: this.receiptOrder.warehouse.id,\n                                    expirationDate: i.expirationDate,\n                                    qty: r.length > 0 ? r[0].qty + i.qty : i.qty,\n                                    DQty: r.length > 0 ? r[0].DQty : 0,\n                                    type: 'batch',\n                                    status: i.status,\n                                    createdAt: r.length > 0 ? r[0].createdAt : '',\n                                    pk: r.length > 0 ? r[0].id : ''\n                                });\n                            }\n                        });\n                    } else {\n                        dataRow.forEach((i) => {\n                            if (i.qty > 0) {\n                                this.itemLinesBatch.push({\n                                    id: i.id,\n                                    item: i.item,\n                                    uom: i.uom,\n                                    number: i.number,\n                                    whId: this.receiptOrder.warehouse.id,\n                                    expirationDate: i.expirationDate,\n                                    qty: i.qty,\n                                    DQty: 0,\n                                    type: 'batch',\n                                    status: i.status,\n                                    pk: ''\n                                });\n                            }\n                        })\n                    }\n                })\n            }\n            this.onCloseBatch()\n        },\n        removeRowB(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridBatch\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n                this.calcuateBatch()\n            }\n        },\n        rowNumberB(dataItem) {\n            let ds = this.$refs.dataSource2.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        async calcuateBatch() {\n            let ds = this.$refs.dataSource2.kendoWidget();\n            let dataRow = ds.data();\n            let amount = 0\n            dataRow.forEach((i) => {\n                amount += i.qty\n            });\n            this.qtyReceived = amount\n            this.totalBatch = this.amtBatch - amount\n        },\n        numberEditorB(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    decimals: 30,\n                    min: 0,\n                    max: this.totalBatch\n                });\n        },\n        dataSourceChangedB(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n                window.console.log(e, \"data source change\");\n                switch (e.field) {\n                    case \"number\":\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".expirationDate\")\n                            .each(function () {\n                                if (dataRow.number !== '') {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                }\n                            });\n                        if (dataRow.qty > 0) {\n                            this.calcuateBatch()\n                        }\n                        break;\n                    case \"expirationDate\":\n                        if (dataRow.qty > 0) {\n                            this.calcuateBatch()\n                        }\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".expirationDate\")\n                            .each(function () {\n                                if (dataRow.number !== '') {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                }\n                            });\n                        break;\n                    case \"qty\":\n                        this.calcuateBatch()\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".expirationDate\")\n                            .each(function () {\n                                if (dataRow.number !== '') {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                }\n                            });\n                        break;\n\n                }\n            }\n        },\n        addRowB() {\n            let data = {\n                id: itemLinePrefix + uuid.v1(),\n                item: this.itemBatch,\n                uom: this.uomBatch,\n                number: '',\n                expirationDate: '',\n                whId: this.receiptOrder.warehouse.id,\n                qty: 0,\n                status: 1\n            };\n            let ds = this.$refs.dataSource2.kendoWidget(),\n                total = ds.total();\n            ds.insert(total, data);\n        },\n        recordBatch(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\")\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"))\n            this.itemBatch = dataItem.item\n            this.uomBatch = dataItem.uom\n            if (dataItem.item.batchOrSerial == 1 && dataItem.qtyReceived > 0) {\n                this.amtBatch = dataItem.qtyReceived;\n                if (this.itemLinesBatch.length > 0) {\n                    let amount = 0\n                    this.batchs = this.itemLinesBatch.filter(p => p.item.id === dataItem.item.id)\n                    this.batchs.forEach(p => {\n                        amount += p.qty\n                    })\n                    this.totalBatch = this.amtBatch - amount || 0\n                } else {\n                    this.addRowB()\n                    this.totalBatch = dataItem.qtyReceived;\n                }\n                this.dialog = true\n            }\n        },\n        async onloadDeliveryAgency() {\n            await deliveryOrderHandler.getAllAgency().then((res) => {\n                this.deliveryAgencies = res;\n            });\n        },\n        numberEditor(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    decimals: 30,\n                    min: 0,\n                    max: options.model.source === 'purchase order' ? (options.model.qty - options.model.totalReceived) : 2 ^ 100000000\n                });\n        },\n        headerTemplate() {\n            return `<input type='checkbox' id='header-chb' class='k-checkbox header-checkbox'>`;\n        },\n        Help(key) {\n            ShowResource(key);\n        },\n        dataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n                window.console.log(e, \"data source change\");\n                switch (e.field) {\n                    case \"item\":\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".isSerialNumber\")\n                            .each(function () {\n                                if (dataRow.item.batchOrSerial == 2) {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                } else {\n                                    kendo.jQuery(this).addClass(\"k-state-disabled\");\n                                }\n                            });\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".isBatch\")\n                            .each(function () {\n                                if (dataRow.item.batchOrSerial === 1) {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                } else {\n                                    kendo.jQuery(this).addClass(\"k-state-disabled\");\n                                }\n                            });\n                        kendo\n                            .jQuery(\"tr[data-uid='\" + dataRow.uid + \"']\")\n                            .find(\".isUOM\")\n                            .each(function () {\n                                if (dataRow.source === '') {\n                                    kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                                } else {\n                                    kendo.jQuery(this).addClass(\"k-state-disabled\");\n                                }\n                            });\n                        break;\n                    case \"qty\":\n                        break;\n                }\n            }\n        },\n        ExpirationDateToTemplate(dataItem) {\n            const expirationDate = dataItem.expirationDate;\n            if (expirationDate) {\n                return `<span>${\n                    expirationDate\n                        ? kendo.toString(new Date(expirationDate), `dd-MM-yyyy`)\n                        : ``\n                }</span>`;\n            } else {\n                return ``;\n            }\n        },\n        dataBound: function (e) {\n            const grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\")\n            const items = e.sender.items();\n            items.each(function () {\n                let dataItem = grid.dataItem(this);\n                kendo\n                    .jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\")\n                    .find(\".isSerialNumber\")\n                    .each(function () {\n                        if (dataItem.item.batchOrSerial == 2) {\n                            kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                        } else {\n                            kendo.jQuery(this).addClass(\"k-state-disabled\");\n                        }\n                    });\n                kendo\n                    .jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\")\n                    .find(\".isBatch\")\n                    .each(function () {\n                        if (dataItem.item.batchOrSerial == 1) {\n                            kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                        } else {\n                            kendo.jQuery(this).addClass(\"k-state-disabled\");\n                        }\n                    });\n                kendo\n                    .jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\")\n                    .find(\".isUOM\")\n                    .each(function () {\n                        if (dataItem.source === '') {\n                            kendo.jQuery(this).removeClass(\"k-state-disabled\");\n                        } else {\n                            kendo.jQuery(this).addClass(\"k-state-disabled\");\n                        }\n                    });\n            });\n        },\n        addRow() {\n            let data = {\n                id: itemLinePrefix + uuid.v1(),\n                item: {name: \"\"},\n                description: '',\n                qty: 0,\n                uom: {},\n                totalReceived: 0,\n                qtyReceived: 0,\n                source: ''\n            };\n            let ds = this.$refs.dataSource.kendoWidget(),\n                total = ds.total();\n            ds.insert(total, data);\n            this.qtyAdd = 0;\n        },\n        ExpirationDateToEditor(container, options) {\n            kendo\n                .jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDatePicker();\n        },\n        ItemDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Items </span>\" +\n                        \"<span></span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: productVariantHandler.itemSearchURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data.filter(p => p.type === 'Variant')\n                            },\n                            total: function (response) {\n                                return response.data.filter(p => p.type === 'Variant').length;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        UOMDropDownEditor(container, options) {\n            if (options.model.source === '') {\n                kendo\n                    .jQuery('<input name=\"' + options.field + '\"/>')\n                    .appendTo(container)\n                    .kendoDropDownList({\n                        autoBind: true,\n                        autoWidth: true,\n                        height: 400,\n                        filter: \"startswith\",\n                        dataTextField: \"uom.name\",\n                        dataValueField: \"uom.id\",\n                        cascadeFrom: \"item\",\n                        template: \"<span>#=uom.name#</span>\",\n                        optionLabel: \"--- Select ---\",\n                        dataSource: new kendo.data.DataSource({\n                            serverFiltering: true,\n                            transport: {\n                                read: {\n                                    url: uomPriceHandler.uomPriceByPriceLevelURL(\n                                        \"id=\" +\n                                        options.model.item.id +\n                                        \"&plId=\" +\n                                        this.receiptOrder.priceLevel.id +\n                                        \"&date=\" +\n                                        this.receiptOrder.date\n                                    ),\n                                },\n                                dataType: \"json\",\n                            },\n                            schema: {\n                                model: {\n                                    id: \"id\",\n                                    fields: {\n                                        id: {type: \"string\"},\n                                        // name: {type: \"string\"},\n                                        // sku: {type: \"string\"},\n                                    },\n                                },\n                                data: function (response) {\n                                    return response.data;\n                                },\n                                total: function (response) {\n                                    return response.data.count;\n                                },\n                            },\n                            // data: this.variants\n                        }),\n                    });\n            } else {\n                return false\n            }\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.uom;\n            if (uom) {\n                return `<span>${uom.uom ? uom.uom.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#grid\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem(kendo.jQuery(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        rowNumber(dataItem) {\n            let ds = this.$refs.dataSource.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        async onloadWarehouse() {\n            await warehouseHandler.getWarehouseSettingAll().then(async (res) => {\n                this.warehouses = res;\n                if (this.warehouses.length > 0) {\n                    this.receiptOrder.warehouse = this.warehouses[0];\n                }\n            });\n        },\n        async onChangeWarehouse() {\n            // await this.loadZone(receiptOrder.warehouse.id)\n        },\n        async onChange(event) {\n            const value = event.value;\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.showLoading = true;\n            window.console.log(value);\n            this.receiptOrder.supplier = value;\n            this.receiptOrder.priceLevel = value.priceLevel;\n            await this.loadPurchaseOrders()\n            // await this.onloadPurchase(value.id);\n        },\n        async onloadPurchase(id) {\n            await purchaseHandler.byCustomer(id).then((res) => {\n                window.console.log(res, \"list purchase by customer\");\n            });\n            this.showLoading = false;\n        },\n        onFilterChange(event) {\n            const filter = event.filter.value;\n            this.requestData(0, filter, this.supplierBaseUrl);\n            this.filter = filter;\n        },\n        requestData(skip, filter, baseUrl) {\n            const url = baseUrl + `/${filter}`;\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    // window.console.log(response.json())\n                    return response.json();\n                })\n                .then(this.afterFetch);\n        },\n        afterFetch(json) {\n            this.supplierList = json.data;\n        },\n        async loadPrefix() {\n            this.showLoading = true;\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"receipt order\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            // this.showLoading = false\n                            this.transactionTypes = res.data.data;\n                            if (this.transactionTypes.length > 0) {\n                                this.receiptOrder.transactionType = this.transactionTypes[0];\n                                if (this.$route.params.id === undefined) {\n                                    this.generateNumber();\n                                }\n                            }\n                        }\n                    });\n                }, 300);\n            });\n            // await this.onloadBatch();\n            await this.onloadWarehouse();\n            // await this.loadSaleChannel();\n            // await this.loadLocation();\n            await this.onloadDeliveryAgency();\n            // await this.loadProjects()\n            // await this.loadSegment()\n            // await this.loadZone(this.warehouses[0].id)\n            this.showLoading = false;\n        },\n        generateNumber() {\n            let data = {\n                abbr: this.receiptOrder.transactionType.abbr,\n                structure: this.receiptOrder.transactionType.structure,\n                transactionDate: this.receiptOrder.date,\n                sequcencing: this.receiptOrder.transactionType.sequcencing,\n                type: \"Receipt Order\",\n                entity: 3,\n            };\n            this.receiptOrder.abbr = data.abbr;\n            this.receiptOrder.structure = data.structure;\n            this.receiptOrder.sequcencing = data.sequcencing;\n            this.receiptOrder.type = data.type;\n            this.receiptOrder.transactionDate = data.transactionDate;\n            billingHandler\n                .lastNumber(data)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        const res = response.data.data;\n                        const lastNumber = this.zeroPad(\n                            parseInt(res.lastNumber),\n                            this.receiptOrder.transactionType.format\n                        );\n                        this.receiptOrder.number =\n                            res.suffix +\n                            this.receiptOrder.transactionType.numberSeparator +\n                            lastNumber;\n                        this.receiptOrder.lastNumber = res.suffix + lastNumber;\n                        window.console.log(this.receiptOrder.number, \"bom\");\n                    }\n                })\n                .catch((e) => {\n                    this.errors.push(e);\n                });\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        suffix(transactionDate) {\n            return kendo.toString(new Date(transactionDate), `yymm`);\n        },\n        savePrint() {\n        },\n        async getDataSource() {\n            let ds = this.$refs.dataSource.kendoWidget();\n            let dataRow = ds.data();\n            this.itemLines = [];\n            dataRow.forEach((i) => {\n                if (i.qtyReceived > 0 && i.source === 'purchase order') {\n                    const line = i\n                    line.totalReceived = i.qtyReceived\n                    this.poItemLine.push({\n                        item: i.item,\n                        transactionType: this.purchaseOrder.transactionType,\n                        uom: i.uom,\n                        id: i.id,\n                        number: this.purchaseOrder.number,\n                        data: i.item.id,\n                        qty: i.qty,\n                        line: new ItemLineModel(line),\n                        deleted: 0,\n                        price: 0,\n                        type: 'Purchase Order',\n                        customer: {},\n                        status: i.status,\n                        createdAt: i.createdAt\n                    })\n                }\n                this.itemLines.push({\n                    id: i.id,\n                    item: i.item,\n                    qty: i.qty,\n                    description: i.description,\n                    uom: i.uom,\n                    totalReceived: i.totalReceived,\n                    qtyReceived: i.qtyReceived,\n                });\n            });\n        },\n        async saveNew() {\n            this.showLoading = true;\n            await this.getDataSource();\n            window.console.log(this.poItemLine, this.purchaseOrder.id, 'poItemLine')\n            if (this.poItemLine.length > 0) {\n                await warehouseHandler.addItemLine(this.purchaseOrder.id, this.poItemLine).then(res => {\n                    if (res.data.statusCode !== 200) {\n                        this.$snotify.error('Error Update ItemLine!!!')\n                    }\n                })\n            }\n            this.receiptOrder.purchaseOrderId = this.purchaseOrder ? this.purchaseOrder.id : ''\n            this.receiptOrder.purchaseOrderRef = this.purchaseOrder ? this.purchaseOrder.referenceNo : ''\n            this.receiptOrder.itemLines = this.itemLines;\n            this.receiptOrder.itemLinesSerial = this.itemLinesS\n            this.receiptOrder.itemLinesBatch = this.itemLinesBatch\n            this.receiptOrder.transactionDate = this.receiptOrder.date;\n            receiptOrderHandler.save(this.receiptOrder).then((res) => {\n                window.console.log(res);\n                this.isClose = false\n                this.cancel();\n                this.showLoading = false;\n            });\n        },\n        saveClose() {\n        },\n        errorMessage() {\n        },\n        accountDropDownEditor() {\n        },\n        cancel() {\n            this.itemLines = []\n            this.poItemLine = []\n            this.itemLinesS = []\n            this.itemLinesBatch = []\n            this.batchs = []\n            this.serials = []\n            this.purchaseOrders = []\n            this.purchaseOrder = {}\n            this.itemBatch = {}\n            this.receiptOrder = receiptOrder\n            this.$router.go(-1);\n        },\n        hide_smallsitebar() {\n            if (!this.isHideBar) {\n                // this.col_expand = 12\n                // this.col_hide = 0\n                this.isHideBar = true;\n            } else {\n                // this.col_expand = 9\n                // this.col_hide = 3\n                this.isHideBar = false;\n            }\n        },\n    },\n    watch: {\n        // call again the method if the route changes\n    },\n    created() {\n        // fetch the data when the view is created and the data is\n        // already being observed\n        // this.loadObj()\n    },\n    async mounted() {\n        this.requestData(0, \"\", supplierHandler.url());\n        this.addRow();\n        await this.loadPrefix();\n    },\n};\n</script>\n\n<style scoped>\n.k-dropdown {\n    width: 100%;\n    margin-top: 3px;\n}\n\n.function_wrapper {\n    box-shadow: none !important;\n}\n\n.v-application--is-ltr .v-text-field .v-input__append-inner {\n    margin-top: 0 !important;\n}\n\n.v-input__slot {\n    background-color: #fff !important;\n}\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n.border_radius10 {\n    border-radius: 10px !important;\n    background-color: #f2f2f2;\n}\n\n.pa-3.v-card h4 {\n    font-size: 18px;\n    color: #333;\n}\n\n.pa-3.v-card p {\n    font-size: 12px;\n    color: #b5b5b5;\n}\n\n.custom_grid table th:last-child {\n    text-align: right !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1080px !important;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n.hide_small_bar_class {\n    max-width: 0;\n    transition: 0.5s ease-in;\n    flex: 0 0 0;\n}\n\n.hide_big_bar_class {\n    max-width: 100%;\n    transition: 0.5s ease-in;\n    flex: 0 0 100%;\n}\n\n.info_add {\n    background-color: #ffffff;\n}\n\n.small_sidebar {\n    height: 96%;\n    position: relative;\n    padding: 12px;\n    background-color: #edf1f5;\n}\n\n.iconArrow {\n    right: -35px;\n    position: absolute;\n    bottom: -10px;\n}\n\n.iconArrowHide {\n    position: absolute;\n    right: -7px;\n    bottom: -10px;\n}\n\n.color_grey {\n    color: #808080;\n}\n\n.card_green {\n    min-height: 70px;\n    background-color: #00b050 !important;\n    color: #ffffff;\n}\n\n.lb_bold {\n    font-size: 12px;\n}\n\n.detial_smallside_p {\n    position: absolute;\n    bottom: 10px;\n}\n\n.card_background {\n    background-color: #edf1f5;\n    min-height: 120px;\n}\n\n.deposite_input {\n    width: 100px;\n}\n\n.btn_save_draft {\n    color: #ffffff;\n    background-color: #00b0f0 !important;\n    text-transform: capitalize;\n}\n\n.save_option {\n    background-color: #203864 !important;\n}\n\n.btn_add_small {\n    height: 27px !important;\n    min-width: 25px !important;\n    font-size: 10px;\n    padding: 0 22px !important;\n    background-color: #00b050 !important;\n    color: #ffffff;\n    border-radius: 0 !important;\n}\n\n.list_site_inv {\n    background-color: #92d050;\n    color: #ffffff;\n    font-size: 12px;\n}\n\n.list_site_exp {\n    background-color: #c5e0b4;\n    color: #000000;\n    font-size: 12px;\n    line-height: 16px;\n    min-height: 40px;\n}\n\n.checkbox_inv {\n    padding: 2px;\n    margin-top: 3px;\n    margin-right: 2px;\n}\n\n.exp_select {\n    font-size: 12px !important;\n}\n\n.v-data-table__wrapper td {\n    border-bottom: 1px solid #808080;\n    border-top: 1px solid #808080;\n}\n</style>\n"]}]}