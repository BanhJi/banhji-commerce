{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Input.vue","mtime":1640595536837},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Input.vue","sourceRoot":"src/views/payroll/payroll_run","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row style=\"margin-bottom: -40px;\">\n                <v-col sm=\"3\">\n                    <label class=\"label\">{{$t('for_the_month_of')}}</label>\n                    <month-picker :initialMonth=\"monthOf\" @emitMonth=\"monthOf = $event\" @onChanged=\"monthOfChange\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <v-row class=\"my-3 mr-0\" style=\"padding-top: 12px;\">\n                        <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                            <div class=\"code_text text-bold\">{{prefix.abbr}}</div>\n                        </v-col>\n                        <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                            <v-text-field class=\" custom-border \"\n                                v-model=\"number\"\n                                outlined\n                                :rules=\"[v => !!v || 'Number is required']\"\n                                required\n                                readonly/>\n                        </v-col>\n                        <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                            <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                @click=\"generateNumber\">mdi-qrcode\n                            </v-icon>\n                        </v-col>\n                    </v-row>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label class=\"label\">{{$t('Date')}}</label>\n                    <date-picker :initialDate=\"date\" @emitDate=\"date = $event\"/>\n                </v-col>\n                <v-col sm=\"3\" style=\"text-align: center;\">\n                    <p>{{$t('approved_exch_rate_month')}}</p>\n                    <h2 class=\"primary--text\">{{numberFormat(exchangeRate)}}</h2>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col sm=\"3\">\n                    <label>{{$t('employee_group')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :items=\"employeeGroups\"\n                        :item-text=\"item =>`${item.groupCode} - ${item.groupName}`\"\n                        item-value=\"id\"\n                        :disabled=\"disabledG\"\n                        v-model=\"employeeGroup\"\n                        @change=\"employeeGroupChange\"\n                        clearable\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('business_unit_branch')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabledL\"\n                        :items=\"location\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"locationSelected\"\n                        @change=\"locationChange\"\n                        tage=\"Business Unit/Branch\"\n                        return-object\n                        clearable/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('department')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabled\"\n                        :loading=\"loading\"\n                        :items=\"departments\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"department\"\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n                <v-col sm=\"3\">\n                    <label>{{$t('nature_of_the_contract')}}</label>\n                    <v-select class=\"mt-1\"\n                        outlined\n                        :disabled=\"disabled\"\n                        :items=\"natureContracts\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"natureContract\"\n                        tage=\"Business Unit/Branch\"/>\n                </v-col>\n            </v-row>\n            <v-row>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-select class=\"mt-1\"\n                        id=\"acc_type_selector\"\n                        :items=\"natureInput\"\n                        item-text=\"name\"\n                        item-value=\"id\"\n                        v-model=\"natureInputSelected\"\n                        @change=\"ChangeNature\"\n                        outlined\n                        clearable/>\n                </v-col>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-dialog v-model=\"dialogm\" max-width=\"1080px\">\n                        <template v-slot:activator=\"{ on }\">\n                            <!-- <v-card-text :class=\"{'setCardHeight': setCardHeight,'setCardHeightOther': !setCardHeight}\"> -->\n                                <!-- <div v-if=\"natureInputSelected === 'Timecard'\" > -->\n                                    <v-btn :disabled=\"btnEnabled\"  color=\"primary\" style=\"width: 100%;\" class=\"float-right text-capitalize\" v-on=\"on\">\n                                        {{$t('import_timecard')}}\n                                    </v-btn>\n                                <!-- </div> -->\n                            <!-- </v-card-text> -->\n                        </template>\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{$t('import_data')}}</v-card-title>\n                                <v-icon  @click=\"dialogm = false\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content\">\n                                <v-row>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-2\">{{$t('location')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                    <v-select class=\"mt-1\"\n                                        outlined\n                                        :items=\"location\"\n                                        item-text=\"name\"\n                                        item-value=\"id\"\n                                        v-model=\"locationSelected\"\n                                        tage=\"Business Unit/Branch\"\n                                        return-object/>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-2\">{{$t('segment')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                        <v-select class=\"mt-1\"\n                                        id=\"acc_type_selector\"\n                                        :items=\"segment\"\n                                        item-text=\"name\"\n                                        item-value=\"id\"\n                                        v-model=\"segmentSelected\"\n                                        outlined\n                                        return-object/>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pr-2 pt-2\">\n                                        <label class=\"label mt-3\">{{$t('month_of')}}</label>\n                                    </v-col>\n                                    <v-col sm=\"2\" class=\"pl-0\">\n                                        <month-picker :initialMonth=\"monthOf\" @emitMonth=\"monthOf = $event\"/>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <p>Download file format for import</p>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <v-btn color=\"secondary\" class=\" white--text float-right text-capitalize mr-5\" @click=\"downloadTimeCard\">\n                                            {{$t('file_format')}}\n                                        </v-btn>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <p>Or start importing if you are ready</p>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <upload-excel-component :on-success=\"handleSuccess\" :before-upload=\"beforeUpload\" />\n                                        </v-col>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col cols=\"12\">\n                                        <kendo-datasource ref=\"dataSourceInput\"\n                                            :data=\"tableData\"/>\n                                        <kendo-grid id=\"gridTimecard\" class=\"grid-function\"\n                                            :data-source-ref=\"'dataSourceInput'\"\n                                            :editable=\"false\"\n                                            :scrollable-virtual=\"true\">\n                                            <kendo-grid-column\n                                                :field=\"'date'\"\n                                                :title=\"$t('date')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(date),`yyyy-MM-dd`)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'employeeId'\"\n                                                :title=\"$t('employee_id')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= employeeId#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'employeeName'\"\n                                                :title=\"$t('employee_name')\"\n                                                :width=\"120\"\n                                                :template=\"'<span>#= employeeName#</span>'\"\n                                                readonly\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'timeTable'\"\n                                                :title=\"$t('time_table')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= timeTable#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'clockedIn'\"\n                                                :title=\"$t('clocked_in')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(clockedIn), timeFormat)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'clockedOut'\"\n                                                :title=\"$t('clocked_out')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= kendo.toString(new Date(clockedOut), timeFormat)#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeWeekend'\"\n                                                :title=\"$t('over_time_weekend')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeWeekend#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeHoliday'\"\n                                                :title=\"$t('over_time_holiday')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeHoliday#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'overTimeNight'\"\n                                                :title=\"$t('over_time_night')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= overTimeNight#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                            <kendo-grid-column\n                                                :field=\"'work_time'\"\n                                                :title=\"$t('work_time')\"\n                                                :width=\"120\"\n                                                readonly\n                                                :template=\"'<span>#= workTime ? workTime: 0#</span>'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                                        </kendo-grid>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                            <v-card-actions class=\"modal_footer\">\n                                <v-btn class=\"btn_cancel\" @click=\"dialogm = false\">{{$t('cancel')}}</v-btn>\n                                <v-btn color=\"primary\" class=\"white--text capitalize\" @click=\"onSaveClose\">\n                                    {{$t('confirm_report')}}\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-col>\n                <v-col sm=\"3\" cols=\"12\">\n                    <v-btn style=\"width: 100%;\" color=\"primary\" @click=\"search()\" class=\" white--text float-right text-capitalize\">\n                        {{$t('search')}}\n                    </v-btn>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\">\n            <kendo-datasource ref=\"dataSourceTimeCard\"\n                :data=\"timeCardLine\"\n                :sort=\"sort\"/>\n            <kendo-grid id=\"gridInput\" class=\"grid-function\"\n                :data-source-ref=\"'dataSourceTimeCard'\"\n                :editable=\"false\"\n                :scrollable-virtual=\"true\"\n                :column-menu=\"false\">\n                <kendo-grid-column\n                    :field=\"'employeeId'\"\n                    :title=\"$t('employee_id')\"\n                    :template=\"'<span>#= employeeId#</span>'\"\n                    readonly\n                    :width=\"150\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'employeeName'\"\n                    :title=\"$t('employee_name')\"\n                    readonly\n                    :width=\"200\"\n                    :template=\"'<span>#= employeeName#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'workDay'\"\n                    :title=\"$t('workDay')\"\n                    readonly\n                    :width=\"120\"\n                    :template=\"'<span>#= workDay#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'paidHours'\"\n                    :title=\"$t('work_hours')\"\n                    readonly\n                    :width=\"120\"\n                    :template=\"'<span>#= paidHours#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeWeekend'\"\n                    :title=\"$t('over_time_weekend')\"\n                    readonly\n                    :template=\"'<span>#= overTimeWeekend#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeNight'\"\n                    :title=\"$t('over_time_night')\"\n                    readonly\n                    :template=\"'<span>#= overTimeNight || 0#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'overTimeHoliday'\"\n                    :title=\"$t('over_time_holiday')\"\n                    readonly\n                    :template=\"'<span>#= overTimeHoliday#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: center;'\n                    }\"/>\n            </kendo-grid>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"  type=\"loading\"/>\n    </v-row>\n</template>\n<script>\nimport UploadExcelComponent from '@/components/upload_excel/TimeCard.vue';\nimport kendo from \"@progress/kendo-ui\";\nimport TimeCardLine from \"@/scripts/model/TimeCardLine\";\nimport EmployeeModel from '@/scripts/model/Employee'\nimport TimeCard from \"@/scripts/model/TimeCard\";\nimport PayrollRun from \"@/scripts/model/PayrollRun\";\nimport PayrollList from \"@/scripts/model/PayrollList\"\n\nconst instituteHandler = require(\"@/scripts/instituteHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nconst axios \t= require('axios');\nconst timeCardLineModel = new TimeCardLine({})\nconst employeeModel = new EmployeeModel({})\nconst timeCardModel = new TimeCard({})\nconst payrollRunModel = new PayrollRun({})\nconst employeeHandler = require(\"@/scripts/employeeHandler\")\nconst payrollHandler = require(\"@/scripts/payrollHandler\")\nconst locationHandler = require(\"@/scripts/locationHandler\")\nconst settingsHandler = require(\"@/scripts/settingsHandler\")\nconst currencyType = {\n    FUNCTIONAL_CURRENCY: 'fun-c',\n    TRANSACTION_CURRENCY: 'txn-c',\n    REPORTING_CURRENCY: 'rpt-c',\n    TAX_EXCHANGE_CURRENCY: 'tax-c',\n}\n\n/* Cookie */\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\n\nexport default {\n    props:['propInput'],\n    data: () =>({\n        loading: false,\n        disabled: true,\n        disabledL: false,\n        disabledG: false,\n        showLoading: true,\n        journal_date: \"\",\n        dialogm: false,\n        tableData: [],\n        tableHeader: [],\n        dateFormat: timeCardLineModel.dateFormat,\n        timeFormat: timeCardLineModel.timeFormat,\n        employeeData: [],\n        monthOf: '',\n        date: new Date().toISOString().substr(0, 10),\n        location: [],\n        segment: [],\n        employee: employeeModel,\n        timeCard: timeCardModel,\n        payrollRun: payrollRunModel,\n        locationSelected: '',\n        segmentSelected: '',\n        setCardHeight: false,\n        natureInput:[\n            {name: 'Timesheet'},\n            {name: 'Timecard'},\n            {name: 'Fixed'}\n        ],\n        timeCardLine: [],\n        recordList: [],\n        natureInputSelected:'Fixed',\n        number: '',\n        prefix: '',\n        payNumber: {},\n        result: {},\n        exchangeRate: {},\n        btnEnabled: true,\n        sort:[\n            { field: 'employeeId', dir: 'asc' }\n        ],\n        period: {},\n        loggedUser: {\n            id: cookie.creator,\n            name: cookie.email\n        },\n        baseCurrency: {},\n        departments: [],\n        department: \"\",\n        natureContracts:[\n            {id: \"fixed_duration_contract\", name: \"Fixed Duration Contract\"},\n            {id: \"undetermined_duration_contract\", name: \"Undetermined Duration Contract\"},\n            {id: \"contractd\", name: \"Contracted\"}\n        ],\n        natureContract: \"\",\n        employeeGroups: [],\n        employeeGroup: \"\"\n    }),\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        'upload-excel-component':UploadExcelComponent,\n        'month-picker' : ()=> import('@/components/custom_templates/MonthPicker'),\n        'date-picker' : ()=> import('@/components/custom_templates/DatePickerComponent')\n    },\n    methods: {\n        numberFormat(value){\n            let rate = value.rate\n            return kendo.toString( kendo.parseFloat(1/rate),`n0`)\n        },\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        ChangeNature() {\n            if (this.natureInputSelected === 'Timecard') {\n                this.btnEnabled = false\n            }else {\n                this.btnEnabled = true\n            }\n        },\n        monthOfChange(){\n            this.generateNumber()\n        },\n        beforeUpload(file) {\n            const isLt1M = file.size / 1024 / 1024 < 1\n            if (isLt1M) {\n                return true\n            }\n            this.$message({\n                message: 'Please do not upload files larger than 1m in size.',\n                type: 'warning'\n            })\n            return false\n        },\n        handleSuccess({ results, header }) {\n            results.forEach(element => {\n                var utc_days  = Math.floor(element.date - 25569);\n                var utc_value = utc_days * 86400;                                        \n                var date_info = new Date(utc_value * 1000);\n                var fractional_day = element.date - Math.floor(element.date) + 0.0000001;\n                var total_seconds = Math.floor(86400 * fractional_day);\n                var seconds = total_seconds % 60;\n                total_seconds -= seconds;\n                var hours = Math.floor(total_seconds / (60 * 60));\n                var minutes = Math.floor(total_seconds / 60) % 60;\n                var current_datetime =  new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);\n                element.date    = current_datetime\n                element.dateFormat = this.dateFormat\n                var utc_days_time_in  = Math.floor(element.clockedIn - 25569);\n                var utc_value_time_in = utc_days_time_in * 86400;                                        \n                var date_info_time_in = new Date(utc_value_time_in * 1000);\n                var fractional_time_in = element.clockedIn - Math.floor(element.clockedIn) + 0.0000001;\n                var total_seconds_time_in = Math.floor(86400 * fractional_time_in);\n                var seconds_time_in = total_seconds_time_in % 60;\n                total_seconds_time_in -= seconds_time_in;\n                var hours_time_in = Math.floor(total_seconds_time_in / (60 * 60));\n                var minutes_time_in = Math.floor(total_seconds_time_in / 60) % 60;\n                var current_time_in =  new Date(date_info_time_in.getFullYear(), date_info_time_in.getMonth(), date_info_time_in.getDate(), hours_time_in, minutes_time_in, seconds_time_in);\n                element.clockedIn    = current_time_in\n\n                var utc_days_time_out  = Math.floor(element.clockedOut - 25569);\n                var utc_value_time_out = utc_days_time_out * 86400;                                        \n                var date_info_time_out = new Date(utc_value_time_out * 1000);\n                var fractional_time_out = element.clockedOut - Math.floor(element.clockedOut) + 0.0000001;\n                var total_seconds_time_out = Math.floor(86400 * fractional_time_out);\n                var seconds_time_out = total_seconds_time_out % 60;\n                total_seconds_time_out -= seconds_time_out;\n                var hours_time_out = Math.floor(total_seconds_time_out / (60 * 60));\n                var minutes_time_out = Math.floor(total_seconds_time_out / 60) % 60;\n                var current_time_out =  new Date(date_info_time_out.getFullYear(), date_info_time_out.getMonth(), date_info_time_out.getDate(), hours_time_out, minutes_time_out, seconds_time_out);\n                element.clockedOut    = current_time_out\n                element.timeFormat  = this.timeFormat\n            });\n            this.tableData = results\n            this.tableHeader = header\n        },\n        onSaveClose(){\n            this.autoCalculate()\n            this.groupBy()\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let dataTimeCard = {\n                        id:                       this.timeCard.id ? this.timeCard.id : '',\n                        monthOf:                  kendo.toString(new Date(this.monthOf),'yyyy-MM-dd'),\n                        timeCardLine:             this.timeCardLine,\n                        totalWork:                this.totalWork,\n                        totalOverTimeWeekend:     this.totalOverTimeWeekend,\n                        totalOverTimeHoliday:     this.totalOverTimeHoliday,\n                        totalOverTimeNight:       this.totalOverTimeNight,\n                        location:                 this.locationSelected,\n                        locationId:               this.locationSelected.id,\n                        segment:                  this.segmentSelected,\n                        segmentId:                this.segmentSelected.id,\n                        period:                   this.period,\n                    };\n                    payrollHandler.createTimeCard(dataTimeCard).then(response => {\n                        if (response.data.statusCode === 201) {\n                            this.$snotify.success('Success')\n                            this.close()\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n                }, 300);\n            })\n        },\n        autoCalculate() {\n            let ds = this.$refs.dataSourceInput.kendoWidget(),\n            // specificWorks = [],\n            totalWork = 0,\n            totalOverTimeWeekend = 0,\n            totalOverTimeHoliday = 0,\n            totalOverTimeNight   = 0;\n            ds.data().forEach(value => {\n                totalWork += kendo.parseFloat(value.workTime)\n                totalOverTimeWeekend += kendo.parseFloat(value.overTimeWeekend)\n                totalOverTimeHoliday += kendo.parseFloat(value.overTimeHoliday)\n                totalOverTimeNight   += kendo.parseFloat(value.overTimeNight)\n            })\n            this.totalWork              = totalWork\n            this.totalOverTimeWeekend   = totalOverTimeWeekend\n            this.totalOverTimeHoliday   = totalOverTimeHoliday\n            this.totalOverTimeNight     = totalOverTimeNight\n        },\n        groupBy() {\n            let ds = this.$refs.dataSourceInput.kendoWidget();\n            let helper = {};\n            let result = ds.data().reduce(function(r, o) {\n                let key = o.date + '-' + o.employeeId;\n                if(!helper[key]) {\n                    helper[key] = Object.assign({}, o); // create a copy of o\n                    r.push(helper[key]);\n                } else {\n                    helper[key].workTime += o.workTime;\n                }\n                return r;\n            }, []);\n            let lastResult = {}\n            let employees = this.employees\n            let last_result = result.reduce(function(m, n) {\n                let key = n.employeeId\n                if(!lastResult[key]) {\n                    lastResult[key] = Object.assign({}, n); // create a copy of o\n                    m.push(lastResult[key]);\n                } else {\n                    employees.forEach(function(em) {\n                        if(key == em.employeeId){\n                            lastResult[key].workTime += n.workTime;\n                            lastResult[key].employeeUuid  = em.id;\n                        }\n                    });\n                }\n                return m;\n            }, []);\n            let timeCardLine =  last_result.map(n=>{\n                return new TimeCardLine(n)\n            })\n            this.timeCardLine = timeCardLine\n        },\n        async loadEmployee(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employees = []\n                    employeeHandler.center().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.employees = res.data.data\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        close() {\n            this.dialogm = false\n        },\n        async loadLocation() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    locationHandler.list().then(res => {\n                        if(res.data.statusCode === 200){\n                            this.location = res.data.data\n                        }\n                        \n                    })\n                }, 300);\n            })\n        },\n        async loadSegment() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getSeg().then(res => {\n                        if(res.data.statusCode === 200){\n                            this.segment = res.data.data        \n                        }\n                    })\n                }, 300);\n            })\n        },\n        filterEmployee(){\n            if(this.natureInputSelected == \"Fixed\"){\n                let result = this.recordList.filter(n =>n.salaryType ==\"Monthly\" && n.applyOvertime == false);\n                let timeCardList = result.map(index =>{\n                    let bank = index.employee.bank\n                    return {\n                        employeeUuid:               index.employee.id ? index.employee.id: '',\n                        salary:                     parseFloat(index.salary),\n                        employeeId:                 index.employeeId,\n                        bank:                       {\n                            bankName:       bank.bankName,\n                            bankUuid:       bank.id || '',\n                            bankAccount:    index.employee.bankAccount\n                        } ,\n                        employeeName:               index.employee.firstName +' '+ index.employee.lastName,\n                        natureEmployee:             index.employee.natureEmployee,\n                        payrollLiabilitie:          index.employee.payrollLiabilitie,\n                        paymentMethod:              index.employee.paymentMethod,\n                        spouseNatureEmployee:       index.employee.spouseNatureEmployee,\n                        workingStatus:              index.employee.workingStatus,\n                        spouseGender:               index.employee.spouseGender,\n                        gender:                     index.employee.gender,\n                        noOfChildren:               index.employee.noOfChildren,\n                        overTimeHoliday:            0,\n                        overTimeWeekend:            0,\n                        overTimeNight:              0,\n                        workDay:                    0,\n                        workTime:                   0,\n                        benefit:                    index.benefit,\n                        totalBenefit:               0 ,\n                        currency:                   index.currency ? index.currency: {},\n                        location:                   index.location,\n                        segment:                    index.segment,\n                        salaryType:                 index.salaryType.name,\n                        startingTime:               index.startingTime,\n                        position:                   index.position,\n                        natureContract:             index.natureContract,\n                        earning:                    parseFloat(index.salary),\n                        paidHours:                  0,\n                        deduction:                  0,\n                        netPay:                     0,\n                    }\n                })\n                this.timeCardLine = timeCardList\n                window.console.log('timeCardList', this.timeCardLine)\n                this.showLoading = false;\n            }else{\n                let param =  {\n                    'monthOf':      kendo.toString( new Date(this.monthOf),'yyyy-MM-dd'),\n                    'selectTime':   this.natureInputSelected\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        payrollHandler.getTimeCard(param).then(res => {\n                            if(res.data.statusCode === 200){\n                                let result = res.data.data;\n                                if(result.length > 0){\n                                    if(result[0].timeCardLine.length > 0){\n                                        window.console.log()\n                                        let result_timecard = result[0].timeCardLine;\n                                        let result_record = []\n                                        if(this.employeeGroup){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.employeeGroup == n.group);\n                                        }else if(this.locationSelected.id){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.locationSelected.id == n.location.id);\n                                        }else if(this.department){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.department == n.department.id);\n                                        }else if(this.natureContract){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.natureContract == n.natureContract.id);\n                                        }else{\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true);\n                                        }\n                                        let timeCardList = [];\n                                        result_timecard.forEach(function(tc) {\n                                            let time_employeeId = tc.employeeId;\n                                            let totalBenefit = 0;\n                                            let deduction = 0;\n                                            let netPay = 0;\n                                            const re =  result_record.filter(m => m.employeeId ===  time_employeeId).map(item =>{\n                                                item.benefit.forEach(function(b){\n                                                    if(b.amount){\n                                                        totalBenefit += parseFloat(b.amount)\n                                                    }\n                                                }) \n                                                let payrollLiabilitie       =  item.employee.payrollLiabilitie\n                                                let period = result[0].period\n                                                let overTimeNight = tc.overTimeNight * parseFloat(period.overtimeNight)\n                                                let overTimeWeekend = tc.overTimeWeekend * parseFloat(period.overtimeForWeekend)\n                                                let overTimeHoliday = tc.overTimeHoliday * parseFloat(period.overtimeForNationalHoliday)\n                                                let totalHours = tc.workTime + overTimeNight + overTimeWeekend + overTimeHoliday\n                                                let totaloverTime = overTimeNight + overTimeWeekend + overTimeHoliday\n                                                let workDay = tc.workTime / parseFloat(period.hourPerDay)\n                                                let salaryAmount = 0\n                                                let salary = parseFloat(item.salary)\n                                                if(item.salaryType == \"Monthly\"){\n                                                    let salaryHours = salary / (parseFloat(period.hourPerDay) * parseFloat(period.workingDay)) \n                                                    salaryAmount = salary + (salaryHours * totaloverTime)\n                                                }else{\n                                                    salaryAmount = salary * totalHours\n                                                }\n                                                let bank = item.employee.bank\n                                                return {\n                                                    employeeUuid:               item.employee.id ? item.employee.id: '',\n                                                    salary:                     salaryAmount,\n                                                    employeeId:                 tc.employeeId,\n                                                    bank:                       {\n                                                        bankName:       bank.bankName,\n                                                        bankUuid:       bank.id || '',\n                                                        bankAccount:    item.employee.bankAccount\n                                                    },\n                                                    spouseNatureEmployee:       item.employee.spouseNatureEmployee,\n                                                    workingStatus:              item.employee.workingStatus,\n                                                    spouseGender:               item.employee.spouseGender,\n                                                    gender:                     item.employee.gender,\n                                                    employeeName:               item.employee.firstName +' '+   item.employee.lastName,\n                                                    natureEmployee:             item.employee.natureEmployee,\n                                                    noOfChildren:               item.employee.noOfChildren,\n                                                    payrollLiabilitie:          payrollLiabilitie,\n                                                    paymentMethod:              item.employee.paymentMethod,\n                                                    overTimeHoliday:            tc.overTimeHoliday,\n                                                    overTimeWeekend:            tc.overTimeWeekend,\n                                                    overTimeNight:              tc.overTimeNight,\n                                                    workDay:                    workDay || 0,\n                                                    paidHours:                  tc.workTime,\n                                                    totalWorkinghours:          tc.workTime,\n                                                    currency:                   tc.currency ? tc.currency: {},\n                                                    totalBenefit:               parseFloat(totalBenefit) ,\n                                                    location:                   item.location,\n                                                    segment:                    item.segment,\n                                                    salaryType:                 item.salaryType.name,\n                                                    startingTime:               item.startingTime,\n                                                    position:                   item.position,\n                                                    natureContract:             item.natureContract,\n                                                    earning:                    parseFloat(item.salary) + parseFloat(totalBenefit),\n                                                    deduction:                  deduction,\n                                                    netPay:                     netPay,\n                                                }\n                                            })\n                                            if(re.length >0){\n                                                timeCardList.push(re[0])\n                                            }\n                                        });\n                                        this.timeCardLine = timeCardList\n                                        this.showLoading = false\n                                    }else{\n                                        let result_record = []\n                                        if(this.employeeGroup){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.employeeGroup == n.group);\n                                        }else if(this.locationSelected.id){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.locationSelected.id == n.location.id);\n                                        }else if(this.department){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.department == n.department.id);\n                                        }else if(this.natureContract){\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true && this.natureContract == n.natureContract.id);\n                                        }else{\n                                            result_record = this.recordList.filter(n =>n.applyOvertime == true);\n                                        }\n                                        let timesheet = []\n                                        result.forEach(function(tc) {\n                                            window.console.log(tc.employee.id)\n                                            let time_employee_id = tc.employee.id;\n                                            let totalBenefit = 0;\n                                            let deduction = 0;\n                                            let netPay = 0;\n                                            let period = tc.period\n                                            // let totalHours = 0\n                                            const re =  result_record.filter(m => m.employee_id ===  time_employee_id).map(item =>{\n                                                item.benefit.forEach(function(b){\n                                                    if(b.amount){\n                                                        totalBenefit += parseFloat(b.amount)\n                                                    }\n                                                })\n                                                let overTimeNight = tc.overTimeNight * parseFloat(period.overtimeNight)\n                                                let overtimeHoursWeekend = tc.overtimeHoursWeekend * parseFloat(period.overtimeForWeekend)\n                                                let overtimeHoursHoliday = tc.overtimeHoursHoliday * parseFloat(period.overtimeForNationalHoliday)\n                                                let totalHours = tc.workingHours + overTimeNight + overtimeHoursWeekend + overtimeHoursHoliday\n                                                let workDay = tc.workingHours /parseFloat(tc.period.hourPerDay)\n                                                let totaloverTime = overTimeNight + overtimeHoursWeekend + overtimeHoursHoliday\n                                                let salary = parseFloat(item.salary)\n                                                let salaryAmount = 0\n                                                if(item.salaryType == \"Monthly\"){\n                                                    let salaryHours = salary / (parseFloat(tc.period.hourPerDay) * parseFloat(tc.period.workingDay)) \n                                                    salaryAmount = salary + (salaryHours * totaloverTime)\n                                                }else{\n                                                    salaryAmount = salary * totalHours\n                                                }\n                                                let bank = tc.employee.bank\n                                                return {\n                                                    employeeUuid:       tc.employee.id,\n                                                    salary:             salaryAmount,\n                                                    employeeId:         tc.employee.employeeId,\n                                                    gender:             tc.employee.gender,\n                                                    employee:           tc.employee,\n                                                    payrollLiabilitie:  tc.employee.payrollLiabilitie,\n                                                    bank:                       {\n                                                        bankName:       bank.bankName,\n                                                        bankUuid:       bank.id,\n                                                        bankAccount:    tc.employee.bankAccount\n                                                    },\n                                                    spouseNatureEmployee:tc.employee.spouseNatureEmployee,\n                                                    workingStatus:      tc.employee.workingStatus,\n                                                    spouseGender:       tc.employee.spouseGender,\n                                                    paymentMethod:      tc.employee.paymentMethod,\n                                                    natureEmployee:     tc.employee.natureEmployee,\n                                                    noOfChildren:       tc.employee.noOfChildren,\n                                                    employeeName:       tc.employee.firstName +' '+   tc.employee.lastName,\n                                                    overTimeHoliday:    tc.overtimeHoursHoliday,\n                                                    overTimeWeekend:    tc.overtimeHoursWeekend,\n                                                    overTimeNight:      tc.overTimeNight,\n                                                    paidHours:          tc.workingHours,\n                                                    workingHours:       tc.workingHours,\n                                                    period:             tc.period,\n                                                    workDay:            workDay || 0,\n                                                    benefit:            item.benefit,\n                                                    totalBenefit:       parseFloat(totalBenefit),\n                                                    totalWorkinghours:  parseFloat(totalHours),\n                                                    segment:            item.segment,\n                                                    location:           item.location,\n                                                    salaryType:         item.salaryType.name,\n                                                    startingTime:       item.startingTime,\n                                                    position:           item.position,\n                                                    currency:           item.currency ? item.currency: {},\n                                                    natureContract:     item.natureContract,\n                                                    earning:            parseFloat(item.salary) + parseFloat(totalBenefit),\n                                                    deduction:          deduction,\n                                                    netPay:             netPay,\n                                                }\n                                            })\n                                            window.console.log('re',re)\n                                            if(re.length > 0){\n                                                timesheet.push(re[0])\n                                            }\n                                        })\n                                        this.timeCardLine = timesheet\n                                        this.showLoading = false;\n                                    }\n                                }else{\n                                    this.timeCardLine = []\n                                    this.showLoading = false;\n                                }\n                            }\n                        })\n                    }, 300);\n                })\n            }\n        },\n        async search(){\n            let location_id = ''\n            if(this.locationSelected){\n                location_id = this.locationSelected.id\n            }\n            let param ={\n                status:             1,\n                location_id:        location_id || \"\",\n                department_id:      this.department,\n                natureContract_id:  this.natureContract,\n                employeeGroup_id:   this.employeeGroup || ''\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    employeeHandler.getRecord(param).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            this.recordList = res.data.data\n                            this.showLoading = true;\n                            this.filterEmployee()\n                        }\n                    })\n                }, 300);\n            })\n        },\n        saveNext(){\n            let ds = this.$refs.dataSourceTimeCard.kendoWidget()\n            let totalEmployee = 0;\n            ds.data().forEach(value => {\n                if(value){\n                    totalEmployee += 1\n                }\n            })\n            this.totalEmployee = totalEmployee\n            let dataSource = ds.data()\n            this.payrollList = dataSource.map(index=>{\n                return new PayrollList({\n                    applyOvertime:      index.applyOvertime,\n                    date:               this.date,\n                    benefit:            index.benefit || '',\n                    // employee:           index.employee,\n                    bank:               index.bank,\n                    employeeId:         index.employeeId,\n                    employee_id:        index.employee_id,\n                    employeeUuid:       index.employeeUuid,\n                    employeeName:       index.employeeName,\n                    gender:             index.gender,\n                    location:           index.location,\n                    natureRecord:       index.natureRecord,\n                    natureEmployee:     index.natureEmployee,\n                    natureSalary:       index.natureSalary,\n                    overTime:           index.overTime,\n                    position:           index.position,\n                    salary:             index.salary,\n                    salary1:            index.salary,\n                    salaryType:         index.salaryType,\n                    totalBenefit:       index.totalBenefit,\n                    segment:            index.segment ? index.segment: [],\n                    startingTime:       index.startingTime,\n                    status:             index.status,\n                    workDay:            index.workDay,\n                    currency:           index.currency,\n                    period:             index.period,\n                    overTimeHoliday:    index.overTimeHoliday,\n                    overTimeWeekend:    index.overTimeWeekend,\n                    overTimeNight:      index.overTimeNight,\n                    workingHours:       index.workingHours,\n                    totalWorkinghours:  index.totalWorkinghours,\n                    paidHours:          index.paidHours,\n                    paymentMethod:      index.paymentMethod,\n                    payrollLiabilitie:  index.payrollLiabilitie,\n                    natureContract:     index.natureContract,\n                    spouseNatureEmployee:index.spouseNatureEmployee,\n                    workingStatus:      index.workingStatus,\n                    spouseGender:       index.spouseGender,\n                    noOfChildren:       index.noOfChildren      \n                })\n            })\n            if(this.payrollList.length > 0 && this.baseCurrency && this.exchangeRate.rate){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = new PayrollRun({\n                            id:                   this.$route.params.id,\n                            location:             this.locationSelected,\n                            monthOf:              kendo.toString(new Date(this.monthOf),'yyyy-MM-dd'),\n                            sequcencing:          parseInt(kendo.toString(new Date(this.monthOf),'yyyy')),\n                            totalEmployee:        this.totalEmployee,\n                            currency:             this.baseCurrency,\n                            exchangeRate:         this.exchangeRate,\n                            date:                 kendo.toString(new Date(this.date),'yyyy-MM-dd'),\n                            payNumber:            this.payNumber,\n                            number:               this.number,\n                            created:              kendo.toString(new Date(),'yyyy-MM-dd'),\n                            lastNumber:           this.lastNumber,\n                            abbr:                 this.payNumber.abbr,\n                            type:                 'payroll',\n                            natureInput:          this.natureInputSelected,\n                            referenceNumber:      this.payNumber.abbr+this.payNumber.numberSeparator + this.number,\n                            payrollList:          this.payrollList,\n                            step:                 2,      \n                            department:           this.department,\n                            natureContract:       this.natureContract,\n                            employeeGroup:        this.employeeGroup,\n                            loggedUser:           this.loggedUser, \n                        });\n                        this.showLoading = true\n                        window.console.log('data_____',data)\n                        payrollHandler.createPayroll(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.$snotify.success('Success')\n                                this.loadSuccess(response.data.statusCode)\n                                this.close()\n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }, 300);\n                })\n            }else{\n                if(!this.exchangeRate.rate){\n                    this.$snotify.error('Exchange rate not found! please check again')\n                }\n                if(this.payrollList.length == 0){\n                    this.$snotify.error('Data not found please check again')\n                }\n            }\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        async loadPayrollList(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true;\n                    payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                        this.showLoading = true;\n                        if(res.data.statusCode === 200){\n                            window.console.log('Rannnnn', res)\n                            const resultPay = res.data.data\n                            if(resultPay.length > 0){                            \n                                this.result = resultPay[0]\n                                this.loadPayrollItem(this.result)\n                                // this.date = resultPay.date\n                                if(this.result.monthOf !== ''){\n                                    this.monthOf = kendo.toString(new Date(this.result.monthOf), \"yyyy-MM\")\n                                    this.generateNumber()\n                                }\n                                this.locationSelected = this.result.location\n                                this.employeeGroup = this.result.employeeGroup\n                                if(this.employeeGroup !== \"\"){\n                                    this.disabledL = true\n                                }\n                            }\n                            this.showLoading = false;\n                        }\n                    })\n                }, 300);\n            })\n        },\n        loadPayrollItem(result){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    payrollHandler.getPayrollItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            let resutl_item = res.data.data\n                            this.timeCardLine = resutl_item\n                            this.showLoading = false\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        loadPrefixes() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getPrefixes().then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.prefixList = result.filter(p => p.type =='payroll')\n                            this.prefix = this.prefixList[0]\n                            this.payNumber = this.prefix\n                        }\n                    })\n                }, 300)\n            })\n        },\n        generateNumber() {\n            let resultNumber = this.result\n            if(resultNumber.number){\n                this.number     = resultNumber.number\n                this.lastNumber = resultNumber.lastNumber\n                this.payNumber  = resultNumber.payNumber\n            }else{\n                let montOf_format = kendo.toString(new Date(this.monthOf),'yyyy-MM-dd');\n                if(montOf_format == \"\"){\n                    let month_year = kendo.toString(new Date(),'yyyy-MM-dd')\n                    montOf_format = month_year.setDate(1)\n                }\n                let sequcencing = ''\n                if(this.payNumber.sequcencing ==\"Year\"){\n                    sequcencing = new Date(montOf_format).toISOString().substr(0, 4)\n                }else if(this.payNumber.sequcencing ==\"Month\"){\n                    sequcencing = new Date(montOf_format).toISOString().substr(0, 7)\n                }else{\n                    sequcencing = ''\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            abbr:           this.payNumber.abbr,\n                            structure:      this.payNumber.structure,\n                            date:           montOf_format,\n                            type:           'payroll',\n                            pkId:           'par-',\n                            sequcencing:    sequcencing\n                        }\n                        window\n                        payrollHandler.getPrefixNumber(data).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                const result = res.data.data\n                                const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                this.number = number\n                                this.lastNumber = lastNumber\n                                this.showLoading = false;\n                            }\n                        })\n                    }, 300);\n                })\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        downloadTimeCard(){\n            axios.get('https://s3.ap-southeast-1.amazonaws.com/images.banhji/files/Timecard.xlsx', {\n            // If you forget this, your download will be corrupt.\n                responseType: 'blob'\n            }).then((response) => {\n                const link = document.createElement('a');\n                link.href = window.URL.createObjectURL(\n                    new Blob([response.data])\n                );\n                link.setAttribute('download', 'Timecard.xlsx');\n                document.body.appendChild(link);\n                link.click();\n            }); \n        },\n        async loadBaseCurrency() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    instituteHandler.getOneCompany(cookie.instituteId).then(res => {\n                        this.baseCurrency = res.baseCurrency\n                    })\n                    resolve('resolved');\n                }, 200);\n            });\n        },\n        async loadLastExchangeRate(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    let getDate = new Date()\n                    let date_tax_payroll = new Date(getDate.getFullYear(), getDate.getMonth(), 15);\n                    let date = kendo.toString(new Date(date_tax_payroll),'yyyy-MM-dd')\n                    window.console.log(date)\n                    let code = 'KHR'\n                    if (code !== undefined || code !== '') {\n                        this.showLoading = true\n                        currencyHandler.getLastExchangeRateTaxByDate(date, code).then(res => {\n                            if (res.data.statusCode === 200) {\n                                window.console.log(1,res.data)\n                                this.showLoading = false\n                                this.exchangeRate = res.data.data[0]\n                            }\n                        })\n                    }\n\n                }, 300)\n            })\n        },\n        async loadCurrencyData(type) {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    currencyHandler.list(type).then(response => {\n                        if (response.data.statusCode === 200) {\n                            if (type === currencyType.FUNCTIONAL_CURRENCY) {\n                                this.funcCurrencyList = response.data.data\n                            } else if (type === currencyType.TRANSACTION_CURRENCY) {\n                                this.currencyList = response.data.data\n                            }\n                            this.showLoading = false\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        goBack(){\n            let payroll_id = this.$route.params.id\n            if(payroll_id && this.result.step == 1){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        payrollHandler.deleteTransactions(payroll_id).then(response => {\n                            if (response.statusCode === 200) {\n                                this.loadPayrollList()\n                                this.showLoading = false\n                                window.history.go(-1)\n                            }\n                        })\n                    },300)\n                })\n            }else{\n                window.history.go(-1)\n            }\n        },\n        async loadPeriod(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getPeriiod().then(res => {\n                        this.period = res[0]\n                    })\n                }, 300);\n            })\n        },\n        locationChange(){\n            let location = this.locationSelected\n            window.console.log('location',location)\n            if(location !== null){\n                this.disabledG = true\n                this.loading = true\n                this.disabled = false\n                window.console.log(1, location)\n                this.loadDepartment(location.id)\n            }else{\n                this.department = \"\"\n                this.natureContract = \"\"\n                this.disabledG = false\n                this.disabled = true\n                this.loading = false \n                \n\n                window.console.log(2, location)\n            }\n        },\n        async loadDepartment(location_id){\n            let param = {\n                location_id: location_id\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getDepartment(param).then(res => {\n                        this.departments = res\n                        if(this.departments.length > 0){\n                            this.loading = false\n                        }\n                    })\n                }, 300);\n            })\n        },\n        async loadGroup(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getGroup().then(res => {\n                        this.employeeGroups = res.data\n                    })\n                }, 300);\n            })\n        },\n        employeeGroupChange (){\n            if(this.employeeGroup){\n                this.disabledL = true\n            }else{\n                this.disabledL = false\n            }\n        }\n    },\n    async mounted() {\n        await this.loadPeriod()\n        await this.loadPayrollList()\n        await this.loadEmployee()\n        await this.loadLocation()\n        await this.loadSegment()\n        // await this.loadRecord()\n        await this.loadPrefixes()\n        await this.loadBaseCurrency()\n        await this.loadLastExchangeRate()\n        await this.loadGroup()\n        await this.loadCurrencyData(currencyType.TRANSACTION_CURRENCY)\n    },\n    watch: {\n        propInput(){\n            if (this.propInput !== undefined) {\n                this.loadPayrollList()\n                this.loadLastExchangeRate()\n            }\n        }\n    },\n}\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"]}]}