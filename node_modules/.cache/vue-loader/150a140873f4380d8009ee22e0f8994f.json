{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/product/ItemModifier.vue?vue&type=style&index=0&id=5b07e65a&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products_services/product/ItemModifier.vue","mtime":1643182494338},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kcm9wZG93bi1oZWFkZXIgewogICAgYm9yZGVyLXdpZHRoOiAwIDAgMXB4IDA7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9CgouZHJvcGRvd24taGVhZGVyID4gc3BhbiB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZHJvcGRvd24taGVhZGVyID4gc3BhbjpmaXJzdC1jaGlsZCB7CiAgICB3aWR0aDogNTBweDsKfQoKLmstbGlzdC1jb250YWluZXIgPiAuay1mb290ZXIgewogICAgcGFkZGluZzogMTBweDsKfQoKLmZ1bmN0aW9uX2NvbnRlbnQgewogICAgcGFkZGluZzogMCAyNXB4IDI1cHg7CiAgICBib3JkZXItYm90dG9tOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgpAbWVkaWEgKG1pbi13aWR0aDogMTI2NHB4KSB7CiAgICAuY29udGFpbmVyIHsKICAgICAgICAvKiBtYXgtd2lkdGg6IDExODVweDsgKi8KICAgICAgICBtYXgtd2lkdGg6IDEwODBweCAhaW1wb3J0YW50OwogICAgfQp9CgouZ3JheUJnIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLm1iLTYgewogICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsKICAgIH0KfQoKLnNlY3Rpb24yIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkNmQ3ZDg7Cn0KCi5ib3JkZXJfZ3JleSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDZkN2Q4Owp9CgouYXR0YWNobWVudF90YWJsZSB7CiAgICB3aWR0aDogMTAwJTsKfQoKLm15X3JhZGlvIFt0eXBlPSJyYWRpbyJdICsgbGFiZWwgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogNnB4OwogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNSUgODAlICFpbXBvcnRhbnQ7CiAgICBkaXNwbGF5OiBncmlkOwp9CgoudXBsb2FkX2J0biB7CiAgICBwYWRkaW5nOiAxMHB4IDZweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICBtYXJnaW4tYm90dG9tOiBub25lICFpbXBvcnRhbnQ7CiAgICBib3JkZXItcmFkaXVzOiAyMnB4OwogICAgYmFja2dyb3VuZDogIzkyZDA1MDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUKPiAudi1kYXRhLXRhYmxlX193cmFwcGVyCj4gdGFibGUKPiB0Ym9keQo+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi5ncmlkLWZ1bmN0aW9uIHRhYmxlIHRoIHsKICAgIHBhZGRpbmc6IDEwLjVweCAxN3B4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["ItemModifier.vue"],"names":[],"mappingsslBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ItemModifier.vue","sourceRoot":"src/views/products_services/product","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"modifier\") }}</h2>\n                                <v-icon\n                                    onclick=\"window.history.go(-1); return false;\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"pa-3 pb-0 no_border\" color=\"grayBg\">\n                                <v-row>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label \">{{ $t(\"name\") }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            tage=\"Catalog Name\"\n                                            v-model=\"itemModifier.name\"\n                                            :rules=\"[(v) => !!v || $t('is_required')]\"\n                                            :placeholder=\"$t('name')\"\n                                            outlined\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label \" style=\"\">{{\n                                                $t(\"price_level\")\n                                            }}</label>\n                                        <div class=\"d-flex\">\n                                            <div style=\"width:50px;\" class=\"code_text mt-1  text-bold\">{{ code }}</div>\n                                            <v-select class=\"mt-1 custom-border\"\n                                                      v-model=\"itemModifier.priceLevel\"\n                                                      :items=\"priceLevels\"\n                                                      item-value=\"id\"\n                                                      item-text=\"name\"\n                                                      return-object\n                                                      @change=\"onPriceLevelChanged\"\n                                                      outlined/>\n                                        </div>\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label \" style=\"\">{{ $t(\"price\") }}</label>\n                                        <v-text-field\n                                            class=\"mt-1\"\n                                            tage=\"Number\"\n                                            type=\"Number\"\n                                            min=\"0\"\n                                            :rules=\"[(v) => !!v || $t('is_required')]\"\n                                            v-model=\"itemModifier.price\"\n                                            outlined\n                                        />\n                                    </v-col>\n                                    <!--\n                                                      <v-col sm=\"4\" cols=\"12\" class=\"py-0\">\n                                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                          $t(\"uom\")\n                                                        }}</label>\n                                                        <v-select\n                                                          class=\"mt-1\"\n                                                          outlined\n                                                          tage=\"UOM\"\n                                                          v-model=\"itemModifier.uom\"\n                                                          :items=\"uom\"\n                                                          item-value=\"id\"\n                                                          item-text=\"name\"\n                                                          return-object\n                                                          clearable\n                                                        />\n                                                      </v-col> -->\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pt-0 kendo_dropdown_custom\">\n                                        <label class=\"label\" style=\"\">{{ $t(\"category\") }}</label>\n                                        <product-category-dropdownlist\n                                            :initCategory=\"category\"\n                                            :initModel=\"itemModifier.category\"\n                                            @onChange=\"onCategoryChanged\"\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"4\" cols=\"12\" class=\"pt-0 kendo_dropdown_custom\">\n                                        <label class=\"label\" style=\"\">{{ $t(\"group\") }}</label>\n                                        <product-group-dropdownlist\n                                            :initProductGroup=\"group\"\n                                            :initModel=\"itemModifier.group\"\n                                            @onChange=\"onGroupChanged\"\n                                        />\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"no_border my-3\" color=\"white\">\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                        <h3 class=\"mb-3\">\n                                            {{ $t(\"item_to_be_add\") }}\n                                        </h3>\n                                        <kendo-datasource ref=\"itemModifierDS\" :data=\"itemModifierList\"/>\n                                        <kendo-grid\n                                            id=\"gridItemModifier\"\n                                            class=\"grid-function\"\n                                            :data-source-ref=\"'itemModifierDS'\"\n                                            :editable=\"true\"\n                                            :scrollable-virtual=\"true\">\n                                            <kendo-grid-column\n                                                :field=\"'no'\"\n                                                :title=\"$t('no')\"\n                                                :template=\"rowNumberTmplL\"\n                                                :width=\"45\"\n                                                :column-menu=\"false\"\n                                                :headerAttributes=\"{\n                          style: 'background-color: #EDF1F5;',\n                          class: 'text-center',\n                        }\"\n                                                :attributes=\"{ style: 'text-align: center' }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'item'\"\n                                                :title=\"$t('item')\"\n                                                :width=\"150\"\n                                                :template=\"'<span>#=item.name || ``#</span>'\"\n                                                :editor=\"ItemDropDownEditor\"\n                                                :headerAttributes=\"{\n                          style: 'background-color: #EDF1F5',\n                        }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'uom'\"\n                                                :title=\"$t('uom')\"\n                                                :width=\"150\"\n                                                :template=\"UOMTemplate\"\n                                                :editor=\"UOMDropDownEditor\"\n                                                :headerAttributes=\"{\n                          style: 'background-color: #EDF1F5',\n                        }\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"''\"\n                                                :title=\"$t(' ')\"\n                                                :width=\"70\"\n                                                :command=\"[{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow},]\"\n                                                :headerAttributes=\"{ style: 'text-align: right; background-color: #EDF1F5',}\"\n                                            />\n                                            <!--                                                    <kendo-grid-column-->\n                                            <!--                                                        :field=\"''\"-->\n                                            <!--                                                        :title=\"$t('action')\"-->\n                                            <!--                                                        :width=\"70\"-->\n                                            <!--                                                        :command=\"[{ iconClass: 'k-icon k-i-trash', text: 'Delete', click: removeRowL }]\"-->\n                                            <!--                                                        :headerAttributes=\"{style: 'text-align: right; background-color: #EDF1F5'}\"/>-->\n                                        </kendo-grid>\n\n                                        <v-btn\n                                            color=\"primary\"\n                                            @click=\"addRowL\"\n                                            class=\"float-left btn_plus rounded-4 white--text mt-1\"\n                                        >\n                                            <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider/>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn\n                                    @click=\"cancel\"\n                                    color=\"black\"\n                                    outlined\n                                    class=\"text-capitalize  black--text float-left\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n\n                                <v-btn\n                                    @click=\"onSaveClose\"\n                                    color=\"primary\"\n                                    class=\"float-right  white--text text-capitalize\"\n                                >{{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\" type=\"loading\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport ItemModifierModel from \"@/scripts/model/ItemModifier\";\nimport priceLevelHandler from \"@/scripts/priceLevelHandler\";\nimport CategoryModel from \"@/scripts/model/Categories\";\nimport GroupModel from \"@/scripts/model/ProductGroup\";\nimport {uuid} from \"vue-uuid\";\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\nimport ItemLineModel from \"@/scripts/invoice/model/ItemLine\";\nimport uomPriceHandler from \"@/scripts/uomPriceHandler\";\n\nconst itemModifierModel = new ItemModifierModel({});\nconst uomHandler = require(\"@/scripts/uomHandler\");\nconst itemModifierHandler = require(\"@/scripts/itemModifierHandler\");\nconst categoryHandler = require(\"@/scripts/categoryHandler\");\nconst groupHandler = require(\"@/scripts/groupHandler\");\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\");\nconst $ = kendo.jQuery\nconst itemLinePrefix = \"lin-\";\nconst itemLineModel = new ItemLineModel({});\nexport default {\n    name: \"AddCatalog\",\n    props: [\"id\"],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        \"product-category-dropdownlist\": () => import(\"@/components/dropdownlist/ProductCategoryDropDownList\"),\n        \"product-group-dropdownlist\": () => import(\"@/components/dropdownlist/ProductGroupDropDownList\"),\n    },\n    data: () => ({\n        showLoading: false,\n        itemModifierList: [],\n        customers: [],\n        categories: [],\n        groups: [],\n        uom: [],\n        customer: {},\n        supplier: {},\n        item: {},\n        valid: true,\n        itemModifier: itemModifierModel,\n        category: new CategoryModel({}),\n        group: new GroupModel({}),\n        code: '',\n        priceLevels: [],\n        saleFormContent: {},\n        itemLine: itemLineModel\n    }),\n    methods: {\n        removeRowL(e) {\n            e.preventDefault();\n            var grid = kendo.jQuery(\"#gridItemModifier\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        onCategoryChanged(value) {\n            this.category = value\n            this.itemModifier.category = value\n            window.console.log('category', value)\n        },\n        onGroupChanged(value) {\n            this.group = value\n            this.itemModifier.group = value\n            window.console.log('group', value)\n        },\n        async loadGroup() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    groupHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.groups = res;\n                    });\n                }, 10);\n            });\n        },\n        // async onCategoryChanged() {\n        //     new Promise((resolve) => {\n        //         setTimeout(() => {\n        //             resolve(\"resolved\");\n        //             if (this.itemModifier.hasOwnProperty(\"category\")) {\n        //                 if (this.itemModifier.category) {\n        //                     this.group = this.groups.filter(\n        //                         (m) => m.category.id === this.itemModifier.category.id\n        //                     );\n        //                     if (this.group.length > 0) {\n        //                         this.itemModifier.group = this.group[0];\n        //                     }\n        //                 }\n        //             }\n        //         }, 10);\n        //     });\n        // },\n        async loadCategory() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    categoryHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.categories = res;\n                        if (this.categories.length > 0) {\n                            this.itemModifier.category = this.categories[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async loadUOM() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    uomHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.uom = res;\n                        if (this.uom.length > 0) {\n                            this.mSaleUOM = this.uom[0];\n                            this.mPurchaseUOM = this.uom[0];\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async initData() {\n            if (this.$route.params.id !== undefined) {\n                await this.loadSingleModifier();\n            } else {\n                this.clear();\n            }\n        },\n        clear() {\n            this.itemModifier = {};\n            this.itemModifierList = [];\n        },\n        addRowL() {\n            let ds = this.$refs.itemModifierDS.kendoWidget(),\n                total = ds.total();\n            this.itemLine.id = itemLinePrefix + uuid.v1();\n            this.itemLine.decimalFormat = \"n\" + this.saleFormContent.decimal;\n            this.itemLine.isEditable = true;\n            ds.insert(total, this.itemLine);\n        },\n        // Remove Row\n        removeRow(e) {\n            e.preventDefault();\n            var grid = kendo.jQuery(\"#gridItemModifier\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        rowNumberTmplL(dataItem) {\n            let ds = this.$refs.itemModifierDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        ItemDropDownEditor(container, options) {\n            const priceLevel = this.itemModifier.priceLevel || {}\n            const plId = priceLevel.id || ''\n            kendo\n                .jQuery('<input  name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Items </span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                // url: productVariantHandler.searchURL(),\n                                url: productVariantHandler.itemSearchURL('?plId=' + plId),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        UOMDropDownEditor(container, options) {\n            const item = options.model.item || {}\n            const priceLevel = this.itemModifier.priceLevel || {}\n            const itemId = item.id || ''\n            const plId = priceLevel.id || ''\n            const date = new Date().toJSON()\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"code\",\n                    dataValueField: \"uomConvertId\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=code || `No Price Level`#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: uomPriceHandler.uomPriceByPriceLevelURL(\"id=\" + itemId + \"&plId=\" + plId + \"&date=\" + date + '&nature=purchase')\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        async onSaveClose() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    let itemDS = this.$refs.itemModifierDS.kendoWidget();\n                    const dataRow = itemDS.data().map((n) => {\n                        return new ItemLineModel(n);\n                    });\n                    let data = {\n                        id: this.$route.params.id,\n                        name: this.itemModifier.name,\n                        uom: this.itemModifier.uom,\n                        price: this.itemModifier.price,\n                        priceLevel: this.itemModifier.priceLevel || {},\n                        category: this.itemModifier.category,\n                        group: this.itemModifier.group,\n                        status: this.itemModifier.status || 1,\n                        deleted: this.itemModifier.deleted || 0,\n                        itemLines: dataRow,\n                        type: 'Item Modifier',\n                        actionType: this.$route.params.id ? this.$route.query.type : \"new\",\n                    };\n                    itemModifierHandler\n                        .create(data)\n                        .then((response) => {\n                            if (response.data.statusCode === 201) {\n                                this.$snotify.success(\"Success\");\n                                this.close();\n                            }\n                        })\n                        .catch((e) => {\n                            this.$snotify.error(\"Something went wrong\");\n                            this.errors.push(e);\n                        });\n                });\n            });\n        },\n        cancel() {\n            window.history.go(-1);\n        },\n        close() {\n            window.history.go(-1)\n            // this.clear()\n            // this.$router.push({\n            //     name: \"Products Services\",\n            //     params: {\n            //         data: data,\n            //     },\n            // });\n        },\n        async loadSingleModifier() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true\n                    itemModifierHandler\n                        .get(this.$route.params.id)\n                        .then((response) => {\n                            if (response.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.itemModifier = response.data.data[0];\n                                this.itemModifierList = this.itemModifier.itemLines || []\n                                this.group = this.itemModifier.group || {}\n                                this.category = this.itemModifier.category || {}\n                                // this.itemModifier.category = this.category\n                                this.onCategoryChanged(this.category)\n                                this.onPriceLevelChanged()\n                            } else {\n                                this.$snotify.error(\"Something went wrong\");\n                                this.showLoading = false\n                            }\n                        })\n                });\n            });\n        },\n        onPriceLevelChanged() {\n            const pl = this.itemModifier.priceLevel || {}\n            const currency = pl.currency || {}\n            this.code = currency.code || ''\n        },\n        async loadPriceLevel() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    const strFilter = '?nature=sale'\n                    priceLevelHandler.get(strFilter).then(res => {\n                        const data = res || []\n                        this.priceLevels = data//.filter(n => n.type.name === 'Standard')\n                        if (data.length > 0 && this.$route.params.id === undefined) {\n                            this.itemModifier.priceLevel = data[0]\n                            this.onPriceLevelChanged()\n                        }\n                    })\n\n                }, 10)\n            })\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.uom || {}\n            const code = uom.code || ''\n            if (uom) {\n                return `<span>${uom.uom ? code : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n    },\n    mounted: async function () {\n        await this.initData();\n        // await this.loadUOM();\n        await this.loadPriceLevel();\n        // await this.loadCategory();\n        // await this.loadGroup();\n        await this.loadSaleFormContent();\n    },\n    watch: {\n        // id() {\n        //     // this.product = this.selectedProduct\n        //     window.console.log(this.id, \"watch\");\n        //     if (this.$route.params.id === undefined) {\n        //         this.clear();\n        //     } else {\n        //         this.loadSingleModifier();\n        //     }\n        //     // if (this.id !== undefined) {\n        //     //     this.loadSingleModifier()\n        //     // } else {\n        //     //     this.clear()\n        //     // }\n        // },\n    },\n};\n</script>\n\n<style scoped>\n.dropdown-header {\n    border-width: 0 0 1px 0;\n    text-transform: uppercase;\n}\n\n.dropdown-header > span {\n    display: inline-block;\n    padding: 10px;\n}\n\n.dropdown-header > span:first-child {\n    width: 50px;\n}\n\n.k-list-container > .k-footer {\n    padding: 10px;\n}\n\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #f8f8f9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.section2 {\n    border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\n.my_radio [type=\"radio\"] + label {\n    position: relative;\n    padding: 6px;\n    grid-template-columns: 15% 80% !important;\n    display: grid;\n}\n\n.upload_btn {\n    padding: 10px 6px;\n    text-align: center;\n    color: white;\n    margin-top: 15px;\n    margin-bottom: none !important;\n    border-radius: 22px;\n    background: #92d050;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.grid-function table th {\n    padding: 10.5px 17px !important;\n}\n</style>\n"]}]}