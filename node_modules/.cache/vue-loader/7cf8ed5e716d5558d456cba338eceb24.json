{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/BudgetSummary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/BudgetSummary.vue","mtime":1638499443140},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BudgetSummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAifile":"BudgetSummary.vue","sourceRoot":"src/views/budgeting/budgets","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-3\">\n      <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\" min-height=\"200px\">\n        <div id=\"grid\"></div>\n        <LoadingMe\n              :isLoading=\"isLoading\"\n              :fullPage=\"false\"\n              :myLoading=\"true\"\n              :type=\"'loading'\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\n/* Models */\nimport BudgetModel from \"@/scripts/model/Budget.js\";\nimport AccountModel from \"@/scripts/model/Account.js\";\n\nconst accountHandler = require(\"@/scripts/handler/accounting/account.js\");\nconst OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\nconst AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\nexport default {\n  components:{\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  name: \"BudgetSummary\",\n  props: {\n    initBudget: {\n      type: BudgetModel,\n    },\n  },\n  data: () => ({\n    budget: new BudgetModel(),\n    isLoading: true,\n  }),\n  methods: {\n    /* Load Data */\n    async loadData() {\n      /* Bind Budget */\n      this.budget = this.initBudget;\n\n      /* Set Current Fiscal Date */\n      let currencyFiscalDate = Helper.getFiscalDateByDate(new Date());\n      let fiscalMonths = Helper.generateFiscalMonths(\n        currencyFiscalDate.start_date,\n        currencyFiscalDate.end_date,\n        \"12\"\n      );\n\n      let entries = [];\n      let Entry = kendo.data.Model.define({\n        id: \"uuid\", // the identifier of the model\n        fields: {\n          month_name: { type: \"number\", defaultValue: \"\" },\n          rev: { type: \"number\", defaultValue: 0 },\n          cogs: { type: \"number\", defaultValue: 0 },\n          ope_exp: { type: \"number\", defaultValue: 0 },\n          oth_exp_dep: { type: \"number\", defaultValue: 0 },\n          oth_rev: { type: \"number\", defaultValue: 0 },\n          fin_cost_tax: { type: \"number\", defaultValue: 0 },\n          net_income: { type: \"number\", defaultValue: 0 },\n        },\n      });\n\n      // Load Account List\n      let accounts = await accountHandler.getAll();\n\n      /* Total */\n      let totalEntry = new Entry();\n      totalEntry.month_name = \"Total\";\n\n      /* Gathering from line */\n      this.budget.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.data.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        let nature = 1; /* Default Naure is Dr = 1 */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          nature = -1;\n        }\n\n        /* Revenue */\n        if (account.account_type.number === AccountTypeCode.REVENUE) {\n          totalEntry.rev += value.amount * nature;\n        }\n\n        /* COGS */\n        if (account.account_type.number === AccountTypeCode.COGS) {\n          totalEntry.cogs += value.amount * nature;\n        }\n\n        /* Other Expense & Depreciations */\n        if (\n          account.account_type.number === AccountTypeCode.OTHER_EXPENSE ||\n          account.account_type.number === AccountTypeCode.DEPRECIATION\n        ) {\n          totalEntry.oth_exp_dep += value.amount * nature;\n        }\n\n        /* Other Revenue */\n        if (account.account_type.number === AccountTypeCode.OTHER_REVENUE) {\n          totalEntry.oth_rev += value.amount * nature;\n        }\n\n        /* Financing Cost & Tax */\n        if (\n          account.account_type.number === AccountTypeCode.FINANCING_COST ||\n          account.account_type.number === AccountTypeCode.TAX\n        ) {\n          totalEntry.fin_cost_tax += value.amount * nature;\n        }\n      });\n\n      /* Gathering from budget estimations */\n      this.budget.budget_estimations.forEach((value) => {\n        /* Operating Expense */\n        if (\n          value.account_type_number === OrderNumberPL.OperatingExpense.number\n        ) {\n          totalEntry.ope_exp += value.balance;\n        }\n\n        /* Profit For The Period */\n        if (\n          value.account_type_number === OrderNumberPL.ProfitForThePeriod.number\n        ) {\n          totalEntry.net_income += value.balance;\n        }\n      });\n\n      /* Add to entries */\n      entries.push(totalEntry);\n      /* End Total */\n\n      /* Monthly */\n      let monthEntries = [];\n      for (let i = 0; i < 12; i++) {\n        let monthEntry = new Entry();\n\n        /* Month Name */\n        monthEntry.month_name = fiscalMonths[i];\n\n        /* Add Entry */\n        monthEntries.push(monthEntry);\n      }\n\n      /* Gathering from line */\n      this.budget.lines.forEach((value) => {\n        /* Set Account Information */\n        let account = new AccountModel(\n          accounts.data.find((item) => item.uuid === value.account_uuid)\n        );\n\n        /* Reverse Nature */\n        let nature = 1; /* Default Naure is Dr = 1 */\n        if (account.account_type.nature.toLowerCase() === \"cr\") {\n          nature = -1;\n        }\n\n        for (let i = 0; i < 12; i++) {\n          /* Revenue */\n          if (account.account_type.number === AccountTypeCode.REVENUE) {\n            monthEntries[i].rev += value.monthly_amount[i].amount * nature;\n          }\n\n          /* COGS */\n          if (account.account_type.number === AccountTypeCode.COGS) {\n            monthEntries[i].cogs += value.monthly_amount[i].amount * nature;\n          }\n\n          /* Other Expense & Depreciations */\n          if (\n            account.account_type.number === AccountTypeCode.OTHER_EXPENSE ||\n            account.account_type.number === AccountTypeCode.DEPRECIATION\n          ) {\n            monthEntries[i].oth_exp_dep +=\n              value.monthly_amount[i].amount * nature;\n          }\n\n          /* Other Revenue */\n          if (account.account_type.number === AccountTypeCode.OTHER_REVENUE) {\n            monthEntries[i].oth_rev += value.monthly_amount[i].amount * nature;\n          }\n\n          /* Financing Cost & Tax */\n          if (\n            account.account_type.number === AccountTypeCode.FINANCING_COST ||\n            account.account_type.number === AccountTypeCode.TAX\n          ) {\n            monthEntries[i].fin_cost_tax +=\n              value.monthly_amount[i].amount * nature;\n          }\n        }\n      });\n\n      /* Gathering from budget estimations */\n      this.budget.budget_estimations.forEach((value) => {\n        for (let i = 0; i < 12; i++) {\n          let property = NumberInWord[i];\n\n          /* Operating Expense */\n          if (\n            value.account_type_number === OrderNumberPL.OperatingExpense.number\n          ) {\n            monthEntries[i].ope_exp += value[property];\n          }\n\n          /* Profit For The Period */\n          if (\n            value.account_type_number ===\n            OrderNumberPL.ProfitForThePeriod.number\n          ) {\n            monthEntries[i].net_income += value[property];\n          }\n        }\n      });\n\n      /* Add to entries */\n      monthEntries.forEach((value) => {\n        entries.push(value);\n      });\n      /* End Monthly */\n\n      /* Styles */\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      kendo.jQuery(\"#grid\").kendoGrid({\n        dataSource: {\n          data: entries,\n          pageSize: 20,\n        },\n        scrollable: true,\n        columns: [\n          {\n            field: \"month_name\",\n            title: i18n.t(\"monthly\"),\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"rev\",\n            title: i18n.t(\"revenue\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"cogs\",\n            title: i18n.t(\"cost_of_goods_sold\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"ope_exp\",\n            title: i18n.t(\"operating_expenses\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"oth_exp_dep\",\n            title: i18n.t(\"other_expenses_&_depreciations\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"oth_rev\",\n            title: i18n.t(\"other_revenues\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"fin_cost_tax\",\n            title: i18n.t(\"financing_cost_&_tax\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n          {\n            field: \"net_income\",\n            title: i18n.t(\"net_income\"),\n            format: \"{0:n}\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          },\n        ],\n      });\n      this.isLoading = false\n    },\n  },\n  watch: {\n    initBudget() {\n      this.loadData();\n    },\n  },\n};\n</script>\n\n<style scoped></style>\n"]}]}