{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/resources/loan_calculator/Input.vue?vue&type=style&index=0&id=2d66d974&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/resources/loan_calculator/Input.vue","mtime":1638499443240},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICAgIGhlaWdodDogMzJweCAhaW1wb3J0YW50OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpICFpbXBvcnRhbnQ7Cn0KCi52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOmZpcnN0LWNoaWxkID4gdGQgewogICAgYm9yZGVyLXRvcDogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGJvZHkKPiB0cjpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpOm5vdCgudi1kYXRhLXRhYmxlX19lbXB0eS13cmFwcGVyKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoZA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Input.vue","sourceRoot":"src/views/finances/resources/loan_calculator","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-4 no_border\" elevation=\"0\">\n                <h2 class=\"font_20\">{{ $t(\"loan_calculator\") }}</h2>\n                <v-row>\n                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                        <label>{{ $t(\"type_of_loan\") }}</label>\n                        <v-select\n                            class=\"mt-1\"\n                            id=\"paymentTermSelector\"\n                            :items=\"paymentMethod\"\n                            item-value=\"id\"\n                            item-text=\"name\"\n                            v-model=\"loan.paymentMethod\"\n                            no-data-text=\"No data found.\"\n                            clearable\n                            outlined />\n                        <label>{{ $t(\"loan_term_in_month\") }}</label>\n                        <v-text-field\n                            type=\"number\"\n                            class=\"mt-1\"\n                            v-model=\"loan.period\"\n                            outlined\n                            placeholder=\"Input\"\n                        />\n<!--                        <label>{{ $t(\"origination_application_fee\") }}</label>-->\n<!--                        <v-row class=\"mt-1 mr-0\">-->\n<!--                            <v-col sm=\"2\" cols=\"5\" class=\"py-0 pr-0\">-->\n<!--                                <div class=\"code_text text-bold\">-->\n<!--                                    USD-->\n<!--                                </div>-->\n<!--                            </v-col>-->\n<!--                            <v-col sm=\"10\" cols=\"7\" class=\"py-0 px-0\">-->\n<!--                                <v-text-field-->\n<!--                                    class=\" custom-border \"-->\n<!--                                    outlined-->\n<!--                                    :rules=\"[(v) => !!v || 'Number is required']\"-->\n<!--                                    required-->\n<!--                                />-->\n<!--                            </v-col>-->\n<!--                        </v-row>-->\n                    </v-col>\n                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                        <label>{{ $t(\"loan_amount\") }}</label>\n                        <v-row class=\"mt-1 mr-0\">\n                            <v-col sm=\"2\" cols=\"5\" class=\"py-0 pr-0\">\n                                <div class=\"code_text text-bold\">\n                                    USD\n                                </div>\n                            </v-col>\n                            <v-col sm=\"10\" cols=\"7\" class=\"py-0 px-0\">\n                                <v-text-field\n                                    type=\"number\"\n                                    class=\" custom-border \"\n                                    v-model=\"loan.amount\"\n                                    outlined\n                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                    required\n                                />\n                            </v-col>\n                        </v-row>\n                        <label>{{ $t(\"interest_rate_per_month\") }}</label>\n                        <v-row class=\"mt-1 mr-0\">\n                            <v-col sm=\"2\" cols=\"5\" class=\"py-0 pr-0\">\n                                <div class=\"code_text text-bold\">\n                                    %\n                                </div>\n                            </v-col>\n                            <v-col sm=\"10\" cols=\"7\" class=\"py-0 px-0\">\n                                <v-text-field\n                                    type=\"number\"\n                                    class=\" custom-border \"\n                                    outlined\n                                    v-model=\"loan.interestRate\"\n                                    :rules=\"[(v) => !!v || 'Number is required']\"\n                                    required\n                                />\n                            </v-col>\n                        </v-row>\n<!--                        <label>{{ $t(\"monthly_service_charge\") }}</label>-->\n<!--                        <v-row class=\"mt-1 mr-0\">-->\n<!--                            <v-col sm=\"2\" cols=\"5\" class=\"py-0 pr-0\">-->\n<!--                                <div class=\"code_text text-bold\">-->\n<!--                                    %-->\n<!--                                </div>-->\n<!--                            </v-col>-->\n<!--                            <v-col sm=\"10\" cols=\"7\" class=\"py-0 px-0\">-->\n<!--                                <v-text-field-->\n<!--                                    class=\" custom-border \"-->\n<!--                                    outlined-->\n<!--                                    :rules=\"[(v) => !!v || 'Number is required']\"-->\n<!--                                    v-model=\"loan.mServiceCharge\"-->\n<!--                                    required-->\n<!--                                />-->\n<!--                            </v-col>-->\n<!--                        </v-row>-->\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col sm=\"12\">\n                        <h4 class=\"text-bold\">{{ $t(\"disclaimer\") }}</h4>\n                        <p class=\"mb-2\">1. {{ $t(\"disclaimer_desc1\") }}</p>\n                        <p class=\"mb-2\">2. {{ $t(\"disclaimer_desc3\") }}</p>\n                        <p class=\"mb-2\">3. {{ $t(\"disclaimer_desc1\") }}</p>\n                    </v-col>\n                    <v-col class=\"12\">\n                        <v-btn\n                            @click=\"resetForm\"\n                            color=\"black\"\n                            outlined\n                            class=\"capitalize black--text float-left \"\n                        >{{ $t(\"reset\") }}\n                        </v-btn\n                        >\n                        <v-btn\n                            @click=\"loanCalculate\"\n                            color=\"primary\"\n                            class=\"capitalize white--text float-right \"\n                        >{{ $t(\"calculate\") }}\n                        </v-btn\n                        >\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\n// import kendo from \"@progress/kendo-ui\";\nimport kendo from \"@progress/kendo-ui\";\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\n\nexport default {\n    data: () => ({\n        showLoading: false,\n        paymentMethod: [\n            {id: 1, name: 'បង់ថយ'},\n            {id: 2, name: 'បង់ថេរ'}\n        ],\n        loanType: \"\",\n        loan: {\n            amount: 0,\n            period: 12,\n            startPaymentDate: 0,\n            interestRate: 0,\n            mServiceCharge: 0,\n            paymentMethod: 1,\n            monthlyRepayment: 0,\n            totalPayment: 0,\n            schdules: [],\n            decimal: 2\n        },\n        totalInterest: 0,\n        scheduleAR: [],\n        saleFormContent: {},\n        totalPayment: 0,\n        scheduleData: [],\n        numberFormat: 'n0'\n    }),\n    components: {\n        // LoadingMe: () => import(`@/components/Loading`),\n    },\n    methods: {\n        resetForm(){\n            this.loan = {\n                amount: 0,\n                period: 12,\n                startPaymentDate: 0,\n                interestRate: 0,\n                mServiceCharge: 0,\n                paymentMethod: 1,\n                monthlyRepayment: 0,\n                totalPayment: 0,\n                schdules: [],\n                decimal: 2\n            }\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                this.numberFormat = 'n' + this.saleFormContent.decimal\n                                this.loan.decimal = data[0].decimal\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        alertError(msg) {\n            if (msg) {\n                this.$swal({\n                    position: 'center',\n                    icon: 'error',\n                    title: 'Oops...!',\n                    text: msg,\n                    showConfirmButton: true\n                })\n            } else {\n                this.showLoading = false\n                this.loadingTextAlert = \"Failed!\"\n                this.loadingColorAlert = \"#eb8334\"\n                this.changeAlertStatus()\n            }\n        },\n        loanCalculate(){\n            if(this.loan.amount <= 0){\n                this.alertError('Amount must over 0')\n                return\n            }\n            if(this.loan.paymentMethod == 1){\n                this.schedule4()\n            }else if(this.loan.paymentMethod == 2){\n                this.schedule5()\n            }\n            this.next();\n        },\n        next() {\n            this.loan.schdules = this.scheduleData\n            this.$emit(\"next\", this.loan);\n        },\n        paymentMethodChange(){\n            if(this.loan.paymentMethod == 1){\n                this.schedule4()\n            }else if(this.loan.paymentMethod == 2){\n                this.schedule5()\n            }\n        },\n        schedule4() {\n            this.scheduleAR = []\n            this.scheduleData = []\n            let p = parseFloat(this.loan.amount)\n            let t = parseFloat(this.loan.period)\n            let ir = parseFloat(this.loan.interestRate)\n            let sd = new Date()\n            //Principle for every month\n            let fp = (p / t).toFixed(this.saleFormContent.decimal)\n            fp = parseFloat(fp)\n            //Total by month\n            // eslint-disable-next-line no-unused-vars\n            let ft = 0\n            let self = this\n            let tInterest = 0\n            for (let i = 0; i < t; i++) {\n                ft += fp\n                let ite = (p * ir) / 100;\n                ite = parseFloat(ite.toFixed(self.saleFormContent.decimal));\n                tInterest += ite;\n                //Interest rate\n                //date\n                let sda = sd;\n                if (i > 0) {\n                    sd = new Date(sd);\n                    sd.setMonth(sd.getMonth() + 1);\n                    sda = sd;\n                }\n                self.scheduleAR.push({\n                    principal_r: p,\n                    principal: fp,\n                    interest: ite,\n                    total: ite + fp,\n                    date: kendo.toString(sda, \"yyyy-MM-dd\"),\n                    numberFormat: self.numberFormat,\n                });\n                p = parseFloat((p - fp).toFixed(self.saleFormContent.decimal));\n                // console.log(sd);\n            }\n            //Find balance\n            p = parseFloat(p.toFixed(self.saleFormContent.decimal));\n            if (p != 0) {\n                this.makeBalance(p);\n            }\n            if (this.scheduleAR.length > 0) {\n                this.loan.monthlyRepayment = parseFloat(this.scheduleAR[0].total.toFixed(this.saleFormContent.decimal))\n            }\n            this.totalInterest = kendo.toString(tInterest, this.numberFormat)\n            this.loan.totalInterest = tInterest\n            this.totalPayment = kendo.toString(tInterest + parseFloat(this.loan.amount), this.numberFormat)\n            this.loan.totalPayment = tInterest + parseFloat(this.loan.amount)\n            this.addTotal()\n            this.scheduleData = this.scheduleAR\n        },\n        makeBalance(amt) {\n            let idx = parseFloat(this.loan.period) - 1\n            let oamt = this.scheduleAR[idx].principal\n            let namt = oamt + amt\n            namt = parseFloat(namt.toFixed(this.saleFormContent.decimal))\n            this.scheduleAR[idx].principal = namt\n            this.scheduleAR[idx].total = this.scheduleAR[idx].interest + namt\n        },\n        fixRate(P, r, t) {\n            // var C = 0;\n            // var a = P*r;\n            // var b = Math.pow((1+r), t);\n            //     b = parseFloat(b.toFixed(2));\n            // var c = 1/b;\n            // var d = 1 - c;\n            //     d = parseFloat(d.toFixed(2));\n            // C = a/d;\n            // console.log(P+\"--\"+r+\"--\"+t);\n            // return C;\n            let l = 1 / t, i = r * l, n = t\n            let emi = i * P / [1 - Math.pow((1 + i), -n)]\n            return emi\n        },\n        schedule5() {\n            let self = this\n            if(parseFloat(this.loan.interestRate) <= 0){\n                return\n            }\n            this.scheduleAR = []\n            this.scheduleData = []\n            let fprice = this.fixRate(parseFloat(this.loan.amount), ((parseFloat(this.loan.interestRate) * parseFloat(this.loan.period)) / 100), parseFloat(this.loan.period))\n            fprice = parseFloat(fprice.toFixed(this.saleFormContent.decimal))\n            this.loan.monthlyRepayment = parseFloat(fprice.toFixed(this.saleFormContent.decimal))\n            let p = parseFloat(this.loan.amount)\n            let t = parseFloat(this.loan.period)\n            let sd = new Date()\n            let ir = parseFloat(this.loan.interestRate)\n            //add 1 hour\n            let oldDate = new Date(sd)\n            let hour = oldDate.getHours()\n            let newDate = oldDate.setHours(hour + 1)\n            sd = new Date(newDate)\n            let tInterest = 0\n            for (let i = 0; i < t; i++) {\n                //date\n                let start = 0,\n                    end = 0,\n                    diff = 0,\n                    days = 0;\n                if (i > 0) {\n                    sd = new Date(self.scheduleAR[i - 1].date);\n                    sd.setMonth(sd.getMonth() + 1);\n                    // let d = new Date(sd);\n                    //calculate day\n                    start = new Date(self.scheduleAR[i - 1].date);\n                    end = new Date(sd);\n                    diff = new Date(end - start);\n                    days = diff / 1000 / 60 / 60 / 24;\n                } else if (i == 0) {\n                    //calculate day\n                    start = new Date();\n                    end = new Date(sd);\n                    diff = new Date(end - start);\n                    days = diff / 1000 / 60 / 60 / 24;\n                }\n                if (days < 0) days = 0;\n                // let cadate = parseInt(days);\n                //interest\n                // let ite = p * ((parseFloat(this.interest_rate) * 12) / 100) / 360 * cadate;\n                let ite = (p * ir) / 100;\n                ite = parseFloat(ite.toFixed(2));\n                tInterest += ite;\n                let sda = sd;\n                self.scheduleAR.push({\n                    principal_r: p,\n                    principal: fprice - ite,\n                    interest: ite,\n                    total: fprice,\n                    date: kendo.toString(sda, \"yyyy-MM-dd\"),\n                    numberFormat: self.numberFormat,\n                });\n                p = parseFloat((p - (fprice - ite)).toFixed(self.saleFormContent.decimal));\n            }\n            // console.log(p);\n            p = parseFloat(p.toFixed(self.saleFormContent.decimal));\n            if (p != 0) {\n                this.makeBalance(p);\n            }\n            this.totalInterest = kendo.toString(tInterest, this.numberFormat)\n            this.loan.totalInterest = tInterest\n            this.totalPayment = kendo.toString(tInterest + parseFloat(this.loan.amount), this.numberFormat)\n            this.loan.totalPayment = tInterest + parseFloat(this.loan.amount)\n            this.addTotal()\n            this.scheduleData = this.scheduleAR\n        },\n        addTotal() {\n            this.scheduleAR.push({\n                principal_r: '',\n                principal: parseFloat(this.loan.amount),\n                interest: this.totalInterest,\n                total: this.totalPayment,\n                date: 'Total',\n                numberFormat: this.numberFormat,\n                transaction_number: '',\n            })\n            // window.console.log(this.scheduleAR, 'loan schedule')\n        },\n    },\n    computed: {},\n    mounted: async function () {\n        this.loadSaleFormContent()\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table {\n    background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n    border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}