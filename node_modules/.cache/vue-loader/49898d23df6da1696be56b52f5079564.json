{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/CashRefund.vue?vue&type=style&index=0&id=26d59f3f&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/customers/CashRefund.vue","mtime":1642155812638},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZ1bmN0aW9uX3dyYXBwZXIgewogICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50Owp9Cgoudi1hcHBsaWNhdGlvbi0taXMtbHRyIC52LXRleHQtZmllbGQgLnYtaW5wdXRfX2FwcGVuZC1pbm5lciB7CiAgICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7Cn0KCi52LWlucHV0X19zbG90IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYgIWltcG9ydGFudDsKfQoKLmZ1bmN0aW9uX2NvbnRlbnQgLmxhYmVsIHsKICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Cn0KCi5ib3JkZXJfcmFkaXVzMTAgewogICAgYm9yZGVyLXJhZGl1czogMTBweCAhaW1wb3J0YW50OwogICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsKfQoKLnBhLTMudi1jYXJkIGg0IHsKICAgIGZvbnQtc2l6ZTogMThweDsKICAgIGNvbG9yOiAjMzMzOwp9CgoucGEtMy52LWNhcmQgcCB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBjb2xvcjogI2I1YjViNTsKfQoKLmF0dGFjaG1lbnRfZmlsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWZlZGVkOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgouYXR0YWNobWVudF90YWJsZS52LWRhdGEtdGFibGUgdGFibGUgewogICAgYm9yZGVyOiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7Cn0KCi5hdHRhY2htZW50X3RhYmxlIHRhYmxlIHRyIHRoIHsKICAgIGJvcmRlci1sZWZ0OiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7CiAgICBoZWlnaHQ6IDM1cHg7CiAgICBib3JkZXItcmlnaHQ6IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTsKfQoKLmJsb2NrX2RlYml0LAouYmxvY2tfY3JlZGl0IHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmOwp9CgouYmxvY2tfZGViaXQgcC5udW1iZXIsCi5ibG9ja19jcmVkaXQgcC5udW1iZXIgewogICAgZm9udC1zaXplOiAyNXB4OwogICAgY29sb3I6ICM3ZjdmN2Y7Cn0KCi5ibG9ja19kZWJpdCBoNSwKLmJsb2NrX2NyZWRpdCBoNSwKLmJsb2NrX2RpZmZlcmVuY2UgaDUgewogICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKICAgIGNvbG9yOiAjN2Y3ZjdmOwogICAgZm9udC1zaXplOiAxNXB4OwogICAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKfQoKLmJsb2NrX2RpZmZlcmVuY2UgaDUgewogICAgZm9udC1zaXplOiAxOHB4Owp9CgouYmxvY2tfZGlmZmVyZW5jZSBoNSBzcGFuIHsKICAgIGZvbnQtc2l6ZTogMTVweDsKfQoKLmN1c3RvbV9ncmlkIHRhYmxlIHRoOmxhc3QtY2hpbGQgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQoKLmNvbG9yX2dyZWVuIHsKICAgIGNvbG9yOiAjMDNiMTU0Owp9CgpAbWVkaWEgKG1pbi13aWR0aDogMTI2NHB4KSB7CiAgICAuY29udGFpbmVyIHsKICAgICAgICBtYXgtd2lkdGg6IDEyNTBweDsKICAgIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CiAgICAucHQtNi5jb2wtc20tNS5jb2wtMTIgewogICAgICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7CiAgICB9CgogICAgLmNvZGVfdGV4dCB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CgogICAgLnBob25lX25vX3B0IHsKICAgICAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OwogICAgfQoKICAgIC5zZWxlY3RfdGVtcGxhdGUsCiAgICAuc2F2ZV9vcHRpb24gewogICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7CiAgICB9Cn0KCi5oaWRlX3NtYWxsX2Jhcl9jbGFzcyB7CiAgICBtYXgtd2lkdGg6IDA7CiAgICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW47CiAgICBmbGV4OiAwIDAgMDsKfQoKLmhpZGVfYmlnX2Jhcl9jbGFzcyB7CiAgICBtYXgtd2lkdGg6IDEwMCU7CiAgICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW47CiAgICBmbGV4OiAwIDAgMTAwJTsKfQoKLmluZm9fYWRkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5zbWFsbF9zaWRlYmFyIHsKICAgIGhlaWdodDogOTglOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGYxZjU7Cn0KCi5pY29uQXJyb3cgewogICAgcmlnaHQ6IC0zNXB4OwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAtMTBweDsKfQoKLmljb25BcnJvd0hpZGUgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IC03cHg7CiAgICBib3R0b206IC0xMHB4Owp9CgouY29sb3JfZ3JleSB7CiAgICBjb2xvcjogIzgwODA4MDsKfQoKLmNhcmRfZ3JlZW4gewogICAgbWluLWhlaWdodDogNzBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGIwNTAgIWltcG9ydGFudDsKICAgIGNvbG9yOiAjZmZmZmZmOwp9CgoubGJfYm9sZCB7CiAgICBmb250LXNpemU6IDEycHg7Cn0KCi5kZXRpYWxfc21hbGxzaWRlX3AgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAxMHB4Owp9CgouY2FyZF9iYWNrZ3JvdW5kIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNlZGYxZjU7CiAgICBtaW4taGVpZ2h0OiAxMjBweDsKfQoKLmRlcG9zaXRlX2lucHV0IHsKICAgIHdpZHRoOiAxMDBweDsKfQoKLmJ0bl9zYXZlX2RyYWZ0IHsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjBmMCAhaW1wb3J0YW50OwogICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7Cn0KCi5zYXZlX29wdGlvbiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAzODY0ICFpbXBvcnRhbnQ7Cn0KCi5idG5fYWRkX3NtYWxsIHsKICAgIGhlaWdodDogMjdweCAhaW1wb3J0YW50OwogICAgbWluLXdpZHRoOiAyNXB4ICFpbXBvcnRhbnQ7CiAgICBmb250LXNpemU6IDEwcHg7CiAgICBwYWRkaW5nOiAwIDIycHggIWltcG9ydGFudDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGIwNTAgIWltcG9ydGFudDsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgoubGlzdF9zaXRlX2ludiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJkMDUwOwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBmb250LXNpemU6IDEycHg7Cn0KCi5saXN0X3NpdGVfZXhwIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjNWUwYjQ7CiAgICBjb2xvcjogIzAwMDAwMDsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGxpbmUtaGVpZ2h0OiAxNnB4OwogICAgbWluLWhlaWdodDogNDBweDsKfQoKLmNoZWNrYm94X2ludiB7CiAgICBwYWRkaW5nOiAycHg7CiAgICBtYXJnaW4tdG9wOiAzcHg7CiAgICBtYXJnaW4tcmlnaHQ6IDJweDsKfQoKLmV4cF9zZWxlY3QgewogICAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["CashRefund.vue"],"names":[],"mappingsyfile":"CashRefund.vue","sourceRoot":"src/views/customers","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\"\n                    >\n                        <v-row>\n                            <v-col\n                                class=\"bigSide py-0\"\n                                sm=\"8\"\n                                cols=\"12\"\n                                style=\"transition: .3s ease-in;\"\n                                :class=\"{ hide_big_bar_class: isHideBar }\"\n                            >\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <v-card outlined dense class=\"no_border\">\n                                        <h2 class=\"mb-0\">{{ $t(\"cash_refund\") }}</h2>\n                                        <v-icon\n                                            v-if=\"isHideBar\"\n                                            onclick=\"window.history.go(-1); return false;\"\n                                            style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                            class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                        <span\n                                            style=\"transition: .3s ease-in; z-index:10;\"\n                                            :class=\"{\n                        iconArrow: !isHideBar,\n                        iconArrowHide: isHideBar,\n                      }\"\n                                        >\n                      <v-icon\n                          size=\"22\"\n                          class=\"arr_icon\"\n                          @click=\"hide_smallsitebar\"\n                          v-if=\"isHideBar\"\n                      >\n                        mdi-chevron-left-circle\n                      </v-icon>\n                      <v-icon\n                          size=\"22\"\n                          class=\"arr_icon\"\n                          @click=\"hide_smallsitebar\"\n                          v-if=\"!isHideBar\"\n                      >\n                        mdi-chevron-right-circle\n                      </v-icon></span\n                                        >\n                                    </v-card>\n                                    <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                        <v-row>\n                                            <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                                                <label class=\"label  mb-0\">{{ $t(\"customer\") }}</label>\n                                                <dropdownlist\n                                                    class=\"v-input__slot\"\n                                                    :data-items=\"customerList\"\n                                                    @change=\"onChange\"\n                                                    :value=\"transaction.customer\"\n                                                    :data-item-key=\"dataItemKey\"\n                                                    :text-field=\"textField\"\n                                                    :default-item=\"defaultItem\"\n                                                    :filterable=\"true\"\n                                                    @filterchange=\"onFilterChange\"\n                                                >\n                                                </dropdownlist>\n                                                <label class=\"label  mb-0\">{{ $t(\"date\") }}</label>\n                                                <app-datepicker\n                                                    :initialDate=\"transaction.transactionDate\"\n                                                    @onChanged=\"onDateChanged\"\n                                                    @emitDate=\"transaction.transactionDate = $event\"\n                                                />\n                                                <label class=\"label mb-0 mt-1\">{{\n                                                        $t(\"number\")\n                                                    }}</label>\n                                                <v-row class=\"mt-1 mr-0\">\n                                                    <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                                                        <div class=\"code_text text-bold\">\n                                                            {{ transaction.transactionType.abbr }}\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                                                        <v-text-field\n                                                            class=\" custom-border \"\n                                                            v-model=\"transaction.number\"\n                                                            outlined\n                                                            :rules=\"[(v) => !!v || 'Number is required']\"\n                                                            required\n                                                        />\n                                                    </v-col>\n                                                    <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                                                        <v-icon\n                                                            color=\"black\"\n                                                            size=\"30\"\n                                                            class=\"border_qrcode\"\n                                                            @click=\"generateNumber\"\n                                                        >mdi-qrcode\n                                                        </v-icon>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                            <v-col sm=\"8\" cols=\"12\">\n                                                <v-col class=\"pb-0\" sm=\"6\" cols=\"12\">\n                                                    <label class=\"label mb-0\">{{\n                                                            $t(\"price_level\")\n                                                        }}</label>\n                                                    <v-select\n                                                        class=\"mt-1\"\n                                                        v-model=\"transaction.priceLevel\"\n                                                        :items=\"priceLevel\"\n                                                        @change=\"loadTransactionRate\"\n                                                        item-value=\"id\"\n                                                        item-text=\"name\"\n                                                        return-object\n                                                        clearable\n                                                        placeholder=\"Price Level\"\n                                                        tage=\"Default Price Level\"\n                                                        outlined\n                                                    />\n                                                </v-col>\n                                                <v-col\n                                                    sm=\"6\"\n                                                    col=\"6\"\n                                                    class=\"d-flex justify-space-between\"\n                                                >\n                                                    <div>\n                                                        <p class=\"label mb-0\">{{ $t(\"currency\") }}</p>\n                                                        <p class=\"label mb-0\">{{ currencyCode }}</p>\n                                                    </div>\n                                                    <div>\n                                                        <p class=\"label mb-0\">{{ $t(\"rate\") }}</p>\n                                                        <p class=\"label mb-0\">{{ transactionRate }}</p>\n                                                    </div>\n                                                </v-col>\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n\n                                    <v-row class=\"\" style=\"background-color: #fff;\">\n                                        <v-col sm=\"12\" cols=\"12\">\n                                            <p class=\"mb-0\">Items and deposit to be refunded</p>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                            <kendo-datasource\n                                                ref=\"itemLineDS\"\n                                                :data=\"itemLines\"\n                                                :change=\"dataSourceChanged\"\n                                            />\n                                            <kendo-grid\n                                                id=\"gridItemLine\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'itemLineDS'\"\n                                                :sortable=\"false\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                            >\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :width=\"55\"\n                                                    :column-menu=\"false\"\n                                                    :template=\"rowNumberTmpl\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-products',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: products',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'item'\"\n                                                    :title=\"$t('item')\"\n                                                    :template=\"itemTemplate\"\n                                                    :editor=\"ItemDropDownEditor\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :template=\"'<span>#=description#</span>'\"\n                                                    :width=\"160\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'qty'\"\n                                                    :title=\"$t('qty')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :template=\"'<span>#=qty#</span>'\"\n                                                    :width=\"80\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left; ' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'uom'\"\n                                                    :title=\"$t('uom')\"\n                                                    :width=\"100\"\n                                                    :template=\"UOMTemplate\"\n                                                    :editor=\"UOMDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: left',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'price'\"\n                                                    :title=\"$t('price')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"100\"\n                                                    :template=\"'<span>#=price#</span>'\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: left',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"100\"\n                                                    :template=\"'<span>#=amount#</span>'\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: left',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'discountItem'\"\n                                                    :title=\"$t('discount_item')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.discountItem\"\n                                                    :template=\"discountItemTemplate\"\n                                                    :editor=\"DiscountItemDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: left',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'vatTax'\"\n                                                    :title=\"$t('vat')\"\n                                                    :width=\"150\"\n                                                    :template=\"vatTemplate\"\n                                                    :editor=\"VatTaxDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'specificTax'\"\n                                                    :title=\"$t('specificTax')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.specificTax\"\n                                                    :template=\"\n                            '<span>#=specificTax.defaultTax?specificTax.defaultTax:``#</span>'\n                          \"\n                                                    :editor=\"SpecificTaxDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'otherTax'\"\n                                                    :title=\"$t('otherTax')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.otherTax\"\n                                                    :template=\"\n                            '<span>#=otherTax.defaultTax?otherTax.defaultTax:``#</span>'\n                          \"\n                                                    :editor=\"OtherTaxDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'publicLightingTax'\"\n                                                    :title=\"$t('pl_tax')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.publicLightingTax\"\n                                                    :template=\"\n                            '<span>#=publicLightingTax.defaultTax?publicLightingTax.defaultTax:``#</span>'\n                          \"\n                                                    :editor=\"PublicLightingTaxDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'saleUnit'\"\n                                                    :title=\"$t('sale_unit')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.saleUnit\"\n                                                    :template=\"saleUnitTemplate\"\n                                                    :editor=\"SaleUnitDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'employee'\"\n                                                    :title=\"$t('employee')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.employee\"\n                                                    :template=\"empImpl\"\n                                                    :editor=\"EmployeeDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{ style: 'text-align: left' }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :command=\"{\n                            iconClass: 'k-icon k-i-trash',\n                            text: 'Delete',\n                            click: removeRow,\n                            class: 'btn-plus',\n                          }\"\n                                                    :title=\"'Action'\"\n                                                    :width=\"100\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: left; background-color: #EDF1F5',\n                          }\"\n                                                />\n                                            </kendo-grid>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                            <v-row>\n                                                <v-col sm=\"5\" cols=\"12\" class=\"\">\n                                                    <v-btn\n                                                        class=\"float-left btn_plus mr-2\"\n                                                        @click=\"addRow\"\n                                                    >\n                                                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                    </v-btn>\n                                                    <v-btn\n                                                        @click=\"dialogCatalog = true\"\n                                                        class=\"float-left btn_plus mr-2 white--text text-capitalize\"\n                                                    >\n                                                        {{ $t(\"catalog\") }}\n                                                    </v-btn>\n                                                    <template>\n                                                        <v-file-input\n                                                            class=\"mt-0 pt-0 \"\n                                                            sm=\"3\"\n                                                            cols=\"6\"\n                                                            v-model=\"files\"\n                                                            :placeholder=\"$t('attachment')\"\n                                                            multiple\n                                                            prepend-icon=\"mdi-paperclip\"\n                                                        >\n                                                            <template v-slot:selection=\"{ text }\">\n                                                                <v-chip small label color=\"primary\">\n                                                                    {{ text }}\n                                                                </v-chip>\n                                                            </template>\n                                                        </v-file-input>\n                                                    </template>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row class=\"\" style=\"background-color: #fff;\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <kendo-datasource\n                                                ref=\"expenseAccountDS\"\n                                                :data=\"expenseLines\"\n                                                :change=\"onExpenseAccountDSChanges\"\n                                            />\n                                            <kendo-grid\n                                                id=\"expenseGrid\"\n                                                ref=\"expenseGrid\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'expenseAccountDS'\"\n                                                :sortable=\"false\"\n                                                :filterable=\"false\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                            >\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :template=\"expenseRowNumTmpl\"\n                                                    :width=\"55\"\n                                                    :column-menu=\"false\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-products',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: products',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'account'\"\n                                                    :title=\"$t('account')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#=account.name||``#</span>'\"\n                                                    :editor=\"expenseAccountEditor\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'quantity'\"\n                                                    :title=\"$t('qty')\"\n                                                    :width=\"160\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'uom'\"\n                                                    :title=\"$t('uom')\"\n                                                    :editor=\"UomEditor\"\n                                                    :template=\"'<span>#=uom.name||``#</span>'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right;',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'price'\"\n                                                    :title=\"$t('price')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'discount'\"\n                                                    :title=\"$t('discount')\"\n                                                    :template=\"'<span>#=discount.name||``#</span>'\"\n                                                    :editor=\"PurchaseDiscountItemEditor\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'tax_item'\"\n                                                    :title=\"$t('tax')\"\n                                                    :template=\"'<span>#=tax_item.defaultTax||``#</span>'\"\n                                                    :editor=\"PurchaseTaxEditor\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :command=\"{\n                            iconClass: 'k-icon k-i-trash',\n                            text: 'Delete',\n                            click: expenseRemoveRow,\n                            class: 'btn-plus',\n                          }\"\n                                                    :title=\"'&nbsp;'\"\n                                                    :width=\"100\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                />\n                                            </kendo-grid>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                            <v-row>\n                                                <v-col sm=\"9\" cols=\"12\" class=\"\">\n                                                    <v-btn\n                                                        color=\"primary\"\n                                                        class=\"float-left rounded-0 white--text mr-2\"\n                                                        @click=\"expenseAddRow\"\n                                                    >\n                                                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                    </v-btn>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n                                    <v-row class=\"\" style=\"background-color: #fff;\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                            <p class=\"mb-0\">\n                                                {{ $t(\"cash_account_used_for_refund\") }}\n                                            </p>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <kendo-datasource\n                                                ref=\"saleDepositDS\"\n                                                :change=\"cashAccountDSChanged\"\n                                                :data=\"cashAccountLine\"\n                                            />\n                                            <kendo-grid\n                                                id=\"gridSaleDeposit\"\n                                                class=\"grid-function\"\n                                                :data-source-ref=\"'saleDepositDS'\"\n                                                :sortable=\"false\"\n                                                :filterable=\"false\"\n                                                :column-menu=\"true\"\n                                                :editable=\"true\"\n                                                :scrollable-virtual=\"true\"\n                                            >\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :width=\"55\"\n                                                    :template=\"cashAccrowNumTmpl\"\n                                                    :column-menu=\"false\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-products',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: products',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'account'\"\n                                                    :title=\"$t('account')\"\n                                                    :width=\"200\"\n                                                    :template=\"accountTemplate\"\n                                                    :editor=\"accountDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :width=\"200\"\n                                                    :template=\"'<span>#=description#</span>'\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'method'\"\n                                                    :title=\"$t('method')\"\n                                                    :width=\"160\"\n                                                    :template=\"methodTemplate\"\n                                                    :editor=\"methodDropDownEditor\"\n                                                    :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'refNo'\"\n                                                    :title=\"$t('payment_ref')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :template=\"amountTemplate\"\n                                                    :editor=\"amountEditor\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                    :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                                                />\n\n                                                <kendo-grid-column\n                                                    :command=\"{\n                            iconClass: 'k-icon k-i-trash',\n                            text: 'Delete',\n                            click: cashAccRemoveRow,\n                            class: 'btn-plus',\n                          }\"\n                                                    :title=\"'&nbsp;'\"\n                                                    :width=\"100\"\n                                                    :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                                                />\n                                            </kendo-grid>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                            <v-row>\n                                                <v-col sm=\"7\" cols=\"12\" class=\"pb-0\">\n                                                    <v-btn\n                                                        class=\"float-left rounded-0 white--text mr-2\"\n                                                        color=\"primary\"\n                                                        @click=\"addCashAccRow\"\n                                                    >\n                                                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                    </v-btn>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <v-row>\n                                                <v-col class=\"pt-0\" sm=\"6\" cols=\"6\">\n                                                    <v-card class=\"no-boxshadow pa-3\" color=\"grayBg\">\n                                                        <v-row>\n                                                            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                                                <label>{{\n                                                                        $t(\"message_on_cash_refund\")\n                                                                    }}</label>\n                                                                <v-textarea\n                                                                    class=\" mt-1\"\n                                                                    outlined\n                                                                    no-resize\n                                                                    height=\"70px\"\n                                                                    rows=\"2\"\n                                                                    v-model=\"transaction.transactionNote\"\n                                                                    placeholder=\"This will appear on the invoice\"\n                                                                />\n                                                                <label>{{ $t(\"message_for_journal\") }}</label>\n                                                                <v-textarea\n                                                                    class=\"mt-1\"\n                                                                    outlined\n                                                                    no-resize\n                                                                    height=\"70px\"\n                                                                    v-model=\"transaction.journalNote\"\n                                                                    rows=\"2\"\n                                                                    placeholder=\"This will appear on the invoice\"\n                                                                />\n                                                            </v-col>\n                                                        </v-row>\n                                                    </v-card>\n                                                </v-col>\n                                                <v-col class=\"pt-0\" sm=\"6\" cols=\"6\">\n                                                    <v-simple-table>\n                                                        <template v-slot:default>\n                                                            <tbody>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">\n                                                                    {{ $t(\"subtotal\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">\n                                                                    {{ numberFormat(transaction.subTotal) }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">\n                                                                    {{ $t(\"general_discount\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">\n                                                                    ({{\n                                                                        numberFormat(transaction.discountTotal)\n                                                                    }})\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">\n                                                                    {{ $t(\"total_tax\") }}\n                                                                    <v-btn\n                                                                        @click=\"dialogTax = true\"\n                                                                        class=\"text-white text-bold rounded-0 float-right text-uppercase\"\n                                                                        style=\"height: 30px !important; background-color: rgb(0, 176, 80) !important\"\n                                                                    >\n                                                                        {{ $t(\"tax\") }}\n                                                                    </v-btn>\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">\n                                                                    {{\n                                                                        numberFormat(transaction.totalTaxAmount)\n                                                                    }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr style=\"background: #e1efd9\">\n                                                                <td class=\"text-left text-uppercase pr-0\">\n                                                                    {{ $t(\"total\") }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td\n                                                                    class=\"text-right color_green text-bold\"\n                                                                    id=\"total\"\n                                                                >\n                                                                    {{ numberFormat(transaction.total) }}\n                                                                </td>\n                                                            </tr>\n                                                            </tbody>\n                                                        </template>\n                                                    </v-simple-table>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n                                    <v-divider/>\n                                    <v-card outlined dense class=\"no_border function_footer\">\n                                        <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                                            <span v-html=\"errorMessage\"/>\n                                        </v-alert>\n                                        <v-select\n                                            class=\"mr-2 float-left select_template\"\n                                            v-model=\"transaction.formTemplate\"\n                                            :items=\"formAR\"\n                                            item-value=\"id\"\n                                            item-text=\"name\"\n                                            return-object\n                                            clearable\n                                            placeholder=\"Select Template\"\n                                            outlined\n                                        />\n                                        <v-btn\n                                            class=\"float-left  btn_cancel\"\n                                            onclick=\"window.history.go(-1); return false;\"\n                                        >{{ $t(\"cancel\") }}\n                                        </v-btn\n                                        >\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn class=\"ml-2 float-right save_option\" v-on=\"on\">\n                                                    {{ $t(\"save_option\") }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list rounded>\n                                                <v-list-item-group>\n                                                    <v-list-item>\n                                                        <v-list-item-content>\n                                                            <v-list-item-title\n                                                                v-if=\"!isEdit\"\n                                                                @click=\"saveNew\"\n                                                            >\n                                                                {{ $t(\"save_new\") }}\n                                                            </v-list-item-title>\n                                                        </v-list-item-content>\n                                                    </v-list-item>\n                                                    <v-list-item>\n                                                        <v-list-item-content>\n                                                            <v-list-item-title @click=\"saveClose\"\n                                                            >{{ $t(\"save_close\") }}\n                                                            </v-list-item-title>\n                                                        </v-list-item-content>\n                                                    </v-list-item>\n                                                </v-list-item-group>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn\n                                            class=\"float-right btn_save_draft\"\n                                            @click=\"saveDraft\"\n                                        >\n                                            {{ $t(\"save_draft\") }}\n                                        </v-btn>\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n\n                            <v-col\n                                class=\"smallSide\"\n                                sm=\"4\"\n                                style=\"transition: .3s ease-in;\"\n                                :class=\"{ hide_small_bar_class: isHideBar }\"\n                            >\n                                <h3\n                                    style=\"color: #b3b5bc; font-size:20px;\"\n                                    v-if=\"!isHideBar\"\n                                    class=\"text-uppercase float-right mt-n3\"\n                                >\n                                    Help\n                                    <v-icon\n                                        onclick=\"window.history.go(-1); return false;\"\n                                        style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                        class=\"float-right mt-n1\"\n                                    >close\n                                    </v-icon>\n                                </h3>\n\n                                <div v-if=\"!isHideBar\" class=\"small_sidebar mt-9 px-4 grayBg\">\n                                    <v-card\n                                        class=\"pa-3 no-boxshadow\"\n                                        style=\"min-height: 70px; background-color: #00b050 !important;\"\n                                    >\n                                        <h3\n                                            style=\"font-size: 18px\"\n                                            class=\"text-white text-uppercase mb-2\"\n                                        >\n                                            {{ $t(\"amount_returned\") }}\n                                        </h3>\n                                        <h3\n                                            class=\"text-bold float-right text-white\"\n                                            style=\"font-size: 22px\"\n                                        >\n                                            {{ numberFormat(transaction.total) }}\n                                        </h3>\n                                    </v-card>\n                                    <v-row>\n                                        <v-col sm=\"12\" cols=\"12\">\n                                            <h4 class=\"mb-2 text-uppercase\">{{ $t(\"analysis\") }}</h4>\n                                            <label class=\"label mb-0\">{{ $t(\"segment\") }}</label>\n                                            <v-select\n                                                class=\"mt-2\"\n                                                v-model=\"transaction.segment\"\n                                                :items=\"segments\"\n                                                item-value=\"id\"\n                                                :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                return-object\n                                                tage=\"sub Of\"\n                                                placeholder=\"Sub Of\"\n                                                outlined=\"\"\n                                            />\n                                            <label class=\"label mb-0\">{{ $t(\"location\") }}</label>\n                                            <v-select\n                                                class=\"mt-2\"\n                                                v-model=\"transaction.location\"\n                                                :items=\"locations\"\n                                                item-value=\"id\"\n                                                :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                return-object\n                                                tage=\"Location\"\n                                                placeholder=\"bu/location\"\n                                                outlined=\"\"\n                                            />\n                                            <label class=\"label font_14\">{{ $t(\"project\") }}</label>\n                                            <v-select\n                                                class=\" my-2\"\n                                                v-model=\"transaction.project\"\n                                                :items=\"customerProjects\"\n                                                :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                                                item-value=\"id\"\n                                                tage=\"Customer Project\"\n                                                placeholder=\"project\"\n                                                outlined\n                                            />\n                                            <label class=\"label font_14\">{{\n                                                    $t(\"sale_channel\")\n                                                }}</label>\n                                            <v-select\n                                                class=\" my-2\"\n                                                v-model=\"transaction.saleChannel\"\n                                                :items=\"saleChannelList\"\n                                                item-value=\"id\"\n                                                item-text=\"name\"\n                                                return-object\n                                                tage=\"Sale Channel\"\n                                                placeholder=\"Channel\"\n                                                outlined\n                                            />\n                                            <label class=\"label font_14\">{{ $t(\"employee\") }}</label>\n                                            <v-col\n                                                sm=\"12\"\n                                                cols=\"12\"\n                                                class=\"kendo_dropdown_custom pl-0 pb-3 pt-0\"\n                                                style=\"padding: 0\"\n                                            >\n                                                <dropdownlist\n                                                    style=\"width: 100%\"\n                                                    class=\" my-2\"\n                                                    :data-items=\"employees\"\n                                                    @change=\"onEmployeeChanged\"\n                                                    :value=\"mEmployee\"\n                                                    :data-item-key=\"'id'\"\n                                                    :text-field=\"'name'\"\n                                                    :default-item=\"defaultItem\"\n                                                    :filterable=\"true\"\n                                                    @filterchange=\"onEmployeeFilterChanged\"\n                                                >\n                                                </dropdownlist>\n                                            </v-col>\n                                        </v-col>\n                                    </v-row>\n                                    <p class=\"mb-0 detial_smallside_p font_14\">\n                                        {{ $t(\"cash_refund_funct_desc\") }}\n                                    </p>\n                                </div>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"\n            />\n            <v-dialog v-model=\"dialogTax\" max-width=\"450px\">\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"tax_list\") }}</v-card-title>\n                        <v-icon @click=\"dialogTax = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-row>\n                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                <v-simple-table>\n                                    <template v-slot:default>\n                                        <tbody>\n                                        <tr\n                                            v-for=\"(value, name) in taxListTotal\"\n                                            v-bind:key=\"name\"\n                                        >\n                                            <td class=\"text-left\" width=\"180px\">{{ name }}</td>\n                                            <td class=\"text-center\">:</td>\n                                            <td class=\"text-right\">\n                                                {{ numberFormat(value) }}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"text-left\" width=\"180px\">\n                                                {{ $t(\"total\") }}\n                                            </td>\n                                            <td class=\"text-center\">:</td>\n                                            <td class=\"text-right\">\n                                                {{ numberFormat(saleOrder.totalTaxAmount) }}\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </template>\n                                </v-simple-table>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                </v-card>\n            </v-dialog>\n            <v-dialog v-model=\"dialogCatalog\" max-width=\"850px\">\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"catalog\") }}</v-card-title>\n                        <v-icon @click=\"dialogCatalog = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-row>\n                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                <v-simple-table>\n                                    <kendo-datasource\n                                        ref=\"catalogDatasource\"\n                                        :data=\"catalogs\"\n                                        :schema=\"gridSchema\"\n                                    />\n                                    <kendo-grid\n                                        id=\"gridCatalog\"\n                                        class=\"grid-function\"\n                                        :data-source-ref=\"'catalogDatasource'\"\n                                        :style=\"{ width: '100%' }\"\n                                        :noRecords=\"true\"\n                                        :pageable-numeric=\"false\"\n                                        :pageable-previous-next=\"false\"\n                                        :pageable-messages-display=\"'Showing {2} data items'\"\n                                        :scrollable-virtual=\"true\"\n                                    >\n                                        <kendo-grid-column\n                                            :field=\"'images'\"\n                                            :title=\"$t('image')\"\n                                            :width=\"50\"\n                                            :template=\"loadImage\"\n                                            :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                                        />\n                                        <kendo-grid-column\n                                            :field=\"'number'\"\n                                            :title=\"$t('number')\"\n                                            :width=\"70\"\n                                            :template=\"'<span>#=number#</span>'\"\n                                            :groupHeaderColumnTemplate=\"'#=value#'\"\n                                            :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                                        />\n                                        <kendo-grid-column\n                                            :field=\"'name'\"\n                                            :title=\"$t('name')\"\n                                            :attributes=\"{ class: 'tb_name_td' }\"\n                                            :width=\"100\"\n                                            :template=\"'<span>#=name#</span>'\"\n                                            :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                                        />\n                                        <kendo-grid-column\n                                            :field=\"'description'\"\n                                            :title=\"$t('description')\"\n                                            :width=\"100\"\n                                            :template=\"'<span>#=description#</span>'\"\n                                            :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"\n                                        />\n                                        <kendo-grid-column\n                                            :field=\"'noOfProduct'\"\n                                            :title=\"$t('products')\"\n                                            :template=\"'<span>#=noOfProduct#</span>'\"\n                                            :width=\"50\"\n                                            :headerAttributes=\"{\n                        style: 'text-align: left; background-color: #EDF1F5',\n                      }\"\n                                        />\n                                        <kendo-grid-column\n                                            :field=\"''\"\n                                            :title=\"$t('action')\"\n                                            :width=\"60\"\n                                            :command=\"[{ text: $t('add'), click: addCatalog }]\"\n                                            :headerAttributes=\"{\n                        style: 'text-align: left; background-color: #EDF1F5',\n                      }\"\n                                        />\n                                    </kendo-grid>\n                                </v-simple-table>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                </v-card>\n            </v-dialog>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\nimport kendo from \"@progress/kendo-ui\";\nimport {DropDownList} from \"@progress/kendo-vue-dropdowns\";\nimport SaleFormContentModel from \"@/scripts/model/SaleFormContent\";\nimport ItemLineModel from \"@/scripts/invoice/model/ItemLine\";\nimport {uuid} from \"vue-uuid\";\nimport transactionModel from \"@/scripts/model/Transaction\";\n\n/* Store */\nimport store from \"@/store\";\n\nconst institute = store.state.institute.institute;\n\nimport CashAccountLineModel from \"@/scripts/sale_deposit/model/ItemLine\";\nimport {ExpenseEntryExtendedModel} from \"@/scripts/model/AppModels\";\nimport Helper from \"@/helper.js\";\n\nconst cashAccountLineModel = new CashAccountLineModel({});\n////handler\nconst transactionHandler = require(\"@/scripts/transactionHandler\");\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nconst customerHandler = require(\"@/scripts/customerHandler\");\nconst projectHandler = require(\"@/scripts/projectHandler\");\nconst prefixHandler = require(\"@/scripts/prefixHandler\");\nconst priceLevelHandler = require(\"@/scripts/priceLevelHandler\");\nconst saleFormContentHandler = require(\"@/scripts/saleFormContentHandler\");\nconst employeeHandler = require(\"@/scripts/employeeHandler\");\nconst itemModifierHandler = require(\"@/scripts/itemModifierHandler\");\nconst discountItemHandler = require(\"@/scripts/discountItemHandler\");\nconst uomPriceHandler = require(\"@/scripts/uomPriceHandler\");\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\");\nconst locationHandler = require(\"@/scripts/locationHandler\");\nconst settingsHandler = require(\"@/scripts/settingsHandler\");\nconst saleChannelHandler = require(\"@/scripts/saleChannelHandler\");\nconst saleUnitItemHandler = require(\"@/scripts/saleUnitItemHandler\");\nconst settingHandler = require(\"@/scripts/settingHandler\");\nconst catalogHandler = require(\"@/scripts/catalogHandler\");\nconst productHandler = require(\"@/scripts/productHandler\");\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\");\nconst accountHandler = require(\"@/scripts/handler/accounting/account\");\n//\nconst saleFormContentModel = new SaleFormContentModel({});\nconst itemLineModel = new ItemLineModel({});\nconst expenseLines = new ExpenseEntryExtendedModel({});\n//other\nconst $ = require(\"jquery\");\nconst textField = \"numberName\";\nconst keyField = \"id\";\nconst defaultItem = {[textField]: \"Select customer...\", [keyField]: null};\nconst emptyItem = {[textField]: \"loading ...\"};\nconst invoicePrefix = \"lin-\";\nconst {\n    UomEditor,\n    PurchaseDiscountItemEditor,\n    PurchaseTaxEditor,\n} = require(\"@/scripts/kendo_editor/Collections\");\n\nexport default {\n    name: \"CashRefund\",\n    props: {\n        id: {\n            type: String,\n        },\n        initTransaction: {\n            type: transactionModel,\n        },\n    },\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        \"app-datepicker\": DatePickerComponent,\n        dropdownlist: DropDownList,\n    },\n    data: () => ({\n        transaction: new transactionModel(),\n        isEdit: false,\n        numSelect: [1],\n        dialogTax: false,\n        theDate: \"\",\n        suppliers_item: [],\n        //Catalog\n        dialogCatalog: false,\n        gridSchema: {\n            model: {\n                id: \"id\",\n            },\n        },\n        imgURL: \"https://s3-ap-southeast-1.amazonaws.com/images.banhji/\",\n        // LoadingMe\n        showLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: \"\",\n        loadingTextAlert: \"\",\n        bill_date: \"\",\n        alert: false,\n        files: [],\n        errors: [],\n        // Form validation\n        valid: true,\n        col_expand: 9,\n        col_hide: 3,\n        isHideBar: false,\n        filter: \"\",\n        textField: \"numberName\",\n        dataItemKey: \"id\",\n        defaultItem: defaultItem,\n        //item\n        itemLines: [],\n        itemLine: itemLineModel,\n        dateFormat: itemLineModel.dateFormat,\n        //customer\n        cusBaseUrl: customerHandler.search(),\n        customer: {},\n        customerList: [],\n        employees: [],\n        mEmployee: {},\n        saleChannelList: [],\n        locations: [],\n        customerProjects: [],\n        segments: [],\n        transactionType: {},\n        taxListTotal: {},\n        customerDiscountItem: [],\n        customerSaleUnit: [],\n        saleFormContent: saleFormContentModel,\n        transactionDate: new Date().toISOString().substr(0, 10),\n        specificDiscountItem: [],\n        saleUnitItemList: [],\n        otherTax: [],\n        specificTax: [],\n        publicLightingTax: [],\n        priceLevel: [],\n        vatTax: [],\n        tax: [],\n        loggedUser: {\n            id: \"cf3d10ab-bce6-47b3-8405-b448c23dad84\",\n            name: \"Mr. Inspector\",\n        },\n        catalogs: [],\n        txnList: [],\n        quotes: [],\n        txnLists: [],\n        isSaveNew: false,\n        isSaveClose: false,\n        isSavePrint: false,\n        isSaveDraft: false,\n        exchangeRate: {},\n        baseCurrencyCode: \"\",\n        currencyCode: \"\",\n        transactionRate: 1,\n        saveOption: \"\",\n        formAR: [\n            {id: 1, name: \"Default Form\"},\n            {id: 2, name: \"Form 80mm\"},\n        ],\n        //cash account\n        cashAccount: {},\n        cashAccountLine: cashAccountLineModel,\n        accCash: [],\n        //exspense\n        expenseLines: expenseLines,\n        PurchaseTaxEditor: PurchaseTaxEditor,\n        UomEditor: UomEditor,\n        PurchaseDiscountItemEditor: PurchaseDiscountItemEditor,\n        expenseAccounts: [],\n        expenseAccount: {},\n    }),\n    methods: {\n        initialData() {\n            if (this.initTransaction) {\n                // Edit Mode\n                this.transaction = this.transaction;\n                this.bindData();\n            } else {\n                // Brand New Mode\n                if (this.$route.params.id === undefined) {\n                    this.setDefaultData();\n                }\n            }\n        },\n        setDefaultData() {\n            // Brand New Mode\n            this.isEdit = false;\n            this.transaction = new transactionModel({});\n            this.transaction.formTemplate = 1;\n            // Generate Number\n            let ds = this.$refs.itemLineDS.kendoWidget();\n            ds.data([]);\n            // Add 2 default lines\n            this.addRow();\n            this.addCashAccRow();\n            this.expenseAddRow();\n            this.loadPrefix();\n            this.loadSegment();\n            this.loadLocation();\n            this.loadSaleChannel();\n            this.loadPriceLevel();\n            this.mEmployee = {};\n            this.taxListTotal = {};\n            this.isSaveNew = false;\n            this.isSaveClose = false;\n            this.isSavePrint = false;\n            this.isSaveDraft = false;\n        },\n        bindData() {\n            // Edit Mode\n            this.isEdit = true;\n            this.customer = this.transaction.customer;\n            this.taxListTotal = this.transaction.taxListTotal;\n            this.itemLines = this.transaction.itemLines;\n            this.loadProjectByCustomer();\n        },\n        addSelect() {\n            let amount_num = this.numSelect.length;\n            let num = this.numSelect[amount_num - 1];\n            let new_num = num + 1;\n            let lenghtItem = this.specificDiscountItem.length;\n            if (new_num <= lenghtItem) {\n                this.numSelect.push(new_num);\n            }\n        },\n        removeSelect(index) {\n            this.numSelect.splice(index, 1);\n            // window.console.log(index, this.numSelect)\n            // this.selectDiscount.splice(index,1)\n            // window.console.log(\"remove\",this.selectDiscount)\n            // this.selectDiscount = this.selectDiscount.filter(item =>  item.id != val.id);\n        },\n        hide_smallsitebar() {\n            if (!this.isHideBar) {\n                // this.col_expand = 12\n                // this.col_hide = 0\n                this.isHideBar = true;\n            } else {\n                // this.col_expand = 9\n                // this.col_hide = 3\n                this.isHideBar = false;\n            }\n        },\n        errorMessage() {\n        },\n        //number\n        generateNumber() {\n            // window.console.log('generateNumber')\n            let d = new Date().toISOString().substr(0, 10);\n            if (this.transactionDate) {\n                // window.console.log(this.transactionDate)\n                d = this.transactionDate;\n            }\n            let data = {\n                abbr: this.transaction.transactionType.abbr,\n                structure: this.transaction.transactionType.structure,\n                sequcencing: this.transaction.transactionType.sequcencing,\n                prefixSeparator: this.transaction.transactionType.prefixSeparator || '',\n                numberSeparator: this.transaction.transactionType.numberSeparator || '',\n                format: this.transaction.transactionType.format || 5,\n                transactionDate: d,\n                type: \"Cash Refund\",\n            };\n            billingHandler\n                .lastNumber(data)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        const res = response.data.data;\n                        const lastNumber = this.zeroPad(\n                            parseInt(res.lastNumber),\n                            this.transaction.transactionType.format\n                        );\n                        const number =\n                            res.suffix +\n                            this.transaction.transactionType.numberSeparator +\n                            lastNumber;\n                        this.transaction.number = number;\n                    }\n                })\n                .catch((e) => {\n                    this.errors.push(e);\n                });\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        //customer\n        onChange(event) {\n            window.console.log(event);\n            const value = event.value;\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.customer = value;\n            this.transaction.customer = value;\n            const baseCurrency = value.hasOwnProperty(\"baseCurrency\")\n                ? value.baseCurrency\n                : {};\n            if (baseCurrency.hasOwnProperty(\"code\")) {\n                this.baseCurrencyCode = baseCurrency.code;\n            }\n            this.transaction.priceLevel = value.hasOwnProperty(\"priceLevel\")\n                ? value.priceLevel\n                : {};\n            const priceLevel = value.hasOwnProperty(\"priceLevel\")\n                ? value.priceLevel\n                : {};\n            if (priceLevel.hasOwnProperty(\"currency\")) {\n                if (priceLevel.currency.hasOwnProperty(\"id\")) {\n                    this.loadTransactionRate();\n                }\n            }\n            this.onDateChanged();\n            this.loadProjectByCustomer();\n        },\n        onFilterChange(event) {\n            const filter = event.filter.value;\n            this.requestData(0, filter, this.cusBaseUrl);\n            this.filter = filter;\n        },\n        requestData(skip, filter, baseUrl) {\n            const url = baseUrl + `?filter=${filter}`;\n            this.requestStarted = true;\n            fetch(url)\n                .then((response) => {\n                    return response.json();\n                })\n                .then(this.afterFetch);\n        },\n        afterFetch(json) {\n            this.customerList = json.data;\n        },\n        removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridItemLine\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        //date\n        onDateChanged() {\n            if (this.$route.params.id === undefined) {\n                this.generateNumber();\n            }\n        },\n        onEmployeeFilterChanged() {\n        },\n        //number\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n${this.saleFormContent.decimal}`);\n            // return value\n        },\n        //\n        async loadPriceLevel() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    priceLevelHandler.get().then((res) => {\n                        this.priceLevel = res;\n                        if (this.priceLevel.length > 0) {\n                            if (\n                                this.$route.params.id !== undefined ||\n                                this.$route.params.id != \"\"\n                            ) {\n                                this.transaction.priceLevel = this.priceLevel[0];\n                                this.loadTransactionRate();\n                            }\n                        }\n                    });\n                }, 300);\n            });\n        },\n        removeDuplicate(array) {\n            const result = [];\n            const map = new Map();\n            for (const item of array) {\n                if (!map.has(item.id)) {\n                    map.set(item.id, true); // set any value to Map\n                    result.push(item);\n                }\n            }\n            return result;\n        },\n        autoCalculateDiscount(discountItem, subTotal) {\n            if (discountItem) {\n                const nature = discountItem.nature || ''\n                const amount = discountItem.amount || 0\n                if (nature === 'Amount') {\n                    return parseFloat(amount)\n                } else if (nature === 'Percentage') {\n                    return (subTotal * (parseFloat(amount) / 100))\n                } else {\n                    return 0\n                }\n            } else {\n                return 0\n            }\n        },\n        autoCalculateTax(tax, amount) {\n            if (tax) {\n                var formula = tax.formula;\n                var inAmt = kendo.parseFloat(amount);\n                var nAmt = kendo.parseFloat(amount);\n                var taxBase = kendo.parseFloat(tax.taxBase) / 100;\n                var rate = kendo.parseFloat(tax.rate) / 100;\n                var total = eval(formula);\n                window.console.log(inAmt, nAmt, taxBase, rate, formula, total);\n                // window.console.log(amount)\n                return total;\n            }\n            // return 0\n        },\n        autoCalculateTaxByType(tax) {\n            // return by a key\n            const groupAll = (list) =>\n                list.reduce((tax, item) => {\n                    const taxAmount = tax[item.name] || 0;\n                    return Object.assign({}, tax, {\n                        [item.name]: taxAmount + parseFloat(item.amount),\n                    });\n                }, {});\n            this.taxListTotal = groupAll(tax);\n            // window.console.log('nimol', groupAll(tax))\n            // this.\n        },\n        dataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n                switch (e.field) {\n                    case \"item\":\n                        // this.attribute_ = this.attributes.filter(m => m.type.id === dataRow.variant.id)\n                        dataRow.set(\"description\", dataRow.item.description);\n                        // this.itemChange(dataRow)\n                        break;\n                    case \"uom\":\n                        // window.console.log(dataRow.uom,'row-uom')\n                        dataRow.set(\"price\", parseFloat(dataRow.uom.price));\n                        dataRow.set(\n                            \"amount\",\n                            parseFloat(dataRow.uom.price) * parseFloat(dataRow.qty)\n                        );\n                        break;\n                    case \"qty\":\n                        dataRow.set(\"price\", parseFloat(dataRow.uom.price));\n                        dataRow.set(\n                            \"amount\",\n                            parseFloat(dataRow.uom.price) * parseFloat(dataRow.qty)\n                        );\n                        break;\n                    case \"otherTax\":\n                        // window.console.log(\"--\", dataRow)\n                        break;\n                    default:\n                        break;\n                }\n                if (e.field) {\n                    this.autoCalculate();\n                }\n            }\n        },\n        autoCalculate() {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                subTotal = 0,\n                totalTax = 0,\n                discountTotal = 0,\n                spTax = 0,\n                pltax = 0,\n                otherTax = 0,\n                vatTax = 0,\n                discountInvoice = 0,\n                taxList = [],\n                discountItem = [],\n                saleUnit = [];\n\n            ds.data().forEach((value) => {\n                let modifierPrice = 0;\n                if (value.modifier) {\n                    modifierPrice = kendo.parseFloat(value.modifier.price);\n                }\n\n                subTotal += kendo.parseFloat(value.amount) + modifierPrice;\n                let discount = 0;\n                if (value.discountItem) {\n                    let subTo =\n                        kendo.parseFloat(value.price) * kendo.parseFloat(value.qty);\n                    discount = this.autoCalculateDiscount(value.discountItem, subTo);\n                    if (value.discountItem.hasOwnProperty(\"id\")) {\n                        discountItem.push(value.discountItem);\n                    }\n                    discountTotal += discount;\n                }\n                if (value.saleUnit) {\n                    if (value.saleUnit.hasOwnProperty(\"id\")) {\n                        saleUnit.push(value.saleUnit);\n                    }\n                }\n                if (value.specificTax) {\n                    spTax = this.autoCalculateTax(\n                        value.specificTax,\n                        kendo.parseFloat(value.amount) - kendo.parseFloat(discount)\n                    );\n                    // window.console.log('sp ', discount)\n                    spTax = kendo.parseFloat(spTax) ? kendo.parseFloat(spTax) : 0;\n                    if (value.specificTax.hasOwnProperty(\"taxType\")) {\n                        taxList.push({\n                            name: value.specificTax.taxType.name,\n                            amount: spTax,\n                            id: value.specificTax.taxType.id,\n                        });\n                    }\n                }\n                if (value.publicLightingTax) {\n                    pltax = this.autoCalculateTax(\n                        value.publicLightingTax,\n                        kendo.parseFloat(value.amount) - kendo.parseFloat(discount)\n                    );\n                    pltax = kendo.parseFloat(pltax) ? kendo.parseFloat(pltax) : 0;\n                    if (value.publicLightingTax.hasOwnProperty(\"taxType\")) {\n                        taxList.push({\n                            name: value.publicLightingTax.taxType.name,\n                            amount: pltax,\n                            id: value.publicLightingTax.taxType.id,\n                        });\n                    }\n                }\n                if (value.otherTax) {\n                    otherTax = this.autoCalculateTax(\n                        value.otherTax,\n                        kendo.parseFloat(value.amount) - kendo.parseFloat(discount)\n                    );\n                    otherTax = kendo.parseFloat(otherTax)\n                        ? kendo.parseFloat(otherTax)\n                        : 0;\n                    if (value.otherTax.hasOwnProperty(\"taxType\")) {\n                        taxList.push({\n                            name: value.otherTax.taxType.name,\n                            amount: otherTax,\n                            id: value.otherTax.taxType.id,\n                        });\n                    }\n                }\n\n                if (value.vatTax) {\n                    // window.console.log('Vat Tax', value.vatTax)\n                    let amt =\n                        kendo.parseFloat(spTax ? spTax : 0) +\n                        kendo.parseFloat(pltax ? pltax : 0) +\n                        kendo.parseFloat(otherTax ? otherTax : 0) +\n                        (kendo.parseFloat(value.amount ? value.amount : 0) -\n                            (discount ? discount : 0));\n                    vatTax = this.autoCalculateTax(value.vatTax, amt);\n                    vatTax = kendo.parseFloat(vatTax) ? kendo.parseFloat(vatTax) : 0;\n                    if (value.vatTax.hasOwnProperty(\"taxType\")) {\n                        taxList.push({\n                            name: value.vatTax.taxType.name,\n                            amount: vatTax,\n                            id: value.vatTax.taxType.id,\n                        });\n                    }\n                }\n                totalTax +=\n                    kendo.parseFloat(spTax ? spTax : 0) +\n                    kendo.parseFloat(pltax ? pltax : 0) +\n                    kendo.parseFloat(otherTax ? otherTax : 0) +\n                    kendo.parseFloat(vatTax ? vatTax : 0);\n            });\n\n            discountTotal = discountTotal ? discountTotal : 0;\n\n            // window.console.log(spTax, pltax, otherTax, vatTax)\n            let total =\n                kendo.parseFloat(subTotal) -\n                kendo.parseFloat(discountTotal) +\n                kendo.parseFloat(totalTax);\n            this.transaction.subTotal = subTotal;\n            $(\"#subtotal\").text(kendo.parseFloat(subTotal));\n            this.transaction.totalTaxAmount = kendo.parseFloat(totalTax);\n            this.transaction.discountTotal = kendo.parseFloat(discountTotal);\n            if (this.transaction.specificDiscountItem) {\n                discountInvoice = this.autoCalculateDiscount(\n                    this.transaction.specificDiscountItem,\n                    kendo.parseFloat(subTotal)\n                );\n                discountInvoice = discountInvoice ? discountInvoice : 0;\n            }\n            // this.onOtherChargeChange()\n            this.transaction.total = kendo.parseFloat(total) - discountInvoice;\n            this.transaction.exchangeAmount =\n                kendo.parseFloat(this.transaction.total) *\n                kendo.parseFloat(this.transaction.txnRate);\n            this.autoCalculateTaxByType(taxList);\n            this.customerDiscountItem = this.removeDuplicate(discountItem);\n            this.customerSaleUnit = this.removeDuplicate(saleUnit);\n            // window.console.log('discount ', this.customerDiscountItem)\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                // window.console.log(data[0])\n                            }\n                        }\n                    });\n                }, 300);\n            });\n        },\n        vatTemplate(dataItem) {\n            const vat = dataItem.vatTax;\n            if (vat) {\n                return `<span>${vat.defaultTax ? vat.defaultTax : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        itemTemplate(dataItem) {\n            const item = dataItem.item;\n            if (item) {\n                return `<span>${item.name ? item.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.uom;\n            if (uom) {\n                return `<span>${uom.uom ? uom.uom.toUOM.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        saleUnitTemplate(dataItem) {\n            const saleUnit = dataItem.saleUnit;\n            if (saleUnit) {\n                return `<span>${saleUnit.name ? saleUnit.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        discountItemTemplate(dataItem) {\n            const discountItem = dataItem.discountItem;\n            if (discountItem) {\n                return `<span>${discountItem.code ? discountItem.code : ``} - ${\n                    discountItem.name ? discountItem.name : ``\n                }</span>`;\n            } else {\n                return ``;\n            }\n        },\n        ServiceDateEditor(container, options) {\n            kendo\n                .jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDatePicker();\n\n            // let ds = this.$refs.itemLineDS.kendoWidget()\n            // window.console.log(ds.data())\n            // // const dateString = kendo.toString((new Date(options.model.items.serviceDate)), this.itemLine.dateFormat)\n            // // const dateString = kendo.toString(options.model.items.serviceDate)\n            // const $input = $(\"<input value=\" + options.model.serviceDate + \" />\").appendTo(container)\n            // $input.kendoDatePicker()\n            // // $input.appendTo(container)\n            // // options.model.items.serviceDate = dateString\n            // window.console.log($input)\n        },\n        ServiceDateToEditor(container, options) {\n            kendo\n                .jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDatePicker();\n        },\n        ItemDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Items </span>\" +\n                        \"<span></span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: productVariantHandler.itemSearchURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        UOMDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"uom.toUOM.name\",\n                    dataValueField: \"uom.toUOM.id\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=uom.toUOM.name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: uomPriceHandler.getURL(\n                                    options.model.item.id,\n                                    this.transaction.priceLevel.id\n                                ),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                        // data: this.variants\n                    }),\n                });\n        },\n        DiscountItemDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=code# - #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: discountItemHandler.getURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                    }),\n                });\n        },\n        SpecificTaxDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.specificTax.filter((m) => {\n                            if (options.model.hasOwnProperty(\"vatTax\")) {\n                                const vat = options.model.vatTax;\n                                if (vat) {\n                                    if (\n                                        options.model.vatTax !== null ||\n                                        options.model.vatTax !== \"null\"\n                                    ) {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return (\n                                                m.baseAmount.toLowerCase() ===\n                                                options.model.vatTax.baseAmount.toLowerCase()\n                                            );\n                                        } else {\n                                            return m;\n                                        }\n                                    }\n                                } else {\n                                    return m;\n                                }\n                            }\n                        }),\n                    }),\n                });\n        },\n        PublicLightingTaxDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.publicLightingTax.filter((m) => {\n                            if (options.model.hasOwnProperty(\"vatTax\")) {\n                                const vat = options.model.vatTax;\n                                if (vat) {\n                                    if (\n                                        options.model.vatTax !== null &&\n                                        options.model.vatTax !== \"null\"\n                                    ) {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return (\n                                                m.baseAmount.toLowerCase() ===\n                                                options.model.vatTax.baseAmount.toLowerCase()\n                                            );\n                                        } else {\n                                            return m;\n                                        }\n                                    }\n                                } else {\n                                    return m;\n                                }\n                            }\n                        }),\n                    }),\n                });\n        },\n        OtherTaxDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.otherTax.filter((m) => {\n                            if (options.model.hasOwnProperty(\"vatTax\")) {\n                                const vat = options.model.vatTax;\n                                if (vat) {\n                                    if (\n                                        options.model.vatTax !== null &&\n                                        options.model.vatTax !== \"null\"\n                                    ) {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return (\n                                                m.baseAmount.toLowerCase() ===\n                                                options.model.vatTax.baseAmount.toLowerCase()\n                                            );\n                                        } else {\n                                            return m;\n                                        }\n                                    }\n                                } else {\n                                    return m;\n                                }\n                            }\n                        }),\n                    }),\n                });\n        },\n        VatTaxDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.vatTax,\n                    }),\n                });\n        },\n        SaleUnitDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=code# - #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.saleUnitItemList,\n                    }),\n                });\n        },\n        ModifierDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Modifier </span>\" +\n                        \"<span></span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: itemModifierHandler.searchURL(options.model.item.id),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    price: {type: \"number\"},\n                                    uom: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                    }),\n                });\n        },\n        EmployeeDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoMultiSelect({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    suggest: true,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate:\n                        '<div class=\"dropdown-header k-widget k-header\">' +\n                        \"<span>Employee </span>\" +\n                        \"<span></span>\" +\n                        \"</div>\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: employeeHandler.searchURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    firstName: {type: \"string\"},\n                                    lastName: {type: \"string\"},\n                                },\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            },\n                        },\n                    }),\n                });\n        },\n        empImpl(dataItem) {\n            let empIds = [];\n            dataItem.employee.forEach((m) => {\n                empIds.push(m.firstName + \" - \" + m.lastName);\n            });\n            // window.console.log(empIds.join(', '))\n            return `<span>${empIds.join(\", \")}</span>`;\n        },\n        addRow() {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                total = ds.total();\n            this.itemLine.id = invoicePrefix + uuid.v1();\n            ds.insert(total, this.itemLine);\n        },\n        onSpecificDiscountChanged() {\n            if (this.transaction.specificDiscountItem) {\n                const discountOrder = this.autoCalculateDiscount(\n                    this.transaction.specificDiscountItem,\n                    this.transaction.subTotal\n                );\n                this.transaction.specificDiscountTotal = kendo.toString(\n                    discountOrder ? discountOrder : 0,\n                    \"n\"\n                );\n                let total =\n                    kendo.parseFloat(this.transaction.subTotal) -\n                    (kendo.parseFloat(this.transaction.discountTotal) +\n                        kendo.parseFloat(this.transaction.totalTaxAmount)) -\n                    discountOrder;\n                this.transaction.total = kendo.toString(total, \"n\");\n            }\n        },\n        onOtherAmount(value) {\n            return this.autoCalculateDiscount(value, this.transaction.subTotal);\n        },\n        async loadDiscountItem() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    discountItemHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.specificDiscountItem = res.data.data;\n                        }\n                    });\n                }, 300);\n            });\n        },\n        async loadSegment() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.segments = [];\n                    settingsHandler\n                        .getSeg()\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.segments = res.data.data;\n                                if (this.segments.length > 0) {\n                                    if (\n                                        this.$route.params.id !== undefined ||\n                                        this.$route.params.id != \"\"\n                                    ) {\n                                        this.transaction.segment = this.segments[0];\n                                    }\n                                }\n                                // this.segmentList = res.data.data\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 300);\n            });\n        },\n        async loadLocation() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.locations = [];\n                    locationHandler\n                        .list()\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.locations = res.data.data;\n                                if (this.locations.length > 0) {\n                                    if (\n                                        this.$route.params.id !== undefined ||\n                                        this.$route.params.id != \"\"\n                                    ) {\n                                        this.transaction.location = this.locations[0];\n                                    }\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 300);\n            });\n        },\n        async loadProjectByCustomer() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    projectHandler\n                        .getByCustomer(this.customer.id)\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.customerProjects = res.data.data;\n                                if (this.customerProjects.length > 0) {\n                                    if (!this.initTransaction) {\n                                        this.transaction.project = this.customerProjects[0];\n                                    }\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 300);\n            });\n        },\n        async loadSaleChannel() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    saleChannelHandler.get().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.saleChannelList = res.data.data;\n                            if (this.saleChannelList.length > 0) {\n                                if (\n                                    this.$route.params.id !== undefined ||\n                                    this.$route.params.id != \"\"\n                                ) {\n                                    this.transaction.saleChannel = this.saleChannelList[0];\n                                }\n                            }\n                        } else {\n                            this.showLoading = false;\n                        }\n                    });\n                }, 300);\n            });\n        },\n        async loadTax() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    settingHandler.get().then((res) => {\n                        this.tax = res;\n                        this.otherTax = this.tax.filter((m) => m.taxType.typeId === 7); // valuable tax\n                        this.specificTax = this.tax.filter(\n                            (m) => m.taxType.typeId === 8 && m.transactionType === \"Sale\"\n                        ); // valuable tax\n                        this.publicLightingTax = this.tax.filter(\n                            (m) => m.taxType.typeId === 9 && m.transactionType === \"Sale\"\n                        ); // valuable tax\n                        this.vatTax = this.tax.filter(\n                            (m) =>\n                                (m.taxType.typeId === 1 || m.taxType.typeId === 8) &&\n                                m.transactionType === \"Sale\"\n                        ); // valuable tax\n                    });\n                }, 300);\n            });\n        },\n        async loadSaleUnitItems() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleUnitItemHandler.list().then((res) => {\n                        if (res.data.statusCode === 200)\n                            this.saleUnitItemList = res.data.data;\n                    });\n                }, 300);\n            });\n        },\n        close(data) {\n            if (this.$route.params.id === undefined) {\n                this.$router.push({\n                    name: \"Customers\",\n                    params: {\n                        data: data,\n                    },\n                });\n            } else {\n                window.history.go(-1);\n            }\n            window.console.log(data, \"close\");\n            // localStorage.data.id = JSON.stringify(data)\n        },\n        //catalog\n        loadImage(dataItem) {\n            if (dataItem.hasOwnProperty(\"images\")) {\n                if (dataItem.images.hasOwnProperty(\"default\")) {\n                    const url = this.imgURL + dataItem.images.default.thumb;\n                    return (\n                        \"<img width='50' height='50' style= 'margin: auto;display: block;' src='\" +\n                        url +\n                        \"' />\"\n                    );\n                }\n            } else {\n                return \"\";\n            }\n        },\n        async loadCatalogs() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.showLoading = true;\n                    catalogHandler.get().then((res) => {\n                        this.showLoading = false;\n                        this.catalogs = res;\n                    });\n                }, 300);\n            });\n        },\n        addCatalog(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridCatalog\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            // window.console.log(dataItem)\n            if (dataItem.variants.length > 0) {\n                dataItem.variants.forEach((m) => {\n                    if (m.hasOwnProperty(\"variant\")) {\n                        if (m.variant.hasOwnProperty(\"id\")) {\n                            this.loadSingleItem(m.variant.id, \"i\");\n                        }\n                    }\n                });\n                this.dialogCatalog = false;\n            }\n            if (dataItem.services.length > 0) {\n                dataItem.services.forEach((m) => {\n                    if (m.hasOwnProperty(\"service\")) {\n                        if (m.service.hasOwnProperty(\"id\")) {\n                            this.loadSingleItem(m.service.id, \"s\");\n                        }\n                    }\n                });\n                this.dialogCatalog = false;\n            }\n        },\n        async loadSingleItem(itemId, type) {\n            new Promise((resolve) => {\n                resolve(\"resolved\");\n                setTimeout(() => {\n                    this.showLoading = true;\n                    productHandler.getOne(itemId).then((res) => {\n                        this.showLoading = false;\n                        let data = res;\n                        window.console.log(data);\n                        let ds = this.$refs.itemLineDS.kendoWidget(),\n                            total = ds.total();\n                        this.itemLine.id = invoicePrefix + uuid.v1();\n                        this.itemLine.item = data;\n                        if (type == \"i\") {\n                            this.itemLine.description = data.variant.saleDescription;\n                        } else {\n                            this.itemLine.description = data.saleDescription;\n                        }\n                        ds.insert(total, this.itemLine);\n                    });\n                }, 500);\n            });\n        },\n        async loadPrefix() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"sale order\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionType = res.data.data;\n                            if (this.transactionType.length > 0) {\n                                this.transaction.transactionType = this.transactionType[0];\n                                if (!this.initTransaction) {\n                                    this.generateNumber();\n                                }\n                            }\n                        }\n                    });\n                }, 300);\n            });\n        },\n        onEmployeeChanged(event) {\n            const value = event.value;\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.mEmployee = value;\n            this.transaction.employee = value;\n        },\n        async loadEmployeeCenter() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.employees = [];\n                    employeeHandler\n                        .center(undefined)\n                        .then((res) => {\n                            this.showLoading = true;\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false;\n                                this.employees = res.data.data;\n                                if (this.employees.length > 0) {\n                                    this.transaction.employee = this.employees[0];\n                                }\n                            }\n                        })\n                        .catch();\n                    {\n                        this.showLoading = false;\n                    }\n                }, 300);\n            });\n        },\n        removeEmptyLine() {\n            const grid = kendo.jQuery(\"#gridItemLine\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource;\n            dataSource.data().forEach((m) => {\n                if (m.item.id === undefined) {\n                    dataSource.remove(m);\n                }\n            });\n        },\n        async loadTransactionRate() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    const date = new Date(this.transactionDate)\n                        .toISOString()\n                        .substr(0, 10);\n                    const priceLevel = this.transaction.priceLevel;\n                    let code = \"\";\n                    if (priceLevel.hasOwnProperty(\"currency\")) {\n                        if (priceLevel.currency.hasOwnProperty(\"code\")) {\n                            code = priceLevel.currency.code;\n                        }\n                    }\n                    if (code !== undefined || code !== \"\") {\n                        this.showLoading = true;\n                        currencyHandler\n                            .getLastExchangeRateByDate(date, code)\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    this.exchangeRate = res.data.data[0];\n                                    this.currencyCode = this.exchangeRate.code;\n                                    this.transactionRate = this.exchangeRate.rate;\n                                    this.transaction.txnRate = this.exchangeRate.rate;\n                                    this.transaction.exchangeRate = this.exchangeRate;\n                                    this.showLoading = false;\n                                }\n                            });\n                    }\n                }, 300);\n            });\n        },\n        //cash account\n        cashAccountautoCalculate() {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                convertedAmount = 0,\n                amount = 0;\n            ds.data().forEach((value) => {\n                if (value.amount) {\n                    amount += kendo.parseFloat(value.amount);\n                    convertedAmount +=\n                        kendo.parseFloat(value.amount) * this.transaction.txnRate;\n                }\n            });\n            this.cashAccount.exchangeAmount = convertedAmount;\n            this.cashAccount.amount = amount;\n        },\n        cashAccountDSChanged(e) {\n            if (e.field) {\n                this.cashAccountautoCalculate();\n            }\n        },\n        addCashAccRow() {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                total = ds.total();\n            this.cashAccountLine.id = invoicePrefix + uuid.v1();\n            ds.insert(total, this.cashAccountLine);\n        },\n        cashAccrowNumTmpl(dataItem) {\n            let ds = this.$refs.saleDepositDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        accountDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=number# - #= name#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.accCash,\n                    }),\n                });\n        },\n        methodDropDownEditor(container, options) {\n            kendo\n                .jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=code# - #= name#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.paymentMethod,\n                    }),\n                });\n        },\n        accountTemplate(dataItem) {\n            const acc = dataItem.account;\n            if (acc) {\n                return `<span>${acc.name ? acc.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        async loadAccount() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    accountHandler.getAll().then((res) => {\n                        this.showLoading = false;\n                        this.expenseAccounts = res.data;\n                        this.accCash = res.data\n                            .filter((m) => m.account_type.number <= 5)\n                            .map((item) => {\n                                return {\n                                    id: item.uuid,\n                                    uuid: item.uuid,\n                                    name: item.name,\n                                    local_name: item.local_name,\n                                    number: item.number,\n                                    is_taxable: item.is_taxable,\n                                    banhjiAccCode: item.banhjiAccCode,\n                                    group_code: item.group_code,\n                                    parent_account: item.parent_account,\n                                    type_code: item.type_code,\n                                    account_type: item.account_type,\n                                };\n                            });\n                    });\n                }, 300);\n            });\n        },\n        methodTemplate(dataItem) {\n            const method = dataItem.method;\n            if (method) {\n                return `<span>${method.name ? method.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        amountTemplate(dataItem) {\n            const amt = dataItem.amount;\n            if (amt) {\n                return kendo.toString(parseFloat(amt), `${this.decimalFormat}`);\n            } else {\n                return 0;\n            }\n        },\n        amountEditor(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    decimals: 30,\n                    format: `${this.decimalFormat}`,\n                });\n        },\n        cashAccRemoveRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridSaleDeposit\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        //exspense\n        expenseAddRow() {\n            let ds = this.$refs.expenseAccountDS.kendoWidget(),\n                last = ds.total();\n\n            let je = new ExpenseEntryExtendedModel();\n            ds.insert(last, je);\n        },\n        onExpenseAccountDSChanges(e) {\n            if (e.field) {\n                let dataRow = e.items[0];\n\n                if (e.field === \"account\") {\n                    this.addExtraRow(dataRow.uid);\n                } else if (e.field === \"quantity\" || e.field === \"price\") {\n                    let amt =\n                        kendo.parseFloat(dataRow.quantity) *\n                        kendo.parseFloat(dataRow.price);\n                    dataRow.set(\"amount\", amt);\n                } else if (e.field === \"uom\") {\n                    if (dataRow.uom) {\n                        dataRow.set(\"uom_uuid\", dataRow.uom.id);\n                    }\n                }\n\n                this.expenseAutoCalculate();\n            }\n            // window.console.log(e)\n        },\n        expenseAutoCalculate() {\n            let ds = this.$refs.expenseAccountDS.kendoWidget(),\n                convertedAmount = 0,\n                amount = 0;\n            ds.data().forEach((value) => {\n                if (value.amount) {\n                    amount += kendo.parseFloat(value.amount);\n                    convertedAmount +=\n                        kendo.parseFloat(value.amount) * this.transaction.txnRate;\n                }\n            });\n            this.expenseAccount.exchangeAmount = convertedAmount;\n            this.expenseAccount.amount = amount;\n        },\n        addExtraRow(uid) {\n            let ds = this.$refs.expenseAccountDS.kendoWidget(),\n                total = ds.total(),\n                row = ds.getByUid(uid),\n                index = ds.indexOf(row);\n\n            if (index == total - 1) {\n                this.expenseAddRow();\n            }\n        },\n        expenseRemoveRow(e) {\n            e.preventDefault();\n            const grid = $(\"#expenseGrid\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        expenseRowNumTmpl(dataItem) {\n            let ds = this.$refs.expenseAccountDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n\n            return index + 1;\n        },\n        expenseAccountEditor(container, options) {\n            return Helper.accountEditor(container, options, this.expenseAccounts);\n        },\n        //save block\n        clear() {\n            window.console.log(\"clear\");\n            this.id = undefined;\n            this.transaction = new transactionModel({});\n            this.itemLines = [];\n            this.generateNumber();\n        },\n        saveClose() {\n            this.isSaveClose = true;\n            this.saveOption = \"saveClose\";\n            this.save();\n        },\n        savePrint() {\n            this.isSavePrint = true;\n            this.saveOption = \"savePrint\";\n            this.save();\n        },\n        saveNew() {\n            this.saveOption = \"saveNew\";\n            this.isSaveNew = true;\n            this.save();\n        },\n        saveDraft() {\n            this.saveOption = \"saveDraft\";\n            this.isSaveDraft = true;\n            this.save();\n        },\n        async save() {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate();\n                return;\n            }\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    this.removeEmptyLine();\n                    let itemLineDS = this.$refs.itemLineDS.kendoWidget(),\n                        total = itemLineDS.total();\n                    if (total <= 0) {\n                        this.$snotify.error(\"Field Required!\");\n                        return;\n                    }\n                    let data = {\n                        id: this.transaction.id ? this.transaction.id : \"\",\n                        type: \"Cash Refund\",\n                        transactionType: this.transaction.transactionType,\n                        number: this.transaction.number,\n                        abbr: this.transaction.transactionType.abbr,\n                        transactionDate: this.transaction.transactionDate,\n                        customer: this.transaction.customer,\n                        discountPromotion: {},\n                        priceLevel: this.transaction.priceLevel,\n                        itemLines: itemLineDS.data(),\n                        segment: this.transaction.segment,\n                        location: this.transaction.location,\n                        project: this.transaction.project,\n                        saleChannel: this.transaction.saleChannel,\n                        transactionNote: this.transaction.transactionNote,\n                        journalNote: this.transaction.journalNote,\n                        subTotal: this.transaction.subTotal,\n                        total: this.transaction.total,\n                        discountTotal: this.transaction.discountTotal,\n                        specificDiscountTotal: this.transaction.specificDiscountTotal,\n                        totalTaxAmount: this.transaction.totalTaxAmount,\n                        saveOption: this.saveOption,\n                        txnRate: this.transaction.txnRate,\n                        exchangeRate: this.transaction.exchangeRate,\n                        exchangeAmount: this.transaction.exchangeAmount,\n                        status: 1,\n                        formTemplate: this.transaction.formTemplate,\n                        specificDiscountItem: this.transaction.specificDiscountItem,\n                        taxListTotal: this.taxListTotal,\n                        customerDiscountItem: this.customerDiscountItem,\n                        customerSaleUnit: this.customerSaleUnit,\n                        loggedUser: this.loggedUser,\n                        employee: this.transaction.employee,\n                        usedDateAt: \"\",\n                        deletedAt: \"\",\n                        deleted: 0,\n                        createdAt: new Date().toISOString().substr(0, 10),\n                    };\n                    this.showLoading = true;\n                    window.console.log(data);\n                    transactionHandler\n                        .create(data)\n                        .then((response) => {\n                            this.showLoading = false;\n                            if (response.data.statusCode === 201) {\n                                if (this.isSaveNew == true) {\n                                    this.setDefaultData();\n                                } else {\n                                    this.close(response.data.data);\n                                }\n                                this.$refs.form.reset();\n                                this.$snotify.success(\"Successfully\");\n                            }\n                        })\n                        .catch((e) => {\n                            this.$snotify.error(\"Something went wrong\");\n                            this.errors.push(e);\n                            window.console.log(e);\n                        });\n                }, 300);\n            });\n        },\n    },\n    watch: {\n        id() {\n            window.console.log(this.id, \"from watch\");\n            if (this.$route.params.id === undefined) {\n                window.history.go(-1);\n            } else {\n                this.loadView();\n            }\n        },\n        initTransaction() {\n            this.initialData();\n        },\n    },\n    created() {\n        this.loadTax();\n        this.loadSaleUnitItems();\n        this.loadAccount();\n        this.loadSegment();\n        this.loadLocation();\n    },\n    computed: {\n        dateFormatted() {\n            return kendo.toString(new Date(), institute.dateFormat);\n        },\n        dateTimeFormatted() {\n            window.console.log(institute.dateFormat + \" HH:mm\", \"inst date\");\n            return kendo.toString(new Date(), institute.dateFormat + \" HH:mm\");\n        },\n    },\n    mounted: async function () {\n        await this.initialData();\n        prefixHandler.get(\"sale order\").then((res) => {\n            if (res.data.statusCode === 200) {\n                this.showLoading = false;\n                this.transactionType = res.data.data;\n                if (this.transactionType.length > 0) {\n                    if (\n                        this.$route.params.id !== undefined ||\n                        this.$route.params.id != \"\"\n                    ) {\n                        this.transaction.transactionType = this.transactionType[0];\n                        if (!this.initTransaction && this.$route.params.id === undefined) {\n                            this.generateNumber();\n                        }\n                    }\n                }\n            }\n        });\n        this.requestData(0, this.filter, this.cusBaseUrl);\n        await this.loadSaleFormContent();\n        await this.loadPriceLevel();\n        await this.loadDiscountItem(0);\n        await this.loadSaleChannel();\n        await this.loadCatalogs();\n        await this.loadEmployeeCenter();\n    },\n};\n</script>\n\n<style scoped>\n.function_wrapper {\n    box-shadow: none !important;\n}\n\n.v-application--is-ltr .v-text-field .v-input__append-inner {\n    margin-top: 0 !important;\n}\n\n.v-input__slot {\n    background-color: #fff !important;\n}\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n.border_radius10 {\n    border-radius: 10px !important;\n    background-color: #f2f2f2;\n}\n\n.pa-3.v-card h4 {\n    font-size: 18px;\n    color: #333;\n}\n\n.pa-3.v-card p {\n    font-size: 12px;\n    color: #b5b5b5;\n}\n\n.attachment_file {\n    background-color: #efeded;\n    border-radius: 0 !important;\n}\n\n.attachment_table.v-data-table table {\n    border: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.attachment_table table tr th {\n    border-left: thin solid rgba(0, 0, 0, 0.12);\n    height: 35px;\n    border-right: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.block_debit,\n.block_credit {\n    border-bottom: 1px solid #fff;\n}\n\n.block_debit p.number,\n.block_credit p.number {\n    font-size: 25px;\n    color: #7f7f7f;\n}\n\n.block_debit h5,\n.block_credit h5,\n.block_difference h5 {\n    text-transform: uppercase;\n    color: #7f7f7f;\n    font-size: 15px;\n    font-weight: normal;\n}\n\n.block_difference h5 {\n    font-size: 18px;\n}\n\n.block_difference h5 span {\n    font-size: 15px;\n}\n\n.custom_grid table th:last-child {\n    text-align: right !important;\n}\n\n.color_green {\n    color: #03b154;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1250px;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n.hide_small_bar_class {\n    max-width: 0;\n    transition: 0.5s ease-in;\n    flex: 0 0 0;\n}\n\n.hide_big_bar_class {\n    max-width: 100%;\n    transition: 0.5s ease-in;\n    flex: 0 0 100%;\n}\n\n.info_add {\n    background-color: #ffffff;\n}\n\n.small_sidebar {\n    height: 98%;\n    position: relative;\n    padding: 12px;\n    background-color: #edf1f5;\n}\n\n.iconArrow {\n    right: -35px;\n    position: absolute;\n    bottom: -10px;\n}\n\n.iconArrowHide {\n    position: absolute;\n    right: -7px;\n    bottom: -10px;\n}\n\n.color_grey {\n    color: #808080;\n}\n\n.card_green {\n    min-height: 70px;\n    background-color: #00b050 !important;\n    color: #ffffff;\n}\n\n.lb_bold {\n    font-size: 12px;\n}\n\n.detial_smallside_p {\n    position: absolute;\n    bottom: 10px;\n}\n\n.card_background {\n    background-color: #edf1f5;\n    min-height: 120px;\n}\n\n.deposite_input {\n    width: 100px;\n}\n\n.btn_save_draft {\n    color: #ffffff;\n    background-color: #00b0f0 !important;\n    text-transform: capitalize;\n}\n\n.save_option {\n    background-color: #203864 !important;\n}\n\n.btn_add_small {\n    height: 27px !important;\n    min-width: 25px !important;\n    font-size: 10px;\n    padding: 0 22px !important;\n    background-color: #00b050 !important;\n    color: #ffffff;\n    border-radius: 0 !important;\n}\n\n.list_site_inv {\n    background-color: #92d050;\n    color: #ffffff;\n    font-size: 12px;\n}\n\n.list_site_exp {\n    background-color: #c5e0b4;\n    color: #000000;\n    font-size: 12px;\n    line-height: 16px;\n    min-height: 40px;\n}\n\n.checkbox_inv {\n    padding: 2px;\n    margin-top: 3px;\n    margin-right: 2px;\n}\n\n.exp_select {\n    font-size: 12px !important;\n}\n</style>\n"]}]}