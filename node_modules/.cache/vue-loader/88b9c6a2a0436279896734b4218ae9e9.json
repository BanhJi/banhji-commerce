{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/Withholdingtax.vue?vue&type=style&index=0&id=9aa7a04e&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/new_tax_return/review/Withholdingtax.vue","mtime":1638499443169},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnYtdGFiLS1hY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0U1RUZGQTsKICAgIGNvbG9yOiAjMDAwOwp9Cgoudi10YWIgewogICAgbWluLXdpZHRoOiAzMHB4OwogICAgZm9udC1zaXplOiAxN3B4OwogICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7Cn0KCi50aGVtZS0tbGlnaHQudi10YWJzID4+PiAudi10YWJzLWJhciB7CiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Withholdingtax.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Withholdingtax.vue","sourceRoot":"src/views/compliance/monthly_tax/new_tax_return/review","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-tabs>\n                <v-tab>\n                    <span class=\"hidden-sm-and-up\">\n                        <v-icon left>mdi-pen</v-icon>\n                    </span>\n                    <span class=\"hidden-sm-and-down text-capitalize\">\n                        {{ $t('resident') }}\n                    </span>\n                </v-tab>\n                <v-tab>\n                    <span class=\"hidden-sm-and-up\">\n                        <v-icon left>mdi-pen</v-icon>\n                    </span>\n                    <span class=\"hidden-sm-and-down text-capitalize\">\n                        {{ $t('non_resident') }}\n                    </span>\n                </v-tab>\n                <v-tab-item>\n                    <v-row>\n                        <v-col style=\"background: #fff\" sm=\"12\" cols=\"12\" class=\"pt-0\">\n                            <Resident :withholding=\"withholdings\" @getAmountResident=\"getAmountResident\"/>\n                        </v-col>\n                    </v-row>\n                </v-tab-item>\n                <v-tab-item>\n                    <v-row>\n                        <v-col style=\"background: #fff\" sm=\"12\" cols=\"12\" class=\"pt-0\">\n                            <NoResident :withholding=\"withholdings\" @getAmountNonResident=\"getAmountNonResident\"/>\n                        </v-col>\n                    </v-row>\n                </v-tab-item>\n            </v-tabs>\n        </v-col>\n    </v-row>\n</template>\n\n<script>\n\nconst withholdingHandler = require(\"@/scripts/compliance/handler/withholdingTaxHandler\")\nexport default {\n    data: () => ({\n        withholdings: [],\n        amount: 0,\n    }),\n    props: ['withholding'],\n    watch: {'withholdingSP': 'onloadWithholding'},\n    methods: {\n        async onloadWithholding() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    if (this.withholdingSP.length <= 0) {\n                        new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve('resolved');\n                                withholdingHandler.getByMrId(this.$route.params.id).then(async res => {\n                                    this.withholdings = res.data.data\n                                    window.console.log('withholding', this.withholdings)\n                                })\n                            }, 100)\n                        })\n                    } else {\n                        this.withholdings = this.withholdingSP\n                    }\n                }, 300)\n            })\n\n        },\n        async getAmountResident(amount) {\n            this.amount += amount\n            window.console.log(amount, 'get amount resident')\n            await this.onUpdate()\n        },\n        async getAmountNonResident(amount) {\n            this.amount += amount\n            window.console.log(amount, 'get amount non resident')\n            await this.onUpdate()\n        },\n        async onUpdate() {\n            this.$emit('getAmountWithholdingTax', this.amount)\n        },\n    },\n    async mounted() {\n        await this.onloadWithholding()\n    },\n    computed: {\n        withholdingSP() {\n            if (this.withholding !== undefined) {\n                return this.withholding\n            } else {\n                return []\n            }\n        }\n    },\n    components: {\n        Resident: () => import('./withholdingtax/Resident'),\n        NoResident: () => import('./withholdingtax/NoResident'),\n    },\n};\n</script>\n\n<style scoped>\n.v-tab--active {\n    background-color: #E5EFFA;\n    color: #000;\n}\n\n.v-tab {\n    min-width: 30px;\n    font-size: 17px;\n    text-transform: capitalize;\n}\n\n.theme--light.v-tabs >>> .v-tabs-bar {\n    border-bottom: 1px solid #ddd !important;\n}\n</style>\n"]}]}