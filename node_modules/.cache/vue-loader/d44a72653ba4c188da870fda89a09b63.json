{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/DelayedInvoice.vue?vue&type=style&index=0&id=bf36b7c2&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/customers/DelayedInvoice.vue","mtime":1638499443185},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5rLWRyb3Bkb3duIHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWFyZ2luLXRvcDogM3B4Owp9CgouZnVuY3Rpb25fd3JhcHBlciB7CiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7Cn0KCi52LWFwcGxpY2F0aW9uLS1pcy1sdHIgLnYtdGV4dC1maWVsZCAudi1pbnB1dF9fYXBwZW5kLWlubmVyIHsKICAgIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDsKfQoKLnYtaW5wdXRfX3Nsb3QgewogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgouZnVuY3Rpb25fY29udGVudCAubGFiZWwgewogICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKLmJvcmRlcl9yYWRpdXMxMCB7CiAgICBib3JkZXItcmFkaXVzOiAxMHB4ICFpbXBvcnRhbnQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjJGMkYyOwp9CgoucGEtMy52LWNhcmQgaDQgewogICAgZm9udC1zaXplOiAxOHB4OwogICAgY29sb3I6ICMzMzM7Cn0KCi5wYS0zLnYtY2FyZCBwIHsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGNvbG9yOiAjQjVCNUI1Owp9CgouYXR0YWNobWVudF9maWxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFRkVERUQ7CiAgICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7Cn0KCi5hdHRhY2htZW50X3RhYmxlLnYtZGF0YS10YWJsZSB0YWJsZSB7CiAgICBib3JkZXI6IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTsKfQoKLmF0dGFjaG1lbnRfdGFibGUgdGFibGUgdHIgdGggewogICAgYm9yZGVyLWxlZnQ6IHRoaW4gc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKTsKICAgIGhlaWdodDogMzVweDsKICAgIGJvcmRlci1yaWdodDogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpOwp9CgouYmxvY2tfZGViaXQsCi5ibG9ja19jcmVkaXQgewogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNmZmY7Cn0KCi5ibG9ja19kZWJpdCBwLm51bWJlciwKLmJsb2NrX2NyZWRpdCBwLm51bWJlciB7CiAgICBmb250LXNpemU6IDI1cHg7CiAgICBjb2xvcjogIzdGN0Y3RjsKfQoKLmJsb2NrX2RlYml0IGg1LAouYmxvY2tfY3JlZGl0IGg1LAouYmxvY2tfZGlmZmVyZW5jZSBoNSB7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgY29sb3I6ICM3RjdGN0Y7CiAgICBmb250LXNpemU6IDE1cHg7CiAgICBmb250LXdlaWdodDogbm9ybWFsOwp9CgouYmxvY2tfZGlmZmVyZW5jZSBoNSB7CiAgICBmb250LXNpemU6IDE4cHg7Cn0KCi5ibG9ja19kaWZmZXJlbmNlIGg1IHNwYW4gewogICAgZm9udC1zaXplOiAxNXB4Owp9CgouY3VzdG9tX2dyaWQgdGFibGUgdGg6bGFzdC1jaGlsZCB7CiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50Owp9CgouY29sb3JfZ3JlZW4gewogICAgY29sb3I6ICNmNDQzMzY7Cn0KCkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAgIC5jb250YWluZXIgewogICAgICAgIG1heC13aWR0aDogMTI1MHB4OwogICAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAgIC5wdC02LmNvbC1zbS01LmNvbC0xMiB7CiAgICAgICAgcGFkZGluZy10b3A6IDAgIWltcG9ydGFudDsKICAgIH0KCiAgICAuY29kZV90ZXh0IHsKICAgICAgICB3aWR0aDogMTAwJTsKICAgIH0KCiAgICAucGhvbmVfbm9fcHQgewogICAgICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7CiAgICB9CgogICAgLnNlbGVjdF90ZW1wbGF0ZSwKICAgIC5zYXZlX29wdGlvbiB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDsKICAgIH0KfQoKLmhpZGVfc21hbGxfYmFyX2NsYXNzIHsKICAgIG1heC13aWR0aDogMDsKICAgIHRyYW5zaXRpb246IC41cyBlYXNlLWluOwogICAgZmxleDogMCAwIDA7Cn0KCi5oaWRlX2JpZ19iYXJfY2xhc3MgewogICAgbWF4LXdpZHRoOiAxMDAlOwogICAgdHJhbnNpdGlvbjogLjVzIGVhc2UtaW47CiAgICBmbGV4OiAwIDAgMTAwJTsKfQoKLmluZm9fYWRkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7Cn0KCi5zbWFsbF9zaWRlYmFyIHsKICAgIGhlaWdodDogOTglOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFREYxRjU7Cn0KCi5pY29uQXJyb3cgewogICAgcmlnaHQ6IC0zNXB4OwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAtMTBweDsKfQoKLmljb25BcnJvd0hpZGUgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgcmlnaHQ6IC03cHg7CiAgICBib3R0b206IC0xMHB4Owp9CgouY29sb3JfZ3JleSB7CiAgICBjb2xvcjogIzgwODA4MDsKfQoKLmNhcmRfZ3JlZW4gewogICAgbWluLWhlaWdodDogNzBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGIwNTAgIWltcG9ydGFudDsKICAgIGNvbG9yOiAjZmZmZmZmOwp9CgoubGJfYm9sZCB7CiAgICBmb250LXNpemU6IDEycHg7Cn0KCi5kZXRpYWxfc21hbGxzaWRlX3AgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAxMHB4Owp9CgouY2FyZF9iYWNrZ3JvdW5kIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFREYxRjU7CiAgICBtaW4taGVpZ2h0OiAxMjBweDsKfQoKLmRlcG9zaXRlX2lucHV0IHsKICAgIHdpZHRoOiAxMDBweDsKfQoKLmJ0bl9zYXZlX2RyYWZ0IHsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzAwYjBmMCAhaW1wb3J0YW50OwogICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7Cn0KCi5zYXZlX29wdGlvbiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAzODY0ICFpbXBvcnRhbnQ7Cn0KCi5idG5fYWRkX3NtYWxsIHsKICAgIGhlaWdodDogMjdweCAhaW1wb3J0YW50OwogICAgbWluLXdpZHRoOiAyNXB4ICFpbXBvcnRhbnQ7CiAgICBmb250LXNpemU6IDEwcHg7CiAgICBwYWRkaW5nOiAwIDIycHggIWltcG9ydGFudDsKICAgIGJhY2tncm91bmQtY29sb3I6ICMwMGIwNTAgIWltcG9ydGFudDsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgoubGlzdF9zaXRlX2ludiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJkMDUwOwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBmb250LXNpemU6IDEycHg7Cn0KCi5saXN0X3NpdGVfZXhwIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjNWUwYjQ7CiAgICBjb2xvcjogIzAwMDAwMDsKICAgIGZvbnQtc2l6ZTogMTJweDsKICAgIGxpbmUtaGVpZ2h0OiAxNnB4OwogICAgbWluLWhlaWdodDogNDBweDsKfQoKLmNoZWNrYm94X2ludiB7CiAgICBwYWRkaW5nOiAycHg7CiAgICBtYXJnaW4tdG9wOiAzcHg7CiAgICBtYXJnaW4tcmlnaHQ6IDJweDsKfQoKLmV4cF9zZWxlY3QgewogICAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7Cn0KCg=="},{"version":3,"sources":["DelayedInvoice.vue"],"names":[],"mappingsfile":"DelayedInvoice.vue","sourceRoot":"src/views/customers","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\">\n                    <v-card outlined dense class=\"pa-4 no_border rounded-sm\" color=\"white\">\n                        <v-row>\n                            <v-col class=\"bigSide py-0\" sm=\"8\" cols=\"12\" style=\"transition: .3s ease-in;\"\n                                   :class=\"{'hide_big_bar_class':isHideBar}\">\n                                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                                    <v-card outlined dense class=\"no_border\">\n                                        <h2 class=\"mb-0\">{{ $t('delayed_invoice') }}</h2>\n                                        <v-icon v-if=\"isHideBar\"\n                                                onclick=\"window.history.go(-1); return false;\"\n                                                style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                                class=\"float-right\"\n                                        >close\n                                        </v-icon>\n                                        <span style=\"transition: .3s ease-in; z-index:10;\"\n                                              :class=\"{'iconArrow': !isHideBar,'iconArrowHide': isHideBar }\">\n                                            <v-icon size=\"22\"\n                                                    class=\"arr_icon\"\n                                                    @click=\"hide_smallsitebar\"\n                                                    v-if=\"isHideBar\"> mdi-chevron-left-circle\n                                            </v-icon>\n                                            <v-icon size=\"22\"\n                                                    class=\"arr_icon\"\n                                                    @click=\"hide_smallsitebar\"\n                                                    v-if=\"!isHideBar\"> mdi-chevron-right-circle\n                                            </v-icon>\n\t\t\t\t\t\t\t\t\t\t</span>\n                                    </v-card>\n                                    <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                        <v-row>\n                                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-4 pt-4\">\n                                                <label class=\"label  mb-0\">{{ $t('customer') }}</label>\n                                                <v-col sm=\"12\" cols=\"12\"\n                                                       class=\"kendo_dropdown_custom pl-0 pb-3 pt-1\">\n                                                    <dropdownlist\n                                                        :data-items=\"customerList\"\n                                                        @change=\"onChange\"\n                                                        :value=\"customer\"\n                                                        :data-item-key=\"'id'\"\n                                                        :text-field=\"'numberName'\"\n                                                        :default-item=\"defaultItem\"\n                                                        :filterable=\"true\"\n                                                        @filterchange=\"onFilterChange\">\n                                                    </dropdownlist>\n                                                </v-col>\n                                                <label class=\"label mb-0 mt-1\">{{ $t('number') }}</label>\n                                                <v-row class=\"mt-1 mr-0\">\n                                                    <v-col sm=\"3\" cols=\"3\" class=\"pt-0 pr-0\">\n                                                        <div class=\"code_text text-bold\">\n                                                            {{ invoice.transactionType.abbr }}\n                                                        </div>\n                                                    </v-col>\n                                                    <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                                                        <v-text-field class=\"custom-border \"\n                                                                      v-model=\"invoice.number\"\n                                                                      outlined\n                                                                      tage=\"Invoice Number\"\n                                                                      :rules=\"[v => !!v || 'Number is required']\"\n                                                                      required/>\n                                                    </v-col>\n                                                    <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                                                        <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                                                @click=\"generateNumber\">mdi-qrcode\n                                                        </v-icon>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n                                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0 px-4 pt-4\">\n                                                <label class=\"label  mb-0\">{{ $t('date') }}</label>\n                                                <app-datepicker :initialDate=\"invoice.transactionDate\"\n                                                                @emitDate=\"transactionDate = $event\"/>\n                                                <label class=\"label  mb-0\">{{ $t('invoice_currency') }}</label>\n                                                <v-select class=\"mt-0\"\n                                                          :items=\"currencies\"\n                                                          v-model=\"invoice.currency\"\n                                                          tage=\"Invoice Currency\"\n                                                          placeholder=\"USD\"\n                                                          item-value=\"id\"\n                                                          return-object\n                                                          :item-text=\"item =>`${item.code} - ${item.name}`\"\n                                                          outlined\n                                                />\n                                            </v-col>\n                                        </v-row>\n                                    </v-card>\n                                    <v-row class=\"pt-3\" style=\"background-color: #fff;\">\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                                            <kendo-datasource ref=\"itemLineDS\"\n                                                              :data=\"itemLines\"\n                                                              :change=\"dataSourceChanged\"/>\n                                            <kendo-grid id=\"gridItemLine\" class=\"grid-function\"\n                                                        :data-source-ref=\"'itemLineDS'\"\n                                                        :sortable=\"false\"\n                                                        :column-menu=\"true\"\n                                                        :editable=\"true\"\n                                                        :scrollable-virtual=\"true\">\n                                                <kendo-grid-column\n                                                    :title=\"$t('no.')\"\n                                                    :width=\"55\"\n                                                    :column-menu=\"false\"\n                                                    :template=\"rowNumberTmpl\"\n                                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5;',\n                                                                    class: 'text-products'\n                                                                }\"\n                                                    :attributes=\"{\n                                                                    style: 'text-align: products'\n                                                                }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'serviceDate'\"\n                                                    :title=\"$t('date_from')\"\n                                                    :width=\"160\"\n                                                    :hidden=\"!saleFormContent.serviceDate\"\n                                                    :template=\"'<span>#= kendo.toString(new Date(serviceDate), dateFormat)#</span>'\"\n                                                    :editor=\"ServiceDateEditor\"\n                                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'serviceDateTo'\"\n                                                    :title=\"$t('date_to')\"\n                                                    :width=\"160\"\n                                                    :hidden=\"!saleFormContent.serviceDateTo\"\n                                                    :template=\"'<span>#= kendo.toString(new Date(serviceDateTo), dateFormat)#</span>'\"\n                                                    :editor=\"ServiceDateToEditor\"\n                                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'item'\"\n                                                    :title=\"$t('item')\"\n                                                    :template=\"itemTemplate\"\n                                                    :editor=\"ItemDropDownEditor\"\n                                                    :width=\"200\"\n                                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'description'\"\n                                                    :title=\"$t('description')\"\n                                                    :template=\"'<span>#=description#</span>'\"\n                                                    :width=\"160\"\n                                                    :headerAttributes=\"{\n                                                                    style: 'background-color: #EDF1F5'\n                                                                }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'qty'\"\n                                                    :title=\"$t('qty')\"\n                                                    :format=\"'{0:n}'\"\n\n                                                    :template=\"'<span>#=qty#</span>'\"\n                                                    :width=\"80\"\n                                                    :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"\n                                                    :attributes=\"{style: 'text-align: left; '}\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'uom'\"\n                                                    :title=\"$t('uom')\"\n                                                    :width=\"100\"\n                                                    :template=\"UOMTemplate\"\n                                                    @change=\"onUOMChanged\"\n                                                    :editor=\"UOMDropDownEditor\"\n                                                    :headerAttributes=\"{\n                                                                        style: 'text-align: left; background-color: #EDF1F5'\n                                                                    }\"\n                                                    :attributes=\"{\n                                                                        style: 'text-align: left'\n                                                                    }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'price'\"\n                                                    :title=\"$t('price')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"100\"\n                                                    :template=\"'<span>#=price#</span>'\"\n                                                    :headerAttributes=\"{\n                                                                        style: 'text-align: left; background-color: #EDF1F5'\n                                                                    }\"\n                                                    :attributes=\"{\n                                                                        style: 'text-align: right'\n                                                                    }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'amount'\"\n                                                    :title=\"$t('amount')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"100\"\n                                                    :editable=\"()=>{ return false}\"\n                                                    :template=\"'<span>#=amount#</span>'\"\n                                                    :headerAttributes=\"{\n                                                                        style: 'text-align: left; background-color: #EDF1F5'\n                                                                    }\"\n                                                    :attributes=\"{\n                                                                        style: 'text-align: right'\n                                                                    }\"/>\n                                                <!--                                                <kendo-grid-column-->\n                                                <!--                                                    :field=\"'discountPercent'\"-->\n                                                <!--                                                    :title=\"$t('discount_%')\"-->\n                                                <!--                                                    :format=\"'{0:n}'\"-->\n                                                <!--                                                    :width=\"100\"-->\n                                                <!--                                                    :template=\"'<span>#=discountPercent#</span>'\"-->\n                                                <!--                                                    :headerAttributes=\"{-->\n                                                <!--                                                                        style: 'text-align: left; background-color: #EDF1F5'-->\n                                                <!--                                                                    }\"-->\n                                                <!--                                                    :attributes=\"{-->\n                                                <!--                                                                        style: 'text-align: left'-->\n                                                <!--                                                                    }\"/>-->\n                                                <!--                                                <kendo-grid-column-->\n                                                <!--                                                    :field=\"'discountAmount'\"-->\n                                                <!--                                                    :title=\"$t('discount_amount')\"-->\n                                                <!--                                                    :format=\"'{0:n}'\"-->\n                                                <!--                                                    :width=\"100\"-->\n                                                <!--                                                    :template=\"'<span>#=discountAmount#</span>'\"-->\n                                                <!--                                                    :headerAttributes=\"{-->\n                                                <!--                                                                        style: 'text-align: left; background-color: #EDF1F5'-->\n                                                <!--                                                                    }\"-->\n                                                <!--                                                    :attributes=\"{-->\n                                                <!--                                                                        style: 'text-align: left'-->\n                                                <!--                                                                    }\"/>-->\n                                                <kendo-grid-column\n                                                    :field=\"'modifier'\"\n                                                    :title=\"$t('modifier')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.modifier\"\n                                                    :template=\"'<span>#=modifier.name?modifier.name:``#</span>'\"\n                                                    :editor=\"ModifierDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'discountItem'\"\n                                                    :title=\"$t('discount_item')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.discountItem\"\n                                                    :template=\"discountItemTemplate\"\n                                                    :editor=\"DiscountItemDropDownEditor\"\n                                                    :headerAttributes=\"{\n                                                                        style: 'text-align: left; background-color: #EDF1F5'\n                                                                    }\"\n                                                    :attributes=\"{\n                                                                        style: 'text-align: left'\n                                                                    }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'vatTax'\"\n                                                    :title=\"$t('vat')\"\n                                                    :width=\"150\"\n                                                    :template=\"vatTemplate\"\n                                                    :editor=\"VatTaxDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'specificTax'\"\n                                                    :title=\"$t('specificTax')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.specificTax\"\n                                                    :template=\"'<span>#=specificTax.defaultTax?specificTax.defaultTax:``#</span>'\"\n                                                    :editor=\"SpecificTaxDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'otherTax'\"\n                                                    :title=\"$t('otherTax')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.otherTax\"\n                                                    :template=\"'<span>#=otherTax.defaultTax?otherTax.defaultTax:``#</span>'\"\n                                                    :editor=\"OtherTaxDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'publicLightingTax'\"\n                                                    :title=\"$t('pl_tax')\"\n                                                    :format=\"'{0:n}'\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.publicLightingTax\"\n                                                    :template=\"'<span>#=publicLightingTax.defaultTax?publicLightingTax.defaultTax:``#</span>'\"\n                                                    :editor=\"PublicLightingTaxDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n                                                <kendo-grid-column\n                                                    :field=\"'saleUnit'\"\n                                                    :title=\"$t('sale_unit')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.saleUnit\"\n                                                    :template=\"saleUnitTemplate\"\n                                                    :editor=\"SaleUnitDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n\n                                                <kendo-grid-column\n                                                    :field=\"'employee'\"\n                                                    :title=\"$t('employee')\"\n                                                    :width=\"150\"\n                                                    :hidden=\"!saleFormContent.employee\"\n                                                    :template=\"empImpl\"\n                                                    :editor=\"EmployeeDropDownEditor\"\n                                                    :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5' }\"\n                                                    :attributes=\"{style: 'text-align: left' }\"/>\n\n                                                <kendo-grid-column\n                                                    :command=\"{ iconClass: 'k-icon k-i-trash', text: 'Delete', click: removeRow, class: 'btn-plus' }\"\n                                                    :title=\"'Action'\"\n                                                    :width=\"100\"\n                                                    :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"/>\n                                            </kendo-grid>\n\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                            <v-row>\n                                                <v-col sm=\"9\" cols=\"12\" class=\"\">\n                                                    <v-btn class=\"float-left btn_plus rounded-0 mr-2\" @click=\"addRow\">\n                                                        <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                                                    </v-btn>\n                                                    <!--                                                    <v-btn class=\"float-left rounded-0 btn_plus mr-2\" @click=\"addRow\">-->\n                                                    <!--                                                        <v-icon size=\"\" class=\"ma-1\">fa fa-barcode</v-icon>-->\n                                                    <!--                                                    </v-btn>-->\n                                                    <!--                                                    <v-btn class=\"float-left white&#45;&#45;text rounded-0 add_account mr-2\"-->\n                                                    <!--                                                           to=\"add_item\">-->\n                                                    <!--                                                        {{ $t('add_account') }}-->\n                                                    <!--                                                    </v-btn>-->\n                                                    <!--                                                    <v-btn class=\"float-left rounded-0 add_account mr-2 btn_save_draft\">-->\n                                                    <!--                                                        {{ $t('sub_total') }}-->\n                                                    <!--                                                    </v-btn>-->\n                                                    <!--                                                    <template>-->\n                                                    <!--                                                        <v-file-input class=\"mt-0 pt-0 \" sm=\"3\" cols=\"6\"-->\n                                                    <!--                                                                      v-model=\"files\"-->\n                                                    <!--                                                                      :placeholder=\"$t('attachment')\"-->\n                                                    <!--                                                                      multiple-->\n                                                    <!--                                                                      prepend-icon=\"mdi-paperclip\"-->\n                                                    <!--                                                        >-->\n                                                    <!--                                                            <template v-slot:selection=\"{ text }\">-->\n                                                    <!--                                                                <v-chip-->\n                                                    <!--                                                                    small-->\n                                                    <!--                                                                    label-->\n                                                    <!--                                                                    color=\"primary\"-->\n                                                    <!--                                                                >-->\n                                                    <!--                                                                    {{ text }}-->\n                                                    <!--                                                                </v-chip>-->\n                                                    <!--                                                            </template>-->\n                                                    <!--                                                        </v-file-input>-->\n                                                    <!--                                                    </template>-->\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                            <v-row>\n                                                <v-col class=\"pt-0\" sm=\"6\" cols=\"6\">\n                                                    <v-card class=\"no-boxshadow pa-3\" color=\"grayBg\">\n                                                        <label>{{ $t('message_on_invoice') }}</label>\n                                                        <v-textarea class=\"mt-1\"\n                                                                    v-model=\"invoice.transactionNote\"\n                                                                    outlined\n                                                                    no-resize\n                                                                    height=\"80px\"\n                                                                    rows=\"3\"\n                                                                    placeholder=\"This will appear on the invoice\"\n                                                        />\n                                                    </v-card>\n                                                </v-col>\n                                                <v-col class=\"pt-0\" sm=\"6\" cols=\"6\">\n                                                    <v-simple-table>\n                                                        <template v-slot:default>\n                                                            <tbody>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">{{ $t('subtotal') }}</td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">\n                                                                    {{ numberFormat(invoice.subTotal) }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">{{\n                                                                        $t('general_discount')\n                                                                    }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">({{\n                                                                        numberFormat(invoice.discountTotal)\n                                                                    }})\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\">{{ $t('total_tax') }}\n                                                                    <v-btn @click=\"dialogTax=true\"\n                                                                            color=\"primary\"\n                                                                           class=\"text-white text-bold rounded-0 float-right text-uppercase\"\n                                                                           style=\"height: 30px !important;\">\n                                                                        {{ $t('tax') }}\n                                                                    </v-btn>\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">\n                                                                    {{ numberFormat(invoice.totalTaxAmount) }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr>\n                                                                <td class=\"text-left pr-0\" width=\"240px\">\n                                                                    <v-select class=\"mt-3\"\n                                                                              v-model=\"invoice.specificDiscountItem\"\n                                                                              :items=\"specificDiscountItem\"\n                                                                              item-text=\"name\"\n                                                                              @change=\"onSpecificDiscountChanged\"\n                                                                              item-value=\"id\"\n                                                                              return-object\n                                                                              clearable\n                                                                              outlined\n                                                                    />\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right\">({{\n                                                                        numberFormat(invoice.specificDiscountTotal ? invoice.specificDiscountTotal : 0)\n                                                                    }})\n                                                                </td>\n                                                            </tr>\n                                                            <!--                                                            <tr>-->\n                                                            <!--                                                                <td class=\"text-left\">{{ $t('delivery') }}</td>-->\n                                                            <!--                                                                <td class=\"text-center\">:</td>-->\n                                                            <!--                                                                <td class=\"text-right\">{{ invoice.deliveryFee }}</td>-->\n                                                            <!--                                                            </tr>-->\n\n                                                            <tr v-for=\"(num,index) in numSelect\" :key=\"index\"\n                                                                class=\"hide_form_alert\">\n                                                                <td class=\"text-left text-uppercase pr-0\">\n\n                                                                    <v-btn v-if=\"num == 1\" @click=\"addSelect\"\n                                                                           class=\"float-left mt-2 mr-1 pa-1\" small>\n                                                                        <v-icon color=\"primary\" size=\"16\" class=\"ma-1\">\n                                                                            mdi-plus\n                                                                        </v-icon>\n                                                                    </v-btn>\n                                                                    <v-btn v-if=\"num > 1\" @click=\"removeSelect(index)\"\n                                                                           class=\"float-left mt-2 mr-1 pa-1\" small>\n                                                                        <v-icon color=\"primary\" size=\"16\" class=\"ma-1\">\n                                                                            fa-trash\n                                                                        </v-icon>\n                                                                    </v-btn>\n                                                                    <v-select class=\"my-2 capitalize\"\n                                                                              v-model=\"mOtherCharge[index]\"\n                                                                              :items=\"otherChargeList\"\n                                                                              item-text=\"name\"\n                                                                              @change=\"onOtherChargeChange\"\n                                                                              item-value=\"id\"\n                                                                              return-object\n                                                                              clearable\n                                                                              outlined\n                                                                    />\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right color_green text-bold\">\n                                                                    {{\n                                                                        numberFormat(onOtherAmount(mOtherCharge[index]))\n                                                                    }}\n                                                                </td>\n                                                            </tr>\n                                                            <tr style=\"background: #F8F8F9\">\n                                                                <td class=\"text-left text-uppercase pr-0\">{{\n                                                                        $t('total')\n                                                                    }}\n                                                                </td>\n                                                                <td class=\"text-center\">:</td>\n                                                                <td class=\"text-right color_green text-bold\" id=\"total\">\n                                                                    {{ numberFormat(invoice.total) }}\n                                                                </td>\n                                                            </tr>\n                                                            <!--                                                            <tr>-->\n                                                            <!--                                                                <td class=\"text-left pr-0\">{{ $t('deposit') }} <span-->\n                                                            <!--                                                                    class=\"float-right color_green\">{{-->\n                                                            <!--                                                                        numberFormat(invoice.depositAmount)-->\n                                                            <!--                                                                    }}</span>-->\n                                                            <!--                                                                </td>-->\n                                                            <!--                                                                <td class=\"text-center\">:</td>-->\n                                                            <!--                                                                <td class=\"text-right hide_form_alert\">-->\n                                                            <!--                                                                    <v-text-field-->\n                                                            <!--                                                                        class=\" text-right float-right deposite_input\"-->\n                                                            <!--                                                                        v-model=\"invoice.depositDeduction\"-->\n                                                            <!--                                                                        @change=\"autoCalculate\"-->\n                                                            <!--                                                                        tage=\"Deposit\"-->\n                                                            <!--                                                                        width=\"80\"-->\n                                                            <!--                                                                        outlined-->\n                                                            <!--                                                                    />-->\n                                                            <!--                                                                </td>-->\n                                                            <!--                                                            </tr>-->\n                                                            <!--                                                            <tr>-->\n                                                            <!--                                                                <td class=\"text-left\">{{ $t('amount_due') }}</td>-->\n                                                            <!--                                                                <td class=\"text-center\">:</td>-->\n                                                            <!--                                                                <td class=\"text-right color_green text-bold\">-->\n                                                            <!--                                                                    {{ numberFormat(invoice.remainingAmount) }}-->\n                                                            <!--                                                                </td>-->\n                                                            <!--                                                            </tr>-->\n\n                                                            </tbody>\n                                                        </template>\n                                                    </v-simple-table>\n                                                </v-col>\n                                            </v-row>\n                                        </v-col>\n                                    </v-row>\n\n                                    <v-divider/>\n                                    <v-card outlined dense class=\"no_border function_footer\">\n                                        <v-alert type=\"warning\"\n                                                 v-model=\"alert\"\n                                                 dismissible>\n                                            <span v-html=\"errorMessage\"/>\n                                        </v-alert>\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn class=\"mr-2 float-left text-capitalize \" v-on=\"on\">\n                                                    {{ $t('select_template') }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list>\n                                                <v-list-item v-for=\"(item, index) in templates\" :key=\"index\">\n                                                    <v-list-item-title>{{ item.title }}</v-list-item-title>\n                                                </v-list-item>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn color=\"black\" class=\"float-left white--text  text-capitalize \"\n                                               @click=\"cancel\">{{ $t('cancel') }}\n                                        </v-btn>\n                                        <v-menu>\n                                            <template v-slot:activator=\"{ on }\">\n                                                <v-btn color=\"primary\"\n                                                       class=\"ml-2 float-right white--text  text-capitalize\" v-on=\"on\">\n                                                    {{ $t('save_option') }}\n                                                    <v-icon size=\"\" class=\"ma-1\">expand_more</v-icon>\n                                                </v-btn>\n                                            </template>\n                                            <v-list rounded>\n                                                <v-list-item-group>\n                                                    <v-list-item>\n                                                        <v-list-item-content>\n                                                            <v-list-item-title @click=\"saveNew\">\n                                                                {{ $t('save_new') }}\n                                                            </v-list-item-title>\n                                                        </v-list-item-content>\n                                                    </v-list-item>\n                                                    <v-list-item>\n                                                        <v-list-item-content>\n                                                            <v-list-item-title>{{ $t('save_print') }}\n                                                            </v-list-item-title>\n                                                        </v-list-item-content>\n                                                    </v-list-item>\n                                                    <v-list-item>\n                                                        <v-list-item-content>\n                                                            <v-list-item-title @click=\"onSaveClose(false)\">\n                                                                {{ $t('save_close') }}\n                                                            </v-list-item-title>\n                                                        </v-list-item-content>\n                                                    </v-list-item>\n                                                </v-list-item-group>\n                                            </v-list>\n                                        </v-menu>\n                                        <v-btn color=\"secondary\" class=\"float-right  white--text text-capitalize\">\n                                            {{ $t('save_draft') }}\n                                        </v-btn>\n\n                                    </v-card>\n                                </v-form>\n                            </v-col>\n                            <v-col class=\"smallSide\" sm=\"4\" style=\"transition: .3s ease-in;\"\n                                   :class=\"{'hide_small_bar_class':isHideBar}\">\n                                <h3 style=\"color: #b3b5bc; font-size:20px;\" v-if=\"!isHideBar\"\n                                    class=\"text-uppercase float-right mt-n3\">\n                                    <span class=\"pointer\" @click=\"Help('delayed invoice')\">\n                                        {{ $t('help') }}\n                                    </span>\n                                    <v-icon\n                                        onclick=\"window.history.go(-1); return false;\"\n                                        style=\"cursor: pointer; font-size: 40px;\"\n                                        color=\"grey\"\n                                        class=\"float-right mt-n1\"\n                                    >close\n                                    </v-icon>\n                                </h3>\n\n                                <div v-if=\"!isHideBar\" class=\"small_sidebar mt-9 px-4 pt-4 grayBg\">\n                                    <v-card class=\"pa-3 no-boxshadow d-flex justify-space-between align-center\"\n                                            min-height=\"60px\" color=\"primary\">\n                                        <h3 style=\"font-size: 18px\" class=\"text-white text-uppercase\">\n                                            {{ $t('amount_due') }}</h3>\n                                        <h3 class=\"text-bold float-right text-white\" style=\"font-size: 22px\">\n                                            {{ numberFormat(invoice.amountDue) }}</h3>\n                                    </v-card>\n\n                                    <v-row>\n                                        <v-col sm=\"12\" cols=\"12\" class=\"pt-4\">\n                                            <!-- <h4 class=\" text-uppercase line_22\">{{ $t('analysis') }}</h4> -->\n                                            <label class=\"label mb-0\">{{ $t('segment') }}</label>\n                                            <v-select class=\"mt-1\"\n                                                      v-model=\"invoice.segment\"\n                                                      :items=\"segments\"\n                                                      item-value=\"id\"\n                                                      :item-text=\"item =>`${item.code} - ${item.name}`\"\n                                                      return-object\n                                                      tage=\"sub Of\"\n                                                      placeholder=\"Sub Of\"\n                                                      outlined=\"\"/>\n                                            <label class=\"label mb-0\">{{ $t('location') }}</label>\n                                            <v-select class=\"mt-1\"\n                                                      v-model=\"invoice.location\"\n                                                      :items=\"locations\"\n                                                      item-value=\"id\"\n                                                      :item-text=\"item =>`${item.code} - ${item.name}`\"\n                                                      return-object\n                                                      tage=\"Location\"\n                                                      placeholder=\"bu/location\"\n                                                      outlined=\"\"/>\n\n\n                                        </v-col>\n                                    </v-row>\n                                    <p class=\"mb-0 detial_smallside_p font_14\">{{ $t('delayed_funct_desc') }}</p>\n                                </div>\n                            </v-col>\n                        </v-row>\n\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoading\"\n                :fullPage=\"true\"\n                :myLoading=\"true\"\n                :alertMessage=\"loadingAlert\"\n                :color=\"loadingColorAlert\"\n                :alertText=\"loadingTextAlert\"/>\n            <v-dialog v-model=\"dialogTax\" max-width=\"450px\">\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t('tax_list') }}</v-card-title>\n                        <v-icon  @click=\"dialogTax = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\">\n                        <v-row>\n                            <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                                <v-simple-table>\n                                    <template v-slot:default>\n                                        <tbody>\n                                        <tr v-for=\"(value, name) in taxListTotal\" v-bind:key=\"name\">\n                                            <td class=\"text-left\" width=\"180px\">{{ name }}</td>\n                                            <td class=\"text-center\">:</td>\n                                            <td class=\"text-right\">\n                                                {{ numberFormat(value) }}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"text-left\" width=\"180px\">{{ $t('total') }}</td>\n                                            <td class=\"text-center\">:</td>\n                                            <td class=\"text-right\">\n                                                {{ numberFormat(invoice.totalTaxAmount) }}\n                                            </td>\n                                        </tr>\n                                        </tbody>\n                                    </template>\n                                </v-simple-table>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                    <v-divider/>\n\n                </v-card>\n            </v-dialog>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport DatePickerComponent from '@/components/custom_templates/DatePickerComponent'\nimport {DropDownList} from '@progress/kendo-vue-dropdowns'\nimport ItemLineModel from \"@/scripts/invoice/model/ItemLine\"\nimport {uuid} from 'vue-uuid'\nimport InvoiceModel from \"@/scripts/invoice/model/Invoice\"\nimport SaleFormContentModel from \"@/scripts/model/SaleFormContent\";\nimport kendo from \"@progress/kendo-ui\";\nimport { ShowResource } from '@/observable/store'\n\nconst $ = require(\"jquery\")\n\nconst settingsHandler = require(\"@/scripts/settingsHandler\")\nconst customerHandler = require(\"@/scripts/customerHandler\")\nconst locationHandler = require(\"@/scripts/locationHandler\")\nconst prefixHandler = require(\"@/scripts/prefixHandler\")\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\")\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nconst saleFormContentHandler = require(\"@/scripts/saleFormContentHandler\")\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\")\nconst uomPriceHandler = require(\"@/scripts/uomPriceHandler\")\nconst discountItemHandler = require(\"@/scripts/discountItemHandler\")\nconst itemModifierHandler = require(\"@/scripts/itemModifierHandler\")\nconst saleUnitItemHandler = require(\"@/scripts/saleUnitItemHandler\")\nconst employeeHandler = require(\"@/scripts/employeeHandler\")\nconst settingHandler = require(\"@/scripts/settingHandler\")\nconst otherChargeHandler = require(\"@/scripts/otherChargeHandler\")\n\nconst invoiceModel = new InvoiceModel({})\nconst itemLineModel = new ItemLineModel({})\nconst saleFormContentModel = new SaleFormContentModel({})\n\nconst textField = 'numberName'\nconst keyField = 'id'\nconst defaultItem = {[textField]: 'Select customer...', [keyField]: null}\nconst emptyItem = {[textField]: 'loading ...'}\nconst DELAYED_INVOICE = 'delayed invoice'\nconst itemLinePrefix = 'lin-'\nconst DISCOUNT_TYPE = '?type=Sale'\n\nexport default {\n    name: \"DelayedInvoice\",\n    props: ['id'],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        'app-datepicker': DatePickerComponent,\n        'dropdownlist': DropDownList\n    },\n    data: () => ({\n        showLoading: false,\n        loadingAlert: false,\n        loadingColorAlert: '',\n        loadingTextAlert: '',\n        alert: false,\n        deposite: 0,\n        files: [],\n        // Form validation\n        valid: true,\n        transactionDate: new Date().toISOString().substr(0, 10),\n        transactionType: ['Delayed Invoice'],\n        templates: [\n            {title: 'Draft'},\n            {title: 'Open'},\n            {title: 'Partially Closed'},\n            {title: 'Closed'},\n        ],\n        col_expand: 9,\n        col_hide: 3,\n        isHideBar: false,\n        dialogTax: false,\n        customerList: [],\n        currencies: [],\n        segments: [],\n        locations: [],\n        itemLines: [],\n        numSelect: [1],\n        mOtherCharge: [],\n        mOtherChargeAmount: [],\n        specificDiscountItem: [],\n        otherChargeList: [],\n        taxListTotal: {},\n        loggedUser: {\n            id: 'cf3d10ab-bce6-47b3-8405-b448c23dad84',\n            name: 'Mr. Inspector'\n        },\n        cusBaseUrl: customerHandler.search(),\n        filter: '',\n        defaultItem: defaultItem,\n        itemLine: itemLineModel,\n        saleFormContent: saleFormContentModel,\n        customer: {},\n        invoice: invoiceModel\n    }),\n    methods: {\n        Help(key_search){\n            ShowResource(key_search)\n        },\n        onUOMChanged(dataItem) {\n            window.console.log(dataItem, 'uom changed')\n        },\n        close(data) {\n            if (this.$route.params.id === undefined) {\n                this.$router.push({\n                    name: \"Customers\",\n                    params: {\n                        data: data,\n                    }\n                })\n            } else {\n                window.history.go(-1)\n                // this.$router.push({\n                //     path: \"invoice_view\",\n                //     name: \"Invoice View\",\n                //     params: {\n                //         data: data,\n                //     }\n                // })\n            }\n            // window.console.log(data, 'data')\n        },\n        saveNew() {\n\n        },\n        async initData() {\n            if (this.$route.params.id !== undefined) {\n                await this.loadViewInvoice()\n            } else {\n                this.addRow()\n            }\n        },\n        async onSaveClose(saveSend) {\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    let itemLineDS = this.$refs.itemLineDS.kendoWidget()\n                    let data = {\n                        \"id\": this.invoice.id ? this.invoice.id : '',\n                        \"type\": 'Delayed Invoice',\n                        \"number\": this.invoice.number,\n                        \"abbr\": this.invoice.transactionType.abbr,\n                        \"transactionDate\": this.transactionDate,\n                        \"dueDate\": this.invoice.dueDate,\n                        \"monthOf\": this.invoice.monthOf,\n                        \"customer\": this.invoice.customer,\n                        \"transactionType\": this.invoice.transactionType,\n                        \"paymentTerm\": this.invoice.paymentTerm,\n                        \"discountPromotion\": {},\n                        \"accReceivable\": this.invoice.accReceivable,\n                        \"currency\": this.invoice.currency,\n                        \"priceLevel\": this.invoice.priceLevel,\n                        \"itemLines\": itemLineDS.data(),\n                        \"segment\": this.invoice.segment,\n                        \"location\": this.invoice.location,\n                        \"project\": this.invoice.project,\n                        \"saleChannel\": this.invoice.saleChannel,\n                        \"employee\": this.invoice.employee,\n                        \"billingAddress\": this.invoice.billingAddress,\n                        \"deliveryAddress\": this.invoice.deliveryAddress,\n                        \"deliveryDateTime\": this.invoice.deliveryDateTime,\n                        \"transactionNote\": this.invoice.transactionNote,\n                        \"journalNote\": this.invoice.journalNote,\n                        \"subTotal\": this.invoice.subTotal,\n                        \"total\": this.invoice.total,\n                        \"discountTotal\": this.invoice.discountTotal,\n                        \"specificDiscountTotal\": this.invoice.specificDiscountTotal,\n                        \"deliveryFee\": this.invoice.deliveryFee,\n                        \"totalTaxAmount\": this.invoice.totalTaxAmount,\n                        \"depositAmount\": this.invoice.depositAmount,\n                        \"depositDeduction\": this.invoice.depositDeduction,\n                        \"remainingAmount\": this.invoice.remainingAmount,\n                        \"amountDue\": this.invoice.amountDue,\n                        \"currentBalance\": this.invoice.currentBalance,\n                        \"balance\": this.invoice.balance,\n                        \"creditLimit\": this.invoice.creditLimit,\n                        \"saveOption\": this.invoice.saveOption,\n                        \"status\": 1,\n                        \"approvedBy\": this.invoice.approvedBy,\n                        \"formTemplate\": {},\n                        \"specificDiscountItem\": this.invoice.specificDiscountItem,\n                        \"otherCharge\": this.mOtherCharge,\n                        \"otherChargeAmount\": this.invoice.otherChargeAmount,\n                        \"lateFee\": this.invoice.lateFee,\n                        \"paymentOptionWBMobile\": {},\n                        \"paymentOptionOnline\": {},\n                        \"paymentOptionKHQR\": {},\n                        \"publicLink\": this.invoice.publicLink,\n                        \"paymentCode\": this.invoice.paymentCode,\n                        \"taxListTotal\": this.taxListTotal,\n                        \"customerDiscountItem\": this.customerDiscountItem,\n                        \"customerSaleUnit\": this.customerSaleUnit,\n                        \"paymentScheme\": this.invoice.paymentScheme,\n                        \"createdAt\": this.invoice.createdAt,\n                        \"loggedUser\": this.loggedUser,\n                        \"saveSend\": saveSend,\n                        \"actionType\": this.$route.params.id ? this.$route.query.type : 'new'\n                    }\n                    billingHandler.create(data).then(response => {\n                        if (response.data.statusCode === 201) {\n                            // this.close(response.data.data)\n                            // this.$refs.form.reset()\n                            this.$snotify.success('Successfully')\n                            this.close(response.data.data)\n                        }\n                    }).catch(e => {\n                        this.$snotify.error('Something went wrong')\n                        this.errors.push(e)\n                    })\n                }, 300);\n            })\n        },\n        removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridItemLine\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n            }\n        },\n        errorMessage() {\n\n        },\n        addRow() {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                total = ds.total()\n            this.itemLine.id = itemLinePrefix + uuid.v1()\n            ds.insert(total, this.itemLine)\n            // this.itemLines.push(this.itemLine)\n            // window.console.log('item Line', this.itemLine)\n        },\n        accountDropDownEditor() {\n        },\n        cancel() {\n\n        },\n        hide_smallsitebar() {\n            this.isHideBar = !this.isHideBar;\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        async loadSaleFormContent() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    saleFormContentHandler.list().then(res => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0]\n                            }\n                        }\n                    })\n                }, 300)\n            })\n        },\n        async loadCurrency() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    currencyHandler.list('fun-c').then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.currencies = res.data.data.filter(o => o.used === 1)\n                        }\n                    })\n                }, 300);\n            })\n        },\n        async loadPrefix() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    prefixHandler.get(DELAYED_INVOICE).then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.invoiceTypes = res.data.data\n                            if (this.invoiceTypes.length > 0) {\n                                this.invoice.transactionType = this.invoiceTypes[0]\n                                if (this.$route.params.id === undefined) {\n                                    this.generateNumber()\n                                }\n                            }\n                        }\n\n                    })\n                }, 300);\n            })\n        },\n        async loadSaleUnitItems() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    saleUnitItemHandler.list().then(res => {\n                        if (res.data.statusCode === 200)\n                            this.saleUnitItemList = res.data.data\n                    })\n                }, 300)\n            })\n        },\n        addSelect() {\n            let amount_num = this.numSelect.length\n            let num = this.numSelect[amount_num - 1]\n            let new_num = num + 1\n            let lenghtItem = this.specificDiscountItem.length\n            if (new_num <= lenghtItem) {\n                this.numSelect.push(new_num)\n            }\n\n        },\n        removeSelect(index) {\n            this.numSelect.splice(index, 1)\n            // window.console.log(index, this.numSelect)\n            // this.selectDiscount.splice(index,1)\n            // window.console.log(\"remove\",this.selectDiscount)\n            // this.selectDiscount = this.selectDiscount.filter(item =>  item.id != val.id);\n        },\n        onOtherChargeChange() {\n            let otherCharge = 0\n            this.mOtherCharge.forEach(m => {\n                otherCharge += this.autoCalculateDiscount(m, this.invoice.subTotal)\n            })\n            this.invoice.otherChargeAmount = otherCharge\n            this.autoCalculate()\n        },\n        onOtherAmount(value) {\n            return this.autoCalculateDiscount(value, this.invoice.subTotal)\n        },\n        onSpecificDiscountChanged() {\n            if (this.invoice.specificDiscountItem) {\n                // window.console.log('-changed', this.invoice.specificDiscountItem)\n                const discountInvoice = this.autoCalculateDiscount(this.invoice.specificDiscountItem, this.invoice.subTotal)\n                this.invoice.specificDiscountTotal = kendo.toString(discountInvoice ? discountInvoice : 0, 'n')\n                let total = kendo.parseFloat(this.invoice.subTotal) - (kendo.parseFloat(this.invoice.discountTotal) + kendo.parseFloat(this.invoice.totalTaxAmount)) - discountInvoice\n                this.invoice.total = kendo.toString((total), 'n')\n            }\n        },\n        async loadOtherCharge() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    otherChargeHandler.list().then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.otherChargeList = res.data.data\n                        }\n                    })\n                }, 300);\n            })\n        },\n        onChange(event) {\n            const value = event.value\n            if (value && value[textField] === emptyItem[textField]) {\n                return;\n            }\n            this.customer = value\n            this.invoice.customer = value\n            this.invoice.priceLevel = value.hasOwnProperty('priceLevel') ? value.priceLevel : {}\n\n            if (value.hasOwnProperty('priceLevel')) {\n                if (value.priceLevel.hasOwnProperty('currency')) {\n                    this.invoice.currency = value.priceLevel.currency\n                }\n            }\n        },\n        onFilterChange(event) {\n            const filter = event.filter.value\n            this.customerData(filter, this.cusBaseUrl)\n            this.filter = filter\n        },\n        customerData(filter, baseUrl) {\n            const url = baseUrl +\n                `?filter=${filter}`\n            fetch(url)\n                .then((response) => {\n                    return response.json()\n                })\n                .then(this.afterFetch)\n        },\n        afterFetch(json) {\n            this.customerList = json.data\n        },\n        async loadLocation() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.locations = []\n                    locationHandler.list().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.locations = res.data.data\n                            if (this.locations.length > 0) {\n                                this.invoice.location = this.locations[0]\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        async loadSegment() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.segments = []\n                    settingsHandler.getSeg().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.segments = res.data.data\n                            if (this.segments.length > 0) {\n                                this.invoice.segment = this.segments[0]\n                            }\n                            // this.segmentList = res.data.data\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        generateNumber() {\n            let data = {\n                abbr: this.invoice.transactionType.abbr,\n                structure: this.invoice.transactionType.structure,\n                transactionDate: this.transactionDate,\n                type: 'Delayed Invoice',\n                entity: 1\n            }\n            billingHandler.lastNumber(data).then(response => {\n                if (response.data.statusCode === 200) {\n                    // window.console.log(this.invoice.transactionType,'data')\n                    const res = response.data.data\n                    const lastNumber = this.zeroPad(parseInt(res.lastNumber), this.invoice.transactionType.format)\n                    const number = res.suffix + this.invoice.transactionType.numberSeparator + lastNumber\n                    // this.transactionNumber = number\n                    this.invoice.number = number\n                }\n            }).catch(e => {\n                this.errors.push(e)\n            })\n\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        empImpl(dataItem) {\n            let empIds = []\n            dataItem.employee.forEach(m => {\n                empIds.push(m.firstName + ' - ' + m.lastName)\n            })\n            // window.console.log(empIds.join(', '))\n            return `<span>${empIds.join(', ')}</span>`\n        },\n        EmployeeDropDownEditor(container, options) {\n            kendo.jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoMultiSelect({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    suggest: true,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate: '<div class=\"dropdown-header k-widget k-header\">' +\n                        '<span>Employee </span>' +\n                        '<span></span>' +\n                        '</div>',\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: employeeHandler.searchURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    firstName: {type: \"string\"},\n                                    lastName: {type: \"string\"}\n                                }\n                            },\n                            data: function (response) {\n                                return response.data\n                            },\n                            total: function (response) {\n                                return response.data.count\n                            }\n                        },\n                    }),\n                })\n        },\n        autoCalculateTaxByType(tax) {\n            // return by a key\n            const groupAll = list => list.reduce((tax, item) => {\n                const taxAmount = tax[item.name] || 0\n                return Object.assign({}, tax, {[item.name]: taxAmount + parseFloat(item.amount)})\n            }, {})\n            this.taxListTotal = groupAll(tax)\n        },\n        autoCalculate() {\n            let ds = this.$refs.itemLineDS.kendoWidget(),\n                subTotal = 0,\n                totalTax = 0, discountTotal = 0,\n                spTax = 0, pltax = 0, otherTax = 0, vatTax = 0, discountInvoice = 0, taxList = [], discountItem = [],\n                saleUnit = [], inclusiveTax = 0\n\n            ds.data().forEach(value => {\n                let modifierPrice = 0\n                if (value.modifier) {\n                    modifierPrice = kendo.parseFloat(value.modifier.price)\n                }\n\n                // subTotal += (kendo.parseFloat(value.amount) + modifierPrice)\n                let discount = 0\n                if (value.discountItem) {\n                    let subTo = kendo.parseFloat(value.price) * kendo.parseFloat(value.qty)\n                    discount = this.autoCalculateDiscount(value.discountItem, subTo)\n                    if (value.discountItem.hasOwnProperty('id')) {\n                        discountItem.push(value.discountItem)\n                    }\n                    discountTotal += (discount ? discount : 0)\n                    window.console.log(discountTotal, 'dis Total')\n                }\n                if (value.saleUnit) {\n                    if (value.saleUnit.hasOwnProperty('id')) {\n                        saleUnit.push(value.saleUnit)\n                    }\n                }\n                if (value.specificTax) {\n                    spTax = this.autoCalculateTax(value.specificTax, (kendo.parseFloat(value.amount) - kendo.parseFloat(discount)))\n                    // window.console.log('sp ', discount)\n                    spTax = kendo.parseFloat(spTax) ? kendo.parseFloat(spTax) : 0\n                    const tax = value.specificTax\n                    const baseAmount = tax.baseAmount\n                    if (baseAmount) {\n                        if (baseAmount.toLowerCase() === 'inclusive') {\n                            inclusiveTax += spTax\n                        }\n                    }\n                    if (value.specificTax.hasOwnProperty('taxType')) {\n                        taxList.push({\n                            name: value.specificTax.taxType.name,\n                            amount: spTax,\n                            id: value.specificTax.taxType.id\n                        })\n                    }\n                }\n                if (value.publicLightingTax) {\n                    pltax = this.autoCalculateTax(value.publicLightingTax, (kendo.parseFloat(value.amount) - kendo.parseFloat(discount)))\n                    pltax = kendo.parseFloat(pltax) ? kendo.parseFloat(pltax) : 0\n                    const tax = value.publicLightingTax\n                    const baseAmount = tax.baseAmount\n                    if (baseAmount) {\n                        if (baseAmount.toLowerCase() === 'inclusive') {\n                            inclusiveTax += pltax\n                        }\n                    }\n                    if (value.publicLightingTax.hasOwnProperty('taxType')) {\n                        taxList.push({\n                            name: value.publicLightingTax.taxType.name,\n                            amount: pltax,\n                            id: value.publicLightingTax.taxType.id\n                        })\n                    }\n                }\n                if (value.otherTax) {\n                    otherTax = this.autoCalculateTax(value.otherTax, (kendo.parseFloat(value.amount) - kendo.parseFloat(discount)))\n                    otherTax = kendo.parseFloat(otherTax) ? kendo.parseFloat(otherTax) : 0\n                    const tax = value.otherTax\n                    const baseAmount = tax.baseAmount\n                    if (baseAmount) {\n                        if (baseAmount.toLowerCase() === 'inclusive') {\n                            inclusiveTax += otherTax\n                        }\n                    }\n                    if (value.otherTax.hasOwnProperty('taxType')) {\n                        taxList.push({\n                            name: value.otherTax.taxType.name,\n                            amount: otherTax,\n                            id: value.otherTax.taxType.id\n                        })\n                    }\n\n                }\n\n                if (value.vatTax) {\n                    // window.console.log('Vat Tax', value.vatTax)\n                    let amt = kendo.parseFloat(spTax ? spTax : 0) + kendo.parseFloat(pltax ? pltax : 0) + kendo.parseFloat(otherTax ? otherTax : 0) + (kendo.parseFloat(value.amount ? value.amount : 0) - (discount ? discount : 0))\n                    vatTax = this.autoCalculateTax(value.vatTax, amt)\n                    vatTax = kendo.parseFloat(vatTax) ? kendo.parseFloat(vatTax) : 0\n                    const tax = value.vatTax\n                    const baseAmount = tax.baseAmount\n                    if (baseAmount) {\n                        if (baseAmount.toLowerCase() === 'inclusive') {\n                            inclusiveTax += vatTax\n                        }\n                    }\n                    if (value.vatTax.hasOwnProperty('taxType')) {\n                        taxList.push({\n                            name: value.vatTax.taxType.name,\n                            amount: vatTax,\n                            id: value.vatTax.taxType.id\n                        })\n                    }\n                }\n                totalTax += kendo.parseFloat(spTax ? spTax : 0) + kendo.parseFloat(pltax ? pltax : 0) + kendo.parseFloat(otherTax ? otherTax : 0) + kendo.parseFloat(vatTax ? vatTax : 0)\n                subTotal += (kendo.parseFloat(value.amount) + modifierPrice - inclusiveTax)\n            })\n\n            // discountTotal = discountTotal ? discountTotal : 0\n\n            // window.console.log(spTax, pltax, otherTax, vatTax)\n            let total = (kendo.parseFloat(subTotal) - kendo.parseFloat(discountTotal)) + kendo.parseFloat(totalTax)\n            this.invoice.subTotal = subTotal\n            // $(\"#subtotal\").text(kendo.parseFloat(subTotal))\n            this.invoice.totalTaxAmount = kendo.parseFloat(totalTax)\n            this.invoice.discountTotal = kendo.parseFloat(discountTotal)\n            if (this.invoice.specificDiscountItem) {\n                discountInvoice = this.autoCalculateDiscount(this.invoice.specificDiscountItem, kendo.parseFloat(subTotal))\n                discountInvoice = discountInvoice ? discountInvoice : 0\n            }\n            // this.onOtherChargeChange()\n            this.invoice.total = kendo.parseFloat(total) - discountInvoice + kendo.parseFloat(this.invoice.otherChargeAmount)\n            this.invoice.remainingAmount = kendo.parseFloat(this.invoice.total) - kendo.parseFloat(this.deposite)\n            this.invoice.amountDue = kendo.parseFloat(this.invoice.total - kendo.parseFloat(this.deposite))\n            this.invoice.exchangeAmount = (kendo.parseFloat(this.invoice.amountDue) * kendo.parseFloat(this.invoice.txnRate))\n            // this.invoice.exchangeAmount = (kendo.parseFloat(this.invoice.amountDue) *  kendo.parseFloat(this.invoice.txnRate))\n            // window.console.log('--', taxList)\n            this.autoCalculateTaxByType(taxList)\n            this.customerDiscountItem = this.removeDuplicate(discountItem)\n            this.customerSaleUnit = this.removeDuplicate(saleUnit)\n            // window.console.log('discount ', this.customerDiscountItem)\n        },\n        removeDuplicate(array) {\n            const result = [];\n            const map = new Map();\n            for (const item of array) {\n                if (!map.has(item.id)) {\n                    map.set(item.id, true);    // set any value to Map\n                    result.push(item)\n                }\n            }\n            return result\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n${this.saleFormContent.decimal}`)\n        },\n        autoCalculateDiscount(discountItem, subTotal) {\n            if (discountItem) {\n                const nature = discountItem.nature || ''\n                const amount = discountItem.amount || 0\n                if (nature === 'Amount') {\n                    return parseFloat(amount)\n                } else if (nature === 'Percentage') {\n                    return (subTotal * (parseFloat(amount) / 100))\n                }else{\n                    return 0\n                }\n            }else{\n                return 0\n            }\n        },\n        autoCalculateTax(tax, amount) {\n            if (tax) {\n                var formula = tax.formula\n                var inAmt = kendo.parseFloat(amount)\n                var nAmt = kendo.parseFloat(amount)\n                var taxBase = kendo.parseFloat(tax.taxBase) / 100\n                var rate = kendo.parseFloat(tax.rate) / 100\n                var total = eval(formula)\n                window.console.log(inAmt, nAmt, taxBase, rate, formula, total)\n                return total\n            }\n            // return 0\n        },\n        dataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0]\n\n                switch (e.field) {\n                    case \"item\":\n                        // this.attribute_ = this.attributes.filter(m => m.type.id === dataRow.variant.id)\n                        dataRow.set('description', dataRow.item.description)\n                        break\n                    case \"price\":\n                        try {\n                            dataRow.set('price', parseFloat(dataRow.price))\n                            dataRow.set('amount', parseFloat(dataRow.price) * parseFloat(dataRow.qty))\n                            // window.console.log('price',dataRow.price)\n                        } catch {\n                            dataRow.set('price', 0)\n                            dataRow.set('amount', 0)\n                        }\n                        break\n                    case \"uom\":\n                        try {\n                            dataRow.set('price', parseFloat(dataRow.uom.price))\n                            dataRow.set('amount', parseFloat(dataRow.uom.price) * parseFloat(dataRow.qty))\n                        } catch {\n                            dataRow.set('price', 0)\n                            dataRow.set('amount', 0)\n                        }\n                        break\n                    case \"qty\":\n                        try {\n                            dataRow.set('price', parseFloat(dataRow.price))\n                            dataRow.set('amount', parseFloat(dataRow.price) * parseFloat(dataRow.qty))\n                        } catch {\n                            dataRow.set('price', 0)\n                            dataRow.set('amount', 0)\n                        }\n                        break\n                    case \"otherTax\":\n                        // window.console.log(\"--\", dataRow)\n                        break\n                    default:\n                        break\n                }\n                if (e.field) {\n                    this.autoCalculate()\n                }\n            }\n        },\n        ServiceDateEditor(container, options) {\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDatePicker()\n\n            // let ds = this.$refs.itemLineDS.kendoWidget()\n            // window.console.log(ds.data())\n            // // const dateString = kendo.toString((new Date(options.model.items.serviceDate)), this.itemLine.dateFormat)\n            // // const dateString = kendo.toString(options.model.items.serviceDate)\n            // const $input = $(\"<input value=\" + options.model.serviceDate + \" />\").appendTo(container)\n            // $input.kendoDatePicker()\n            // // $input.appendTo(container)\n            // // options.model.items.serviceDate = dateString\n            // window.console.log($input)\n        },\n        ServiceDateToEditor(container, options) {\n            kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDatePicker()\n        },\n        ItemDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate: '<div class=\"dropdown-header k-widget k-header\">' +\n                        '<span>Items </span>' +\n                        '<span></span>' +\n                        '</div>',\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: productVariantHandler.itemSearchURL(),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    sku: {type: \"string\"},\n                                }\n                            },\n                            data: function (response) {\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            }\n                        },\n                        // data: this.variants\n                    }),\n                    change: function (e) {\n                        // this.UOMDropDownEditor(container,options)\n                        window.console.log('changed event', e)\n                    }\n\n                })\n        },\n        UOMDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"uom.name\",\n                    dataValueField: \"uom.id\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=uom.name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                // url: uomPriceHandler.getURL(options.model.item.id, this.invoice.priceLevel.id, options.model.item.type),\n                                url: uomPriceHandler.uomPriceByPriceLevelURL('id=' + options.model.item.id + '&plId=' + this.invoice.priceLevel.id + '&date=' + this.transactionDate),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                }\n                            },\n                            data: function (response) {\n                                return response.data\n                            },\n                            total: function (response) {\n                                return response.data.count\n                            }\n                        },\n                        // data: this.variants\n                    }),\n                })\n        },\n        DiscountItemDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    cascadeFrom: \"item\",\n                    template: \"<span>#=code# - #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: discountItemHandler.getURL(DISCOUNT_TYPE),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    // name: {type: \"string\"},\n                                    // sku: {type: \"string\"},\n                                }\n                            },\n                            data: function (response) {\n\n                                return response.data;\n                            },\n                            total: function (response) {\n                                return response.data.count;\n                            }\n                        },\n                    }),\n                })\n        },\n        SpecificTaxDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.specificTax.filter(m => {\n                            if (options.model.hasOwnProperty('vatTax')) {\n                                const vat = options.model.vatTax\n                                if (vat) {\n                                    if (options.model.vatTax !== null || options.model.vatTax !== 'null') {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return m.baseAmount.toLowerCase() === options.model.vatTax.baseAmount.toLowerCase()\n                                        } else {\n                                            return m\n                                        }\n                                    }\n                                } else {\n                                    return m\n                                }\n                            }\n                        })\n                    })\n                })\n        },\n        PublicLightingTaxDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.publicLightingTax.filter(m => {\n                            if (options.model.hasOwnProperty('vatTax')) {\n                                const vat = options.model.vatTax\n                                if (vat) {\n                                    if (options.model.vatTax !== null && options.model.vatTax !== 'null') {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return m.baseAmount.toLowerCase() === options.model.vatTax.baseAmount.toLowerCase()\n                                        } else {\n                                            return m\n                                        }\n                                    }\n                                } else {\n                                    return m\n                                }\n                            }\n                        })\n                    })\n                })\n        },\n        OtherTaxDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.otherTax.filter(m => {\n                            if (options.model.hasOwnProperty('vatTax')) {\n                                const vat = options.model.vatTax\n                                if (vat) {\n                                    if (options.model.vatTax !== null && options.model.vatTax !== 'null') {\n                                        if (options.model.vatTax.baseAmount) {\n                                            return m.baseAmount.toLowerCase() === options.model.vatTax.baseAmount.toLowerCase()\n                                        } else {\n                                            return m\n                                        }\n                                    }\n                                } else {\n                                    return m\n                                }\n\n                            }\n                        })\n                    })\n                })\n        },\n        VatTaxDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"defaultTax\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=defaultTax#</span>\",\n                    optionLabel: \"--Select--\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.vatTax\n                    })\n                })\n        },\n        SaleUnitDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"startswith\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    template: \"<span>#=code# - #=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.saleUnitItemList\n                    })\n                })\n        },\n        ModifierDropDownEditor(container, options) {\n            kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"id\",\n                    headerTemplate: '<div class=\"dropdown-header k-widget k-header\">' +\n                        '<span>Modifier </span>' +\n                        '<span></span>' +\n                        '</div>',\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        serverFiltering: true,\n                        transport: {\n                            read: {\n                                url: itemModifierHandler.searchURL(options.model.item.id),\n                            },\n                            dataType: \"json\",\n                        },\n                        schema: {\n                            model: {\n                                id: \"id\",\n                                fields: {\n                                    id: {type: \"string\"},\n                                    name: {type: \"string\"},\n                                    price: {type: \"number\"},\n                                    uom: {type: \"string\"},\n                                }\n                            },\n                            data: function (response) {\n                                return response.data\n                            },\n                            total: function (response) {\n                                return response.data.count\n                            }\n                        },\n                    }),\n                })\n        },\n        vatTemplate(dataItem) {\n            const vat = dataItem.vatTax\n            if (vat) {\n                return `<span>${vat.defaultTax ? vat.defaultTax : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        itemTemplate(dataItem) {\n            const item = dataItem.item\n            if (item) {\n                return `<span>${item.name ? item.name : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.uom\n            if (uom) {\n                return `<span>${uom.uom ? uom.uom.name : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        saleUnitTemplate(dataItem) {\n            const saleUnit = dataItem.saleUnit\n            if (saleUnit) {\n                return `<span>${saleUnit.name ? saleUnit.name : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        discountItemTemplate(dataItem) {\n            const discountItem = dataItem.discountItem\n            if (discountItem) {\n                return `<span>${discountItem.code ? discountItem.code : ``} - ${discountItem.name ? discountItem.name : ``}</span>`\n            } else {\n                return ``\n            }\n        },\n        async loadTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    settingHandler.get().then(res => {\n                        this.tax = res\n                        this.otherTax = this.tax.filter(m => (m.taxType.typeId === 7 || m.taxType.typeId === 10) && m.transactionType === 'Sale') // valuable tax\n                        this.specificTax = this.tax.filter(m => (m.taxType.typeId === 8 || m.taxType.typeId === 10) && m.transactionType === 'Sale') // valuable tax\n                        this.publicLightingTax = this.tax.filter(m => (m.taxType.typeId === 9 || m.taxType.typeId === 10) && m.transactionType === 'Sale') // valuable tax\n                        this.vatTax = this.tax.filter(m => (m.taxType.typeId === 1 || m.taxType.typeId === 8 || m.taxType.typeId === 10) && m.transactionType === 'Sale') // valuable tax\n\n                    })\n                }, 300)\n            })\n        },\n        async uomByPriceLevel(id, priceLevelId, dataRow) {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    uomPriceHandler.uomByPriceLevel(id, priceLevelId).then(res => {\n                        if (res.data.statusCode === 200) {\n                            // return res.data.data\n                            dataRow.set('uom', res.data.data)\n                        }\n                    })\n                }, 300);\n            })\n        },\n        async loadDiscountItem() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    discountItemHandler.list(DISCOUNT_TYPE).then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.specificDiscountItem = res.data.data\n                        }\n                    })\n                }, 300);\n            })\n        },\n        async loadViewInvoice() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    billingHandler.view(this.$route.params.id).then(res => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.invoice = res.data.data[0]\n                            this.customer = this.invoice.customer\n                            this.taxListTotal = this.invoice.taxListTotal\n                            this.itemLines = this.invoice.itemLines\n                            this.mOtherCharge = this.invoice.otherCharge\n                            for (let i = 0; i <= this.mOtherCharge.length - 1; i++) {\n                                this.addSelect()\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 500)\n            })\n        },\n        clear() {\n            this.id = undefined\n            this.invoice = {}\n            this.itemLines = []\n            this.invoice.transactionType = this.invoiceTypes[0]\n            this.generateNumber()\n        }\n    },\n    watch: {\n        id() {\n            if (this.$route.params.id === undefined) {\n                this.clear()\n            } else {\n                this.showLoading = true\n                this.loadViewInvoice()\n            }\n        }\n    },\n    created() {\n        // fetch the data when the view is created and the data is\n        // already being observed\n        // this.loadObj()\n    },\n    mounted: async function () {\n        await this.loadLocation()\n        await this.loadSegment()\n        await this.loadPrefix()\n        await this.loadCurrency()\n        await this.loadSaleFormContent()\n        await this.loadSaleUnitItems()\n        await this.loadTax()\n        await this.loadOtherCharge()\n        await this.loadDiscountItem()\n        this.customerData(this.filter, this.cusBaseUrl)\n        await this.initData()\n\n    },\n};\n</script>\n\n<style scoped>\n.k-dropdown {\n    width: 100%;\n    margin-top: 3px;\n}\n\n.function_wrapper {\n    box-shadow: none !important;\n}\n\n.v-application--is-ltr .v-text-field .v-input__append-inner {\n    margin-top: 0 !important;\n}\n\n.v-input__slot {\n    background-color: #fff !important;\n}\n\n.function_content .label {\n    margin-bottom: 10px;\n    display: inline-block;\n}\n\n.border_radius10 {\n    border-radius: 10px !important;\n    background-color: #F2F2F2;\n}\n\n.pa-3.v-card h4 {\n    font-size: 18px;\n    color: #333;\n}\n\n.pa-3.v-card p {\n    font-size: 12px;\n    color: #B5B5B5;\n}\n\n.attachment_file {\n    background-color: #EFEDED;\n    border-radius: 0 !important;\n}\n\n.attachment_table.v-data-table table {\n    border: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.attachment_table table tr th {\n    border-left: thin solid rgba(0, 0, 0, 0.12);\n    height: 35px;\n    border-right: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.block_debit,\n.block_credit {\n    border-bottom: 1px solid #fff;\n}\n\n.block_debit p.number,\n.block_credit p.number {\n    font-size: 25px;\n    color: #7F7F7F;\n}\n\n.block_debit h5,\n.block_credit h5,\n.block_difference h5 {\n    text-transform: uppercase;\n    color: #7F7F7F;\n    font-size: 15px;\n    font-weight: normal;\n}\n\n.block_difference h5 {\n    font-size: 18px;\n}\n\n.block_difference h5 span {\n    font-size: 15px;\n}\n\n.custom_grid table th:last-child {\n    text-align: right !important;\n}\n\n.color_green {\n    color: #f44336;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        max-width: 1250px;\n    }\n}\n\n@media (max-width: 576px) {\n    .pt-6.col-sm-5.col-12 {\n        padding-top: 0 !important;\n    }\n\n    .code_text {\n        width: 100%;\n    }\n\n    .phone_no_pt {\n        padding-top: 0 !important;\n    }\n\n    .select_template,\n    .save_option {\n        margin-bottom: 10px;\n    }\n}\n\n.hide_small_bar_class {\n    max-width: 0;\n    transition: .5s ease-in;\n    flex: 0 0 0;\n}\n\n.hide_big_bar_class {\n    max-width: 100%;\n    transition: .5s ease-in;\n    flex: 0 0 100%;\n}\n\n.info_add {\n    background-color: #ffffff;\n}\n\n.small_sidebar {\n    height: 98%;\n    position: relative;\n    padding: 12px;\n    background-color: #EDF1F5;\n}\n\n.iconArrow {\n    right: -35px;\n    position: absolute;\n    bottom: -10px;\n}\n\n.iconArrowHide {\n    position: absolute;\n    right: -7px;\n    bottom: -10px;\n}\n\n.color_grey {\n    color: #808080;\n}\n\n.card_green {\n    min-height: 70px;\n    background-color: #00b050 !important;\n    color: #ffffff;\n}\n\n.lb_bold {\n    font-size: 12px;\n}\n\n.detial_smallside_p {\n    position: absolute;\n    bottom: 10px;\n}\n\n.card_background {\n    background-color: #EDF1F5;\n    min-height: 120px;\n}\n\n.deposite_input {\n    width: 100px;\n}\n\n.btn_save_draft {\n    color: #ffffff;\n    background-color: #00b0f0 !important;\n    text-transform: capitalize;\n}\n\n.save_option {\n    background-color: #203864 !important;\n}\n\n.btn_add_small {\n    height: 27px !important;\n    min-width: 25px !important;\n    font-size: 10px;\n    padding: 0 22px !important;\n    background-color: #00b050 !important;\n    color: #ffffff;\n    border-radius: 0 !important;\n}\n\n.list_site_inv {\n    background-color: #92d050;\n    color: #ffffff;\n    font-size: 12px;\n}\n\n.list_site_exp {\n    background-color: #c5e0b4;\n    color: #000000;\n    font-size: 12px;\n    line-height: 16px;\n    min-height: 40px;\n}\n\n.checkbox_inv {\n    padding: 2px;\n    margin-top: 3px;\n    margin-right: 2px;\n}\n\n.exp_select {\n    font-size: 12px !important;\n}\n\n</style>"]}]}