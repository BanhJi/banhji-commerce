{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/product/inventory_adjustment/InventoryAdjustment.vue?vue&type=template&id=2f6a9eab&scoped=true&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/product/inventory_adjustment/InventoryAdjustment.vue","mtime":1638499443271},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LWFwcD4KICA8di1jb250YWluZXI+CiAgICA8di1yb3c+CiAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIj4KICAgICAgICA8di1jYXJkCiAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgZGVuc2UKICAgICAgICAgIGNsYXNzPSJwYS00IG5vX2JvcmRlciByb3VuZGVkLXNtIgogICAgICAgICAgY29sb3I9IndoaXRlIgogICAgICAgID4KICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgPHYtY29sCiAgICAgICAgICAgICAgY2xhc3M9ImJpZ1NpZGUgcHktMCIKICAgICAgICAgICAgICBzbT0iOCIKICAgICAgICAgICAgICBjb2xzPSIxMiIKICAgICAgICAgICAgICBzdHlsZT0idHJhbnNpdGlvbjogMC4zcyBlYXNlLWluIgogICAgICAgICAgICAgIDpjbGFzcz0ieyBoaWRlX2JpZ19iYXJfY2xhc3M6IGlzSGlkZUJhciB9IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHYtZm9ybSByZWY9ImZvcm0iIHYtbW9kZWw9InZhbGlkIiBsYXp5LXZhbGlkYXRpb24+CiAgICAgICAgICAgICAgICA8di1jYXJkIG91dGxpbmVkIGRlbnNlIGNsYXNzPSJub19ib3JkZXIiPgogICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9Im1iLTAiPnt7ICR0KCJpbnZlbnRvcnlfYWRqdXN0bWVudCIpIH19PC9oMj4KICAgICAgICAgICAgICAgICAgPHYtaWNvbgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImlzSGlkZUJhciIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCgpIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMzMzOyBmb250LXNpemU6IDQwcHgiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZsb2F0LXJpZ2h0IgogICAgICAgICAgICAgICAgICAgID5jbG9zZQogICAgICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICBzdHlsZT0idHJhbnNpdGlvbjogMC4zcyBlYXNlLWluOyB6LWluZGV4OiAxMCIKICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9InsKICAgICAgICAgICAgICAgICAgICAgIGljb25BcnJvdzogIWlzSGlkZUJhciwKICAgICAgICAgICAgICAgICAgICAgIGljb25BcnJvd0hpZGU6IGlzSGlkZUJhciwKICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHYtaWNvbgogICAgICAgICAgICAgICAgICAgICAgc2l6ZT0iMjIiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYXJyX2ljb24iCiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImhpZGVTbWFsbFNpZGViYXIiCiAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJpc0hpZGVCYXIiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgbWRpLWNoZXZyb24tbGVmdC1jaXJjbGUKICAgICAgICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICAgICAgICBzaXplPSIyMiIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJhcnJfaWNvbiIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iaGlkZVNtYWxsU2lkZWJhciIKICAgICAgICAgICAgICAgICAgICAgIHYtaWY9IiFpc0hpZGVCYXIiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgbWRpLWNoZXZyb24tcmlnaHQtY2lyY2xlCiAgICAgICAgICAgICAgICAgICAgPC92LWljb24+CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvdi1jYXJkPgoKICAgICAgICAgICAgICAgIDx2LWNhcmQKICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTMgbm9fYm9yZGVyIgogICAgICAgICAgICAgICAgICBjb2xvcj0iZ3JheUJnIgogICAgICAgICAgICAgICAgICBoZWlnaHQ9IiAxNzJweCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iNCIgY29scz0iMTIiIGNsYXNzPSJwYi0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwiPnt7ICR0KCJkYXRlIikgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPGFwcC1kYXRlcGlja2VyCiAgICAgICAgICAgICAgICAgICAgICAgIDppbml0aWFsRGF0ZT0iaW52ZW50b3J5QWRqdXN0bWVudC50cmFuc2FjdGlvbkRhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBvbkNoYW5nZWQ9Im9uVHJhbnNhY3Rpb25EYXRlQ2hhbmdlZCIKICAgICAgICAgICAgICAgICAgICAgICAgQGVtaXREYXRlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICBpbnZlbnRvcnlBZGp1c3RtZW50LnRyYW5zYWN0aW9uRGF0ZSA9ICRldmVudAogICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCI+e3sgJHQoInN0b2NrX2NvdW50X3JlZiIpIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQgY2xhc3M9Im10LTEiIG91dGxpbmVkIHJlcXVpcmVkIC8+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjQiIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwiPnt7CiAgICAgICAgICAgICAgICAgICAgICAgICR0KCJhZGp1c3RtZW50X251bWJlciIpCiAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbXQtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvZGVfdGV4dCBmbGV4LTEgdGV4dC1ib2xkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpbnZlbnRvcnlBZGp1c3RtZW50LmFiYnIgfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmxleC0yIGN1c3RvbS1ib3JkZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW52ZW50b3J5QWRqdXN0bWVudC5udW1iZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IlsodikgPT4gISF2IHx8ICR0KCdpc19yZXF1aXJlZCcpXSIKICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I9ImJsYWNrIgogICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9IjMwIgogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJoZWlnaHQ6IDQwcHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJvcmRlcl9xcmNvZGUgbWwtMiIKICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImdlbmVyYXRlTnVtYmVyIgogICAgICAgICAgICAgICAgICAgICAgICAgID5tZGktcXJjb2RlCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1pY29uPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICA8di1jb2wgc209IjQiIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwiPnt7CiAgICAgICAgICAgICAgICAgICAgICAgICR0KCJhZGp1c3RtZW50X2FjY291bnQiKQogICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtdC0xIgogICAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9ImFjY291bnRzIgogICAgICAgICAgICAgICAgICAgICAgICB0YWdlPSJhY2NvdW50IgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgOml0ZW0tdGV4dD0iKGl0ZW0pID0+IGAke2l0ZW0ubnVtYmVyfSAtICR7aXRlbS5uYW1lfWAiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImludmVudG9yeUFkanVzdG1lbnQuYWNjb3VudCIKICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbKHYpID0+ICEhdiB8fCAkdCgnaXNfcmVxdWlyZWQnKV0iCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybi1vYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxsYWJlbCBjbGFzcz0ibGFiZWwiPnt7ICR0KCJhZGp1c3RtZW50X21lbW8iKSB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtdC0xIgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlBZGp1c3RtZW50LnRyYW5zYWN0aW9uTm90ZSIKICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAgICAgdGFnZT0ibWVtbyIKICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgIC8+IC0tPgogICAgICAgICAgICAgICAgICAgICAgPCEtLSA8bGFiZWwgY2xhc3M9ImxhYmVsIj57ewogICAgICAgICAgICAgICAgICAgICAgICAkdCgibWVzc2FnZV9mb3Jfam91cm5hbCIpCiAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtdC0xIgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlBZGp1c3RtZW50LmpvdXJuYWxOb3RlIgogICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgICB0YWdlPSJNZXNzYWdlIGZvciBKb3VybmFsIgogICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgLz4gLS0+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICAgIDwvdi1jYXJkPgoKICAgICAgICAgICAgICAgIDx2LXJvdyBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogI2ZmZiI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgICA8a2VuZG8tZGF0YXNvdXJjZQogICAgICAgICAgICAgICAgICAgICAgcmVmPSJpdGVtTGluZURTIgogICAgICAgICAgICAgICAgICAgICAgOmRhdGE9Iml0ZW1MaW5lcyIKICAgICAgICAgICAgICAgICAgICAgIDpjaGFuZ2U9ImRhdGFTb3VyY2VDaGFuZ2VkIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQKICAgICAgICAgICAgICAgICAgICAgIGlkPSJncmlkSXRlbUxpbmUiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZ3JpZC1mdW5jdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIDpkYXRhLXNvdXJjZS1yZWY9IidpdGVtTGluZURTJyIKICAgICAgICAgICAgICAgICAgICAgIDpzb3J0YWJsZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICA6Y29sdW1uLW1lbnU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICA6c2Nyb2xsYWJsZS12aXJ0dWFsPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6Y29tbWFuZD0iewogICAgICAgICAgICAgICAgICAgICAgICAgIGljb25DbGFzczogJ2staWNvbiBrLWktdHJhc2gnLAogICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcgJywKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogcmVtb3ZlUm93LAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAnYnRuLXBsdXMnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IicnIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjYzIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxrZW5kby1ncmlkLWNvbHVtbgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCduby4nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSI1MyIKICAgICAgICAgICAgICAgICAgICAgICAgOmNvbHVtbi1tZW51PSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSJyb3dOdW1iZXJUbXBsIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNTsnLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAndGV4dC1wcm9kdWN0cycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiBwcm9kdWN0cycsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2l0ZW0nIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdwcm9kdWN0JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iaXRlbVRlbXBsYXRlIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJJdGVtRHJvcERvd25FZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAnYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Rlc2NyaXB0aW9uJyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnZGVzY3JpcHRpb24nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSInPHNwYW4+Iz1kZXNjcmlwdGlvbiM8L3NwYW4+JyIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICdiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUY1JywKICAgICAgICAgICAgICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgIC8+CgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2J1b20nIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCd1b20nKSIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNzAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iVU9NVGVtcGxhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjogbGVmdCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Nvc3QnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9IiR0KCdjb3N0JykiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0b3I9Im51bWJlckVkaXRvciIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSInPHNwYW4+Iz1rZW5kby50b1N0cmluZyhjb3N0IHx8IDAsIGRlY2ltYWxGb3JtYXQpIHx8IDAjPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTcwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0OyAnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ3FvaCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ29uX2hhbmQnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOnRlbXBsYXRlPSInPHNwYW4+Iz1rZW5kby50b1N0cmluZyhxb2ggfHwgMCwgZGVjaW1hbEZvcm1hdCkgfHwgMCM8L3NwYW4+JyIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNzAiCiAgICAgICAgICAgICAgICAgICAgICAgIDplZGl0YWJsZT0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0OyAnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2NvdW50JyIKICAgICAgICAgICAgICAgICAgICAgICAgOnRpdGxlPSIkdCgnY291bnRlZCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJudW1iZXJFZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoY291bnQgfHwgMCwgZGVjaW1hbEZvcm1hdCkjPC9zcGFuPiciCiAgICAgICAgICAgICAgICAgICAgICAgIDp3aWR0aD0iMTcwIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0ieyBzdHlsZTogJ3RleHQtYWxpZ246IHJpZ2h0OyAnIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2RpZmZlcmVudCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2RpZmZlcmVudCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdGFibGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgOndpZHRoPSIxNzAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoZGlmZmVyZW50IHx8IDAsIGRlY2ltYWxGb3JtYXQpIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6ZWRpdG9yPSJudW1iZXJFZGl0b3IiCiAgICAgICAgICAgICAgICAgICAgICAgIDpoZWFkZXJBdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGV4dC1hbGlnbjogbGVmdDsgYmFja2dyb3VuZC1jb2xvcjogI0VERjFGNScsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIDphdHRyaWJ1dGVzPSJ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6ICd0ZXh0LWFsaWduOiByaWdodCcsCiAgICAgICAgICAgICAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPGtlbmRvLWdyaWQtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWVsZD0iJ2Ftb3VudCciCiAgICAgICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iJHQoJ2Ftb3VudCcpIgogICAgICAgICAgICAgICAgICAgICAgICA6d2lkdGg9IjE3MCIKICAgICAgICAgICAgICAgICAgICAgICAgOmVkaXRhYmxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgIDp0ZW1wbGF0ZT0iJzxzcGFuPiM9a2VuZG8udG9TdHJpbmcoYW1vdW50IHx8IDAsIGRlY2ltYWxGb3JtYXQpIzwvc3Bhbj4nIgogICAgICAgICAgICAgICAgICAgICAgICA6aGVhZGVyQXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RleHQtYWxpZ246IGxlZnQ7IGJhY2tncm91bmQtY29sb3I6ICNFREYxRjUnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgICA6YXR0cmlidXRlcz0iewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiAndGV4dC1hbGlnbjogcmlnaHQnLAogICAgICAgICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2tlbmRvLWdyaWQ+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBzbT0iMTIiIGNvbHM9IjEyIiBjbGFzcz0icHktMCI+CiAgICAgICAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICAgICAgICBjb2xvcj0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmbG9hdC1sZWZ0IG1sLTAgYnRuX3BsdXMgcm91bmRlZC00IHdoaXRlLS10ZXh0IG1yLTIiCiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZFJvdyIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8di1pY29uIHNpemU9IiIgY2xhc3M9Im1hLTEiPm1kaS1wbHVzPC92LWljb24+CiAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSI2IiBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsPnt7ICR0KCJtZXNzYWdlX3RoZXNlX2FkanVzdG1lbnQiKSB9fTwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dGFyZWEKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtdC0xIgogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAgIG5vLXJlc2l6ZQogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSI3MHB4IgogICAgICAgICAgICAgICAgICAgICAgdGFnZT0iTWVzc2FnZSBvbiBJbnZvaWNlIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlRoaXMgd2lsbCBhcHBlYXIgb24gdGhlIGludm9pY2UiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+e3sgJHQoIm1lc3NhZ2Vfb25fam91cm5hbCIpIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8di10ZXh0YXJlYQogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgbm8tcmVzaXplCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjcwcHgiCiAgICAgICAgICAgICAgICAgICAgICB0YWdlPSJNZXNzYWdlIG9uIE9yZGVyIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlRoaXMgd2lsbCBhcHBlYXIgb24gdGhlIGpvdXJuYWwiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgPHYtY29sIGNsYXNzPSJwdC01IiBzbT0iNiIgY29scz0iMTIiPgogICAgICAgICAgICAgICAgICAgIDx2LXNpbXBsZS10YWJsZT4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6ZGVmYXVsdD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1sZWZ0Ij57eyAkdCgiZHIiKSB9fTwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtY2VudGVyIj46PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBjb2xvcl9ncmVlbiB0ZXh0LWJvbGQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBudW1iZXJGb3JtYXQoZHIpIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LWxlZnQiPnt7ICR0KCJjciIpIH19PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1jZW50ZXIiPjo8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IGNvbG9yX2dyZWVuIHRleHQtYm9sZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IG51bWJlckZvcm1hdChjcikgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC92LXNpbXBsZS10YWJsZT4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICA8di1kaXZpZGVyIC8+CiAgICAgICAgICAgICAgICA8di1jYXJkIGVsZXZhdGlvbj0iMCIgY2xhc3M9Im5vX2JvcmRlciBmdW5jdGlvbl9mb290ZXIiPgogICAgICAgICAgICAgICAgICA8di1hbGVydCB0eXBlPSJ3YXJuaW5nIiB2LW1vZGVsPSJhbGVydCIgZGlzbWlzc2libGU+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1odG1sPSJlcnJvck1lc3NhZ2UiIC8+CiAgICAgICAgICAgICAgICAgIDwvdi1hbGVydD4KICAgICAgICAgICAgICAgICAgPHYtbWVudT4KICAgICAgICAgICAgICAgICAgICA8di1saXN0PgogICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtCiAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIHRlbXBsYXRlcyIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZT57ewogICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0udGl0bGUKICAgICAgICAgICAgICAgICAgICAgICAgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdD4KICAgICAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICAgIGNvbG9yPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9InRleHQtY2FwaXRhbGl6ZSBibGFjay0tdGV4dCBmbG9hdC1sZWZ0IgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIgogICAgICAgICAgICAgICAgICAgID57eyAkdCgiY2FuY2VsIikgfX0KICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJvblNhdmVDbG9zZSgnY2xvc2UnKSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmxvYXQtcmlnaHQgd2hpdGUtLXRleHQgdGV4dC1jYXBpdGFsaXplIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAge3sgJHQoInNhdmVfY2xvc2UiKSB9fQogICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgICAgICBjb2xvcj0ic2Vjb25kYXJ5IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDEwcHggIWltcG9ydGFudCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0id2hpdGUtLXRleHQgZmxvYXQtcmlnaHQgdGV4dC1jYXBpdGFsaXplIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0ib25TYXZlQ2xvc2UoJ25ldycpIgogICAgICAgICAgICAgICAgICAgIDpoaWRkZW49ImhpZGRlbkJ1dHRvbiIKICAgICAgICAgICAgICAgICAgICA+e3sgJHQoInNhdmVfbmV3IikgfX0KICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICAgIDwvdi1mb3JtPgogICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICA8di1jb2wKICAgICAgICAgICAgICBjbGFzcz0ic21hbGxTaWRlIgogICAgICAgICAgICAgIHNtPSI0IgogICAgICAgICAgICAgIHN0eWxlPSJ0cmFuc2l0aW9uOiAwLjNzIGVhc2UtaW4iCiAgICAgICAgICAgICAgOmNsYXNzPSJ7IGhpZGVfc21hbGxfYmFyX2NsYXNzOiBpc0hpZGVCYXIgfSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxoMwogICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiAjYjNiNWJjOyBmb250LXNpemU6IDIwcHgiCiAgICAgICAgICAgICAgICB2LWlmPSIhaXNIaWRlQmFyIgogICAgICAgICAgICAgICAgY2xhc3M9InRleHQtdXBwZXJjYXNlIGZsb2F0LXJpZ2h0IG10LW4zIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwb2ludGVyIiBAY2xpY2s9IkhlbHAoJ2ludmVudG9yeSBhZGp1c3RtZW50JykiPgogICAgICAgICAgICAgICAgICB7eyAkdCgiaGVscCIpIH19CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsKCkiCiAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IGNvbG9yOiAjMzMzOyBmb250LXNpemU6IDQwcHgiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJmbG9hdC1yaWdodCBtdC1uMSIKICAgICAgICAgICAgICAgICAgPmNsb3NlCiAgICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgICA8L2gzPgoKICAgICAgICAgICAgICA8ZGl2IHYtaWY9IiFpc0hpZGVCYXIiIGNsYXNzPSJzbWFsbF9zaWRlYmFyIG10LTggZ3JheUJnIj4KICAgICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgICAgPHYtY29sIHNtPSIxMiIgY29scz0iMTIiIGNsYXNzPSJwdC0wIj4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkCiAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSIKICAgICAgICAgICAgICAgICAgICAgICAgcGEtMwogICAgICAgICAgICAgICAgICAgICAgICBtYi0yCiAgICAgICAgICAgICAgICAgICAgICAgIG5vX2JvcmRlcgogICAgICAgICAgICAgICAgICAgICAgICBteV9jYXJkCiAgICAgICAgICAgICAgICAgICAgICAgIHJvdW5kZWQtNAogICAgICAgICAgICAgICAgICAgICAgICB3aGl0ZS0tdGV4dAogICAgICAgICAgICAgICAgICAgICAgIgogICAgICAgICAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjYwcHgiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJ0ZXh0LWxlZnQgZm9udF8xMyBmbGV4LTEgdGV4dC11cHBlcmNhc2UiPgogICAgICAgICAgICAgICAgICAgICAgICB7eyAkdCgiYWRqdXN0bWVudF9hbW91bnQiKSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0idGV4dC1yaWdodCBmbGV4LTEgZm9udF8yMCBuaXJhZGVpX2hlYXZ5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImxhYmVsIG1iLTAiPnt7ICR0KCJzZWdtZW50IikgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlBZGp1c3RtZW50LnNlZ21lbnQiCiAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9InNlZ21lbnRzIgogICAgICAgICAgICAgICAgICAgICAgaXRlbS12YWx1ZT0iaWQiCiAgICAgICAgICAgICAgICAgICAgICA6aXRlbS10ZXh0PSIoaXRlbSkgPT4gYCR7aXRlbS5jb2RlfSAtICR7aXRlbS5uYW1lfWAiCiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4tb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICB0YWdlPSJzdWIgT2YiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iU3ViIE9mIgogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQ9IiIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwgbWItMCI+e3sgJHQoImxvY2F0aW9uIikgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlBZGp1c3RtZW50LmxvY2F0aW9uIgogICAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJsb2NhdGlvbnMiCiAgICAgICAgICAgICAgICAgICAgICBpdGVtLXZhbHVlPSJpZCIKICAgICAgICAgICAgICAgICAgICAgIDppdGVtLXRleHQ9IihpdGVtKSA9PiBgJHtpdGVtLmNvZGV9IC0gJHtpdGVtLm5hbWV9YCIKICAgICAgICAgICAgICAgICAgICAgIHJldHVybi1vYmplY3QKICAgICAgICAgICAgICAgICAgICAgIHRhZ2U9IkxvY2F0aW9uIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9ImxvY2F0aW9uIgogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQ9IiIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWwiPnt7ICR0KCJwcm9qZWN0IikgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LTEiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbnZlbnRvcnlBZGp1c3RtZW50LnByb2plY3QiCiAgICAgICAgICAgICAgICAgICAgICA6aXRlbXM9InByb2plY3RzIgogICAgICAgICAgICAgICAgICAgICAgOml0ZW0tdGV4dD0iKGl0ZW0pID0+IGAke2l0ZW0uY29kZX0gLSAke2l0ZW0ubmFtZX1gIgogICAgICAgICAgICAgICAgICAgICAgaXRlbS12YWx1ZT0iaWQiCiAgICAgICAgICAgICAgICAgICAgICB0YWdlPSJQcm9qZWN0IgogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwhLS0gPGxhYmVsIGNsYXNzPSJsYWJlbCI+e3sgJHQoImVtcGxveWVlIikgfX08L2xhYmVsPiAtLT4KICAgICAgICAgICAgICAgICAgICA8IS0tIDx2LWNvbAogICAgICAgICAgICAgICAgICAgICAgc209IjEyIgogICAgICAgICAgICAgICAgICAgICAgY29scz0iMTIiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ia2VuZG9fZHJvcGRvd25fY3VzdG9tIHBsLTAgcHItMCBwYi0zIHB0LTAiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGRyb3Bkb3dubGlzdAogICAgICAgICAgICAgICAgICAgICAgICA6ZGF0YS1pdGVtcz0iZW1wbG95ZWVzIgogICAgICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJvbkVtcGxveWVlQ2hhbmdlZCIKICAgICAgICAgICAgICAgICAgICAgICAgOnZhbHVlPSJtRW1wbG95ZWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpkYXRhLWl0ZW0ta2V5PSInaWQnIgogICAgICAgICAgICAgICAgICAgICAgICA6dGV4dC1maWVsZD0iJ25hbWUnIgogICAgICAgICAgICAgICAgICAgICAgICA6ZGVmYXVsdC1pdGVtPSJkZWZhdWx0SXRlbSIKICAgICAgICAgICAgICAgICAgICAgICAgOmZpbHRlcmFibGU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWyh2KSA9PiAhIXYgfHwgJ0VtcGxveWVlIGlzIHJlcXVpcmVkJ10iCiAgICAgICAgICAgICAgICAgICAgICAgIEBmaWx0ZXJjaGFuZ2U9Im9uRW1wbG95ZWVGaWx0ZXJDaGFuZ2VkIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPC9kcm9wZG93bmxpc3Q+CiAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4gLS0+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbCI+e3sgJHQoImZvcl9tb250aF9vZiIpIH19PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8YXBwLW1vbnRocGlja2VyCiAgICAgICAgICAgICAgICAgICAgICA6aW5pdE1vbnRoT2Y9ImludmVudG9yeUFkanVzdG1lbnQubW9udGhPZiIKICAgICAgICAgICAgICAgICAgICAgIEBlbWl0TW9udGhPZj0iaW52ZW50b3J5QWRqdXN0bWVudC5tb250aE9mID0gJGV2ZW50IgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImRldGlhbF9zbWFsbHNpZGVfcCBmb250XzE0Ij4KICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJpbnZlbnRvcnlfYWRqdXN0bWVudF9mdW5jX2Rlc2MiKSB9fQogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICA8L3Ytcm93PgogICAgICAgIDwvdi1jYXJkPgogICAgICA8L3YtY29sPgogICAgPC92LXJvdz4KICAgIDxMb2FkaW5nTWUKICAgICAgOmlzTG9hZGluZz0ic2hvd0xvYWRpbmciCiAgICAgIDpmdWxsUGFnZT0iZmFsc2UiCiAgICAgIHR5cGU9ImxvYWRpbmciCiAgICAgIDpteUxvYWRpbmc9InRydWUiCiAgICAgIDphbGVydE1lc3NhZ2U9ImxvYWRpbmdBbGVydCIKICAgICAgOmNvbG9yPSJsb2FkaW5nQ29sb3JBbGVydCIKICAgICAgOmFsZXJ0VGV4dD0ibG9hZGluZ1RleHRBbGVydCIKICAgIC8+CiAgPC92LWNvbnRhaW5lcj4KPC92LWFwcD4K"},null]}