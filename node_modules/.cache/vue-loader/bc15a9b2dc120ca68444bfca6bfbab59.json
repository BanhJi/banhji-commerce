{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/finances/management/loan_center/Reconciliation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/finances/management/loan_center/Reconciliation.vue","mtime":1638499443236},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Reconciliation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reconciliation.vue","sourceRoot":"src/views/finances/management/loan_center","sourcesContent":["<template>\n    <v-row class=\"mx-3 white\">\n        <v-col sm=\"12\" cols=\"12\" class=\"\">\n            <v-btn to=\"\" color=\"primary\"\n                   class=\"white--text float-right text-capitalize\">\n                {{$t('new_reconciliation')}}\n            </v-btn>\n        </v-col>\n\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-data-table\n                    :headers=\"reconcileHeaders\"\n                    :items=\"reconcileList\"\n                    class=\"elevation-1\"\n            >\n                <template v-slot:item=\"{ item, index }\">\n                    <tr>\n                        <td style=\"text-align: center;\">{{ index + 1 }}</td>\n                        <td class=\"text-xs-right\">{{ helper.dateFormat(item.date) }}</td>\n                        <td class=\"text-xs-right\">{{ item.number }}</td>\n                        <td style=\"text-align: right;\">{{ Number(item.variance_amount).toLocaleString() }}</td>\n                    </tr>\n                </template>\n            </v-data-table>\n        </v-col>\n\n    </v-row>\n</template>\n<script>\n    import kendo from '@progress/kendo-ui'\n    import {i18n} from '@/i18n'\n    import helper from \"@/helper.js\"\n    // import { JournalModel, JournalEntryModel } from '@/scripts/model/AppModels'\n    import {bankAccountHandler, journalHandler, reconcileHandler} from '@/scripts/AppHandlers'\n\n    export default {\n        name: \"Banking\",\n        components: {\n        },\n        data: () => ({\n            helper: helper,\n            // Search transaction dates\n            start_date: \"\",\n            end_date: \"\",\n            journalEntriesDetails: [],\n            reconcileList: [],\n            bankAccountTypes: [],\n            reconcileHeaders: [\n                {text: i18n.t('no.')},\n                {text: i18n.t('date'), value: 'date'},\n                {text: i18n.t('number'), value: 'number'},\n                {text: i18n.t('variance'), value: 'variance_amount'},\n                {text: i18n.t('action')},\n            ],\n            // Account information\n            bankAccount: [],\n            bankAccountDetails: [],\n            files: [],\n            attachments: [],\n            // LoadingMe\n            showLoading: true,\n            isLoaded: false,\n            // Kendo dataSource\n            schemaDefinition: {\n                model: {id: \"uuid\"}\n            },\n            // Group order by account_type_id asc\n            groupDefinition: [\n                {\n                    field: \"bank.name\",\n                    compare: function (a, b) {\n                        if (a.items[0].number === b.items[0].number) {\n                            return 0;\n                        } else if (a.items[0].number > b.items[0].number) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                    }\n                },\n                {\n                    field: \"type\",\n                    compare: function (a, b) {\n                        if (a.items[0].number === b.items[0].number) {\n                            return 0;\n                        } else if (a.items[0].number > b.items[0].number) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                    }\n                },\n            ],\n        }),\n        methods: {\n            // On Sorter Changes\n            onSorterChanges(val) {\n                let today = new Date()\n\n                switch (val) {\n                    case \"Today\":\n                        this.start_date = kendo.toString(today, 'yyyy-MM-dd')\n                        this.end_date = kendo.toString(today, 'yyyy-MM-dd')\n\n                        break\n                    case \"This Week\":\n                        var first = today.getDate() - today.getDay(),\n                            last = first + 6;\n\n                        this.start_date = kendo.toString(new Date(today.setDate(first)), 'yyyy-MM-dd')\n                        this.end_date = kendo.toString(new Date(today.setDate(last)), 'yyyy-MM-dd')\n\n                        break\n                    case \"This Month\":\n                        this.start_date = kendo.toString(new Date(today.getFullYear(), today.getMonth(), 1), 'yyyy-MM-dd')\n                        this.end_date = kendo.toString(new Date(today.getFullYear(), today.getMonth(), 31), 'yyyy-MM-dd')\n\n                        break\n                    case \"This Year\":\n                        this.start_date = kendo.toString(new Date(today.getFullYear(), 0, 1), 'yyyy-MM-dd')\n                        this.end_date = kendo.toString(new Date(today.getFullYear(), 11, 31), 'yyyy-MM-dd')\n\n                        break\n                    default:\n                        this.start_date = \"\";\n                        this.end_date = \"\";\n                }\n            },\n            // Search Transaction\n            searchTransaction() {\n                let self = this,\n                    ba = this.bankAccount,\n                    sdate = this.start_date,\n                    edate = this.end_date\n\n                if (ba.uuid) {\n                    if (sdate && edate) {\n                        sdate = kendo.toString(new Date(sdate), 'yyyy-MM-dd') + 'T00:00:00.000Z'\n\n                        edate = new Date(edate)\n                        edate = kendo.toString(edate, 'yyyy-MM-dd') + 'T23:59:59.999Z'\n                    } else {\n                        sdate = 0\n                        edate = 0\n                    }\n\n                    this.isLoaded = true\n                    this.showLoading = true\n                    journalHandler.getEntryDetailByAccount(ba.account.uuid, {\n                        params: {\n                            start_date: sdate,\n                            end_date: edate,\n                        }\n                    })\n                        .then(res => {\n                            if (res) {\n                                this.bankAccountDetails = res\n                                this.journalEntriesDetails = res.entries_detail\n                            }\n                        })\n                        .finally(function () {\n                            self.showLoading = false\n                        })\n                }\n            },\n            // On Account Type Changes\n            async onBankTypeChanges(bankType) {\n                new Promise(resolve => {\n                    resolve('resolved')\n\n                    if (bankType === undefined) {\n                        this.bankAccounts = this.bankAccountsBk\n                    } else {\n                        this.bankAccounts = this.bankAccountsBk.filter(\n                            value => value.type === bankType\n                        )\n                    }\n                })\n            },\n            // On Search Changes\n            async onSearchChanges(searchText) {\n                new Promise(resolve => {\n                    resolve('resolved')\n\n                    if (searchText !== '') {\n                        this.bankAccounts = this.bankAccountsBk.filter(\n                            value => (~value.number.toLowerCase().indexOf(searchText))\n                        )\n                    } else {\n                        this.bankAccounts = this.bankAccountsBk\n                    }\n                })\n            },\n            // On Change item selection\n            onBankAccountGridChanges() {\n                let grid = kendo.jQuery(\"#gridBankAccount\").data(\"kendoGrid\")\n                let selectedItem = grid.dataItem(grid.select())\n\n                if (this.bankAccount.uuid !== selectedItem.uuid) {\n                    this.bankAccount = selectedItem\n                    this.searchTransaction()\n                }\n            },\n            // Go To Edit Page\n            goEdit() {\n                let ba = this.bankAccount\n                if (ba.uuid) {\n                    this.$router.push({name: 'Bank Account', params: {id: ba.uuid}})\n                }\n            },\n            // Load Reconcile\n            loadReconcile() {\n                reconcileHandler.getAll()\n                    .then(res => {\n                        if (res.data) {\n                            this.reconcileList = res.data\n                            this.showLoading = false\n                        }\n                    })\n            },\n        },\n        mounted() {\n            // Call Bank Account List\n            bankAccountHandler.getAll()\n                .then(res => {\n                    if (res) {\n                        this.bankAccounts = res.data\n                        this.bankAccountsBk = res.data\n                        this.showLoading = false\n                    }\n                })\n        },\n    };\n</script>\n<style scoped>\n</style>"]}]}