{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/banking/InsightNpo.vue?vue&type=template&id=7fc71310&scoped=true&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/banking/InsightNpo.vue","mtime":1638499443120},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LXJvdz4KICA8di1jb2wgY2xhc3M9InBiLTAgcHQtNCIgc209IjEyIiBjb2xzPSIxMiI+CiAgICA8di1yb3c+CiAgICAgIDx2LWNvbCBjbGFzcz0icHktbWQtMCBweC1tZC0yIiBzbT0iMTIiIGNvbHM9IjEyIj4KICAgICAgICA8di1jYXJkCiAgICAgICAgICBjb2xvcj0iZ3JheUJnIgogICAgICAgICAgb3V0bGluZWQKICAgICAgICAgIGRlbnNlCiAgICAgICAgICBjbGFzcz0icGEtNCBub19ib3JkZXIiCiAgICAgICAgICBtaW4taGVpZ2h0PSIyODIiCiAgICAgICAgPgogICAgICAgICAgPGgzIGNsYXNzPSJmb250XzIwIiA6Y2xhc3M9InsgbGluZV8zNDogdGhpcy4kaTE4bi5sb2NhbGUgPT0gJ2toJyB9Ij4KICAgICAgICAgICAge3sgJHQoImNhc2VfYmFua19iYWxhbmNlIikgfX0KICAgICAgICAgIDwvaDM+CiAgICAgICAgICA8cCBjbGFzcz0ibWItMCI+CiAgICAgICAgICAgIHt7ICR0KCJhc19vZl90b2RheSIpIH19CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8di1yb3c+CiAgICAgICAgICAgIDx2LWNvbCBzbT0iMTIiIGNsYXNzPSJweS0wIiBjb2xzPSIxMiI+CiAgICAgICAgICAgICAgPENhc2hQb3NpdGlvbk5wbyBoZWlnaHQ9IjI4MCIgLz4KICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgPC92LWNhcmQ+CiAgICAgIDwvdi1jb2w+CiAgICAgIDwhLS0gY29sIHJvdyAyIC0tPgogICAgICA8di1jb2wgY2xhc3M9InB5LTAgcHItbWQtMiIgc209IjQiIGNvbHM9IjEyIj4KICAgICAgICA8di1jYXJkCiAgICAgICAgICBjb2xvcj0iZ3JheUJnIgogICAgICAgICAgb3V0bGluZWQKICAgICAgICAgIGRlbnNlCiAgICAgICAgICBjbGFzcz0icGEtNCBtdC00IG5vX2JvcmRlciIKICAgICAgICAgIG1pbi1oZWlnaHQ9IjI5MHB4IgogICAgICAgID4KICAgICAgICAgIDxMb2FkaW5nTWUKICAgICAgICAgICAgOmlzTG9hZGluZz0ic2hvd0xvYWRpbmciCiAgICAgICAgICAgIDpmdWxsUGFnZT0iZmFsc2UiCiAgICAgICAgICAgIHR5cGU9ImxvYWRpbmciCiAgICAgICAgICAgIDpteUxvYWRpbmc9InRydWUiCiAgICAgICAgICAvPgogICAgICAgICAgPGgzIGNsYXNzPSJmb250XzIwIiA6Y2xhc3M9InsgbGluZV8zNDogdGhpcy4kaTE4bi5sb2NhbGUgPT0gJ2toJyB9Ij4KICAgICAgICAgICAge3sgJHQoImJhbmtfYmFsYW5jZXMiKSB9fQogICAgICAgICAgPC9oMz4KICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj57eyAkdCgiYXNfb2ZfdG9kYXkiKSB9fTwvcD4KICAgICAgICAgIDwhLS0gPGgyCiAgICAgICAgICAgIGNsYXNzPSJwcmltYXJ5LS10ZXh0IG5pcmFkZWlfYmxhY2sgbWItMSBwYS0wIHRleHQtcmlnaHQgY29sLXNtLTEyIgogICAgICAgICAgPgogICAgICAgICAgICB7eyBhbW91bnRUb1BheUJhbGFuY2UgfX0KICAgICAgICAgIDwvaDI+IC0tPgogICAgICAgICAgPHRlbXBsYXRlPgogICAgICAgICAgICA8di1zaW1wbGUtdGFibGUgY2xhc3M9Im10LTIiPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgPCEtLSA8dHIgdi1mb3I9Iml0ZW0gaW4gYW1vdW50VG9QYXkiIDprZXk9Iml0ZW0ubmFtZSI+IC0tPgogICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkIHN0eWxlPSJ3aWR0aDo0MCUiIGNsYXNzPSJ0ZXh0LWxlZnQgcHgtMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmlyYWRlaV9tZWRpdW0gZm9udF8xNCBncmV5LS10ZXh0Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSB7eyBpdGVtLm5hbWUgfX0ge3sgJHQoaXRlbS5sb2NhbGUpIH19IC0tPgogICAgICAgICAgICAgICAgICAgICAgICBBQkEgQmFuawogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMjAwLDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIEFDTEVEQSBCYW5rCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfaGVhdnkgZm9udF8xOCBkYXJrX2dyZXkiPgogICAgICAgICAgICAgICAgICAgICAgICAyMDAsMDAwCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBjbGFzcz0idGV4dC1sZWZ0IHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfbWVkaXVtIGZvbnRfMTQgZ3JleS0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3sgaXRlbS5uYW1lIH19IHt7ICR0KGl0ZW0ubG9jYWxlKSB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgUFBDQmFuawogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgNTAlCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBjbGFzcz0idGV4dC1sZWZ0IHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfbWVkaXVtIGZvbnRfMTQgZ3JleS0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3sgaXRlbS5uYW1lIH19IHt7ICR0KGl0ZW0ubG9jYWxlKSB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgQU1LCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfaGVhdnkgZm9udF8xOCBkYXJrX2dyZXkiPgogICAgICAgICAgICAgICAgICAgICAgICAxMDAsMDAwCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBjbGFzcz0idGV4dC1sZWZ0IHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfbWVkaXVtIGZvbnRfMTQgZ3JleS0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3sgaXRlbS5uYW1lIH19IHt7ICR0KGl0ZW0ubG9jYWxlKSB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgUGhpbGxpcCBCYW5rCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfaGVhdnkgZm9udF8xOCBkYXJrX2dyZXkiPgogICAgICAgICAgICAgICAgICAgICAgICAxMDAsMDAwCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgPC92LXNpbXBsZS10YWJsZT4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC92LWNhcmQ+CiAgICAgIDwvdi1jb2w+CiAgICAgIDx2LWNvbCBjbGFzcz0icHktMCBweC1tZC0yIiBzbT0iNCIgY29scz0iMTIiPgogICAgICAgIDx2LWNhcmQKICAgICAgICAgIGNvbG9yPSJncmF5QmciCiAgICAgICAgICBvdXRsaW5lZAogICAgICAgICAgZGVuc2UKICAgICAgICAgIGNsYXNzPSJwYS00IG10LTQgbm9fYm9yZGVyIgogICAgICAgICAgbWluLWhlaWdodD0iMjkwcHgiCiAgICAgICAgPgogICAgICAgICAgPExvYWRpbmdNZQogICAgICAgICAgICA6aXNMb2FkaW5nPSJzaG93TG9hZGluZyIKICAgICAgICAgICAgOmZ1bGxQYWdlPSJmYWxzZSIKICAgICAgICAgICAgdHlwZT0ibG9hZGluZyIKICAgICAgICAgICAgOm15TG9hZGluZz0idHJ1ZSIKICAgICAgICAgIC8+CiAgICAgICAgICA8aDMgY2xhc3M9ImZvbnRfMjAiIDpjbGFzcz0ieyBsaW5lXzM0OiB0aGlzLiRpMThuLmxvY2FsZSA9PSAna2gnIH0iPgogICAgICAgICAgICB7eyAkdCgiY2FzaF9iYW5rX2JhbGFuY2UiKSB9fQogICAgICAgICAgPC9oMz4KICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj57eyAkdCgiYnlfYWNjb3VudF90eXBlcyIpIH19PC9wPgogICAgICAgICAgPCEtLSA8aDIKICAgICAgICAgICAgY2xhc3M9InByaW1hcnktLXRleHQgbmlyYWRlaV9ibGFjayBtYi0xIHBhLTAgdGV4dC1yaWdodCBjb2wtc20tMTIiCiAgICAgICAgICA+CiAgICAgICAgICAgIHt7IGFtb3VudFRvUGF5QmFsYW5jZSB9fQogICAgICAgICAgPC9oMj4gLS0+CiAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgIDx2LXNpbXBsZS10YWJsZSBjbGFzcz0ibXQtMiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlPgogICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICA8IS0tIDx0ciB2LWZvcj0iaXRlbSBpbiBhbW91bnRUb1BheSIgOmtleT0iaXRlbS5uYW1lIj4gLS0+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJjYXNoX29uX2hhbmQiKSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMjAwLDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJwcmV0dHlfY2FzaCIpIH19CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfaGVhdnkgZm9udF8xOCBkYXJrX2dyZXkiPgogICAgICAgICAgICAgICAgICAgICAgICAyMDAsMDAwCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBjbGFzcz0idGV4dC1sZWZ0IHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfbWVkaXVtIGZvbnRfMTQgZ3JleS0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3sgaXRlbS5uYW1lIH19IHt7ICR0KGl0ZW0ubG9jYWxlKSB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoInNhdmluZ19hY2NvdW50IikgfX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgoKICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtcmlnaHQgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmlyYWRlaV9oZWF2eSBmb250XzE4IGRhcmtfZ3JleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDUwJQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJjdXJyZW50X2FjY291bnQiKSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMTAwLDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJ0ZXJtX2RlcG9zaXRzIikgfX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgoKICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtcmlnaHQgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmlyYWRlaV9oZWF2eSBmb250XzE4IGRhcmtfZ3JleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDEwMCwwMDAKICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L3Ytc2ltcGxlLXRhYmxlPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L3YtY2FyZD4KICAgICAgPC92LWNvbD4KICAgICAgPHYtY29sIGNsYXNzPSJweS0wIHBsLW1kLTIiIHNtPSI0IiBjb2xzPSIxMiI+CiAgICAgICAgPHYtY2FyZAogICAgICAgICAgY29sb3I9ImdyYXlCZyIKICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICBkZW5zZQogICAgICAgICAgY2xhc3M9InBhLTQgbXQtNCBub19ib3JkZXIiCiAgICAgICAgICBtaW4taGVpZ2h0PSIyOTBweCIKICAgICAgICA+CiAgICAgICAgICA8TG9hZGluZ01lCiAgICAgICAgICAgIDppc0xvYWRpbmc9InNob3dMb2FkaW5nIgogICAgICAgICAgICA6ZnVsbFBhZ2U9ImZhbHNlIgogICAgICAgICAgICB0eXBlPSJsb2FkaW5nIgogICAgICAgICAgICA6bXlMb2FkaW5nPSJ0cnVlIgogICAgICAgICAgLz4KICAgICAgICAgIDxoMyBjbGFzcz0iZm9udF8yMCIgOmNsYXNzPSJ7IGxpbmVfMzQ6IHRoaXMuJGkxOG4ubG9jYWxlID09ICdraCcgfSI+CiAgICAgICAgICAgIHt7ICR0KCJuZWVkX3RvX2JlX3JlY29uY2lsZWQiKSB9fQogICAgICAgICAgPC9oMz4KICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj57eyAkdCgiYnlfYWNjb3VudF90eXBlcyIpIH19PC9wPgogICAgICAgICAgPCEtLSA8aDIKICAgICAgICAgICAgY2xhc3M9InByaW1hcnktLXRleHQgbmlyYWRlaV9ibGFjayBtYi0xIHBhLTAgdGV4dC1yaWdodCBjb2wtc20tMTIiCiAgICAgICAgICA+CiAgICAgICAgICAgIHt7IGFtb3VudFRvUGF5QmFsYW5jZSB9fQogICAgICAgICAgPC9oMj4gLS0+CiAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgIDx2LXNpbXBsZS10YWJsZSBjbGFzcz0ibXQtMiI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlPgogICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICA8IS0tIDx0ciB2LWZvcj0iaXRlbSBpbiBhbW91bnRUb1BheSIgOmtleT0iaXRlbS5uYW1lIj4gLS0+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJjYXNoX29uX2hhbmQiKSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMjAwLDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJwcmV0dHlfY2FzaCIpIH19CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KCiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJ0ZXh0LXJpZ2h0IHByLTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfaGVhdnkgZm9udF8xOCBkYXJrX2dyZXkiPgogICAgICAgICAgICAgICAgICAgICAgICAyMDAsMDAwCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0id2lkdGg6NDAlIiBjbGFzcz0idGV4dC1sZWZ0IHB4LTAiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5pcmFkZWlfbWVkaXVtIGZvbnRfMTQgZ3JleS0tdGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3sgaXRlbS5uYW1lIH19IHt7ICR0KGl0ZW0ubG9jYWxlKSB9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAge3sgJHQoInNhdmluZ19hY2NvdW50IikgfX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgoKICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtcmlnaHQgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmlyYWRlaV9oZWF2eSBmb250XzE4IGRhcmtfZ3JleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDUwJQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJjdXJyZW50X2FjY291bnQiKSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CgogICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0idGV4dC1yaWdodCBwci0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX2hlYXZ5IGZvbnRfMTggZGFya19ncmV5Ij4KICAgICAgICAgICAgICAgICAgICAgICAgMTAwLDAwMAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQgc3R5bGU9IndpZHRoOjQwJSIgY2xhc3M9InRleHQtbGVmdCBweC0wIj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXJhZGVpX21lZGl1bSBmb250XzE0IGdyZXktLXRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIHt7IGl0ZW0ubmFtZSB9fSB7eyAkdChpdGVtLmxvY2FsZSkgfX0gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ICR0KCJ0ZXJtX2RlcG9zaXRzIikgfX0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgoKICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InRleHQtcmlnaHQgcHItMCI+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmlyYWRlaV9oZWF2eSBmb250XzE4IGRhcmtfZ3JleSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDEwMCwwMDAKICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L3Ytc2ltcGxlLXRhYmxlPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8L3YtY2FyZD4KICAgICAgPC92LWNvbD4KICAgIDwvdi1yb3c+CiAgPC92LWNvbD4KPC92LXJvdz4K"},null]}