{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/management/loan_center/ListOfLoan.vue?vue&type=style&index=0&id=5c6a4140&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/management/loan_center/ListOfLoan.vue","mtime":1638499443236},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdHRhY2htZW50X3RhYmxlIHRhYmxlIHRyIHRoIHsKICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZSAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHIudGhpcmQ6aG92ZXI6bm90KC52LWRhdGEtdGFibGVfX2V4cGFuZGVkX19jb250ZW50KTpub3QoLnYtZGF0YS10YWJsZV9fZW1wdHktd3JhcHBlcikgewogICAgYmFja2dyb3VuZC1jb2xvcjogIzkyZDA1MCAhaW1wb3J0YW50Owp9CgoKCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0cjpub3QoOmxhc3QtY2hpbGQpID4gdGQ6bm90KC52LWRhdGEtdGFibGVfX21vYmlsZS1yb3cpLAoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHI6bm90KDpsYXN0LWNoaWxkKSA+IHRoOm5vdCgudi1kYXRhLXRhYmxlX19tb2JpbGUtcm93KSB7CiAgICBib3JkZXItYm90dG9tOiB0aGluIHNvbGlkICNkZGQ7Cn0KCi52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyID4gdGQgewogICAgaGVpZ2h0OiAzMnB4ICFpbXBvcnRhbnQ7Cn0KCi52LWFwcGxpY2F0aW9uIC50aGlyZCwKLnYtYXBwbGljYXRpb24gLnNlY29uZGFyeSB7CiAgICBib3JkZXItY29sb3I6ICNmZmYgIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["ListOfLoan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0rCA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ListOfLoan.vue","sourceRoot":"src/views/finances/management/loan_center","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-simple-table>\n                <template v-slot:default>\n                    <tbody>\n                    <tr>\n                        <td class=\"text-uppercase\">{{ $t('ending_balance') }}</td>\n                        <td class=\"\">:</td>\n                        <td class=\"text-left text-bold\">{{ numberFormata(outStandingBalance) }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"text-uppercase\">{{ $t('total_paid') }}</td>\n                        <td class=\"\">:</td>\n                        <td class=\"text-left text-bold\">{{ numberFormata(totalPaid) }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"third white--text text-uppercase mt-5\">{{ $t('loan_number') }}</td>\n                        <td class=\"third white--text \">:</td>\n                        <td class=\"third white--text text-left text-bold mt-5\">{{ loanNumber }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"third white--text text-uppercase mt-5\">{{ $t('total_payment') }}</td>\n                        <td class=\"third white--text \">:</td>\n                        <td class=\"third white--text text-left text-bold mt-5\">{{ numberFormata(totalPayment) }}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"secondary white--text text-uppercase mt-5\">{{ $t('total_interest') }}</td>\n                        <td class=\"secondary white--text\">:</td>\n                        <td class=\"secondary white--text text-left text-bold mt-5\">{{numberFormata(Interest)}}</td>\n                    </tr>\n                    <tr>\n                        <td class=\"secondary white--text text-uppercase mt-5\">{{ $t('currency') }}</td>\n                        <td class=\"secondary white--text\">:</td>\n                        <td class=\"secondary white--text text-left text-bold mt-5\">{{currencyCode}}</td>\n                    </tr>\n                    </tbody>\n                </template>\n            </v-simple-table>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-simple-table>\n                <template>\n                    <v-simple-table class=\"attachment_table\">\n                        <template>\n                            <kendo-datasource\n                                ref=\"loanSchedule\"\n                                :change=\"dataSourceChanged\"\n                                :page-size='10'\n                                :data=\"scheduleAR\"/>\n                            <kendo-grid\n                                id=\"loanSchedule\" class=\"grid-function\"\n                                :data-source-ref=\"'loanSchedule'\"\n                                :sortable=\"false\"\n                                :filterable=\"false\"\n                                :column-menu=\"false\"\n                                :editable=\"true\"\n                                :data-items=\"items\"\n                                :skip= \"skip\"\n                                :take=\"take\"\n                                :total=\"total\"\n                                :pageable=\"true\"\n                                :page-size=\"pageSize\"\n                                :scrollable-virtual=\"false\"\n                                v-on:databound=\"dataBound\"\n                            >\n                                <kendo-grid-column\n                                    :field=\"'date'\"\n                                    :title=\"$t('date')\"\n                                    :width=\"200\"\n                                    :editable=\"()=>{ return false}\"\n                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'totalAmount'\"\n                                    :title=\"$t('pay')\"\n                                    :width=\"150\"\n                                    :editable=\"()=>{ return false}\"\n                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'principalAmount'\"\n                                    :title=\"$t('principal')\"\n                                    :width=\"150\"\n                                    :format=\"'{0:n}'\"\n                                    :editable=\"()=>{ return false}\"\n                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'interestAmount'\"\n                                    :title=\"$t('interest')\"\n                                    :width=\"150\"\n                                    :format=\"'{0:n}'\"\n                                    :editable=\"()=>{ return false}\"\n                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'endingBalance'\"\n                                    :title=\"$t('balance')\"\n                                    :width=\"150\"\n                                    :format=\"'{0:n}'\"\n                                    :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                />\n                                <kendo-grid-column\n                                    :field=\"'numStatus'\"\n                                    :title=\"$t('action')\"\n                                    :command=\"[{text: $t('pay'), click: searchLoanPaid }]\"\n                                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            </kendo-grid>\n                        </template>\n                        <!--                                    :template=\"actionTmpl\"-->\n<!--                        <template v-slot:default>-->\n<!--                            <thead>-->\n<!--                            <tr>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('date') }}</th>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('pay') }}</th>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('principal') }}</th>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('interest') }}</th>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('balance') }}</th>-->\n<!--                                <th class=\"text-uppercase px-2 py-2\" style=\"text-align: left;\">{{ $t('action') }}</th>-->\n<!--                            </tr>-->\n<!--                            </thead>-->\n<!--                            <tbody>-->\n<!--                            <tr v-for=\"d in scheduleAR\" v-bind:key=\"d.no\">-->\n<!--                                <td>{{ d.date != 'Total' ? d.date : $t('total') }}</td>-->\n<!--                                <td class=\"px-2\" style=\"text-align: right;\">{{ d.totalAmount }}</td>-->\n<!--                                <td class=\"px-2\" style=\"text-align: right;\">{{ d.principalAmount }}</td>-->\n<!--                                <td class=\"px-2\" style=\"text-align: right;\">{{ d.interestAmount }}</td>-->\n<!--                                <td class=\"px-2\" style=\"text-align: right;\">{{ d.date != 'Total' ? d.endingBalance : '' }}</td>-->\n<!--                                <td class=\"px-2 py-1\" style=\"text-align: center;\">-->\n<!--                                    {{ d.numStatus == 2 ? d.status : '' }}-->\n<!--                                    <v-btn color=\"primary\" class=\"\" v-show=\"d.numStatus == 1\" @click=\"searchLoanPaid(d)\" style=\"font-size: 14px;\">-->\n<!--                                        {{ $t('pay') }}-->\n<!--                                    </v-btn>-->\n<!--                                </td>-->\n<!--                            </tr>-->\n<!--                            </tbody>-->\n<!--                        </template>-->\n                    </v-simple-table>\n                </template>\n\n            </v-simple-table>\n        </v-col>\n        <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <v-row>\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-dialog v-model=\"showReceipt\" max-width=\"850px\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card>\n                                <v-card-title><h3>{{ loanName }}</h3></v-card-title>\n                                <v-icon class=\"btn_close\" @click=\"showReceipt = false\"  \n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\">close</v-icon>\n                                <v-divider/>\n                                <v-card-text style=\"height: 450px; color: #333333;\">\n                                    <v-row class=\"px-4 mb-4\">\n                                        <v-col sm=\"6\" cols=\"12\" class=\"\">\n                                            <label class=\"label\">{{ $t('date') }}</label>\n                                            <app-datepicker\n                                                class=\"mt-1\"\n                                                :initialDate=\"r.issuedDate\"\n                                                @emitDate=\"r.issuedDate = $event\"/>\n                                            <label class=\"label\">{{ $t('cash_account') }}</label>\n                                            <v-select\n                                                class=\"mt-1\"\n                                                outlined\n                                                return-object\n                                                id=\"\"\n                                                :items=\"cashAccounts\"\n                                                item-text=\"name\"\n                                                item-value=\"id\"\n                                                v-model=\"r.cashAccount\"\n                                            />\n                                            <label class=\"label\">{{ $t('penalty_account') }}</label>\n                                            <v-select\n                                                class=\"mt-1\"\n                                                outlined\n                                                return-object\n                                                id=\"\"\n                                                :items=\"penaltyAccounts\"\n                                                item-text=\"name\"\n                                                item-value=\"id\"\n                                                v-model=\"r.penaltyAccount\"\n                                            />\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"12\" class=\"function_content pa-3\">\n                                            <v-card class=\"pa-3 no-boxshadow d-flex justify-space-between align-center\"\n                                                    min-height=\"50px\" color=\"primary\">\n                                                <h3 style=\"font-size: 18px\" class=\"text-white text-uppercase\">\n                                                {{ $t('pay_amount') }}</h3>\n                                                <h3 class=\"text-bold float-right text-white\" style=\"font-size: 22px\">\n                                                {{(receiptAmount) }}</h3>\n                                                \n                                            </v-card>\n                                            <v-simple-table>\n                                                <template v-slot:default>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td class=\"text-left pr-0\" style=\"height: 48px !important;\">{{\n                                                                $t('currency')\n                                                            }}\n                                                            </td>\n                                                            <td class=\"text-center\">:</td>\n                                                            <td class=\"text-right\">\n                                                                {{ (currencyCode) }}\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"text-left pr-0\" style=\"height: 48px !important;\">{{\n                                                                    $t('rate')\n                                                                }}\n                                                            </td>\n                                                            <td class=\"text-center\">:</td>\n                                                            <td class=\"text-right\">\n                                                                {{ (rate) }}\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"text-left pr-0\">{{\n                                                                $t('number')\n                                                            }}\n                                                            </td>\n                                                            <td class=\"text-center\">:</td>\n                                                            <td class=\"text-right\">\n                                                                <v-text-field\n                                                                    v-model=\"r.number\"\n                                                                    style=\"text-align:right;direction: rtl;display: inline;\"\n                                                                    disabled/>\n                                                            </td>\n                                                        </tr>\n                                                        \n                                                    </tbody>\n                                                </template>\n                                            </v-simple-table>\n                                        </v-col>\n                                    </v-row>\n                                    <template>\n                                        <kendo-datasource\n                                            ref=\"receiptList\"\n                                            :change=\"dataSourceChanged\"\n                                            :data=\"schedule\"/>\n                                        <kendo-grid\n                                            id=\"gridSaleDeposit\" class=\"grid-function\"\n                                            :data-source-ref=\"'receiptList'\"\n                                            :sortable=\"true\"\n                                            :filterable=\"false\"\n                                            :column-menu=\"false\"\n                                            :editable=\"true\"\n                                            :scrollable-virtual=\"true\"\n                                        >\n                                            <kendo-grid-column\n                                                :field=\"'date'\"\n                                                :title=\"$t('payment_date')\"\n                                                :width=\"200\"\n                                                :editable=\"()=>{ return false}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'principal'\"\n                                                :title=\"$t('principle_amount')\"\n                                                :width=\"200\"\n                                                :editable=\"()=>{ return false}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'interest'\"\n                                                :title=\"$t('interest')\"\n                                                :width=\"200\"\n                                                :format=\"'{0:n}'\"\n                                                :editable=\"()=>{ return false}\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'total'\"\n                                                :title=\"$t('total_payment')\"\n                                                :width=\"200\"\n                                                :format=\"'{0:n}'\"\n                                                :editable=\"()=>{ return false}\"\n                                                :hidden=\"true\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                            <kendo-grid-column\n                                                :field=\"'penalty'\"\n                                                :title=\"$t('penalty')\"\n                                                :width=\"200\"\n                                                :format=\"'{0:n}'\"\n                                                :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                                            />\n                                        </kendo-grid>\n                                    </template>\n                                </v-card-text>\n                                <v-divider/>\n                                <v-card-actions class=\"pa-4\">\n                                    <v-row>\n                                        <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                                            <v-btn color=\"black\"\n                                                   outlined\n                                                   class=\" text-capitalize rounded-pill black--text float-left\"\n                                                   @click=\"showReceipt = false\">{{ $t('cancel') }}\n                                            </v-btn>\n                                        </v-col>\n                                        <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                                            <v-btn color=\"secondary\"\n                                                   v-show=\"!isPaid\"\n                                                   class=\"px-3 rounded-pill white--text text-capitalize float-right\"\n                                                   @click=\"addJournal\">\n                                                {{ $t('save') }}\n                                            </v-btn>\n                                        </v-col>\n                                    </v-row>\n                                </v-card-actions>\n                            </v-card>\n                        </v-form>\n                    </v-dialog>\n                </v-col>\n            </v-row>\n        </v-col>\n        <LoadingMe\n            :isLoading=\"showLoading\"\n            :fullPage=\"true\"\n            type=\"loading\"\n            :myLoading=\"true\"/>\n    </v-row>\n</template>\n<script>\nimport { i18n } from '@/i18n';\nimport kendo from \"@progress/kendo-ui\"\nconst $ = kendo.jQuery\nconst currencyHandler = require(\"@/scripts/currency/handler/currencyHandler\")\nimport LoanReceiptModel from '@/scripts/financing/model/LoanReceipt'\nimport {dataStore} from '@/observable/store'\nconst loanHandler = require(\"@/scripts/financing/handler/loanHandler\")\nconst accountHandler = require(\"@/scripts/handler/accounting/account\")\n// journal\nconst store = require(\"@/institute.js\")\nconst {cookies} = store.default.state\nimport {JournalModel, UserModel} from \"@/scripts/model/AppModels\"\nimport Helper from \"@/helper.js\"\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\nimport billingHandler from \"@/scripts/invoice/handler/billingHandler\";\n// import LoanType from \"@/scripts/default_setup/LoanType.js\";\nimport {prefixHandler} from \"@/scripts/AppHandlers\";\nconst { journalHandler } = require(\"@/scripts/AppHandlers\");\nconst {EntityType} = require(\"@/scripts/default_setup/Collections\")\nconst LoanType = require(\"@/scripts/default_setup/LoanType.js\");\nexport default {\n    name: \"ListOfLoan\",\n    props: {listOfLoan: {}},\n    computed: {\n        loanNumber() {\n            if (this.listOfLoan) {\n                this.makeSchedule()\n                return this.listOfLoan.approveNumber\n            }\n            return ''\n        },\n        currencyCode() {\n            if (this.listOfLoan) {\n                if (this.listOfLoan.hasOwnProperty('currency')) {\n                    return this.listOfLoan.currency.code\n                }\n            }\n            return ''\n        },\n        loanName() {\n            if (this.listOfLoan) {\n                return this.listOfLoan.approveNumber + '-' + this.listOfLoan.name\n            }\n            return ''\n        },\n        outStandingBalance(){\n            if (this.listOfLoan) {\n                return this.listOfLoan.outStandingBalance\n            }\n            return ''\n        },\n        Interest(){\n            if (this.listOfLoan) {\n                return this.listOfLoan.totalInterest\n            }\n            return ''\n        },\n        items: {\n            get: function() {\n                return this.scheduleAR.slice(this.skip, this.take + this.skip);\n            }\n        },\n        total () {\n            return this.scheduleAR ? this.scheduleAR.length : 0;\n        }\n    },\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        'app-datepicker': () => import('@/components/custom_templates/DatePickerComponent')\n    },\n    data: () => ({\n        errors: [],\n        skip: 0,\n        take: 10,\n        pageSize: 10,\n        pageable: {\n            info: true,\n            type: 'numeric',\n            pageSizes: true,\n            previousNext: true\n        },\n        journalNumber: '',\n        journalPrefix: '',\n        journalTxnType: EntityType.JOURNAL,\n        loggedUser: new UserModel(cookies.user),\n        scheduleAR: [],\n        info: {},\n        totalPayment: 0,\n        format: '',\n        totalPaid: '',\n        endingBalance: '',\n        numberFormat: 'n0',\n        exchangeRate: {},\n        rate: 1,\n        r: new LoanReceiptModel({}),\n        isPaid: false,\n        segment: {},\n        pin: dataStore.pin,\n        segments: [],\n        cashAccounts: [],\n        schedule: [],\n        penaltyAccount: {},\n        showReceipt: false,\n        valid: true,\n        receiptAmount: 0,\n        interestAmount: 0,\n        showLoading: false,\n        penaltyAccounts: [],\n        saleFormContent: {},\n        transactionType: {},\n        suffix: '',\n        loan: {},\n        journal: {}\n    }),\n    watch: {},\n    methods: {\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        dataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0]\n                window.console.log(dataRow)\n            }\n        },\n        // async loadDecimal() {\n        //     new Promise(resolve => {\n        //         setTimeout(() => {\n        //             resolve('resolved');\n        //             loanHandler.decimalGet().then(res => {\n        //                 this.decimals = res.data.data\n        //             })\n        //         }, 300);\n        //     })\n        //     new Promise((resolve) => {\n        //         setTimeout(() => {\n        //             resolve(\"resolved\");\n        //             saleFormContentHandler.list().then((res) => {\n        //                 if (res.data.statusCode === 200) {\n        //                     const data = res.data.data;\n        //                     if (data.length > 0) {\n        //                         this.saleFormContent = data[0];\n        //                         this.numberFormat = 'n' + this.saleFormContent.decimal\n        //                         this.loan.decimal = data[0].decimal\n        //                     }\n        //                 }\n        //             });\n        //         }, 10);\n        //     });\n        // },\n        actionTmpl(dataItem) {\n            window.console.log(dataItem)\n            if(dataItem.numStatus == 2){\n                return i18n.t('paid')\n            }else{\n                return `<v-btn color=\"primary\" class=\"\" v-show=\"d.numStatus == 1\" @click=\"{searchLoanPaid(dataItem)}\" style=\"font-size: 14px;\">` + i18n.t('pay') + `</v-btn>`\n            }\n        },\n        rowNumberTmpl(dataItem) {\n            if(dataItem) {\n                let ds = this.$refs.scheduleAR.kendoWidget(),\n                    index = ds.indexOf(dataItem);\n                if (index === (this.scheduleAR.length - 1)) {\n                    return ''\n                } else {\n                    return index + 1\n                }\n            }\n            return  ''\n        },\n        async makeSchedule(){\n            this.scheduleAR = []\n            this.endingBalance = ''\n            this.totalPaid = ''\n            this.totalPayment = ''\n            window.console.log('a')\n            if(this.listOfLoan.status == \"active\" || this.listOfLoan.status == \"close\") {\n                this.loan = this.listOfLoan\n                window.console.log(this.listOfLoan, 'b')\n                await this.loadSchedule(this.listOfLoan.id)\n            }\n        },\n        dataBound: function (e) {\n            const items = e.sender.items()\n            if(items.length > 0){\n                const grid = kendo.jQuery(\"#loanSchedule\").data(\"kendoGrid\")\n                if(grid){\n                    items.each(function () {\n                        let dataItem = grid.dataItem(this);\n                        window.console.log(dataItem.numStatus)\n                        // kendo.jQuery(\"tr[data-uid='\" + dataItem.uid + \"']\").find(\".isStatus\").each(function () {\n                            if (dataItem.numStatus == 2) {\n                                window.console.log(kendo.jQuery(this), 'wow')\n                                kendo.jQuery(this).find('td').eq(5).text(i18n.t('paid'));\n                                // kendo.jQuery(this).removeClass('k-state-disabled')\n                            }else if(dataItem.numStatus == 3){\n                                kendo.jQuery(this).find('td').eq(5).text('');\n                            }\n                        // )\n                        // })\n                    })\n                }\n            }\n        },\n        async searchLoanPaid(e){\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#loanSchedule\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            // window.console.log(dataItem)\n            await this.loadPrefix()\n            this.loadTransactionRate()\n            let data = []\n            data.push(dataItem)\n            this.calReceipt(data)\n        },\n        async loadTransactionRate() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    const date = new Date(this.r.issuedDate).toISOString().substr(0, 10)\n                    let code = this.currencyCode\n                    // window.console.log(this.currencyCode, 'transaction rate')\n                    if (code !== undefined || code !== '') {\n                        this.showLoading = true\n                        currencyHandler.getLastExchangeRateByDate(date, code).then(res => {\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                const response = res.data.data[0]\n                                this.exchangeRate = response\n                                this.rate = response.rate\n                                this.showLoading = false\n                                // this.r.userPin = this.pin\n                                // this.r.rate = response.rate\n                                this.r.exchangeRate = response\n                            }\n                        })\n                    }\n                }, 300)\n            })\n        },\n        calReceipt(data) {\n            if (data.length > 0) {\n                let total = 0\n                let interest = 0\n                // let s = []\n                let self = this\n                let penalty = 0\n                let ss = []\n                // window.console.log(data, 'cal receipt')\n                $.each(data, function (i, v) {\n                    interest += parseFloat(v.interest)\n                    let p = self.listOfLoan\n                    let int = 0\n                    let startdate = new Date(v.date)\n                    let enddate = new Date()\n                    let months = enddate.getMonth() - startdate.getMonth() + (12 * (enddate.getFullYear() - startdate.getFullYear()))\n                    if (months >= 3) {\n                        int = (parseFloat(v.interest) * parseFloat(p.product.dueThreeMonth)) / 100\n                    } else if (months < 3 && months >= 2) {\n                        int = (parseFloat(v.interest) * parseFloat(p.product.dueTwoMonth)) / 100\n                    } else if (months == 1) {\n                        int = (parseFloat(v.interest) * parseFloat(p.product.dueOneMonth)) / 100\n                    }\n                    // window.console.log(parseFloat(v.principal), 'principal')\n                    ss.push({\n                        id: v.id,\n                        date: v.date,\n                        principal: kendo.toString(parseFloat(v.principal), v.numberFormat),\n                        interest: kendo.toString(parseFloat(v.interest), v.numberFormat),\n                        total: kendo.toString(parseFloat(v.total), v.numberFormat),\n                        penalty: int\n                    })\n                    total += parseFloat(v.total) + int\n                    penalty += int\n                })\n                if (ss.length > 0) {\n                    this.schedule = ss\n                }\n                if (total > 0) {\n                    this.r.penaltyAmount = penalty\n                    this.r.schedules = this.schedule\n                    window.console.log(this.listOfLoan, 'list loan')\n                    this.r.loan = {\n                        id: this.listOfLoan.id,\n                        name: this.listOfLoan.name\n                    }\n                    this.receiptAmount = kendo.toString(total, this.numberFormat)\n                    this.interestAmount = kendo.toString(interest, this.numberFormat)\n                    this.r.receiptAmount = total\n                    this.r.interestAmount = interest\n                    this.r.principalAmount = total - interest\n                    this.showReceipt = true\n                } else {\n                    this.isPaid = true\n                    this.$snotify.success('Already paid!')\n                    // this.schedules = []\n                    this.showReceipt = true\n                }\n            } else {\n                this.isPaid = true\n                this.$snotify.success('Already paid!')\n                // this.schedules = []\n                this.showReceipt = true\n            }\n        },\n        loadSchedulea(data){\n            window.console.log(data, 'schedule')\n            let self = this\n            // let iamt = 0\n            let tamt = 0\n            let pamt = 0\n            let isCheckFirst = false\n            $.each(data, function (i,v){\n                let status = ''\n                let nStatus = 3\n                if(v.status == 2){\n                    status = i18n.t('paid')\n                    pamt += v.data.total\n                    nStatus = 2\n                }else{\n                    if(isCheckFirst == false) {\n                        nStatus = v.status\n                        isCheckFirst = true\n                    }\n                }\n                self.scheduleAR.push({\n                    id: v.pk,\n                    no: i +1,\n                    date: v.data.date,\n                    interest: v.data.interest,\n                    interestAmount: kendo.toString(v.data.interest, v.data.numberFormat),\n                    locale: v.data.locale,\n                    numberFormat: v.data.numberFormat,\n                    principal: v.data.principal,\n                    principalAmount: kendo.toString(v.data.principal, v.data.numberFormat),\n                    principal_r: kendo.toString(v.data.principal_r, v.data.numberFormat),\n                    totalAmount: kendo.toString(v.data.total, v.data.numberFormat),\n                    total: v.data.total,\n                    status: status,\n                    numStatus: nStatus,\n                    endingBalance: kendo.toString(v.data.principal_r - v.data.principal, v.data.numberFormat)\n                })\n                // iamt += v.interest\n                tamt += v.data.total\n                // self.currencyCode = v.data.locale\n                self.numberFormat = v.data.numberFormat\n            })\n            window.console.log(tamt)\n            this.totalPayment = kendo.toString(tamt, this.numberFormat)\n            this.totalPaid = kendo.toString(pamt, this.numberFormat)\n            this.endingBalance = kendo.toString(tamt - pamt, this.numberFormat)\n            // this.addTotal()\n        },\n        loadSchedule(loanId){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    loanHandler.loanScheduleGet(loanId).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            let data = res.data.data\n                            let self = this\n                            let s = []\n                            this.scheduleAR = []\n                            if(data.length > 0){\n                                let iamt = 0\n                                let tamt = 0\n                                let pamt = 0\n                                let isCheckFirst = false\n                                $.each(data, function (i,v){\n                                    let status = ''\n                                    let nStatus = 3\n                                    if(v.status == 2){\n                                        status = i18n.t('paid')\n                                        pamt += v.data.total\n                                        nStatus = 2\n                                    }else{\n                                        if(isCheckFirst == false) {\n                                            nStatus = v.status\n                                            isCheckFirst = true\n                                        }\n                                    }\n                                    s.push({\n                                        id: v.id,\n                                        no: i +1,\n                                        date: v.data.date,\n                                        interest: v.data.interest,\n                                        interestAmount: kendo.toString(v.data.interest, v.data.numberFormat),\n                                        locale: v.data.locale,\n                                        numberFormat: v.data.numberFormat,\n                                        principal: v.data.principal,\n                                        principalAmount: kendo.toString(v.data.principal, v.data.numberFormat),\n                                        principal_r: kendo.toString(v.data.principal_r, v.data.numberFormat),\n                                        totalAmount: kendo.toString(v.data.total, v.data.numberFormat),\n                                        total: v.data.total,\n                                        status: status,\n                                        numStatus: nStatus,\n                                        endingBalance: kendo.toString(v.data.principal_r - v.data.principal, v.data.numberFormat)\n                                    })\n                                    iamt += v.data.interest\n                                    tamt += v.data.total\n                                    // self.currencyCode = v.data.locale\n                                    self.numberFormat = v.data.numberFormat\n                                })\n                                window.console.log(tamt)\n                                this.totalInterest = kendo.toString(iamt, this.numberFormat)\n                                this.totalPayment = kendo.toString(tamt, this.numberFormat)\n                                this.totalPaid = kendo.toString(pamt, this.numberFormat)\n                                this.endingBalance = kendo.toString(tamt - pamt, this.numberFormat)\n                                // this.addTotal()\n                                if(s.length > 0) {\n                                    this.scheduleAR = s\n                                }\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        addTotal() {\n            window.console.log(this.listOfLoan)\n            this.scheduleAR.push({\n                id: '',\n                no: this.scheduleAR.length + 1,\n                principal_r: '',\n                principalAmount: kendo.toString(parseFloat(this.listOfLoan.approvedAmount), this.numberFormat),\n                interestAmount: kendo.toString(this.totalInterest, this.numberFormat),\n                totalAmount: kendo.toString(this.totalPayment, this.numberFormat),\n                date: 'Total',\n                locale: this.currencyCode,\n                numberFormat: this.numberFormat,\n                transaction_number: '',\n                status: '',\n                endingBalance: ''\n            })\n            // let ds = this.$refs.scheduleAR.kendoWidget()\n            // ds.setDataSource(this.scheduleAR)\n            // $.each(this.scheduleAR, function (i,v){\n            //     ds.add({\n            //         principal_r: v.principal_r,\n            //         principal: v.principal,\n            //         interest: v.interest,\n            //         total: v.total,\n            //         date: v.date,\n            //         locale: v.locale,\n            //         numberFormat: v.numberFormat,\n            //         transaction_number: v.transaction_number,\n            //         status: v.status\n            //     })\n            // })\n            // window.console.log(this.scheduleAR, 's')\n        },\n        async loadAccount() {\n            window.console.log(this.listOfLoan, 'list')\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    accountHandler.getAll().then(res => {\n                        window.console.log(res, 'account')\n                        this.cashAccounts = res.data.filter(m => m.account_type.number === 1).map(itm => {\n                            return {\n                                id: itm.uuid,\n                                uuid: itm.uuid,\n                                name: itm.name,\n                                local_name: itm.local_name,\n                                number: itm.number,\n                                is_taxable: itm.is_taxable,\n                                banhjiAccCode: itm.banhjiAccCode,\n                                group_code: itm.group_code,\n                                parent_account: itm.parent_account,\n                                type_code: itm.type_code\n                            }\n                        })\n                        this.penaltyAccounts = res.data.filter(m => m.account_type.number === 38).map(itm => {\n                            return {\n                                id: itm.uuid,\n                                uuid: itm.uuid,\n                                name: itm.name,\n                                local_name: itm.local_name,\n                                number: itm.number,\n                                is_taxable: itm.is_taxable,\n                                banhjiAccCode: itm.banhjiAccCode,\n                                group_code: itm.group_code,\n                                parent_account: itm.parent_account,\n                                type_code: itm.type_code\n                            }\n                        })\n                        if (this.cashAccounts.length > 0) {\n                            this.r.cashAccount = this.cashAccounts[0]\n                        }\n                        if(this.penaltyAccounts.length > 0){\n                            this.r.penaltyAccount = this.penaltyAccounts[0]\n                        }\n                    })\n                }, 300);\n            })\n        },\n        // jounal\n        async getJournalNumber() {\n            let num = await Helper.generateAccountingNumber(this.journalTxnType, this.r.issuedDate)\n            this.journalNumber = num.number\n            this.journalPrefix = num.prefix_format\n            this.r.number = num.number\n            this.r.journalNumber = num.number\n        },\n        async loadSinglePenalty() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    loanHandler.penaltyGet().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            if (res.data.data.length > 0) {\n                                this.penaltyAccount = res.data.data[0]\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        async addJournal() {\n            let int = 0\n            $.each(this.schedules, function (i, v) {\n                int += parseFloat(v.int)\n            })\n            this.r.penaltyAmount = int\n            const obj = this.r\n            // const seg = this.segment\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            if (this.r.receiptAmount <= 0) {\n                this.$snotify.error('Amount must be over 0')\n                return\n            }\n            this.showLoading = true\n            // API Journal\n            let self = this;\n            let jj = []\n            jj.push({\n                \"uuid\": \"\",\n                \"account\": obj.cashAccount,\n                \"description\": this.journal.description,\n                \"third_contacts\": [],\n                \"ref_number\": '',\n                \"amount\": parseFloat(obj.receiptAmount) * -1,\n                \"discount\": {},\n                \"mark_up\": 0,\n                \"billable\": 0,\n                \"tax_code\": \"\",\n                \"payment_method\": {},\n                \"currency\": this.exchangeRate,\n                \"exchange_rate_uuid\": \"\",\n                \"exchange_rate\": this.rate,\n                \"exchanged_amount\": (parseFloat(obj.receiptAmount) * -1) * parseFloat(this.rate),\n                \"tax_amount\": 0,\n                \"exchanged_tax_amount\": 0,\n                \"is_reconciled\": 0,\n                \"is_settled\": 0,\n                \"class_1_uuid\": \"\",\n                \"class_2_uuid\": \"\",\n                \"class_3_uuid\": \"\",\n                \"class_4_uuid\": \"\",\n                \"class_5_uuid\": \"\",\n                \"payment_method_as\": \"\",\n                \"created_by\": null,\n                \"modified_by\": null,\n                \"created_date\": null,\n                \"modified_date\": null\n            })\n            if (obj.principalAmount > 0) {\n                jj.push({\n                    \"uuid\": \"\",\n                    \"account\": this.listOfLoan.loanAccount,\n                    \"description\": '',\n                    \"third_contacts\": [],\n                    \"ref_number\": '',\n                    \"amount\": parseFloat(obj.principalAmount),\n                    \"discount\": {},\n                    \"mark_up\": 0,\n                    \"billable\": 0,\n                    \"tax_code\": \"\",\n                    \"payment_method\": {},\n                    \"currency\": this.exchangeRate,\n                    \"exchange_rate_uuid\": \"\",\n                    \"exchange_rate\": this.rate,\n                    \"exchanged_amount\": parseFloat(obj.principalAmount) * parseFloat(this.rate),\n                    \"tax_amount\": 0,\n                    \"exchanged_tax_amount\": 0,\n                    \"is_reconciled\": 0,\n                    \"is_settled\": 0,\n                    \"class_1_uuid\": \"\",\n                    \"class_2_uuid\": \"\",\n                    \"class_3_uuid\": \"\",\n                    \"class_4_uuid\": \"\",\n                    \"class_5_uuid\": \"\",\n                    \"payment_method_as\": \"\",\n                    \"created_by\": null,\n                    \"modified_by\": null,\n                    \"created_date\": null,\n                    \"modified_date\": null\n                })\n            }\n            if (obj.interestAmount > 0) {\n                jj.push({\n                    \"uuid\": \"\",\n                    \"account\": this.listOfLoan.interestAccount,\n                    \"description\": '',\n                    \"third_contacts\": [],\n                    \"ref_number\": '',\n                    \"amount\": parseFloat(obj.interestAmount),\n                    \"discount\": {},\n                    \"mark_up\": 0,\n                    \"billable\": 0,\n                    \"tax_code\": \"\",\n                    \"payment_method\": {},\n                    \"currency\": this.exchangeRate,\n                    \"exchange_rate_uuid\": \"\",\n                    \"exchange_rate\": this.rate,\n                    \"exchanged_amount\": parseFloat(obj.interestAmount) * parseFloat(this.rate),\n                    \"tax_amount\": 0,\n                    \"exchanged_tax_amount\": 0,\n                    \"is_reconciled\": 0,\n                    \"is_settled\": 0,\n                    \"class_1_uuid\": \"\",\n                    \"class_2_uuid\": \"\",\n                    \"class_3_uuid\": \"\",\n                    \"class_4_uuid\": \"\",\n                    \"class_5_uuid\": \"\",\n                    \"payment_method_as\": \"\",\n                    \"created_by\": null,\n                    \"modified_by\": null,\n                    \"created_date\": null,\n                    \"modified_date\": null\n                })\n            }\n            if (obj.penaltyAmount > 0) {\n                if (Object.keys(this.r.penaltyAccount).length == 0) {\n                    this.$snotify.error('Please select penalty account')\n                    return\n                }\n                jj.push({\n                    \"uuid\": \"\",\n                    \"account\": this.penaltyAccount,\n                    \"description\": '',\n                    \"third_contacts\": [],\n                    \"ref_number\": '',\n                    \"amount\": parseFloat(obj.penaltyAmount),\n                    \"discount\": {},\n                    \"mark_up\": 0,\n                    \"billable\": 0,\n                    \"tax_code\": \"\",\n                    \"payment_method\": {},\n                    \"currency\": this.exchangeRate,\n                    \"exchange_rate_uuid\": \"\",\n                    \"exchange_rate\": this.rate,\n                    \"exchanged_amount\": parseFloat(obj.penaltyAmount) * parseFloat(this.rate),\n                    \"tax_amount\": 0,\n                    \"exchanged_tax_amount\": 0,\n                    \"is_reconciled\": 0,\n                    \"is_settled\": 0,\n                    \"class_1_uuid\": \"\",\n                    \"class_2_uuid\": \"\",\n                    \"class_3_uuid\": \"\",\n                    \"class_4_uuid\": \"\",\n                    \"class_5_uuid\": \"\",\n                    \"payment_method_as\": \"\",\n                    \"created_by\": null,\n                    \"modified_by\": null,\n                    \"created_date\": null,\n                    \"modified_date\": null\n                })\n            }\n            // let data = {\n            //     \"number\": this.journalNumber,\n            //     \"description\": \"Loan Receipt\",\n            //     \"journal_type\": \"general_journal\",\n            //     \"journal_date\": new Date(obj.issuedDate),\n            //     \"currency_code\": this.currencyCode,\n            //     \"buinsess_unit_uuid\": \"\",\n            //     \"location_uuid\": \"\",\n            //     \"project_uuid\": \"\",\n            //     \"segment_uuid\": \"\",\n            //     \"journal_entries\": jj,\n            //     \"transaction_type\": \"journal\",\n            //     \"is_draft\": 0,\n            //     \"is_reversed\": 0,\n            //     \"prefix_format\": this.journalPrefix,\n            //     \"created_by\": this.loggedUser\n            // }\n            this.journal.prefix_format = this.journalPrefix\n            this.journal.journal_entries = jj\n            this.journal.currency_code = this.currencyCode\n            this.journal.journal_date = Helper.toISODate(this.r.issuedDate)\n            this.journal.created_by = this.loggedUser\n            if(this.listOfLoan.hasOwnProperty('segment')){\n                this.journal.segment_uuid = this.listOfLoan.segment.id\n            }\n            if(this.listOfLoan.hasOwnProperty('location')){\n                this.journal.location_uuid = this.listOfLoan.location.id\n            }\n            journalHandler.save(new JournalModel(this.journal))\n                .then(function (response) {\n                    // window.console.log(response, 'res')\n                    self.r.user = self.loggedUser\n                    self.r.loan = self.listOfLoan\n                    self.r.journal = JSON.stringify(self.journal)\n                    self.r.journalId = response.data.uuid\n                    window.console.log(self.r, 'receipt obj')\n                    self.saveReceipt()\n                })\n                .catch(function (error) {\n                    Helper.alertErrorMsg(error)\n                    window.console.log(error)\n                })\n                .finally(() => {\n                    self.showLoading = false;\n                });\n        },\n        async loadSegment() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.segment = {}\n                    loanHandler.businessSettingGet().then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            let s = res.data.data.filter((obj) => {\n                                return obj.type == \"Credit\"\n                            })\n                            if (s.length > 0) {\n                                this.segment = s[0].segment\n                            } else {\n                                this.$snotify.error('Please select segment on setting page')\n                                this.cancel()\n                            }\n                        }\n                    }).catch()\n                    {\n                        this.showLoading = false\n                    }\n                }, 300)\n            })\n        },\n        saveReceipt() {\n            loanHandler.loanPaymentCreate(new LoanReceiptModel(this.r)).then(response => {\n                this.showLoading = false\n                if (response.data.statusCode === 201) {\n                    this.$snotify.success('Successfully')\n                    this.showReceipt = false\n                    this.makeSchedule()\n                }\n            }).catch(e => {\n                this.showLoading = false\n                this.$snotify.error('Something went wrong')\n                this.errors.push(e)\n                window.console.log(e, 'error')\n            })\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then((res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                                // window.console.log(data[0])\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        numberFormata(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n${this.saleFormContent.decimal}`);\n            // return value\n        },\n        generateNumber() {\n            let data = {\n                abbr: this.transactionType.abbr,\n                structure: this.transactionType.structure,\n                transactionDate: this.r.issuedDate,\n                type: \"Record Loan Periodic Payment\",\n            };\n            billingHandler\n                .lastNumber(data)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        const res = response.data.data;\n                        this.suffix = res.suffix;\n                        this.getLastNum();\n                    }\n                })\n                .catch((e) => {\n                    this.errors.push(e);\n                });\n        },\n        getLastNum(){\n            let d = {\n                type: \"RecordPayment\",\n            };\n            loanHandler\n                .getLastNumber(d)\n                .then((response) => {\n                    if (response.data.statusCode === 200) {\n                        this.showLoading = false\n                        const res = response.data.data;\n                        const lastNumber = this.zeroPad(\n                            parseInt(res.lastNumber),\n                            this.transactionType.format\n                        );\n                        this.r.lastNumber = parseInt(res.lastNumber)\n                        const number =\n                            this.suffix +\n                            this.transactionType.numberSeparator +\n                            lastNumber;\n                        let des = ''\n                        if(Object.keys(this.loan).length > 0){\n                            des = `Pay Loan from ${this.loan.financialInstitutions.name} For Loan Number ${this.loan.approveNumber}`;\n                        }\n\n                        this.journal = new JournalModel({\n                            description: des,\n                            transaction_type: LoanType.REPAYMENT,\n                            journal_type: LoanType.REPAYMENT,\n                        });\n                        this.journal.abbr = this.transactionType.abbr\n                        // this.loan.activeDate = new Date().toISOString().substr(0, 10);\n\n                        // Add 2 default rows\n                        // this.addRowT(this.$refs.cashBankAccountDS.kendoWidget());\n                        // for (let index = 0; index < 2; index++) {\n                        //     this.addRow(this.$refs.relatedCostDS.kendoWidget());\n                        // }\n                        this.journal.number = this.transactionType.abbr + this.transactionType.numberSeparator + number\n                        this.r.abbr = this.transactionType.abbr\n                        this.r.number = this.transactionType.abbr + this.transactionType.numberSeparator + number;\n                    }\n                })\n                .catch((e) => {\n                    window.console.log(e);\n                });\n        },\n        async loadPrefix() {\n            this.showLoading = true\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    prefixHandler.get(\"record loan periodic payment\").then((res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionType = res.data.data[0];\n                            this.generateNumber();\n                        }\n                    });\n                }, 10);\n            });\n        },\n    },\n    mounted: async function () {\n        // await this.loadCurrencyData()\n        // await this.loadDecimal()\n        // await this.loadSegment()\n        await this.getJournalNumber()\n        await this.loadSaleFormContent()\n        // await this.loadSinglePenalty()\n    },\n    created: async function () {\n        await this.loadAccount()\n    },\n}\n</script>\n<style scoped>\n.attachment_table table tr th {\n    vertical-align: baseline !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.third:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n}\n\n.v-application .third,\n.v-application .secondary {\n    border-color: #fff !important;\n}\n</style>"]}]}