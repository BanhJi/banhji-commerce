{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/views/CloseLoanView.vue?vue&type=style&index=0&id=5cf6eaa0&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/finances/views/CloseLoanView.vue","mtime":1638499443242},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZnVuY3Rpb25fY29udGVudCB7CiAgICBwYWRkaW5nOiAwIDI1cHggMjVweDsKICAgIGJvcmRlci1ib3R0b206IDA7Cn0KCi5hdHRhY2htZW50X3RhYmxlLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKQG1lZGlhIChtaW4td2lkdGg6IDEyNjRweCkgewogICAgLmNvbnRhaW5lciB7CiAgICAgICAgLyogbWF4LXdpZHRoOiAxMTg1cHg7ICovCiAgICAgICAgbWF4LXdpZHRoOiAxMDgwcHggIWltcG9ydGFudDsKICAgIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7CiAgICAubWItNiB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50OwogICAgfQp9Cg=="},{"version":3,"sources":["CloseLoanView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAocA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CloseLoanView.vue","sourceRoot":"src/views/finances/views","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                            outlined\n                            dense\n                            class=\"pa-4 no_border rounded-sm\"\n                            color=\"white\"\n                    >\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"close_loan\") }}</h2>\n                                <v-icon\n                                        onclick=\"window.history.go(-1); return false;\"\n                                        style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                        class=\"float-right\"\n                                >close\n                                </v-icon>\n                            </v-card>\n                            <v-card height=\"175px\"\n                                    outlined\n                                    dense\n                                    class=\"px-4 no_border mb-4\"\n                                    color=\"grayBg\"\n                            >\n                                        <v-row>\n                                            <v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n                                                <v-row>\n                                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                                        <label class=\"label\">{{ $t(\"date\") }}</label>\n                                                         <h3 class=\"text-bold pb-2\">2020-10-10</h3>\n\n                                                        <label class=\"label\">{{ $t(\"number\") }}</label>\n                                                        <h3 class=\"text-bold pb-2\">abc123</h3>\n                                                    </v-col>\n                                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                                        <label class=\"label\">{{ $t(\"loan_number\") }}</label>\n                                                        <h3 class=\"text-bold pb-2\">1233333</h3>\n                                                    </v-col>\n                                                </v-row>\n                                            </v-col>\n\n                                            <v-col sm=\"3\" cols=\"12\" class=\"pb-6\">\n                                                <v-card\n                                                        outlined\n                                                        style=\"display: block\"\n                                                        height=\"150\"\n                                                        dense\n                                                        class=\"pa-3\"\n                                                        color=\"primary\"\n                                                >\n                                                    <h4 class=\"mb-0 text-left text-white\">\n                                                        {{ $t(\"total_amount\") }}\n                                                    </h4>\n                                                    <h3\n                                                            style=\"font-size: 25px\"\n                                                            class=\"py-10 float-right text-right text-white\"\n                                                    >\n                                                        1,000.00\n                                                    </h3>\n                                                </v-card>\n                                            </v-col>\n                                        </v-row>\n                            </v-card>\n                            <v-card\n                                    class=\"px-4 no_border\"\n                                    color=\"white\"\n                                    outlined>\n\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pb-3 pa-0\">\n                                        <h3 class=\"mb-3\">{{ $t(\"cash_bank_receipt\") }}</h3>\n                                        <template>\n                                            <v-simple-table class=\"attachment_table\">\n                                                <template v-slot:default>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>{{ $t(\"no.\") }}</th>\n                                                        <th>{{ $t(\"account\") }}</th>\n                                                        <th>{{ $t(\"description\") }}</th>\n                                                        <th>{{ $t(\"reference_no\") }}</th>\n                                                        <th>{{ $t(\"amount\") }}</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    <tr>\n                                                        <td>01</td>\n                                                        <td/>\n                                                        <td/>\n                                                        <td/>\n                                                        <td/>\n                                                    </tr>\n                                                    </tbody>\n                                                </template>\n                                            </v-simple-table>\n                                        </template>\n                                    </v-col>\n                                </v-row>\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"pa-0\">\n                                        <h3 class=\"mb-3\">{{ $t(\"relate_cost_receipt\") }}</h3>\n                                        <!-- For table -->\n                                        <template>\n                                            <v-simple-table class=\"attachment_table\">\n                                                <template v-slot:default>\n                                                    <thead>\n                                                    <tr>\n                                                        <th>{{ $t(\"no.\") }}</th>\n                                                        <th>{{ $t(\"account\") }}</th>\n                                                        <th>{{ $t(\"description\") }}</th>\n                                                        <th>{{ $t(\"reference_no\") }}</th>\n                                                        <th>{{ $t(\"amount\") }}</th>\n                                                    </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    <tr>\n                                                        <td>01</td>\n                                                        <td/>\n                                                        <td/>\n                                                        <td/>\n                                                        <td/>\n                                                    </tr>\n                                                    </tbody>\n                                                </template>\n                                            </v-simple-table>\n                                        </template>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider/>\n                            <!-- Footer -->\n                            <v-divider class=\"mt-1\" />\n                            <v-card outlined dense class=\"no_border function_footer py-2\">\n                                <v-btn\n                                class=\"float-right save_option mx-1 capitalize\"\n                                color=\"primary\"\n                                >\n                                {{ $t(\"print\") }}\n                                </v-btn>\n                                <v-btn\n                                class=\"float-right mx-1 white--text capitalize\"\n                                color=\"blue\"\n                                >\n                                {{ $t(\"delete\") }}\n                                </v-btn>\n                                <v-btn\n                                class=\"float-right mx-1 white--text capitalize\"\n                                color=\"lightBlue\"\n                                >\n                                {{ $t(\"edit\") }}\n                                </v-btn>\n                            </v-card>\n                            <v-divider />\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe\n                    :isLoading=\"compeletLoading\"\n                    :fullPage=\"true\"\n                    :myLoading=\"true\"\n                    :alertMessage=\"loadingAlert\"\n                    :color=\"loadingColorAlert\"\n                    :alertText=\"loadingTextAlert\"\n            />\n        </v-container>\n    </v-app>\n</template>\n\n<script>\n    /* Cookie */\n    const cookieJS = require(\"@/cookie.js\");\n    const { instituteId } = cookieJS.getCookie();\n\n    const accountHandler = require(\"@/scripts/handler/accounting/account.js\");\n    const accountTypeHandler = require(\"@/scripts/handler/accounting/accountType.js\");\n    const accountGroupHandler = require(\"@/scripts/handler/accounting/accountGroup.js\");\n    import LoadingMe from \"@/components/Loading\";\n    import {i18n} from \"@/i18n\";\n\n    export default {\n        name: \"Account\",\n        components: {\n            LoadingMe,\n        },\n        data: () => ({\n            menuJDate: false,\n            txn_date: new Date().toISOString().substr(0, 10),\n            menuJDate1: false,\n            txn_date1: new Date().toISOString().substr(0, 10),\n            menuJDate2: false,\n            txn_date2: new Date().toISOString().substr(0, 10),\n            account_types: [],\n            parent_accounts: [],\n            account_groups: [],\n            taxes: [],\n            isEdit: false,\n            // Form validation\n            valid: true,\n            compeletLoading: false,\n            loadingAlert: false,\n            loadingColorAlert: \"\",\n            loadingTextAlert: \"\",\n            saveMode: \"\",\n            numberRules: [\n                (v) => !!v || \"Number is required\",\n                (v) => (v && v.length > 5) || \"Number must be at least 6 digits\",\n            ],\n            // Obj\n            obj: {\n                number: \"\",\n                name: \"\",\n                description: \"\",\n                is_taxable: 0,\n                status: 1,\n                institute: instituteId,\n                account_type: undefined,\n                account_group: undefined,\n                parent_account: undefined,\n            },\n        }),\n        methods: {\n            // Load obj according to query string {id}\n            loadObj(id) {\n                accountHandler.getOne(id).then((res) => {\n                    // Bind Obj\n                    this.obj = res.data;\n\n                    //Call dependencies\n                    this.onAccountTypeChanges();\n                });\n            },\n            // Number\n            generateNumber() {\n                let obj = this.obj;\n\n                if (obj.account_type !== undefined && obj.parent_account !== undefined) {\n                    obj.number = obj.parent_account.number;\n                } else if (obj.account_type !== undefined) {\n                    obj.number = obj.account_type.number;\n                }\n            },\n            // On Account Type Changes\n            onAccountTypeChanges() {\n                let obj = this.obj;\n                this.alertMessage = false;\n                // Clear data\n                this.account_groups = [];\n                this.parent_accounts = [];\n                obj.account_group = undefined;\n                obj.parent_account = undefined;\n\n                let accountTypeNumber = obj.account_type.number;\n                // Account Group by Account Type\n                accountGroupHandler\n                    .getByAccountType({\n                        params: {\n                            acc_type_code: accountTypeNumber,\n                        },\n                    })\n                    .then((res) => {\n                        if (res.data.length > 0) {\n                            this.account_groups = res.data;\n                        }\n                    });\n\n                // Parent Account by Account Type\n                accountHandler\n                    .getParentAccountByAccountTypeNumber(accountTypeNumber)\n                    .then((res) => {\n                        if (res.data.length > 0) {\n                            this.parent_accounts = res.data;\n                        }\n                    });\n            },\n            // Shrink Data\n            shrinkData() {\n                let obj = this.obj,\n                    pa = obj.parent_account,\n                    ag = obj.account_group;\n\n                // Parent Account\n                if (pa !== undefined) {\n                    obj.parent_account = {\n                        uuid: pa.uuid,\n                        number: pa.number,\n                        name: pa.name,\n                    };\n                }\n                // Account Group\n                if (ag !== undefined) {\n                    obj.account_group = {\n                        uuid: ag.uuid,\n                        name: ag.name,\n                    };\n                }\n            },\n            // All Saves\n            saveNew() {\n                if (this.$refs.form.validate()) {\n                    this.saveMode = \"saveNew\";\n                    this.save();\n                } else {\n                    this.alertError();\n                }\n            },\n            saveClose() {\n                if (this.$refs.form.validate()) {\n                    this.saveMode = \"saveClose\";\n                    this.save();\n                } else {\n                    this.alertError();\n                }\n            },\n            cancel() {\n                this.$swal({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#4d4848\",\n                    cancelButtonColor: \"#ED1A3A\",\n                    confirmButtonText: \"Yes, reset it!\",\n                }).then((result) => {\n                    if (result.value) {\n                        this.$refs.form.reset();\n                    }\n                });\n            },\n            save() {\n                // Shrink Data\n                this.shrinkData();\n\n                let self = this,\n                    obj = this.obj;\n                this.compeletLoading = true;\n                // Sync Data\n                accountHandler\n                    .save(obj)\n                    .then(function (response) {\n                        if (response) {\n                            self.responseStatus(response.status);\n                        } else {\n                            self.alertError();\n                        }\n                    })\n                    .catch(function (error) {\n                        self.alertError(error);\n                    });\n            },\n            // Response Status\n            responseStatus(status) {\n                switch (status) {\n                    case 200: // Ok\n                        this.showAlert();\n                        // Reset form\n                        this.$refs.form.reset();\n\n                        break;\n                    case 201: // Duplicate\n                        this.alertError(\"Duplicate entry!\");\n                        break;\n                    default:\n                        break;\n                }\n            },\n            // Sweetalert2\n            changeAlertStatus() {\n                this.loadingAlert = true;\n                setTimeout(() => {\n                    this.loadingAlert = false;\n                }, 6200);\n            },\n            showAlert() {\n                this.compeletLoading = false;\n                this.changeAlertStatus();\n                this.loadingTextAlert = \"Added Successful\";\n                this.loadingColorAlert = \"#3DA72E\";\n                switch (this.saveMode) {\n                    case \"saveClose\": // Save Close\n                        // this.$swal({\n                        // \tposition: 'products',\n                        // \ticon: 'success',\n                        // \ttitle: 'Your work has been saved',\n                        // \tshowConfirmButton: true,\n                        // }).then((result) => {\n                        // \tif (result.value) {\n                        // \t\twindow.history.go(-1)\n\n                        // \t\treturn false\n                        // \t}\n                        // })\n                        window.history.go(-1);\n                        break;\n                    default:\n                        // Save New\n                        // this.$swal({\n                        // \tposition: 'products',\n                        // \ticon: 'success',\n                        // \ttitle: 'Your work has been saved',\n                        // \tshowConfirmButton: false,\n                        // \ttimer: 1500\n                        // })\n                        break;\n                }\n            },\n            alertError(msg) {\n                if (msg) {\n                    // Code here\n                } else {\n                    msg = \"Something went wrong!\";\n                }\n                this.compeletLoading = false;\n                this.loadingTextAlert = \"Failed!\";\n                this.loadingColorAlert = \"#eb8334\";\n                this.changeAlertStatus();\n                // this.$swal({\n                // \tposition: 'products',\n                // \ticon: 'error',\n                // \ttitle: 'Oops...!',\n                // \ttext: msg,\n                // \tshowConfirmButton: true\n                // })\n            },\n        },\n        mounted() {\n            // Access Query String\n            let q = this.$route.params;\n            if (q.id !== undefined) {\n                // Set Edit Mode\n                this.isEdit = true;\n\n                this.loadObj(q.id);\n            } else {\n                this.isEdit = false;\n            }\n\n            // Call Account Type\n            accountTypeHandler.getAll().then((res) => {\n                this.account_types = res;\n            });\n        },\n        computed: {\n            templates() {\n                return [{title: i18n.t(\"default\")}, {title: i18n.t(\"custom\")}];\n            },\n        },\n    };\n</script>\n<style scoped>\n    .function_content {\n        padding: 0 25px 25px;\n        border-bottom: 0;\n    }\n\n    .attachment_table.theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    @media (min-width: 1264px) {\n        .container {\n            /* max-width: 1185px; */\n            max-width: 1080px !important;\n        }\n    }\n\n    @media (max-width: 576px) {\n        .mb-6 {\n            margin-bottom: 0 !important;\n        }\n    }\n</style>\n"]}]}