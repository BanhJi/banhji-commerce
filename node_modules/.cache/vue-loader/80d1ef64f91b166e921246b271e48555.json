{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/product/count_adjustment/StockCounts.vue?vue&type=style&index=0&id=40da7129&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/products/product/count_adjustment/StockCounts.vue","mtime":1642155812693},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kcm9wZG93bi1oZWFkZXIgewogICAgYm9yZGVyLXdpZHRoOiAwIDAgMXB4IDA7CiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwp9CgouZHJvcGRvd24taGVhZGVyID4gc3BhbiB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZHJvcGRvd24taGVhZGVyID4gc3BhbjpmaXJzdC1jaGlsZCB7CiAgICB3aWR0aDogNTBweDsKfQoKLmstbGlzdC1jb250YWluZXIgPiAuay1mb290ZXIgewogICAgcGFkZGluZzogMTBweDsKfQoKLmZ1bmN0aW9uX2NvbnRlbnQgewogICAgcGFkZGluZzogMCAyNXB4IDI1cHg7CiAgICBib3JkZXItYm90dG9tOiAwOwogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgpAbWVkaWEgKG1pbi13aWR0aDogMTI2NHB4KSB7CiAgICAuY29udGFpbmVyIHsKICAgICAgICAvKiBtYXgtd2lkdGg6IDExODVweDsgKi8KICAgICAgICBtYXgtd2lkdGg6IDEwODBweCAhaW1wb3J0YW50OwogICAgfQp9CgouZ3JheUJnIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNGOEY4Rjk7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewogICAgLm1iLTYgewogICAgICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsKICAgIH0KfQoKLnNlY3Rpb24yIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkNmQ3ZDg7Cn0KCi5ib3JkZXJfZ3JleSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjZDZkN2Q4Owp9CgouYXR0YWNobWVudF90YWJsZSB7CiAgICB3aWR0aDogMTAwJTsKfQoKLm15X3JhZGlvIFt0eXBlPSJyYWRpbyJdICsgbGFiZWwgewogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZzogNnB4OwogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxNSUgODAlICFpbXBvcnRhbnQ7CiAgICBkaXNwbGF5OiBncmlkOwp9CgoudXBsb2FkX2J0biB7CiAgICBwYWRkaW5nOiAxMHB4IDZweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIGNvbG9yOiB3aGl0ZTsKICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICBtYXJnaW4tYm90dG9tOiBub25lICFpbXBvcnRhbnQ7CiAgICBib3JkZXItcmFkaXVzOiAyMnB4OwogICAgYmFja2dyb3VuZDogIzkyZDA1MDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["StockCounts.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"StockCounts.vue","sourceRoot":"src/views/products/product/count_adjustment","sourcesContent":["<template>\n    <v-app>\n        <v-container>\n            <v-row>\n                <v-col cols=\"12\" sm=\"12\">\n                    <v-card\n                        outlined\n                        dense\n                        class=\"pa-4 no_border rounded-sm\"\n                        color=\"white\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                            <v-card outlined dense class=\"no_border\">\n                                <h2 class=\"mb-0\">{{ $t(\"stock_count\") }}</h2>\n                                <v-icon\n                                    onclick=\"window.history.go(-1); return false;\"\n                                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                                    class=\"float-right\">close\n                                </v-icon>\n                            </v-card>\n                            <v-card outlined dense class=\"px-3 no_border\" color=\"grayBg\">\n                                <v-row>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 kendo_dropdown_custom\">\n                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                $t(\"category\")\n                                            }}</label>\n                                        <product-category-dropdownlist\n                                            :initCategory=\"stockCount.category\"\n                                            :initModel=\"stockCount.category\"\n                                            @onChange=\"onCategoryChanged\"\n                                        />\n                                        <label class=\"label mb-0 mt-1\" style=\"\">{{\n                                                $t(\"group\")\n                                            }}</label>\n                                        <product-group-dropdownlist\n                                            :initProductGroup=\"stockCount.group\"\n                                            :initModel=\"stockCount.group\"\n                                            @onChange=\"onGroupChanged\"\n                                        />\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0 kendo_dropdown_custom\">\n                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                $t(\"sub_group\")\n                                            }}</label>\n                                        <product-sub-group-dropdownlist\n                                            :initProductGroup=\"productSubGroup\"\n                                            :initModel=\"stockCount.subGroup\"\n                                            @onChange=\"onGroupChanged\"\n                                        />\n                                        <label class=\"label mb-0\">{{ $t(\"warehouse\") }}</label>\n                                        <v-select\n                                            class=\"mt-1\"\n                                            item-value=\"id\"\n                                            v-model=\"stockCount.warehouse\"\n                                            :items=\"warehouse\"\n                                            item-text=\"name\"\n                                            :rules=\"[(v) => !!v['id'] || $t('is required!')]\"\n                                            clearable\n                                            return-object\n                                            tage=\"Warehouse\"\n                                            placeholder=\"warehouse\"\n                                            outlined/>\n                                    </v-col>\n                                    <v-col sm=\"3\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label  mb-0 mt-1\" style=\"\">{{\n                                                $t(\"date\")\n                                            }}</label>\n                                        <app-datepicker :initialDate=\"stockCount.transactionDate\"\n                                                        @onChanged=\"onTransactionDateChanged\"\n                                                        @emitDate=\"stockCount.transactionDate = $event\"/>\n                                        <label class=\"label\">{{\n                                                $t(\"number\")\n                                            }}</label>\n                                        <div class=\"d-flex mt-1\">\n                                            <div class=\"code_text flex-1 text-bold\">\n                                                {{ stockCount.abbr || '' }}\n                                            </div>\n                                            <v-text-field\n                                                class=\"flex-2 custom-border\"\n                                                v-model=\"stockCount.number\"\n                                                readonly\n                                                outlined\n                                                :rules=\"[(v) => !!v || $t('is_required')]\"\n                                                required\n                                            />\n                                            <v-icon\n                                                color=\"black\"\n                                                size=\"30\"\n                                                style=\"height: 40px\"\n                                                @click=\"generateNumber\"\n                                                class=\"border_qrcode ml-2\"\n                                            >mdi-qrcode\n                                            </v-icon>\n                                        </div>\n                                    </v-col>\n                                    <v-col sm=\"1\" cols=\"1\" class=\"pt-9\">\n                                        <v-btn color=\"primary white--text\" @click=\"loadItems\">\n                                            <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                                        </v-btn>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-card outlined dense class=\"no_border mb-1\" color=\"white\">\n                                <v-row>\n                                    <v-col sm=\"12\" cols=\"12\" class=\"\">\n                                        <v-row>\n                                            <v-col sm=\"12\">\n                                                <h3 class=\" mb-0\">\n                                                    <!--                                                    {{ $t(\"product_to_add_into_this_catalog\") }}-->\n                                                </h3>\n                                            </v-col>\n                                            <v-col cols=\"12\">\n                                                <kendo-datasource\n                                                    ref=\"itemLineStockCountDS\"\n                                                    :data=\"itemList\"\n                                                />\n                                                <kendo-grid\n                                                    id=\"gridItemLine\"\n                                                    class=\"grid-function\"\n                                                    :data-source-ref=\"'itemLineStockCountDS'\"\n                                                    :sortable=\"true\"\n                                                    :column-menu=\"false\"\n                                                    :editable=\"true\"\n                                                    :scrollable-virtual=\"true\">\n                                                    <kendo-grid-column\n                                                        :command=\"{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus', }\"\n                                                        :title=\"''\"\n                                                        :width=\"63\"\n                                                        :headerAttributes=\"{ style:  'text-align: left; background-color: #EDF1F5',}\"\n                                                    />\n                                                    <kendo-grid-column\n                                                        :title=\"$t('no.')\"\n                                                        :width=\"53\"\n                                                        :column-menu=\"false\"\n                                                        :template=\"rowNumberTmpl\"\n                                                        :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-products', }\"\n                                                        :attributes=\"{ style: 'text-align: products', }\"\n                                                    />\n                                                     <kendo-grid-column\n                                                        :field=\"'item'\"\n                                                        :title=\"$t('sku')\"\n                                                        :editable=\" () => { return false; } \"\n                                                        :template=\"'<span>#=item.sku || ``#</span>'\"\n                                                        :width=\"200\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5',}\"\n                                                    />\n                                                    <kendo-grid-column\n                                                        :field=\"'item'\"\n                                                        :title=\"$t('item')\"\n                                                        :editable=\" () => { return false; } \"\n                                                        :template=\"'<span>#=item.name || ``#</span>'\"\n                                                        :width=\"200\"\n                                                        :headerAttributes=\"{style: 'background-color: #EDF1F5',}\"\n                                                    />\n                                                    <kendo-grid-column\n                                                        :field=\"'description'\"\n                                                        :title=\"$t('description')\"\n                                                        :editable=\" () => { return false; } \"\n                                                        :template=\"'<span>#=description#</span>'\"\n                                                        :width=\"200\"\n                                                        :headerAttributes=\"{  style: 'background-color: #EDF1F5', }\"\n                                                    />\n\n                                                    <kendo-grid-column\n                                                        :field=\"'buom'\"\n                                                        :title=\"$t('buom')\"\n                                                        :width=\"170\"\n                                                        :template=\"UOMTemplate\"\n                                                        :editable=\" () => { return false; } \"\n                                                        :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5', }\"\n                                                        :attributes=\"{ style: 'text-align: left', }\"\n                                                    />\n                                                    <kendo-grid-column\n                                                        :field=\"'count'\"\n                                                        :title=\"$t('counted')\"\n                                                        :editor=\"numberEditor\"\n                                                        :template=\"'<span>#=count#</span>'\"\n                                                        :width=\"170\"\n                                                        :headerAttributes=\"{ style: 'text-align: left; background-color: #EDF1F5', }\"\n                                                        :attributes=\"{ style: 'text-align: right; ' }\"\n                                                    />\n                                                </kendo-grid>\n\n                                            </v-col>\n                                        </v-row>\n                                    </v-col>\n                                </v-row>\n                            </v-card>\n                            <v-divider/>\n                            <v-card outlined dense class=\"no_border function_footer\">\n                                <v-btn @click=\"cancel\"\n                                       color=\"black\"\n                                       outlined\n                                       class=\"text-capitalize  black--text float-left\"\n                                >{{ $t(\"cancel\") }}\n                                </v-btn>\n\n                                <v-btn @click=\"onSaveClose\"\n                                       color=\"primary\"\n                                       class=\"float-right  white--text text-capitalize\"\n                                >{{ $t(\"save_close\") }}\n                                </v-btn>\n\n                            </v-card>\n                        </v-form>\n                    </v-card>\n                </v-col>\n            </v-row>\n            <LoadingMe :isLoading=\"showLoading\" :fullPage=\"false\" :myLoading=\"true\" type=\"loading\"/>\n        </v-container>\n    </v-app>\n</template>\n\n<script>\nimport Helper from \"@/helper\";\n\nconst productVariantHandler = require(\"@/scripts/productVariantHandler\")\nconst $ = kendo.jQuery\nimport kendo from \"@progress/kendo-ui\";\nimport CategoryModel from \"@/scripts/model/Categories\";\nimport GroupModel from \"@/scripts/model/ProductGroup\";\nimport SubGroupModel from \"@/scripts/model/ProductSubGroup\";\nimport prefixHandler from \"@/scripts/prefixHandler\";\nimport billingHandler from \"@/scripts/invoice/handler/billingHandler\";\nimport StockCount from \"@/scripts/stock-count/model/StockCount\";\nimport ItemLineModel from \"@/scripts/stock-count/model/ItemLine\";\nimport warehouseHandler from \"@/scripts/warehouseHandler\";\nimport saleFormContentHandler from \"@/scripts/saleFormContentHandler\";\n\nconst itemLineModel = new ItemLineModel({});\n\nconst prefix = \"stock count\";\nconst txnType = \"Stock Count\";\nexport default {\n    name: \"StockCount\",\n    props: ['id'],\n    components: {\n        LoadingMe: () => import(`@/components/Loading`),\n        'app-datepicker': () => import(\"@/components/custom_templates/DatePickerComponent\"),\n        \"product-category-dropdownlist\": () => import(\"@/components/dropdownlist/ProductCategoryDropDownList\"),\n        \"product-group-dropdownlist\": () => import(\"@/components/dropdownlist/ProductGroupDropDownList\"),\n        \"product-sub-group-dropdownlist\": () => import(\"@/components/dropdownlist/ProductSubGroupDropDownList\"),\n    },\n    data: () => ({\n        showLoading: false,\n        valid: true,\n        category: new CategoryModel({}),\n        productGroup: new GroupModel({}),\n        productSubGroup: new SubGroupModel({}),\n        stockCount: new StockCount({}),\n        group: {field: 'type'},\n        itemList: [],\n        effectiveDate: new Date().toJSON(),\n        warehouse: [],\n        groups: [],\n        transactionTypes: [],\n        itemLine: itemLineModel,\n        saleFormContent: {},\n        transactionDate: ''\n    }),\n    methods: {\n        /* todo variance = (new price/price) - 1*/\n        onDataSourceChanged(e) {\n            if (e.field) {\n                let dataRow = e.items[0]\n                switch (e.field) {\n                    case \"newPrice\":\n                        dataRow.set('variance', (((parseFloat(dataRow.newPrice) / parseFloat(dataRow.price)) - 1) * 100))\n                        break\n                    default:\n                        break\n                }\n            }\n        },\n        AmountEditor(container, options) {\n            kendo.jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    decimals: 30,\n                    format: `5`\n                });\n        },\n        clear() {\n            this.itemList = []\n        },\n        rowNumberTmpl(dataItem) {\n            let ds = this.$refs.itemLineStockCountDS.kendoWidget(),\n                index = ds.indexOf(dataItem);\n            return index + 1;\n        },\n        cancel() {\n            window.history.go(-1)\n        },\n        close() {\n            window.history.go(-1)\n            // this.$router.push({\n            //     name: 'Customers', params: {\n            //         data: data\n            //     }\n            // })\n        },\n\n        async loadItems() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    let cateId = '', groupId = '', subGroupId = ''\n                    const category = this.category || {}\n                    cateId = category.id || ''\n                    if (cateId !== '') {\n                        if (this.category) {\n                            cateId = this.category.id || ''\n                        }\n                        if (this.productGroup) {\n                            groupId = this.productGroup.id || ''\n                        }\n                        if (this.productSubGroup) {\n                            subGroupId = this.productSubGroup.id || ''\n                        }\n                        const strFilter = '?cid=' + cateId + '&gid=' + groupId + '&sgId=' + subGroupId\n                        this.showLoading = true\n                        productVariantHandler.itemByCategory(strFilter).then(response => {\n                            if (response.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.itemList = response.data.data\n                            }\n                        }).catch(e => {\n                            this.showLoading = false\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    } else {\n                        this.$snotify.error('Please select Product Category')\n                    }\n                })\n            })\n        },\n        async onSaveClose() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let isAutoGenerate = 1;\n                    if (this.$route.params.id) {\n                        const tranDate = new Date(this.transactionDate);\n                        const tranDateAdjustment = new Date(this.stockCount.transactionDate);\n                        const tranDateM = tranDate.getFullYear() + tranDate.getMonth();\n                        const tranDateTxnM = tranDateAdjustment.getFullYear() + tranDateAdjustment.getMonth();\n                        if (tranDateM === tranDateTxnM) {\n                            isAutoGenerate = 0;\n                        }\n                    }\n                    let ds = this.$refs.itemLineStockCountDS.kendoWidget()\n                    const items = ds.data().map(m => {\n                        return new ItemLineModel(m)\n                    })\n                    window.console.log('items', items)\n                    if (items.length > 0) {\n                        this.stockCount.itemLines = items\n                        this.stockCount.transactionDateTZ = Helper.toISODate(this.stockCount.transactionDate)\n                        this.stockCount.type = txnType\n                        this.stockCount.isAutoGenerate = isAutoGenerate\n                        this.stockCount.actionType = this.$route.query.type\n\n                        this.showLoading = true\n                        billingHandler.inventoryAdjustment(this.stockCount).then(response => {\n                            if (response.data.statusCode === 201) {\n                                this.showLoading = false\n                                this.$snotify.success('Successfully')\n                                this.close()\n                            }\n                        }).catch(e => {\n                            this.showLoading = false\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }\n                }, 10);\n            })\n        },\n        onUOMChanged(value) {\n            this.uom = value\n            window.console.log('uom', value)\n        },\n        onCategoryChanged(value) {\n            this.category = value\n            this.stockCount.category = value\n            // const cateId = value.id || ''\n            // this.productGroup = this.groups.filter(n => n.category.id === cateId)\n            window.console.log('category', value)\n        },\n        onGroupChanged(value) {\n            this.productGroup = value\n            this.stockCount.group = value\n            this.groups = value\n            window.console.log('group', value)\n        },\n        async loadWarehouses() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    warehouseHandler.getWarehouseSettingAll().then(res => {\n                        this.warehouse = res\n                    })\n                }, 10);\n            })\n        },\n        async loadPrefix() {\n            new Promise((resolve) => {\n                setTimeout(async () => {\n                    resolve(\"resolved\");\n                    await prefixHandler.get(prefix).then(async (res) => {\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false;\n                            this.transactionTypes = res.data.data;\n                            if (this.transactionTypes.length > 0) {\n                                this.stockCount.transactionType =\n                                    this.transactionTypes[0];\n                                if (this.$route.params.id === undefined) {\n                                    await this.generateNumber();\n                                }\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        async generateNumber() {\n            if (this.stockCount.transactionDate !== \"\") {\n                const txnType_ = this.stockCount.transactionType || {}\n                let data = {\n                    abbr: txnType_.abbr || '',\n                    structure: txnType_.structure || '',\n                    transactionDate: this.stockCount.transactionDate,\n                    sequcencing: txnType_.sequcencing,\n                    prefixSeparator: txnType_.prefixSeparator || '',\n                    numberSeparator: txnType_.numberSeparator || '',\n                    format: txnType_.format || 5,\n                    type: txnType,\n                };\n                this.stockCount.abbr = data.abbr;\n                this.stockCount.structure = data.structure;\n                this.stockCount.sequcencing = data.sequcencing;\n                this.stockCount.transactionDate = data.transactionDate;\n                this.stockCount.type = data.type;\n                this.showLoading = true;\n                await billingHandler\n                    .lastNumber(data)\n                    .then((response) => {\n                        if (response.data.statusCode === 200) {\n                            this.showLoading = false;\n                            const res = response.data.data;\n                            const lastNumber = this.zeroPad(parseInt(res.lastNumber), txnType_.format);\n                            this.stockCount.number = res.suffix + txnType_.numberSeparator + lastNumber;\n                            this.stockCount.lastNumber = res.suffix + lastNumber;\n                        } else {\n                            this.showLoading = false;\n                        }\n                    })\n                    .catch((e) => {\n                        this.showLoading = false;\n                        window.console.error(e);\n                    });\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, \"0\");\n        },\n        UOMTemplate(dataItem) {\n            const uom = dataItem.buom;\n            if (uom) {\n                return `<span>${uom.name ? uom.name : ``}</span>`;\n            } else {\n                return ``;\n            }\n        },\n        numberEditor(container, options) {\n            kendo\n                .jQuery('<input data-bind=\"value:' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoNumericTextBox({\n                    decimals: 30,\n                    min: 0,\n                    format: `${this.saleFormContent.decimal}`,\n                });\n        },\n        removeRow(e) {\n            e.preventDefault();\n            const grid = kendo.jQuery(\"#gridItemLine\").data(\"kendoGrid\"),\n                dataSource = grid.dataSource,\n                dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n\n            if (dataSource.total() > 1) {\n                dataSource.remove(dataItem);\n                this.autoCalculate();\n            }\n        },\n        async loadSaleFormContent() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    saleFormContentHandler.list().then(async (res) => {\n                        if (res.data.statusCode === 200) {\n                            const data = res.data.data;\n                            if (data.length > 0) {\n                                this.saleFormContent = data[0];\n                            }\n                        }\n                    });\n                }, 10);\n            });\n        },\n        onTransactionDateChanged() {\n            if (this.$route.params.id === undefined) {\n                this.generateNumber();\n            }\n        },\n        async loadViewStockCount() {\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(\"resolved\");\n                    // window.console.log(this.$route.params.id, 'id')\n                    if (\n                        this.$route.params.id !== undefined &&\n                        this.$route.params.id !== \"\"\n                    ) {\n                        this.showLoading = true;\n                        billingHandler\n                            .inventoryAdjustmentList(\"?id=\" + this.$route.params.id + '&type=Stock Count')\n                            .then((res) => {\n                                if (res.data.statusCode === 200) {\n                                    this.showLoading = false;\n                                    this.stockCount = res.data.data[0];\n                                    this.itemList = this.stockCount.itemLines;\n                                    this.transactionDate = this.stockCount.transactionDate;\n                                    this.group = this.stockCount.group || {}\n                                    this.category = this.stockCount.category || {}\n                                    // this.itemModifier.category = this.category\n                                    this.onCategoryChanged(this.stockCount.category)\n                                } else {\n                                    this.showLoading = false\n                                }\n                            });\n                    }\n                }, 10);\n            });\n        },\n        async initData() {\n            if (this.$route.params.id !== undefined || this.$route.params.id !== \"\") {\n                this.loadViewStockCount()\n            }\n        }\n    },\n    mounted: async function () {\n        await this.initData()\n        await this.loadWarehouses()\n        await this.loadPrefix()\n        await this.loadSaleFormContent();\n        await this.initData();\n    },\n    computed: {\n        priceHeaderTemplate() {\n            if (this.code) {\n                return 'Price (' + this.code + ')'\n            }\n            return 'Price'\n        },\n        newPriceHeaderTemplate() {\n            if (this.code) {\n                return 'New Price (' + this.code + ')'\n            }\n            return 'New Price'\n        },\n        priceLevelName() {\n            if (this.$route.query) {\n                const query = this.$route.query\n                if (query.hasOwnProperty('name')) {\n                    return query.name\n                }\n\n            }\n            return ''\n        },\n        code() {\n            if (this.$route.query) {\n                const query = this.$route.query\n                if (query.hasOwnProperty('code')) {\n                    return query.code\n                }\n\n            }\n            return ''\n        }\n    },\n    // activated() {\n    //     this.itemList = []\n    //     this.loadCategory()\n    // },\n    watch: {\n        // id() {\n        //\n        //     this.loadCategory()\n        // }\n    },\n\n};\n</script>\n\n<style scoped>\n.dropdown-header {\n    border-width: 0 0 1px 0;\n    text-transform: uppercase;\n}\n\n.dropdown-header > span {\n    display: inline-block;\n    padding: 10px;\n}\n\n.dropdown-header > span:first-child {\n    width: 50px;\n}\n\n.k-list-container > .k-footer {\n    padding: 10px;\n}\n\n.function_content {\n    padding: 0 25px 25px;\n    border-bottom: 0;\n    background-color: #fff !important;\n}\n\n@media (min-width: 1264px) {\n    .container {\n        /* max-width: 1185px; */\n        max-width: 1080px !important;\n    }\n}\n\n.grayBg {\n    background-color: #F8F8F9;\n}\n\n@media (max-width: 576px) {\n    .mb-6 {\n        margin-bottom: 0 !important;\n    }\n}\n\n.section2 {\n    border: 1px solid #d6d7d8;\n}\n\n.border_grey {\n    border: 1px solid #d6d7d8;\n}\n\n.attachment_table {\n    width: 100%;\n}\n\n.my_radio [type=\"radio\"] + label {\n    position: relative;\n    padding: 6px;\n    grid-template-columns: 15% 80% !important;\n    display: grid;\n}\n\n.upload_btn {\n    padding: 10px 6px;\n    text-align: center;\n    color: white;\n    margin-top: 15px;\n    margin-bottom: none !important;\n    border-radius: 22px;\n    background: #92d050;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n</style>\n"]}]}