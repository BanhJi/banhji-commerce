{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Input.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payment/bank_payment/Input.vue","mtime":1639966363943},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMb2FkaW5nTWUgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmcnCmltcG9ydCBrZW5kbyBmcm9tICJAcHJvZ3Jlc3Mva2VuZG8tdWkiCmNvbnN0IHBheXJvbGxIYW5kbGVyICAgID0gcmVxdWlyZSgiQC9zY3JpcHRzL3BheXJvbGxIYW5kbGVyIikKY29uc3Qgc2V0dGluZ3NIYW5kbGVyICAgPSByZXF1aXJlKCJAL3NjcmlwdHMvc2V0dGluZ3NIYW5kbGVyIikKY29uc3QgY29va2llSlMgPSByZXF1aXJlKCJAL2Nvb2tpZS5qcyIpOwpjb25zdCBjb29raWUgPSBjb29raWVKUy5nZXRDb29raWUoKTsKZXhwb3J0IGRlZmF1bHQoewogICAgcHJvcHM6Wydwcm9wSW5wdXQnXSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdmFsaWQ6IHRydWUsCiAgICAgICAgICAgIGRhdGU6ICcnLAogICAgICAgICAgICBzaG93TG9hZGluZzogZmFsc2UsCiAgICAgICAgICAgIHN0YXJ0X2RhdGU6ICcnLAogICAgICAgICAgICBzZWxlY3RCYW5rOiAnJywKICAgICAgICAgICAgcGF5cm9sbEJhbms6ICAgW10sCiAgICAgICAgICAgIHNlbGVjdEJhbmtBY2NvdW50OiAnJywKICAgICAgICAgICAgYmFua0FjY291bnQ6IFtdLAogICAgICAgICAgICBzZWFyY2g6ewogICAgICAgICAgICAgICAgc3RhcnRfZGF0ZTogJycsCiAgICAgICAgICAgICAgICBlbmRfZGF0ZTogJycKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGF5cm9sbHM6IFtdLAogICAgICAgICAgICBwYXlyb2xsX2xpc3Q6IFtdLAogICAgICAgICAgICBzZWxlY3RSZWZlcmVuY2U6ICcnLAogICAgICAgICAgICBzb3J0OlsKICAgICAgICAgICAgICAgIHsgZmllbGQ6ICdyZWZlcmVuY2VOdW1iZXInLCBkaXI6ICdhc2MnIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgbnVtOiAwLAogICAgICAgICAgICBiYXRjaFBheW1lbnQ6IHt9LAogICAgICAgICAgICBiYWxhbmNlSW5CYW5oSmk6IDAsCiAgICAgICAgICAgIHByZWZpeDogJycsCiAgICAgICAgICAgIG51bWJlcjogICcnLAogICAgICAgICAgICBsYXN0TnVtYmVyOiAwLAogICAgICAgICAgICByZWZlcmVuY2VOdW1iZXI6ICcnLAogICAgICAgICAgICBsb2dnZWRVc2VyOiB7CiAgICAgICAgICAgICAgICBpZDogY29va2llLmNyZWF0b3IsCiAgICAgICAgICAgICAgICBuYW1lOiBjb29raWUuZW1haWwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcGF5bWVudFNjaGVkdWxlczogW10sCiAgICAgICAgICAgIHBheURhdGU6ICcnLAogICAgICAgICAgICBwcmVmaXhfZm9ybWF0OiAnJwogICAgICAgIH0KICAgIH0sCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgJ0xvYWRpbmdNZSc6IExvYWRpbmdNZSwKICAgICAgICAnbW9udGgtcGlja2VyJyA6ICgpPT4gaW1wb3J0KCdAL2NvbXBvbmVudHMvY3VzdG9tX3RlbXBsYXRlcy9Nb250aFBpY2tlcicpLAogICAgICAgICdkYXRlLXBpY2tlcicgOiAoKT0+IGltcG9ydCgnQC9jb21wb25lbnRzL2N1c3RvbV90ZW1wbGF0ZXMvRGF0ZVBpY2tlckNvbXBvbmVudCcpCiAgICB9LAogICAgY29tcHV0ZWQ6ewogICAgICAgIGxvYWRCYXRjaCgpewogICAgICAgICAgICBpZih0aGlzLmJhdGNoICE9PSB1bmRlZmluZWQpewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuYmF0Y2gKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICByZXR1cm4gW10KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgICByZXR1cm5EYXRhKGRhdGEpewogICAgICAgICAgICB0aGlzLiRlbWl0KCdyZXR1cm5EYXRhJywgZGF0YSkKICAgICAgICB9LAogICAgICAgIGxvYWRTdWNjZXNzKGRhdGEpewogICAgICAgICAgICB0aGlzLiRlbWl0KCdoZWFkbGluZScsZGF0YSkKICAgICAgICB9LAogICAgICAgIGFzeW5jIGxvYWRQYXlyb2xsQmFuaygpewogICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJyk7CiAgICAgICAgICAgICAgICAgICAgcGF5cm9sbEhhbmRsZXIuZ2V0QmFuaygpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXlyb2xsQmFuayA9IHJlcy5kYXRhLmRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKHRoaXMucGF5cm9sbEJhbmssJ3BheXJvbGxCYW5rJykKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5iYW5rQ2hhbmdlKCkKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSwgMzAwKTsKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGJhbmtDaGFuZ2UoKXsKICAgICAgICAgICAgdGhpcy5iYW5rQWNjb3VudCA9ICB0aGlzLnBheXJvbGxCYW5rLmZpbHRlcihpdGVtID0+IGl0ZW0uYmFua1V1aWQgPT09ICB0aGlzLnNlbGVjdEJhbmsuYmFua1V1aWQpCiAgICAgICAgfSwKICAgICAgICBtb250aENoYW5nZSgpewogICAgICAgICAgICB3aW5kb3cuY29uc29sZS5sb2coJ2JhdGNoUGF5bWVudCcsIHRoaXMuYmF0Y2hQYXltZW50KQogICAgICAgICAgICBsZXQgbW9udGhfb2YgPSBrZW5kby50b1N0cmluZyhuZXcgRGF0ZSh0aGlzLnN0YXJ0X2RhdGUpLCd5eXl5LU1NLWRkJykKICAgICAgICAgICAgdGhpcy5sb2FkUGF5cm9sbChtb250aF9vZikKCiAgICAgICAgICAgIGlmKHRoaXMuYmF0Y2hQYXltZW50Lm51bWJlciAhPT0gJycpewogICAgICAgICAgICAgICAgdGhpcy5udW1iZXIgPSB0aGlzLmJhdGNoUGF5bWVudC5udW1iZXIKICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyh0aGlzLm51bWJlcikKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTnVtYmVyKCkKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbG9hZFBheXJvbGwobW9udGhPZil7CiAgICAgICAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKQogICAgICAgICAgICAgICAgICAgIHRoaXMuZW1wbG95ZWUgPSBbXQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgcGF5cm9sbEhhbmRsZXIuZ2V0UGF5cm9sbEJ5TW9udGgobW9udGhPZikudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzQ29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGF5cm9sbHMgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSwgMzAwKQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgcmVmZXJlbmNlQ2hhbmdlKCl7CiAgICAgICAgICAgIGlmKHRoaXMuc2VsZWN0UmVmZXJlbmNlKXsKICAgICAgICAgICAgICAgIHRoaXMucGF5bWVudFNjaGVkdWxlcyA9IHRoaXMucGF5cm9sbHMuZmlsdGVyKGkgPT5pLmlkID09PSB0aGlzLnNlbGVjdFJlZmVyZW5jZSkubWFwKGluZGV4PT57CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGluZGV4LnBheW1lbnRTY2hlZHVsZQogICAgICAgICAgICAgICAgfSlbMF0KICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbG9hZEJhdGNoU2luZ2xlKCl7CiAgICAgICAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKQogICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgcGF5cm9sbEhhbmRsZXIuZ2V0QmF0Y2hTaW5nbGUodGhpcy4kcm91dGUucGFyYW1zLmlkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuc3RhdHVzQ29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXN1bHQgPSByZXMuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0Lmxlbmd0aCA+IDApewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmF0Y2hQYXltZW50ICAgICAgICAgICA9IHJlc3VsdFswXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0QmFuayAgICAgICAgICAgICA9IHRoaXMuYmF0Y2hQYXltZW50LmJhbmsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNlbGVjdEJhbmtBY2NvdW50ICAgICAgPSB0aGlzLmJhdGNoUGF5bWVudC5iYW5rQWNjb3VudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGxldCBtb250aE9mICAgICAgICAgICAgICAgICA9IHRoaXMuYmF0Y2hQYXltZW50Lm1vbnRoT2YgPyB0aGlzLmJhdGNoUGF5bWVudC5tb250aE9mOiBuZXcgRGF0ZSgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5zdGFydF9kYXRlICAgICAgICAgICAgID0ga2VuZG8udG9TdHJpbmcobmV3IERhdGUobW9udGhPZiksJ3l5eXktTU0nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0UmVmZXJlbmNlICAgICAgICA9IHRoaXMuYmF0Y2hQYXltZW50LnJlZmVyZW5jZVBheXJvbGwgPyB0aGlzLmJhdGNoUGF5bWVudC5yZWZlcmVuY2VQYXlyb2xsOiAnJwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmFsYW5jZUluQmFuaEppICAgICAgICA9IHRoaXMuYmF0Y2hQYXltZW50LmJhbGFuY2VJbkJhbmhKaQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGF5RGF0ZSAgICAgICAgICAgICAgICA9IHRoaXMuYmF0Y2hQYXltZW50LnBheURhdGUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGUgICAgICAgICAgICAgICAgICAgPSBuZXcgRGF0ZSh0aGlzLmJhdGNoUGF5bWVudC5jcmVhdGVkIHx8IGtlbmRvLnRvU3RyaW5nKG5ldyBEYXRlKCksJ3l5eXktTU0tZGQnKSkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodGhpcy5zZWxlY3RSZWZlcmVuY2UpewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1vbnRoQ2hhbmdlKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5iYW5rQ2hhbmdlKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWZlcmVuY2VDaGFuZ2UoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKCdwYXlEYXRlJyx0aGlzLnBheURhdGUgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZEJhdGNoSXRlbSh0aGlzLmJhdGNoUGF5bWVudCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9LCAzMDApCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBsb2FkQmF0Y2hJdGVtKHJlc3VsdCl7CiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZygyKQogICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJykKICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgIHBheXJvbGxIYW5kbGVyLmdldEJhdGNoSXRlbShyZXN1bHQuaWQpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZyA9IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXNDb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHJlcy5kYXRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBheXJvbGxfbGlzdCA9IHJlc3VsdAogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0sIDMwMCkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHNhdmVTcGV0cygpewogICAgICAgICAgICBpZiAoIXRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmZvcm0udmFsaWRhdGUoKQogICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZyA9IHRydWUKICAgICAgICAgICAgbGV0IGRzID0gdGhpcy4kcmVmcy5kYXRhU291cmNlSW5wdXRQYXltZW50LmtlbmRvV2lkZ2V0KCkKICAgICAgICAgICAgbGV0IGRhdGFTb3VyY2UgPSBkcy5kYXRhKCkKICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZGF0YVNvdXJjZS5tYXAobyA9PiB7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGJhbms6ICAgICAgICAgICAgICAgICAgICAgICBvLmJhbmssCiAgICAgICAgICAgICAgICAgICAgY3VycmVuY3k6ICAgICAgICAgICAgICAgICAgIG8uY3VycmVuY3ksCiAgICAgICAgICAgICAgICAgICAgZGVkdWN0aW9uOiAgICAgICAgICAgICAgICAgIG8uZGVkdWN0aW9uLAogICAgICAgICAgICAgICAgICAgIGVtcGxveWVlSWQ6ICAgICAgICAgICAgICAgICBvLmVtcGxveWVlSWQsCiAgICAgICAgICAgICAgICAgICAgZW1wbG95ZWVOYW1lOiAgICAgICAgICAgICAgIG8uZW1wbG95ZWVOYW1lLAogICAgICAgICAgICAgICAgICAgIGVtcGxveWVlVXVpZDogICAgICAgICAgICAgICBvLmVtcGxveWVlVXVpZCwKICAgICAgICAgICAgICAgICAgICBlbXBsb3llZTogICAgICAgICAgICAgICAgICAgby5lbXBsb3llZSwKICAgICAgICAgICAgICAgICAgICBleGNoYW5nZVJhdGU6ICAgICAgICAgICAgICAgby5leGNoYW5nZVJhdGUsCiAgICAgICAgICAgICAgICAgICAgZ3Jvc3NTYWxhcnk6ICAgICAgICAgICAgICAgIG8uZ3Jvc3NTYWxhcnksCiAgICAgICAgICAgICAgICAgICAgaWQ6ICAgICAgICAgICAgICAgICAgICAgICAgIG8uaWQsCiAgICAgICAgICAgICAgICAgICAgYWJicjogICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJlZml4LmFiYnIsCiAgICAgICAgICAgICAgICAgICAgbGFzdE51bWJlcjogICAgICAgICAgICAgICAgIHRoaXMubGFzdE51bWJlciwKICAgICAgICAgICAgICAgICAgICBudW1iZXI6ICAgICAgICAgICAgICAgICAgICAgdGhpcy5udW1iZXIsCiAgICAgICAgICAgICAgICAgICAgcmVmZXJlbmNlTnVtYmVyOiAgICAgICAgICAgIHRoaXMucmVmZXJlbmNlTnVtYmVyLAogICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiAgICAgICAgICAgICAgICAgICBvLmxvY2F0aW9uLAogICAgICAgICAgICAgICAgICAgIG1vbnRoT2Y6ICAgICAgICAgICAgICAgICAgICBvLm1vbnRoT2YsCiAgICAgICAgICAgICAgICAgICAgbmF0dXJlRW1wbG95ZWU6ICAgICAgICAgICAgIG8ubmF0dXJlRW1wbG95ZWUsCiAgICAgICAgICAgICAgICAgICAgbmV0UGF5OiAgICAgICAgICAgICAgICAgICAgIG8ubmV0UGF5LAogICAgICAgICAgICAgICAgICAgIGFtb3VudFBheTogICAgICAgICAgICAgICAgICBvLmFtb3VudCwKICAgICAgICAgICAgICAgICAgICBuZXRTYWxhcnk6ICAgICAgICAgICAgICAgICAgby5uZXRTYWxhcnksCiAgICAgICAgICAgICAgICAgICAgb3ZlclRpbWVIb2xpZGF5OiAgICAgICAgICAgIG8ub3ZlclRpbWVIb2xpZGF5LAogICAgICAgICAgICAgICAgICAgIG92ZXJUaW1lV2Vla2VuZDogICAgICAgICAgICBvLm92ZXJUaW1lV2Vla2VuZCwKICAgICAgICAgICAgICAgICAgICBwYXltZW50TWV0aG9kOiAgICAgICAgICAgICAgby5wYXltZW50TWV0aG9kLAogICAgICAgICAgICAgICAgICAgIHBheXJvbGxMaWFiaWxpdGllOiAgICAgICAgICBvLnBheXJvbGxMaWFiaWxpdGllLAogICAgICAgICAgICAgICAgICAgIHBheXJvbGxSZWZlcmVuY2VOdW1iZXI6ICAgICBvLnBheXJvbGxSZWZlcmVuY2VOdW1iZXIsCiAgICAgICAgICAgICAgICAgICAgcGF5c2xpcDogICAgICAgICAgICAgICAgICAgIG8ucGF5c2xpcCwKICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogICAgICAgICAgICAgICAgICAgby5wb3NpdGlvbiwKICAgICAgICAgICAgICAgICAgICBzbGlwTnVtYmVyOiAgICAgICAgICAgICAgICAgby5zbGlwTnVtYmVyLAogICAgICAgICAgICAgICAgICAgIHNhbGFyeTogICAgICAgICAgICAgICAgICAgICBvLnNhbGFyeSwKICAgICAgICAgICAgICAgICAgICBzYWxhcnlUeXBlOiAgICAgICAgICAgICAgICAgby5zYWxhcnlUeXBlLAogICAgICAgICAgICAgICAgICAgIHN0YXR1czogICAgICAgICAgICAgICAgICAgICBvLnN0YXR1cywKICAgICAgICAgICAgICAgICAgICB0YXhCZW5lZml0OiAgICAgICAgICAgICAgICAgby50YXhCZW5lZml0LAogICAgICAgICAgICAgICAgICAgIHRheFJhdGU6ICAgICAgICAgICAgICAgICAgICBvLnRheFJhdGUsCiAgICAgICAgICAgICAgICAgICAgdGF4U2FsYXJ5OiAgICAgICAgICAgICAgICAgIG8udGF4U2FsYXJ5LAogICAgICAgICAgICAgICAgICAgIHRheFNhbGFyeVVTOiAgICAgICAgICAgICAgICBvLnRheFNhbGFyeVVTLAogICAgICAgICAgICAgICAgICAgIHRvdGFsQmVuZWZpdDogICAgICAgICAgICAgICBvLnRvdGFsQmVuZWZpdCwKICAgICAgICAgICAgICAgICAgICBzZWdtZW50OiAgICAgICAgICAgICAgICAgICAgby5zZWdtZW50LAogICAgICAgICAgICAgICAgICAgIGFtb3VudDogICAgICAgICAgICAgICAgICAgICBvLmFtb3VudCwKICAgICAgICAgICAgICAgICAgICBleGNoYW5nZUFtb3VudDogICAgICAgICAgICAgby5leGNoYW5nZUFtb3VudCwKICAgICAgICAgICAgICAgICAgICBwYXltZW50Q29kZTogICAgICAgICAgICAgICAgby5wYXltZW50Q29kZSwKICAgICAgICAgICAgICAgICAgICBwYXltZW50Q29kZUlkOiAgICAgICAgICAgICAgby5wYXltZW50Q29kZUlkLAogICAgICAgICAgICAgICAgICAgIHBheXJvbGxJZDogICAgICAgICAgICAgICAgICBvLnBheXJvbGxJZCwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKCdyZXN1bHQnLCByZXN1bHQpCiAgICAgICAgICAgIGlmKHJlc3VsdC5sZW5ndGggPiAwKXsKICAgICAgICAgICAgICAgIGxldCBiYXRjaEFtb3VudCA9IDA7CiAgICAgICAgICAgICAgICBsZXQgdG90YWxCYXRjaCA9IDA7CiAgICAgICAgICAgICAgICBkcy5kYXRhKCkuZm9yRWFjaChlbGVtZW50ID0+IHsKICAgICAgICAgICAgICAgICAgICB0b3RhbEJhdGNoICs9IDEKICAgICAgICAgICAgICAgICAgICBiYXRjaEFtb3VudCArPSBwYXJzZUZsb2F0KGVsZW1lbnQuYW1vdW50KQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB0aGlzLmJhdGNoQW1vdW50ID0gYmF0Y2hBbW91bnQKICAgICAgICAgICAgICAgIHRoaXMudG90YWxCYXRjaCA9IHRvdGFsQmF0Y2gKICAgICAgICAgICAgICAgIGxldCBhbW91bnRJbldvcmQgICA9IHRoaXMuaW5Xb3Jkcyh0aGlzLmJhdGNoQW1vdW50KQogICAgICAgICAgICAgICAgbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgPyB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQgOiAnJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vbnRoT2Y6ICAgICAgICAgICAga2VuZG8udG9TdHJpbmcobmV3IERhdGUodGhpcy5zdGFydF9kYXRlKSwneXl5eS1NTS1kZCcpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRlZDogICAgICAgICAgICBrZW5kby50b1N0cmluZyhuZXcgRGF0ZSh0aGlzLmRhdGUpLCd5eXl5LU1NLWRkJyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYW5rOiAgICAgICAgICAgICAgIHRoaXMuc2VsZWN0QmFuaywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbmtBY2NvdW50OiAgICAgICAgdGhpcy5zZWxlY3RCYW5rQWNjb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhbGFuY2VJbkJhbmhKaTogICAgdGhpcy5iYWxhbmNlSW5CYW5oSmksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXRjaEl0ZW06ICAgICAgICAgIHJlc3VsdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhdGNoQW1vdW50OiAgICAgICAgdGhpcy5iYXRjaEFtb3VudCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsQmF0Y2g6ICAgICAgICAgdGhpcy50b3RhbEJhdGNoLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVmZXJlbmNlUGF5cm9sbDogICB0aGlzLnNlbGVjdFJlZmVyZW5jZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFtb3VudEluV29yZDogICAgICAgYW1vdW50SW5Xb3JkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWJicjogICAgICAgICAgICAgICAnUEJQJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhc3ROdW1iZXI6ICAgICAgICAgcGFyc2VJbnQodGhpcy5sYXN0TnVtYmVyKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bWJlcjogICAgICAgICAgICAgdGhpcy5udW1iZXIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWZlcmVuY2VOdW1iZXI6ICAgIHRoaXMucmVmZXJlbmNlTnVtYmVyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogICAgICAgICAgICAgICAnYmF0aF9wYXltZW50JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0ZXA6ICAgICAgICAgICAgICAgMiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogICAgICAgICAgICAgMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ2dlZFVzZXI6ICAgICAgICAgdGhpcy5sb2dnZWRVc2VyLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGF5RGF0ZTogICAgICAgICAgICB0aGlzLnBheURhdGUKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmNvbnNvbGUubG9nKGRhdGEpCiAgICAgICAgICAgICAgICAgICAgICAgIHBheXJvbGxIYW5kbGVyLmNyZWF0ZUJhdGNoUGF5bWVudChkYXRhKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5zdGF0dXNDb2RlID09PSAyMDEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvYWRTdWNjZXNzKHJlc3BvbnNlLmRhdGEuc3RhdHVzQ29kZSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzbm90aWZ5LnN1Y2Nlc3MoJ1N1Y2Nlc3MnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIH0sIDMwMCk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgICAgdGhpcy4kc25vdGlmeS5lcnJvcignUGxlYXNlIGNoZWNrIGFnYWluISAnKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBpbldvcmRzKHRvdGFsUmVudCl7CiAgICAgICAgLy9jb25zb2xlLmxvZyh0b3RhbFJlbnQpOwogICAgICAgICAgICB2YXIgYSA9IFsnJywnb25lICcsJ3R3byAnLCd0aHJlZSAnLCdmb3VyICcsICdmaXZlICcsJ3NpeCAnLCdzZXZlbiAnLCdlaWdodCAnLCduaW5lICcsJ3RlbiAnLCdlbGV2ZW4gJywndHdlbHZlICcsJ3RoaXJ0ZWVuICcsJ2ZvdXJ0ZWVuICcsJ2ZpZnRlZW4gJywnc2l4dGVlbiAnLCdzZXZlbnRlZW4gJywnZWlnaHRlZW4gJywnbmluZXRlZW4gJ107CiAgICAgICAgICAgIHZhciBiID0gWycnLCAnJywgJ3R3ZW50eScsJ3RoaXJ0eScsJ2ZvcnR5JywnZmlmdHknLCAnc2l4dHknLCdzZXZlbnR5JywnZWlnaHR5JywnbmluZXR5J107CiAgICAgICAgICAgIHZhciBudW1iZXIgPSBwYXJzZUZsb2F0KHRvdGFsUmVudCkudG9GaXhlZCgyKS5zcGxpdCgiLiIpOwogICAgICAgICAgICB2YXIgbnVtID0gcGFyc2VJbnQobnVtYmVyWzBdKTsKICAgICAgICAgICAgdmFyIGRpZ2l0ID0gcGFyc2VJbnQobnVtYmVyWzFdKTsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhudW0pOwogICAgICAgICAgICBpZiAoKG51bS50b1N0cmluZygpKS5sZW5ndGggPiAxMCkgIHJldHVybiAnb3ZlcmZsb3cnOwogICAgICAgICAgICB2YXIgbiA9ICgnMDAwMDAwMDAwJyArIG51bSkuc3Vic3RyKC05KS5tYXRjaCgvXihcZHsyfSkoXGR7Mn0pKFxkezJ9KShcZHsxfSkoXGR7Mn0pJC8pOwogICAgICAgICAgICB2YXIgZCA9ICgnMDAnICsgZGlnaXQpLnN1YnN0cigtMikubWF0Y2goL14oXGR7Mn0pJC8pOwogICAgICAgICAgICBpZiAoIW4pIHJldHVybjsgdmFyIHN0ciA9ICcnOwogICAgICAgICAgICBzdHIgKz0gKG5bM10gIT0gMCkgPyAoYVtOdW1iZXIoblszXSldIHx8IGJbblszXVswXV0gKyAnICcgKyBhW25bM11bMV1dKSArICd0aG91c2FuZCAnIDogJyc7CiAgICAgICAgICAgIHN0ciArPSAobls0XSAhPSAwKSA/IChhW051bWJlcihuWzRdKV0gfHwgYltuWzRdWzBdXSArICcgJyArIGFbbls0XVsxXV0pICsgJ2h1bmRyZWQgJyA6ICcnOwogICAgICAgICAgICBzdHIgKz0gKG5bNV0gIT0gMCkgPyAoYVtOdW1iZXIobls1XSldIHx8IGJbbls1XVswXV0gKyAnICcgKyBhW25bNV1bMV1dKSA6ICcnOwogICAgICAgICAgICBzdHIgKz0gKGRbMV0gIT0gMCkgPyAoKHN0ciAhPSAnJyApID8gImFuZCAiIDogJycpICsgKGFbTnVtYmVyKGRbMV0pXSB8fCBiW2RbMV1bMF1dICsgJyAnICsgYVtkWzFdWzFdXSk6ICdPbmx5ISc7CiAgICAgICAgICAgIHJldHVybiBzdHI7CiAgICAgICAgfSwKICAgICAgICBnb0JhY2soKXsKICAgICAgICAgICAgbGV0IGJhdGNoX2lkID0gdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgICAgICAgIGxldCBwYXltZW50TGlzdCA9IHRoaXMucGF5cm9sbF9saXN0CiAgICAgICAgICAgIGlmKGJhdGNoX2lkICYmIHBheW1lbnRMaXN0Lmxlbmd0aCA9PT0gMCl7CiAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICBwYXlyb2xsSGFuZGxlci5kZWxldGVUcmFuc2FjdGlvbnMoYmF0Y2hfaWQpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgPT09IDIwMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5oaXN0b3J5LmdvKC0yKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIH0sMzAwKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5nbygtMSkKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbG9hZFByZWZpeGVzKCkgewogICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoJ3Jlc29sdmVkJyk7CiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3NIYW5kbGVyLmdldFByZWZpeGVzKCkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzQ29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gcmVzLmRhdGEuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVmaXhMaXN0ID0gcmVzdWx0LmZpbHRlcihwID0+IHAudHlwZSA9PSdwYXlyb2xsX3BheW1lbnQnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wcmVmaXggPSB0aGlzLnByZWZpeExpc3RbMF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGF5TnVtYmVyID0gdGhpcy5wcmVmaXgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhc3ROdW1iZXIgPSB0aGlzLnplcm9QYWQocGFyc2VJbnQoMCksIHRoaXMucHJlZml4LmZvcm1hdCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJlZml4X2Zvcm1hdCA9ICh0aGlzLnByZWZpeC5hYmJyICsgdGhpcy5wcmVmaXgubnVtYmVyU2VwYXJhdG9yICsgdGhpcy5wcmVmaXguc3RydWN0dXJlICsgdGhpcy5wcmVmaXgubnVtYmVyU2VwYXJhdG9yICsgbGFzdE51bWJlciArICdAJyArIHRoaXMucHJlZml4LnNlcXVjZW5jaW5nKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0sIDMwMCkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGdlbmVyYXRlTnVtYmVyKCkgewogICAgICAgICAgICBpZih0aGlzLmJhdGNoUGF5bWVudCAhPT0gJycpewogICAgICAgICAgICAgICAgbGV0IHNlcXVjZW5jaW5nID0gJycKICAgICAgICAgICAgICAgIGlmKHRoaXMucGF5TnVtYmVyLnNlcXVjZW5jaW5nID09IlllYXIiKXsKICAgICAgICAgICAgICAgICAgICBzZXF1Y2VuY2luZyA9IG5ldyBEYXRlKHRoaXMuc3RhcnRfZGF0ZSkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgNCkKICAgICAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMucGF5TnVtYmVyLnNlcXVjZW5jaW5nID09Ik1vbnRoIil7CiAgICAgICAgICAgICAgICAgICAgc2VxdWNlbmNpbmcgPSBuZXcgRGF0ZSh0aGlzLnN0YXJ0X2RhdGUpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDcpCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICBzZXF1Y2VuY2luZyA9ICcnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKTsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYmJyOiAgICAgICAiUEJQIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cnVjdHVyZTogIHRoaXMucGF5TnVtYmVyLnN0cnVjdHVyZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGU6ICAgICAgIG5ldyBEYXRlKHRoaXMuc3RhcnRfZGF0ZSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAgICAgICAnYmF0aF9wYXltZW50JywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBrSWQ6ICAgICAgICdwYnAtJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcXVjZW5jaW5nOiBzZXF1Y2VuY2luZwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIHBheXJvbGxIYW5kbGVyLmdldFByZWZpeE51bWJlcihkYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlcy5kYXRhLnN0YXR1c0NvZGUgPT09IDIwMCl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93TG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlcy5kYXRhLmRhdGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBsYXN0TnVtYmVyID0gdGhpcy56ZXJvUGFkKHBhcnNlSW50KHJlc3VsdC5sYXN0TnVtYmVyKSwgdGhpcy5wYXlOdW1iZXIuZm9ybWF0KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG51bWJlciA9IHJlc3VsdC5zdWZmaXggKyB0aGlzLnBheU51bWJlci5udW1iZXJTZXBhcmF0b3IgKyBsYXN0TnVtYmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sYXN0TnVtYmVyID0gbGFzdE51bWJlcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubnVtYmVyID0gbnVtYmVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWZlcmVuY2VOdW1iZXIgPSB0aGlzLnBheU51bWJlci5hYmJyICsgdGhpcy5wYXlOdW1iZXIubnVtYmVyU2VwYXJhdG9yICsgdGhpcy5udW1iZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB9LCAzMDApOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB0aGlzLmxhc3ROdW1iZXIgPSB0aGlzLmJhdGNoUGF5bWVudC5sYXN0TnVtYmVyCiAgICAgICAgICAgICAgICB0aGlzLm51bWJlciA9IHRoaXMuYmF0Y2hQYXltZW50Lm51bWJlcgogICAgICAgICAgICAgICAgdGhpcy5yZWZlcmVuY2VOdW1iZXIgPSB0aGlzLmJhdGNoUGF5bWVudC5yZWZlcmVuY2VOdW1iZXIKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgemVyb1BhZChudW0sIHBsYWNlcykgewogICAgICAgICAgICByZXR1cm4gU3RyaW5nKG51bSkucGFkU3RhcnQocGxhY2VzLCAnMCcpCiAgICAgICAgfSwKICAgICAgICBzY2hlZHVsZUNoYW5nZSgpewogICAgICAgICAgICBsZXQgcGFyYW1zID0gIHsKICAgICAgICAgICAgICAgIHBheXJvbGxfaWQ6IHRoaXMuc2VsZWN0UmVmZXJlbmNlLAogICAgICAgICAgICAgICAgcGF5RGF0ZTogICAgdGhpcy5wYXlEYXRlCiAgICAgICAgICAgIH0KICAgICAgICAgICAgbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCdyZXNvbHZlZCcpCiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbXBsb3llZSA9IFtdCiAgICAgICAgICAgICAgICAgICAgcGF5cm9sbEhhbmRsZXIuZ2V0VHJhbnNhY3Rpb25MaXN0KHBhcmFtcykudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzQ29kZSA9PT0gMjAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gcmVzLmRhdGEuZGF0YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXlyb2xsX2xpc3QgPSByZXN1bHQKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9LCAzMDApCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoKXsKICAgICAgICBhd2FpdCB0aGlzLmxvYWRQYXlyb2xsQmFuaygpCiAgICAgICAgYXdhaXQgdGhpcy5sb2FkQmF0Y2hTaW5nbGUoKQogICAgICAgIGF3YWl0IHRoaXMubG9hZFByZWZpeGVzKCkKICAgIH0sCiAgICBhY3RpdmFzdGVkKCl7CiAgICAgICAgdGhpcy5sb2FkQmF0Y2hTaW5nbGUoKQogICAgfSwKICAgIHdhdGNoOnsKICAgICAgICAnJHJvdXRlJzogJ2xvYWRCYXRjaFNpbmdsZScKICAgIH0KfSkK"},{"version":3,"sources":["Input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Input.vue","sourceRoot":"src/views/payroll/payment/bank_payment","sourcesContent":["<template>\n    <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-row>\n            <v-col sm=\"3\" class=\"pr-1\">\n                <v-row class=\"my-1 mr-0\">\n                    <p>{{$t('p_select_month')}}</p>\n                </v-row>\n                <v-row class=\"my-1 mr-0\">\n                    <p>{{$t('financial_this_payroll')}}</p>\n                </v-row>\n                <v-row class=\"my-2 mr-0\">\n                    <v-col sm=\"0\" cols=\"0\" class=\"pt-0 pr-0\">\n                        <div style=\"line-height: 20px;\" class=\"code_text text-bold\">PBP\n                        </div>\n                    </v-col>\n                    <v-col sm=\"7\" cols=\"7\" class=\"pt-0 pl-0 pr-1\">\n                        <v-text-field class=\" custom-border \"\n                            v-model=\"number\"\n                            outlined\n                            :rules=\"[v => !!v || 'Number is required']\"\n                            required\n                            readonly/>\n                    </v-col>\n                    <v-col sm=\"2\" cols=\"2\" class=\"pt-0 px-0\">\n                        <v-icon color=\"black\" size=\"30\" class=\"border_qrcode\"\n                                @click=\"generateNumber\">mdi-qrcode\n                        </v-icon>\n                    </v-col>\n                </v-row>\n            </v-col>\n            <v-col sm=\"3\" class=\"px-1\">\n                <month-picker :initialMonth=\"start_date\"  @emitMonth=\"start_date = $event\" @onChanged=\"monthChange\" :rules=\"[v => !!v || $t('field_is_required')]\"/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"payrollBank\"\n                    item-text=\"bankName\"\n                    item-value=\"bankUuid\"\n                    v-model=\"selectBank\"\n                    :rules=\"[v => !!v || $t('bank_name_require')]\"\n                    @change=\"bankChange\"\n                    outlined\n                    return-object/>\n                <date-picker :initialDate=\"date\" :rules=\"[v => !!v || $t('field_is_required')]\" @emitDate=\"date = $event\"/>\n            </v-col>\n            <v-col sm=\"1\" class=\"\"></v-col>\n            <v-col sm=\"1\" class=\"pr-0 pt-4\">\n                <p>{{$t('payroll_batch_no')}}</p>\n                <p>{{$t('pay_date')}}</p>\n                <p>{{$t('bank_account')}}</p>\n                <p>{{$t('balance_in_banhji')}}</p>\n            </v-col>\n            <v-col sm=\"4\" class=\"pt-4\">\n                <v-select id=\"acc_type_selector\"\n                    :items=\"payrolls\"\n                    item-text=\"referenceNumber\"\n                    item-value=\"id\"\n                    v-model=\"selectReference\"\n                    :rules=\"[v => !!v || $t('field_is_required')]\"\n                    outlined\n                    @change=\"referenceChange\"/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"paymentSchedules\"\n                    :rules=\"[v => !!v || $t('require')]\"\n                    item-text=\"payDate\"\n                    item-value=\"payDate\"\n                    v-model=\"payDate\"\n                    @change=\"scheduleChange\"\n                    outlined/>\n                <v-select class=\"mt-1\"\n                    id=\"acc_type_selector\"\n                    :items=\"bankAccount\"\n                    :rules=\"[v => !!v || $t('bank_name_require')]\"\n                    item-text=\"account.account\"\n                    item-value=\"account.id\"\n                    v-model=\"selectBankAccount\"\n                    outlined\n                    return-object/>\n                <v-text-field outlined v-model=\"balanceInBanhJi\"/>\n            </v-col>\n            <v-col sm=\"12\">\n                <kendo-datasource ref=\"dataSourceInputPayment\"\n                    :data=\"payroll_list\"\n                    :page-size='100'\n                    :sort=\"sort\"/>\n                    <kendo-grid id=\"gridInputPayment\" class=\"grid-function\"\n                        :data-source-ref=\"'dataSourceInputPayment'\"\n                        :editable=\"false\"\n                        :pageable=\"true\"\n                        :pageable-refresh=\"true\"\n                        :column-menu=\"true\">\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'monthOf'\"\n                            :title=\"$t('month_of')\"\n                            :template=\"'<span>#= monthOf#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'slipNumber'\"\n                            :title=\"$t('pay_slip')\"\n                            :template=\"'<span>#= slipNumber#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                         <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'paymentCode'\"\n                            :title=\"$t('payment_code')\"\n                            :template=\"'<span>#= paymentCode#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'employeeId'\"\n                            :title=\"$t('employee_id')\"\n                            :template=\"'<span>#= employeeId#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"250\"\n                            :field=\"'employeeName'\"\n                            :title=\"$t('employee_name')\"\n                            :template=\"'<span>#= employeeName#</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"250\"\n                            :field=\"'bank'\"\n                            :title=\"$t('bank')\"\n                            :template=\"'<span>#= bank.bankName #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"200\"\n                            :field=\"'bank'\"\n                            :title=\"$t('bank_account')\"\n                            :template=\"'<span>#= bank.bankAccount #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :width=\"150\"\n                            :field=\"'amounts'\"\n                            :title=\"$t('amount')\"\n                            :template=\"'<span>#= kendo.toString(amount, `n2`) #</span>'\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"\n                            :attributes=\"{style: 'text-align: right;'}\"/>\n                    </kendo-grid>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        type=\"loading\"\n                        :myLoading=\"true\"\n                    />\n            </v-col>\n        </v-row>\n    </v-form>\n</template>\n<script>\nimport LoadingMe from '@/components/Loading'\nimport kendo from \"@progress/kendo-ui\"\nconst payrollHandler    = require(\"@/scripts/payrollHandler\")\nconst settingsHandler   = require(\"@/scripts/settingsHandler\")\nconst cookieJS = require(\"@/cookie.js\");\nconst cookie = cookieJS.getCookie();\nexport default({\n    props:['propInput'],\n    data() {\n        return {\n            valid: true,\n            date: '',\n            showLoading: false,\n            start_date: '',\n            selectBank: '',\n            payrollBank:   [],\n            selectBankAccount: '',\n            bankAccount: [],\n            search:{\n                start_date: '',\n                end_date: ''\n            },\n            payrolls: [],\n            payroll_list: [],\n            selectReference: '',\n            sort:[\n                { field: 'referenceNumber', dir: 'asc' }\n            ],\n            num: 0,\n            batchPayment: {},\n            balanceInBanhJi: 0,\n            prefix: '',\n            number:  '',\n            lastNumber: 0,\n            referenceNumber: '',\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            paymentSchedules: [],\n            payDate: '',\n            prefix_format: ''\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        'month-picker' : ()=> import('@/components/custom_templates/MonthPicker'),\n        'date-picker' : ()=> import('@/components/custom_templates/DatePickerComponent')\n    },\n    computed:{\n        loadBatch(){\n            if(this.batch !== undefined){\n                return this.batch\n            }else{\n                return []\n            }\n        }\n    },\n    methods:{\n        returnData(data){\n            this.$emit('returnData', data)\n        },\n        loadSuccess(data){\n            this.$emit('headline',data)\n        },\n        async loadPayrollBank(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    payrollHandler.getBank().then(res => {\n                        this.payrollBank = res.data.data\n                        window.console.log(this.payrollBank,'payrollBank')\n                        this.bankChange()\n                    })\n                }, 300);\n            })\n        },\n        bankChange(){\n            this.bankAccount =  this.payrollBank.filter(item => item.bankUuid ===  this.selectBank.bankUuid)\n        },\n        monthChange(){\n            window.console.log('batchPayment', this.batchPayment)\n            let month_of = kendo.toString(new Date(this.start_date),'yyyy-MM-dd')\n            this.loadPayroll(month_of)\n\n            if(this.batchPayment.number !== ''){\n                this.number = this.batchPayment.number\n                window.console.log(this.number)\n            }else{\n                this.generateNumber()\n            }\n        },\n        loadPayroll(monthOf){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    this.showLoading = true\n                    payrollHandler.getPayrollByMonth(monthOf).then(res => {\n                        this.showLoading = true\n                        if (res.data.statusCode === 200) {\n                            this.showLoading = false\n                            this.payrolls = res.data.data\n                        }\n                    })\n                }, 300)\n            })\n        },\n        referenceChange(){\n            if(this.selectReference){\n                this.paymentSchedules = this.payrolls.filter(i =>i.id === this.selectReference).map(index=>{\n                    return index.paymentSchedule\n                })[0]\n            }\n        },\n        loadBatchSingle(){\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchSingle(this.$route.params.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            this.showLoading = false\n                            let result = res.data\n                            if(result.length > 0){\n                                this.batchPayment           = result[0]\n                                this.selectBank             = this.batchPayment.bank\n                                this.selectBankAccount      = this.batchPayment.bankAccount\n                                // let monthOf                 = this.batchPayment.monthOf ? this.batchPayment.monthOf: new Date()\n                                // this.start_date             = kendo.toString(new Date(monthOf),'yyyy-MM')\n                                this.selectReference        = this.batchPayment.referencePayroll ? this.batchPayment.referencePayroll: ''\n                                this.balanceInBanhJi        = this.batchPayment.balanceInBanhJi\n                                this.payDate                = this.batchPayment.payDate\n                                this.date                   = new Date(this.batchPayment.created || kendo.toString(new Date(),'yyyy-MM-dd')).toISOString().substr(0, 10)\n                                if(this.selectReference){\n                                    this.monthChange()\n                                    this.bankChange()\n                                    this.referenceChange()\n                                    \n                                }\n                                window.console.log('payDate',this.payDate )\n                                this.loadBatchItem(this.batchPayment)\n                            }\n                        }\n                    })\n                }, 300)\n            })\n        },\n        loadBatchItem(result){\n            window.console.log(2)\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.showLoading = true\n                    payrollHandler.getBatchItem(result.id).then(res => {\n                        this.showLoading = true\n                        if (res.statusCode === 200) {\n                            this.showLoading = false\n                            let result = res.data\n                            this.payroll_list = result\n                        }\n                    })\n                }, 300)\n            })\n        },\n        saveSpets(){\n            if (!this.$refs.form.validate()) {\n                this.$refs.form.validate()\n                return\n            }\n            this.showLoading = true\n            let ds = this.$refs.dataSourceInputPayment.kendoWidget()\n            let dataSource = ds.data()\n            const result = dataSource.map(o => {\n                return {\n                    bank:                       o.bank,\n                    currency:                   o.currency,\n                    deduction:                  o.deduction,\n                    employeeId:                 o.employeeId,\n                    employeeName:               o.employeeName,\n                    employeeUuid:               o.employeeUuid,\n                    employee:                   o.employee,\n                    exchangeRate:               o.exchangeRate,\n                    grossSalary:                o.grossSalary,\n                    id:                         o.id,\n                    abbr:                       this.prefix.abbr,\n                    lastNumber:                 this.lastNumber,\n                    number:                     this.number,\n                    referenceNumber:            this.referenceNumber,\n                    location:                   o.location,\n                    monthOf:                    o.monthOf,\n                    natureEmployee:             o.natureEmployee,\n                    netPay:                     o.netPay,\n                    amountPay:                  o.amount,\n                    netSalary:                  o.netSalary,\n                    overTimeHoliday:            o.overTimeHoliday,\n                    overTimeWeekend:            o.overTimeWeekend,\n                    paymentMethod:              o.paymentMethod,\n                    payrollLiabilitie:          o.payrollLiabilitie,\n                    payrollReferenceNumber:     o.payrollReferenceNumber,\n                    payslip:                    o.payslip,\n                    position:                   o.position,\n                    slipNumber:                 o.slipNumber,\n                    salary:                     o.salary,\n                    salaryType:                 o.salaryType,\n                    status:                     o.status,\n                    taxBenefit:                 o.taxBenefit,\n                    taxRate:                    o.taxRate,\n                    taxSalary:                  o.taxSalary,\n                    taxSalaryUS:                o.taxSalaryUS,\n                    totalBenefit:               o.totalBenefit,\n                    segment:                    o.segment,\n                    amount:                     o.amount,\n                    exchangeAmount:             o.exchangeAmount,\n                    paymentCode:                o.paymentCode,\n                    paymentCodeId:              o.paymentCodeId,\n                    payrollId:                  o.payrollId,\n                }\n            })\n            window.console.log('result', result)\n            if(result.length > 0){\n                let batchAmount = 0;\n                let totalBatch = 0;\n                ds.data().forEach(element => {\n                    totalBatch += 1\n                    batchAmount += parseFloat(element.amount)\n                });\n                this.batchAmount = batchAmount\n                this.totalBatch = totalBatch\n                let amountInWord   = this.inWords(this.batchAmount)\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        this.showLoading = true\n                        resolve('resolved');\n                        let data = {\n                            id:                 this.$route.params.id ? this.$route.params.id : '',\n                            monthOf:            kendo.toString(new Date(this.start_date),'yyyy-MM-dd'),\n                            created:            kendo.toString(new Date(this.date),'yyyy-MM-dd'),\n                            bank:               this.selectBank,\n                            bankAccount:        this.selectBankAccount,\n                            balanceInBanhJi:    this.balanceInBanhJi,\n                            batchItem:          result,\n                            batchAmount:        this.batchAmount,\n                            totalBatch:         this.totalBatch,\n                            referencePayroll:   this.selectReference,\n                            amountInWord:       amountInWord,\n                            abbr:               'PBP',\n                            lastNumber:         parseInt(this.lastNumber),\n                            number:             this.number,\n                            referenceNumber:    this.referenceNumber,\n                            type:               'bath_payment',\n                            step:               2,\n                            status:             0,\n                            loggedUser:         this.loggedUser,\n                            payDate:            this.payDate\n                        };\n                        window.console.log(data)\n                        payrollHandler.createBatchPayment(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.loadSuccess(response.data.statusCode)\n                                this.showLoading = false\n                                this.$snotify.success('Success')\n                            }\n                        })\n                    }, 300);\n                })\n            }else{\n                this.showLoading = false\n                this.$snotify.error('Please check again! ')\n            }\n        },\n        inWords(totalRent){\n        //console.log(totalRent);\n            var a = ['','one ','two ','three ','four ', 'five ','six ','seven ','eight ','nine ','ten ','eleven ','twelve ','thirteen ','fourteen ','fifteen ','sixteen ','seventeen ','eighteen ','nineteen '];\n            var b = ['', '', 'twenty','thirty','forty','fifty', 'sixty','seventy','eighty','ninety'];\n            var number = parseFloat(totalRent).toFixed(2).split(\".\");\n            var num = parseInt(number[0]);\n            var digit = parseInt(number[1]);\n            //console.log(num);\n            if ((num.toString()).length > 10)  return 'overflow';\n            var n = ('000000000' + num).substr(-9).match(/^(\\d{2})(\\d{2})(\\d{2})(\\d{1})(\\d{2})$/);\n            var d = ('00' + digit).substr(-2).match(/^(\\d{2})$/);\n            if (!n) return; var str = '';\n            str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';\n            str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';\n            str += (n[5] != 0) ? (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) : '';\n            str += (d[1] != 0) ? ((str != '' ) ? \"and \" : '') + (a[Number(d[1])] || b[d[1][0]] + ' ' + a[d[1][1]]): 'Only!';\n            return str;\n        },\n        goBack(){\n            let batch_id = this.$route.params.id\n            let paymentList = this.payroll_list\n            if(batch_id && paymentList.length === 0){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.showLoading = true\n                        payrollHandler.deleteTransactions(batch_id).then(response => {\n                            if (response.statusCode === 200) {\n                                this.showLoading = false\n                                window.history.go(-2)\n                            }\n                        })\n                    },300)\n                })\n            }else{\n                window.history.go(-1)\n            }\n        },\n        loadPrefixes() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    settingsHandler.getPrefixes().then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.prefixList = result.filter(p => p.type =='payroll_payment')\n                            this.prefix = this.prefixList[0]\n                            this.payNumber = this.prefix\n                            const lastNumber = this.zeroPad(parseInt(0), this.prefix.format)\n                            this.prefix_format = (this.prefix.abbr + this.prefix.numberSeparator + this.prefix.structure + this.prefix.numberSeparator + lastNumber + '@' + this.prefix.sequcencing)\n                        }\n                    })\n                }, 300)\n            })\n        },\n        generateNumber() {\n            if(this.batchPayment !== ''){\n                let sequcencing = ''\n                if(this.payNumber.sequcencing ==\"Year\"){\n                    sequcencing = new Date(this.start_date).toISOString().substr(0, 4)\n                }else if(this.payNumber.sequcencing ==\"Month\"){\n                    sequcencing = new Date(this.start_date).toISOString().substr(0, 7)\n                }else{\n                    sequcencing = ''\n                }\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        let data = {\n                            abbr:       \"PBP\",\n                            structure:  this.payNumber.structure,\n                            date:       new Date(this.start_date),\n                            type:       'bath_payment',\n                            pkId:       'pbp-',\n                            sequcencing: sequcencing\n                        }\n                        payrollHandler.getPrefixNumber(data).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                this.showLoading = false;\n                                const result = res.data.data\n                                const lastNumber = this.zeroPad(parseInt(result.lastNumber), this.payNumber.format)\n                                const number = result.suffix + this.payNumber.numberSeparator + lastNumber\n                                this.lastNumber = lastNumber\n                                this.number = number\n                                this.referenceNumber = this.payNumber.abbr + this.payNumber.numberSeparator + this.number\n                            }\n                        })\n                    }, 300);\n                })\n            }else{\n                this.lastNumber = this.batchPayment.lastNumber\n                this.number = this.batchPayment.number\n                this.referenceNumber = this.batchPayment.referenceNumber\n            }\n        },\n        zeroPad(num, places) {\n            return String(num).padStart(places, '0')\n        },\n        scheduleChange(){\n            let params =  {\n                payroll_id: this.selectReference,\n                payDate:    this.payDate\n            }\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved')\n                    this.employee = []\n                    payrollHandler.getTransactionList(params).then(res => {\n                        if (res.data.statusCode === 200) {\n                            let result = res.data.data\n                            this.payroll_list = result\n                        }\n                    })\n                }, 300)\n            })\n        }\n    },\n    async mounted(){\n        await this.loadPayrollBank()\n        await this.loadBatchSingle()\n        await this.loadPrefixes()\n    },\n    activasted(){\n        this.loadBatchSingle()\n    },\n    watch:{\n        '$route': 'loadBatchSingle'\n    }\n})\n</script>\n<style scoped>\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: #f44336 !important;\n    }\n\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n        border-top: thin solid #ddd;\n        border-bottom: thin solid #ddd;\n        border-radius: 0 !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n        border-bottom: thin solid #ddd;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n</style>\n"]}]}