{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Finalize.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/payroll/payroll_run/Finalize.vue","mtime":1641438291873},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Finalize.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Finalize.vue","sourceRoot":"src/views/payroll/payroll_run","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row>\n                <v-col sm=\"8\" cols=\"12\" class=\"pb-0\">\n                    <h3 class=\"text-uppercase\">{{$t('finalize')}}</h3>\n                    <p>{{$t('finalize_payroll_desc')}}</p>\n                </v-col>\n                <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                \n                    <kendo-datasource ref=\"dataSourcePayDay\"\n                        :data=\"payDates\"/>\n                    <kendo-grid id=\"gridPayDay\" class=\"grid-function\"\n                        :data-source-ref=\"'dataSourcePayDay'\"\n                        :editable=\"true\"\n                        :scrollable-virtual=\"true\">\n                        <kendo-grid-column\n                            :title=\"$t('No.')\"\n                            :width=\"70\"\n                            readonly\n                            :template=\"rowNumberTmpl\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                        <kendo-grid-column\n                            :field=\"'payDate'\"\n                            :title=\"$t('pay_date')\"\n                            :width=\"120\"\n                            :template=\"'<span>#= kendo.toString(new Date(payDate), `dd-MM-yyyy`)#</span>'\"\n                            :editor=\"ServiceDateEditor\"\n                            :headerAttributes=\"{style: 'background-color: #EDF1F5'}\"/>\n                         <kendo-grid-column\n                            :width=\"100\"\n                            :command=\"{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus' }\"\n                            :title=\"$t('action')\"\n                            :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"\n                            :attributes=\"{style: 'text-align: center'}\"/>\n                    </kendo-grid>\n                    <v-row>\n                        <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                            <v-btn\n                                color=\"primary\"\n                                class=\"float-left btn_plus mr-2\"\n                                @click=\"addRow\">\n                                <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\" class=\"mt-1\">\n            <v-simple-table class=\"attachment_table\">\n                <template v-slot:default>\n                    <thead>\n                        <tr>\n                            <th>{{$t('sl_no')}} </th>\n                            <th>{{$t('current_month')}} </th>\n                            <th>{{$t('previous_month')}} </th>\n                            <th>{{$t('variance')}} </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Month</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.monthOf }}</td>\n                            <td style=\"text-align: right;\">{{ payrollPrevious.monthOf}}</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>Number of Employee</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.totalEmployee }}</td>\n                            <td style=\"text-align: right;\">{{ payrollPrevious.totalEmployee }}</td>\n                            <td style=\"text-align: right;\">{{ payrollFinal.totalEmployee - payrollPrevious.totalEmployee }}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Gross Salary</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalGross)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalGross)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalGross - payrollPrevious.totalGross)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Deduction</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalDeduction)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalDeduction)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalDeduction - payrollPrevious.totalDeduction)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Benefits</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalBenefits) }}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollPrevious.totalBenefits) }}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalBenefits - payrollPrevious.totalBenefits) }}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Tax Payment</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxPaymentUS)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalTaxPaymentUS)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxPaymentUS - payrollPrevious.totalTaxPaymentUS)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Tax Benefit</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxBenefit)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalTaxBenefit)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalTaxBenefit - payrollPrevious.totalTaxBenefit)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Net Salary</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalNetSalary)}}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollPrevious.totalNetSalary)}}</td>\n                            <td style=\"text-align: right;\">{{ numberFormat(payrollFinal.totalNetSalary - payrollPrevious.totalNetSalary)}}</td>\n                        </tr>\n                        <tr>\n                            <td>Total Net Pay</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalNetPay)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollPrevious.totalNetPay)}}</td>\n                            <td style=\"text-align: right;\">{{numberFormat(payrollFinal.totalNetPay - payrollPrevious.totalNetPay)}}</td>\n                        </tr>\n                        <!-- <tr>\n                            <td></td>\n                            <td>Download Salary Register</td>\n                            <td>Download Salary Register</td>\n                            <td>\n                                <v-btn width=\"160\" color=\"primary\" @click=\"downloadPayslip\"\n                                    class=\" white--text float-right text-capitalize ml-5\">\n                                    {{ $t('download_payslip') }}\n                                </v-btn>\n                            </td>\n                        </tr> -->\n                    </tbody>\n                </template>\n            </v-simple-table>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\" type=\"loading\"/>\n    </v-row>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    import Helper from \"@/helper.js\";\n    import {JournalModel,\n    JournalEntryModel,\n    AccountModel,\n\tCurrencyModel,} from \"@/scripts/model/AppModels\";\n    import  jsPDF  from \"jspdf\";\n    const $ = require(\"jquery\")\n    const { EntityType, } = require(\"@/scripts/default_setup/Collections\");\n    const settingsHandler = require(\"@/scripts/settingsHandler\")\n    const payrollHandler = require(\"@/scripts/payrollHandler\")\n    const accountHandler = require(\"@/scripts/handler/accounting/account\");\n    const cookieJS = require(\"@/cookie.js\");\n    const cookie = cookieJS.getCookie();\n    export default {\n        props:['propFinalize'],\n        data: () =>({\n            journal: new JournalModel(),\n            journal_date: \"\",\n            dialogm: false,\n            showLoading: true,\n            payrollFinal: {\n                monthOf: '',\n                totalEmployee: 0,\n                totalGross: 0,\n                totalDeduction: 0,\n                totalBenefits: 0,\n                totalTaxPaymentUS: 0,\n                totalTaxBenefit: 0,\n                totalNetSalary: 0,\n                totalNetPay: 0,\n                taxBenefit: 0,\n            },\n            payrollPrevious: {\n                monthOf: '',\n                totalEmployee: 0,\n                totalGross: 0,\n                totalDeduction: 0,\n                totalBenefits: 0,\n                totalTaxBenefit: 0,\n                totalTaxPaymentUS: 0,\n                totalNetSalary: 0,\n                totalNetPay: 0,\n                taxBenefit: 0,\n            },\n            account: {},\n            journal_data: [],\n            payroll_data: {},\n            journalLine: [],\n            taxPayble: {},\n            accountBenefit: {},\n            accBenefit: {},\n            resultJournals: {},\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            payDates: [],\n            suffix: {},\n            prefix_format: ''\n        }),\n        components: {\n            LoadingMe: () => import(`@/components/Loading`)\n        },\n        methods:{\n            numberFormat(value){\n                return kendo.toString( kendo.parseFloat(value),\"n2\")\n            },\n            loadPayrollList(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true;\n                        payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                this.showLoading = true\n                                const resultPay = res.data.data[0]\n                                const prefix = resultPay.payNumber\n                                // window.console.log('resultPay', resultPay)\n                                const lastNumber = this.zeroPad(parseInt(0), prefix.format)\n                                this.prefix_format = (prefix.abbr + prefix.numberSeparator + prefix.structure + prefix.numberSeparator + lastNumber + '@' + prefix.sequcencing)\n                                let monthOF =  kendo.toString(new Date(new Date(resultPay.monthOf).setMonth(new Date(resultPay.monthOf).getMonth() - 1)),'yyyy-MM-dd')\n                                this.loadPayrollPrevious(monthOF)\n                                this.loadPayrollItem(resultPay)\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            loadPayrollItem(result){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        payrollHandler.getPayrollItem(result.id).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let resutl_item = res.data.data\n                                this.payrollFinal = result\n                                this.payrolls = resutl_item\n                                this.loadSuccess(res.data.statusCode)\n                                this.loadAccount()\n                                this.showLoading = false\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            loadPayrollPrevious(monthOF){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        payrollHandler.getPayrollPrevious(monthOF).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.payrollPrevious = result[0]\n                                }\n                                this.changMonthOf = false\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            loadPrefixes() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        settingsHandler.getPrefixes().then(res => {\n                            if (res.data.statusCode === 200) {\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.prefixList = result.filter(p => p.type =='pay_slip')\n                                    this.prefix = this.prefixList[0]\n                                    this.payNumber = this.prefix\n                                }\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            zeroPad(num, places) {\n                return String(num).padStart(places, '0')\n            },\n            result(){\n                let dataResult =    this.payrolls;\n                let currency   =    this.payrollFinal.currency;\n                let monthOf    =    this.payrollFinal.monthOf;\n                let month_of   =    kendo.toString(new Date(monthOf), \"y\")\n                let segmentAR = []\n                dataResult.forEach(o=>{\n                    const segment           = o.segment\n                    segment.forEach(n=> {\n                        n['currency']               = currency,\n                        n['netPay']                 = (o.netPay * n.percentage)/100,\n                        n['taxBenefit']             = (o.taxBenefit * n.percentage)/100,\n                        n['taxSalaryUS']            = (o.taxSalaryUS * n.percentage)/100,\n                        n['totalBenefit']           = (o.totalBenefit * n.percentage)/100,\n                        n['payrollLiabilitie']      = o.payrollLiabilitie,\n                        n['taxBenefitExchange']     = (o.taxBenefitExchange * n.percentage)/100,\n                        n['salaryExchange']         = (o.salaryExchange * n.percentage)/100,\n                        n['taxSalary']              = (o.taxSalary * n.percentage)/100,\n                        n['benefitExchange']        = (o.benefitExchange * n.percentage)/100,\n                        segmentAR.push(n)\n                    })\n                })\n                let calculateSalary     = segmentAR.map(i=>{\n                    return {\n                        salary:             i.Salary,\n                        percentage:         i.percentage,\n                        netPay :            i.netPay,\n                        taxBenefit:         i.taxBenefit,\n                        taxSalary:          i.taxSalaryUS,\n                        totalBenefit:       i.totalBenefit,\n                        taxBenefitExchange: i.taxBenefitExchange,\n                        salaryExchange:     i.salaryExchange,\n                        benefitExchange:    i.taxBenefitExchange,\n                        component:          i.component,\n                        salaryAccount:      i.salaryAccount,\n                        currency:           i.currency,\n                        payrollLiabilitie:  i.payrollLiabilitie,\n                    }\n                })\n                let helper = {}\n                let resultSegment   = calculateSalary.reduce(function(r, o){\n                    let key = o.component.id + '-' + o.component.name;\n                    if(!helper[key]) {\n                        helper[key] = Object.assign({}, o); // create a copy of o\n                        r.push(helper[key]);\n                    } else {\n                        helper[key].percentage          += parseFloat(o.percentage);\n                        helper[key].salary              += parseFloat(o.salary);\n                        helper[key].netPay              += parseFloat(o.netPay);\n                        helper[key].taxBenefit          += parseFloat(o.taxBenefit);\n                        helper[key].taxSalary           += parseFloat(o.taxSalary);\n                        helper[key].totalBenefit        += parseFloat(o.totalBenefit);\n                        helper[key].taxBenefitExchange  += parseFloat(o.taxBenefitExchange),\n                        helper[key].salaryExchange      += parseFloat(o.salaryExchange),\n                        helper[key].benefitExchange     += parseFloat(o.benefitExchange)\n                    }\n                    return r;\n                },[]);\n                let journals        =[];\n                let taxPayble       = this.taxPayble\n                let accountBenefit  = this.accountBenefit\n                let accBenefit      = this.accBenefit\n                resultSegment.forEach(function(p){\n                    journals.push(\n                        new JournalEntryModel({\n                            description:          p.salaryAccount.name + ' for '+ month_of,\n                            account:              new AccountModel(p.salaryAccount),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.salary, // dr\n                            class_1_uuid:         p.component.id          \n                        }),\n                        new JournalEntryModel({\n                            description:          p.payrollLiabilitie.name + ' for '+ month_of,\n                            account:              new AccountModel(p.payrollLiabilitie),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.netPay * -1, // cr\n                            class_1_uuid:         p.component.id\n                        }),\n                        new JournalEntryModel({\n                            description:          taxPayble.name + ' for '+ month_of,\n                            account:              new AccountModel(taxPayble),\n                            exchange_rate:        1,\n                            currency:             new CurrencyModel(p.currency),\n                            amount:               p.taxSalary * -1, // cr,\n                            class_1_uuid:         p.component.id\n                        }),\n                    )\n                    if(p.taxBenefit > 0 && p.totalBenefit > 0){\n                        journals.push(\n                            new JournalEntryModel({\n                                description:          accountBenefit.name + ' for '+ month_of,\n                                account:              new AccountModel(accountBenefit),\n                                currency:             new CurrencyModel(p.currency),\n                                exchange_rate:        1,\n                                amount:               p.totalBenefit, // dr,\n                                class_1_uuid:         p.component.id\n                            }),\n                            new JournalEntryModel({\n                                description:          accBenefit.name + ' for '+ month_of,\n                                account:              new AccountModel(accBenefit),\n                                exchange_rate:        1,\n                                currency:             new CurrencyModel(p.currency),\n                                amount:               p.taxBenefit * -1, // cr,\n                                class_1_uuid:         p.component.id\n                            }),\n                        )\n                    }\n                })\n                this.payrollAccount = resultSegment\n                this.journalLine = journals\n                if(this.payrollAccount && this.journalLine){\n                    this.calculateJournal()\n                }\n            },\n            saveFinalize(){\n                let ds = this.$refs.dataSourcePayDay.kendoWidget();\n                let dataSource = ds.data().map(index=>{\n                    return {\n                        payDate:           kendo.toString(new Date(index.payDate),\"yyyy-MM-dd\")\n                    }\n                })\n                if(this.journal_data.length > 0){\n                    new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve('resolved');\n                            let data ={\n                                id:                       this.$route.params.id,\n                                status:                   1, \n                                final:                    'done',\n                                monthOf:                  this.payrollFinal.monthOf,\n                                year:                     kendo.toString(new Date(this.payrollFinal.monthOf),'yyyy'),\n                                created:                  this.payrollFinal.created,\n                                date:                     this.payrollFinal.date,\n                                type:                     this.payrollFinal.type,\n                                currency:                 this.payrollFinal.currency,\n                                exchangeRate:             this.payrollFinal.exchangeRate,\n                                payrollReferenceNumber:   this.payrollFinal.referenceNumber,\n                                payrollList:              this.payrolls,\n                                lastNumber:               this.lastNumber,\n                                payslip:                  {\n                                    abbr:                 this.prefix.abbr,\n                                    structure:            this.prefix.structure,\n                                    date:                 this.payrollFinal.monthOf,\n                                    type:                 this.prefix.type,\n                                    format:               this.prefix.format,\n                                    numberSeparator:      this.prefix.numberSeparator,\n                                    pkId:                 \"par-\",\n                                    suffix:               this.prefix.suffix\n                                },\n                                paymentSchedule:          dataSource,\n                                loggedUser:               this.loggedUser,\n                                raw_journal:              this.journal_data\n                            }\n                            this.showLoading = true;\n                            // window.console.log(111,data)\n                            payrollHandler.createPayroll(data).then(response => {\n                                this.showLoading = true\n                                if (response.data.statusCode === 201) {\n                                    this.$snotify.success('Success')\n                                    this.loadSuccess(response.data.statusCode)\n                                    window.history.go(-1)\n                                }\n                            }).catch(e => {\n                                this.$snotify.error('Something went wrong')\n                                this.errors.push(e)\n                            })\n                        }, 300);\n                    })   \n                }else{\n                    this.$snotify.error('Something went wrong')\n                }\n            },\n            loadSuccess(data){\n                this.$emit('headline',data)\n            },\n            downloadPayslip(){\n                var doc = new jsPDF();\n                var specialElementHandlers = {\n                    '#pdfPay': function(){\n                    return true;\n                    },\n                    '.controls': function(){\n                    return true;\n                    }\n                };\n                doc.fromHTML($('.pdfPay').get(0), 15, 15, {\n                    'width': 170, \n                    'elementHandlers': specialElementHandlers\n                });\n\n                doc.save('Generated.pdf');\n            },\n            calculateJournal(){\n                let payrollAcc      =  this.payrollAccount\n                let journals        = this.journalLine\n                let payrollFinal    = this.payrollFinal\n                let prefix_format   = this.prefix_format\n                let journal_        = []\n                let journalRe       = []\n                payrollAcc.forEach(function(pa){\n                    let line = journals.filter(r => r.class_1_uuid === pa.component.id ) \n                    journal_.push(new JournalModel({\n                        description:                  pa.payrollLiabilitie.name ? pa.payrollLiabilitie.name: 'Payroll & Employee Benefit Liabilities',\n                        number:                       payrollFinal.referenceNumber,\n                        journal_date:                 Helper.toISODate(new Date()),\n                        month_of:                     Helper.toISODate(new Date(payrollFinal.monthOf).toISOString().substr(0, 7)),//'2021-02-01',   \n                        journal_type:                 EntityType.AUTO_JOURNAL,\n                        base_currency:                payrollFinal.currency,\n                        transaction_type:             'Payroll',\n                        referral_transaction_uuid:    payrollFinal.id,\n                        journal_entries:              line,\n                        segment_uuid:                 pa.component.id ? pa.component.id: '',\n                        location_uuid:                payrollFinal.location.id ? payrollFinal.location.id: '',\n                        prefix_format:                prefix_format //\"PA-2111-00000@Year\"\n                    }))\n                })\n                let journalUuid     = ''\n                let created_date    = ''\n                let oldJournal      = []\n                journal_.forEach(index =>{\n                    if(this.resultJournals.length > 0){\n                        let resultJournals = this.resultJournals\n                        oldJournal = resultJournals.filter(i => i.segment_uuid === index.segment_uuid)\n                        if(oldJournal.length > 0){\n                            journalUuid     = oldJournal[0].uuid\n                            created_date    = oldJournal[0].created_date\n                        }\n                    }\n                    journalRe.push(new JournalModel({\n                        description:                index.description,                 \n                        number:                     index.number,     \n                        journal_date:               index.journal_date,        \n                        month_of:                   index.month_of,                    \n                        journal_type:               index.journal_type,               \n                        transaction_type:           index.transaction_type,            \n                        referral_transaction_uuid:  index.referral_transaction_uuid,  \n                        journal_entries:            index.journal_entries,     \n                        segment_uuid:               index.segment_uuid,  \n                        location_uuid:              index.location_uuid,\n                        prefix_format:              index.prefix_format,\n                        created_date:               created_date,\n                        base_currency:              index.currency,\n                        uuid:                       journalUuid\n                    }))\n                })\n                this.journal_data = journalRe\n                // window.console.log('journal_data', this.journal_data)\n            },\n            loadAccount(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        accountHandler.getAll().then(res => {\n                            this.showLoading = true;\n                            if(res){\n                                this.showLoading = false;\n                                let acountList = res.data\n                                let salaryExpence = acountList.filter(t => t.number == '634010');\n                                this.salaryExpence = salaryExpence[0]\n\n                                let taxPayble = acountList.filter(t => t.number == '221020');\n                                this.taxPayble = taxPayble[0]\n                                let accountBenefit = acountList.filter(t => t.number == '634020');\n                                this.accountBenefit = accountBenefit[0]\n\n                                let accBenefit = acountList.filter(t => t.number == '221040');\n                                this.accBenefit = accBenefit[0]\n\n                                let benefitPayble = acountList.filter(t => t.number == '221040');\n                                this.benefitPayble = benefitPayble[0]\n                                this.result()\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            async goBack(){\n                window.history.go(-1)\n            },\n            async loadJournal(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        payrollHandler.getPayrollJournal(this.$route.params.id).then(res => {\n                            if (res.statusCode === 200) {\n                                this.resultJournals =  res.data\n                            }\n                        })\n                    }, 300)\n                })\n            },\n            ServiceDateEditor(container, options) {\n                kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                    .appendTo(container)\n                    .kendoDatePicker();\n            },\n            rowNumberTmpl(dataItem) {\n                var ds = this.$refs.dataSourcePayDay.kendoWidget(),\n                    index = ds.indexOf(dataItem);\n                return index + 1;\n            },\n            addRow() {\n                let ds = this.$refs.dataSourcePayDay.kendoWidget(),\n                    total = ds.total();\n                ds.insert(total,{\n                    payDate: new Date()\n                });\n            },\n            removeRow(e) {\n                e.preventDefault();\n                const grid = kendo.jQuery(\"#gridPayDay\").data(\"kendoGrid\"),\n                    dataSource = grid.dataSource,\n                    dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n                if (dataSource.total() > 1) {\n                    dataSource.remove(dataItem);\n                }\n            }\n        },\n        async mounted(){\n            await this.addRow()\n            await this.loadPayrollList()\n            await this.loadPrefixes()\n            await this.loadJournal()\n        },\n        watch: {\n            propFinalize() {\n                if (this.propFinalize !== undefined) {\n                    this.loadPayrollList()\n                    this.loadPrefixes()\n                    this.loadAccount()\n                }\n            }\n        }\n    }\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"]}]}