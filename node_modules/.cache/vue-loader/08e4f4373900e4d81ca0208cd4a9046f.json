{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/production_orders/Production.vue?vue&type=style&index=0&id=32a90842&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/products/production/production_orders/Production.vue","mtime":1638499443284},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNtYWxsX3NpZGViYXIgewogIGhlaWdodDogOTclOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBwYWRkaW5nOiAxMnB4Owp9CgouaGlkZV9zbWFsbF9iYXJfY2xhc3MgewogIG1heC13aWR0aDogMDsKICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW47CiAgZmxleDogMCAwIDA7CiAgcGFkZGluZzogMDsKfQoKLmhpZGVfYmlnX2Jhcl9jbGFzcyB7CiAgbWF4LXdpZHRoOiAxMDAlOwogIHRyYW5zaXRpb246IDAuNXMgZWFzZS1pbjsKICBmbGV4OiAwIDAgMTAwJTsKfQoKLmljb25BcnJvdyB7CiAgcmlnaHQ6IC0zNXB4OwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IC0xMHB4Owp9CgouaWNvbkFycm93SGlkZSB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHJpZ2h0OiAtN3B4OwogIGJvdHRvbTogLTEwcHg7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCiAgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyCiAgPiB0YWJsZQogID4gdGJvZHkKICA+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9CgouZGV0aWFsX3NtYWxsc2lkZV9wIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgYm90dG9tOiAxMHB4Owp9CkBtZWRpYSAobWluLXdpZHRoOiAxMjY0cHgpIHsKICAuY29udGFpbmVyIHsKICAgIC8qIG1heC13aWR0aDogMTE4NXB4OyAqLwogICAgbWF4LXdpZHRoOiAxMDgwcHggIWltcG9ydGFudDsKICB9Cn0K"},{"version":3,"sources":["Production.vue"],"names":[],"mappingswjCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Production.vue","sourceRoot":"src/views/products/production/production_orders","sourcesContent":["<template>\n  <v-app>\n    <v-container>\n      <v-row>\n        <v-col sm=\"12\" cols=\"12\">\n          <v-card\n            outlined\n            dense\n            class=\"pa-4 no_border rounded-sm\"\n            color=\"white\"\n          >\n            <v-row>\n              <v-col\n                class=\"bigSide py-0\"\n                sm=\"12\"\n                cols=\"12\"\n                style=\"transition: .3s ease-in;\"\n                :class=\"{ hide_big_bar_class: isHideBar }\"\n              >\n                <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                  <v-card outlined dense class=\"no_border\">\n                    <h2 class=\"mb-0\">{{ $t(\"production\") }}</h2>\n                    <v-icon\n                      v-if=\"!isHideBar\"\n                      onclick=\"window.history.go(-1); return false;\"\n                      style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                      class=\"float-right\"\n                      >close\n                    </v-icon>\n                    <!-- <span\n                      style=\"transition: .3s ease-in; z-index:10;\"\n                      :class=\"{\n                        iconArrow: !isHideBar,\n                        iconArrowHide: isHideBar,\n                      }\"\n                    >\n                      <v-icon\n                        size=\"22\"\n                        class=\"arr_icon\"\n                        @click=\"hideSmallSideBar\"\n                        v-if=\"isHideBar\"\n                      >\n                        fa fa-chevron-circle-left\n                      </v-icon>\n                      <v-icon\n                        size=\"22\"\n                        class=\"arr_icon\"\n                        @click=\"hideSmallSideBar\"\n                        v-if=\"!isHideBar\"\n                      >\n                        fa fa-chevron-circle-right\n                      </v-icon>\n                    </span> -->\n                  </v-card>\n                  <v-card\n                    outlined\n                    dense\n                    class=\"px-3 rounded-4 no_border\"\n                    color=\"grayBg\"\n                    height=\"90px\"\n                  >\n                    <v-row>\n                      <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                        <label class=\"label\">{{ $t(\"production_no\") }}</label>\n                        <h3 class=\"text-bold mt-3\">\n                          {{ production.abbr }}-{{ production.number }}\n                        </h3>\n                      </v-col>\n                      <v-col sm=\"4\" cols=\"12\" class=\"pb-0\">\n                        <label class=\"label\">{{ $t(\"completion_date\") }}</label>\n                        <app-datepicker\n                          :initialDate=\"completedAt\"\n                          @emitDate=\"completedAt = $event\"\n                        />\n                      </v-col>\n                    </v-row>\n                  </v-card>\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col cols=\"12\" class=\"pb-0\">\n                      <h2 class=\"primary--text mb-0 font_18 text-uppercase\">\n                        {{ $t(\"finish_product_variant\") }}\n                      </h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                      <kendo-datasource\n                        ref=\"finishProductDS\"\n                        :data=\"finishProducts\"\n                      />\n                      <kendo-grid\n                        id=\"gridFinishProduct\"\n                        class=\"grid-function\"\n                        :data-source-ref=\"'finishProductDS'\"\n                        :sortable=\"false\"\n                        :filterable=\"false\"\n                        :column-menu=\"true\"\n                        :editable=\"false\"\n                        :scrollable-virtual=\"true\"\n                      >\n                        <kendo-grid-column\n                          :template=\"rowNumberFP\"\n                          :title=\"$t('no.')\"\n                          :width=\"55\"\n                          :column-menu=\"false\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: variants',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'item'\"\n                          :title=\"$t('items')\"\n                          :width=\"200\"\n                          :template=\"itemTemplate\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <!-- <kendo-grid-column\n                          :field=\"'description'\"\n                          :title=\"$t('description')\"\n                          :width=\"200\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        /> -->\n                        <kendo-grid-column\n                          :field=\"'buom'\"\n                          :title=\"$t('base_uom')\"\n                          :width=\"150\"\n                          :template=\"UOMTemplate\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{ style: 'text-align: right; ' }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'yieldQty'\"\n                          :title=\"$t('yield_qty')\"\n                          :attributes=\"{\n                            class: 'k-state-disabled',\n                            style: 'text-align: right',\n                          }\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(yieldQty || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'cost'\"\n                          :title=\"$t('cost')\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(cost || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'amount'\"\n                          :title=\"$t('amount')\"\n                          :width=\"150\"\n                          :template=\"\n                            '<span>#=kendo.toString(amount || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                      </kendo-grid>\n                    </v-col>\n                  </v-row>\n                  <!-- Grid Two -->\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col cols=\"12\" class=\"pb-0\">\n                      <h2 class=\"primary--text mb-0 font_18 text-uppercase\">\n                        {{ $t(\"other_finished_by_product\") }}\n                      </h2>\n                    </v-col>\n                    <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                      <kendo-datasource\n                        ref=\"otherProductDS\"\n                        :data=\"otherFinishProducts\"\n                      />\n                      <kendo-grid\n                        id=\"gridOtherProducts\"\n                        class=\"grid-function\"\n                        :data-source-ref=\"'otherProductDS'\"\n                        :sortable=\"false\"\n                        :filterable=\"false\"\n                        :column-menu=\"true\"\n                        :editable=\"false\"\n                        :scrollable-virtual=\"true\"\n                      >\n                        <kendo-grid-column\n                          :template=\"rowNumberOP\"\n                          :title=\"$t('no.')\"\n                          :width=\"55\"\n                          :column-menu=\"false\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5;',\n                            class: 'text-variants',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: variants',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'item'\"\n                          :title=\"$t('item')\"\n                          :width=\"200\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"itemTemplate\"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        />\n                        <!-- <kendo-grid-column\n                          :field=\"'description'\"\n                          :title=\"$t('description')\"\n                          :width=\"200\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style: 'background-color: #EDF1F5',\n                          }\"\n                        /> -->\n                        <kendo-grid-column\n                          :field=\"'buom'\"\n                          :title=\"$t('base_uom')\"\n                          :width=\"150\"\n                          :template=\"UOMTemplate\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{ style: 'text-align: right; ' }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'yieldQty'\"\n                          :title=\"$t('yield_qty')\"\n                          :width=\"150\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"\n                            '<span>#=kendo.toString(yieldQty || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'cost'\"\n                          :title=\"$t('cost')\"\n                          :width=\"150\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"\n                            '<span>#=kendo.toString(cost || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                        <kendo-grid-column\n                          :field=\"'amount'\"\n                          :title=\"$t('amount')\"\n                          :width=\"150\"\n                          :editable=\"\n                            () => {\n                              return false;\n                            }\n                          \"\n                          :template=\"\n                            '<span>#=kendo.toString(amount || 0, decimalFormat) || 0#</span>'\n                          \"\n                          :headerAttributes=\"{\n                            style:\n                              'text-align: right; background-color: #EDF1F5',\n                          }\"\n                          :attributes=\"{\n                            style: 'text-align: right',\n                          }\"\n                        />\n                      </kendo-grid>\n                    </v-col>\n                  </v-row>\n\n                  <!-- Grid Four -->\n                  <v-row style=\"background-color: #fff;\">\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                      <v-row>\n                        <v-col sm=\"6\" cols=\"6\" class=\"pb-0\">\n                          <v-textarea\n                            no-resize\n                            height=\"90px\"\n                            outlined\n                            clearable\n                            rows=\"3\"\n                            @change=\"rawJournal(production.productionOrder)\"\n                            v-model=\"production.transactionNote\"\n                            placeholder=\"Memo\"\n                          />\n                        </v-col>\n                        <v-col sm=\"6\" cols=\"6\" class=\"py-0\">\n                          <v-simple-table>\n                            <template v-slot:default>\n                              <tbody>\n                                <tr>\n                                  <td class=\"text-left text-uppercase\">\n                                    {{ $t(\"total_cost\") }}\n                                  </td>\n                                  <td class=\"text-center\">:</td>\n                                  <td class=\"text-right\">\n                                    {{ numberFormat(production.amount) }}\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td class=\"text-left text-uppercase\">\n                                    {{ $t(\"wip_amount\") }}\n                                  </td>\n                                  <td class=\"text-center\">:</td>\n                                  <td class=\"text-right\">\n                                    ({{ numberFormat(production.wipAmount) }})\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td class=\"text-left text-uppercase\">\n                                    {{ $t(\"variance\") }}\n                                  </td>\n                                  <td class=\"text-center\">:</td>\n                                  <td class=\"text-right\">\n                                    000\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </template>\n                          </v-simple-table>\n                        </v-col>\n                      </v-row>\n                    </v-col>\n                  </v-row>\n\n                  <v-divider />\n                  <v-card outlined dense class=\"no_border function_footer\">\n                    <v-alert type=\"warning\" v-model=\"alert\" dismissible>\n                      <span v-html=\"errorMessage\" />\n                    </v-alert>\n                    <v-btn\n                      color=\"primary\"\n                      outlined\n                      class=\"text-capitalize rounded-4 black--text float-left\"\n                      @click=\"cancel\"\n                      >{{ $t(\"cancel\") }}\n                    </v-btn>\n                    <div v-if=\"production.status === 1\">\n                      <v-btn\n                        color=\"primary\"\n                        @click=\"saveNew\"\n                        class=\"float-right white--text text-capitalize rounded-4\"\n                      >\n                        {{ $t(\"save_close\") }}\n                      </v-btn>\n                    </div>\n                  </v-card>\n                </v-form>\n              </v-col>\n              <!-- <v-col\n                class=\"smallSide\"\n                sm=\"4\"\n                style=\"transition: .3s ease-in;\"\n                :class=\"{ hide_small_bar_class: isHideBar }\"\n              >\n                <h3\n                  style=\"color: #b3b5bc; font-size:20px;\"\n                  v-if=\"!isHideBar\"\n                  class=\"text-uppercase float-right mt-n3\"\n                >\n                  Help\n                  <v-icon\n                    onclick=\"window.history.go(-1); return false;\"\n                    style=\"cursor: pointer; color: #333; font-size: 40px;\"\n                    class=\"float-right mt-n1\"\n                    >close\n                  </v-icon>\n                </h3>\n\n                <div v-if=\"!isHideBar\" class=\"small_sidebar mt-9 grayBg\">\n                  <v-row>\n                    <v-col sm=\"12\" cols=\"12\">\n                      <h4 class=\"mb-3 text-uppercase\">{{ $t(\"analysis\") }}</h4>\n                      <label class=\"label mb-0\">{{ $t(\"segment\") }}</label>\n                      <v-select\n                        class=\"mt-2\"\n                        v-model=\"production.segment\"\n                        :items=\"segments\"\n                        item-value=\"id\"\n                        :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                        return-object\n                        tage=\"sub Of\"\n                        placeholder=\"Sub Of\"\n                        outlined=\"\"\n                      />\n                      <label class=\"label mb-0\">{{ $t(\"location\") }}</label>\n                      <v-select\n                        class=\"mt-2\"\n                        v-model=\"production.location\"\n                        :items=\"locations\"\n                        item-value=\"id\"\n                        :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                        return-object\n                        tage=\"Location\"\n                        placeholder=\"bu/location\"\n                        outlined=\"\"\n                      />\n                      <label class=\"label\">{{ $t(\"project\") }}</label>\n                      <v-select\n                        class=\"mt-1\"\n                        v-model=\"production.project\"\n                        :items=\"projects\"\n                        :item-text=\"(item) => `${item.code} - ${item.name}`\"\n                        item-value=\"id\"\n                        tage=\"Project\"\n                        outlined\n                      />\n                      <label class=\"label\">{{ $t(\"for_month_of\") }}</label>\n                      <app-monthpicker\n                        :initMonthOf=\"monthOf\"\n                        @emitMonthOf=\"monthOf = $event\"\n                      />\n                    </v-col>\n                  </v-row>\n                  <p class=\"mb-0 detial_smallside_p\">\n                    {{ $t(\"production_funt_desc\") }}\n                  </p>\n                </div>\n              </v-col> -->\n            </v-row>\n          </v-card>\n        </v-col>\n      </v-row>\n      <LoadingMe\n        :isLoading=\"showLoading\"\n        :fullPage=\"false\"\n        type=\"loading\"\n        :myLoading=\"true\"\n      />\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport DatePickerComponent from \"@/components/custom_templates/DatePickerComponent\";\n// import MonthOfPicker from \"@/components/kendo_templates/MonthOfPicker\";\nimport kendo from \"@progress/kendo-ui\";\nimport Journal from \"@/scripts/model/Journal\";\nimport Production from \"@/scripts/model/Production\";\nimport ComponentUsedModel from \"@/scripts/start_production/model/ComponentUsed\";\nimport { uuid } from \"vue-uuid\";\n\nconst productionHandler = require(\"@/scripts/productionHandler\");\nconst locationHandler = require(\"@/scripts/locationHandler\");\nconst projectHandler = require(\"@/scripts/projectHandler\");\nconst settingsHandler = require(\"@/scripts/settingsHandler\");\nexport default {\n  name: \"Production\",\n  components: {\n    LoadingMe: () => import(`@/components/Loading`),\n    \"app-datepicker\": DatePickerComponent,\n    // \"app-monthpicker\": MonthOfPicker,\n  },\n  computed: {\n    segment() {\n      if (this.production.productionOrder) {\n        if (this.production.productionOrder.segment) {\n          return this.production.productionOrder.segment;\n        } else {\n          return {};\n        }\n      } else {\n        return {};\n      }\n    },\n    location() {\n      if (this.production.productionOrder) {\n        if (this.production.productionOrder.location) {\n          return this.production.productionOrder.location;\n        } else {\n          return {};\n        }\n      } else {\n        return {};\n      }\n    },\n    project() {\n      if (this.production.productionOrder) {\n        if (this.production.productionOrder.project) {\n          return this.production.productionOrder.project;\n        } else {\n          return {};\n        }\n      } else {\n        return {};\n      }\n    },\n  },\n  data: () => ({\n    alert: false,\n    isEdit: false,\n    showLoading: false,\n    valid: true,\n    isHideBar: false,\n    production: new Production({}),\n    finishProducts: [],\n    otherFinishProducts: [],\n    componentUseds: [],\n    otherCosts: [],\n    segments: [],\n    locations: [],\n    projects: [],\n    monthOf: \"\",\n    decimalFormat: \"n2\",\n    journal: new Journal({}),\n    completedAt: new Date().toISOString().substr(0, 10),\n    jRaw: [],\n  }),\n  methods: {\n    numberFormat(value) {\n      return kendo.toString(value, `n${this.decimalFormat}`);\n    },\n    itemTemplate(dataItem) {\n      const item = dataItem.item;\n      if (item) {\n        return `<span>${item.name ? item.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    async initData() {\n      this.showLoading = true;\n      // const pd = this.$route.params.data\n      // const id = this.$route.params.id\n      if (this.$route.params.id) {\n        const id = this.$route.params.id;\n        await productionHandler.getById(id).then((res) => {\n          this.production = res;\n          this.showLoading = false;\n          const productionOrder = this.production.productionOrder || {};\n          this.finishProducts = productionOrder.finishProduct;\n          this.otherFinishProducts = productionOrder.otherFinishProduct;\n          let amount = 0;\n          this.otherFinishProducts.forEach((n) => {\n            const lineId = \"lin-\" + uuid.v1();\n            n[\"id\"] = lineId;\n            amount += n.amount;\n          });\n          this.finishProducts.forEach((n) => {\n            const lineId = \"lin-\" + uuid.v1();\n            n[\"id\"] = lineId;\n            amount += n.amount;\n          });\n\n          this.componentUseds = productionOrder.componentUsed;\n          let wipAmount = 0;\n          this.componentUseds.forEach((n) => {\n            wipAmount += n.amount;\n          });\n          this.production.wipAmount = wipAmount;\n          this.production.amount = amount;\n          this.production.exchangeAmount = amount;\n          this.otherCosts = productionOrder.otherCost;\n          this.rawJournal(productionOrder);\n        });\n      }\n      // if (pd) {\n      //   this.production = pd\n      // } else {\n      //\n      // }\n    },\n    rawJournal(productionOrder) {\n      try {\n        let nature = \"\";\n        this.jRaw = [];\n        // const data = productionOrder.componentUsed || []\n        const data = productionOrder.finishProduct || [];\n        const dataOther = productionOrder.otherFinishProduct || [];\n        const rows = data.filter((m) => parseFloat(m.amount) > 0);\n        const rowOthers = dataOther.filter((m) => parseFloat(m.amount) > 0);\n        const currency = productionOrder.currency || {};\n        const xRate = productionOrder.exchangeRate || {};\n        const txnRate = xRate.rate || 1;\n        this.production.txnRate = txnRate;\n        this.production.exchangeRate = xRate;\n        this.production.currency = currency;\n        rows.forEach((value) => {\n          const amt = kendo.parseFloat(value.amount);\n          const itemXAmount = amt * kendo.parseFloat(txnRate);\n          const item = value.item;\n          if (amt > 0) {\n            nature = \"dr\";\n          } else {\n            nature = \"cr\";\n          }\n          if (item) {\n            if (item.type === \"Service\") {\n              if (item.hasOwnProperty(\"costOfGoodsSoldAcc\")) {\n                if (item.costOfGoodsSoldAcc.hasOwnProperty(\"id\")) {\n                  let costOfGoodsSoldAcc = item.costOfGoodsSoldAcc;\n                  this.jRaw.push({\n                    id: costOfGoodsSoldAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.costOfGoodsSoldAcc,\n                    accountId: item.costOfGoodsSoldAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n              if (item.hasOwnProperty(\"deferredIncomeAcc\")) {\n                if (item.deferredIncomeAcc.hasOwnProperty(\"id\")) {\n                  let deferredInAcc = item.deferredIncomeAcc;\n                  this.jRaw.push({\n                    id: deferredInAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: deferredInAcc,\n                    accountId: deferredInAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Variant\") {\n              if (item.hasOwnProperty(\"inventoryAcc\")) {\n                if (item.inventoryAcc.hasOwnProperty(\"id\")) {\n                  let inventoryAcc = item.inventoryAcc;\n                  this.jRaw.push({\n                    id: inventoryAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.inventoryAcc,\n                    accountId: item.inventoryAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Fixed Asset\") {\n              if (item.hasOwnProperty(\"assetAcc\")) {\n                if (item.assetAcc.hasOwnProperty(\"id\")) {\n                  let assetAcc = item.assetAcc;\n                  this.jRaw.push({\n                    id: assetAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.assetAcc,\n                    accountId: item.assetAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Transaction Item\") {\n              if (item.hasOwnProperty(\"account\")) {\n                if (item.account.hasOwnProperty(\"id\")) {\n                  this.jRaw.push({\n                    id: item.account.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.account,\n                    accountId: item.account.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            }\n          }\n        });\n        rowOthers.forEach((value) => {\n          const amt = kendo.parseFloat(value.amount);\n          const itemXAmount = amt * kendo.parseFloat(txnRate);\n          const item = value.item;\n          if (amt > 0) {\n            nature = \"dr\";\n          } else {\n            nature = \"cr\";\n          }\n          if (item) {\n            if (item.type === \"Service\") {\n              if (item.hasOwnProperty(\"costOfGoodsSoldAcc\")) {\n                if (item.costOfGoodsSoldAcc.hasOwnProperty(\"id\")) {\n                  let costOfGoodsSoldAcc = item.costOfGoodsSoldAcc;\n                  this.jRaw.push({\n                    id: costOfGoodsSoldAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.costOfGoodsSoldAcc,\n                    accountId: item.costOfGoodsSoldAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n              if (item.hasOwnProperty(\"deferredIncomeAcc\")) {\n                if (item.deferredIncomeAcc.hasOwnProperty(\"id\")) {\n                  let deferredInAcc = item.deferredIncomeAcc;\n                  this.jRaw.push({\n                    id: deferredInAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: deferredInAcc,\n                    accountId: deferredInAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Variant\") {\n              if (item.hasOwnProperty(\"inventoryAcc\")) {\n                if (item.inventoryAcc.hasOwnProperty(\"id\")) {\n                  let inventoryAcc = item.inventoryAcc;\n                  this.jRaw.push({\n                    id: inventoryAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.inventoryAcc,\n                    accountId: item.inventoryAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Fixed Asset\") {\n              if (item.hasOwnProperty(\"assetAcc\")) {\n                if (item.assetAcc.hasOwnProperty(\"id\")) {\n                  let assetAcc = item.assetAcc;\n                  this.jRaw.push({\n                    id: assetAcc.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.assetAcc,\n                    accountId: item.assetAcc.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            } else if (item.type === \"Transaction Item\") {\n              if (item.hasOwnProperty(\"account\")) {\n                if (item.account.hasOwnProperty(\"id\")) {\n                  this.jRaw.push({\n                    id: item.account.id + \"-\" + nature,\n                    line: new ComponentUsedModel(value),\n                    description: this.production.transactionNote,\n                    account: item.account,\n                    accountId: item.account.id,\n                    amount: amt, // qty*avg_cost ,\n                    exchangeAmount: itemXAmount, //xAmount,\n                    type: nature,\n                    typeAs: \"item\",\n                  });\n                }\n              }\n            }\n          }\n        });\n        // todo: Working Progress Acc\n        // todo: raw Journal\n        if (this.production.wipAmount * -1 > 0) {\n          nature = \"dr\";\n        } else {\n          nature = \"cr\";\n        }\n        // window.console.log(this.accWPI, 'accWPI')\n        if (productionOrder.hasOwnProperty(\"account\")) {\n          const account = productionOrder.account || {};\n          if (account.hasOwnProperty(\"id\")) {\n            this.jRaw.push({\n              id: account.id + \"-\" + nature,\n              line: new ComponentUsedModel({}),\n              description: this.production.transactionNote,\n              account: account,\n              accountId: account.id,\n              exchangeAmount: this.production.wipAmount * -1,\n              amount: this.production.wipAmount * -1,\n              type: nature,\n              typeAs: \"wip\",\n            });\n          }\n        }\n        this.shrinkData(this.jRaw);\n      } catch (e) {\n        window.console.log(e, \"error\");\n      }\n    },\n    shrinkData(obj) {\n      const uniques = this.removeDuplicate(obj);\n      uniques.forEach((n) => {\n        const found = obj.filter((m) => m.id === n.id);\n        let amount = 0,\n          exchangeAmount = 0;\n        found.forEach((z) => {\n          amount += parseFloat(z.amount || 0);\n          exchangeAmount += parseFloat(z.exchangeAmount || 0);\n        });\n        n.amount = parseFloat(amount); //this.numberFormat(amount)\n        n.exchangeAmount = parseFloat(exchangeAmount);\n      });\n      this.jRaw = uniques;\n      let dr = 0,\n        cr = 0;\n      this.jRaw.forEach((j) => {\n        switch (j.type) {\n          case \"cr\":\n            cr += parseFloat(j.amount);\n            break;\n          case \"dr\":\n            dr += parseFloat(j.amount);\n            break;\n          default:\n            break;\n        }\n      });\n      this.dr = dr;\n      this.cr = cr;\n      window.console.log(\"dr=\", dr, \"cr=\", cr, \"dr+cr = \", dr + cr);\n      window.console.log(JSON.stringify(uniques), \"uniques\");\n    },\n    removeDuplicate(array) {\n      const result = [];\n      const map = new Map();\n      for (const item of array) {\n        if (!map.has(item.id)) {\n          map.set(item.id, true); // set any value to Map\n          result.push(item);\n        }\n      }\n      return result;\n    },\n    taxTemplate(dataItem) {\n      window.console.log(\"vat\", dataItem.tax);\n      const vat = dataItem.tax;\n      if (vat) {\n        return `<span>${vat.defaultTax ? vat.defaultTax : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    TaxDropDownEditor(container, options) {\n      kendo\n        .jQuery('<input name=\"' + options.field + '\"/>')\n        .appendTo(container)\n        .kendoDropDownList({\n          autoBind: true,\n          autoWidth: true,\n          height: 400,\n          filter: \"startswith\",\n          dataTextField: \"defaultTax\",\n          dataValueField: \"id\",\n          template: \"<span>#=defaultTax#</span>\",\n          optionLabel: \"--Select--\",\n          dataSource: new kendo.data.DataSource({\n            data: this.vatTax,\n          }),\n        });\n    },\n    rowNumberOC(dataItem) {\n      let ds = this.$refs.otherCostDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    rowNumberFP(dataItem) {\n      let ds = this.$refs.finishProductDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    UOMTemplate(dataItem) {\n      const uom = dataItem.buom;\n      if (uom) {\n        return `<span>${uom.name ? uom.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    rowNumberOP(dataItem) {\n      let ds = this.$refs.otherProductDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    UOMTemplateOP(dataItem) {\n      const uom = dataItem.uom;\n      if (uom) {\n        return `<span>${uom.uom ? uom.uom.toUOM.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    UOMTemplateCU(dataItem) {\n      const uom = dataItem.uom;\n      if (uom) {\n        return `<span>${uom.uom ? uom.uom.toUOM.name : ``}</span>`;\n      } else {\n        return ``;\n      }\n    },\n    rowNumberCU(dataItem) {\n      let ds = this.$refs.componentUsedDS.kendoWidget(),\n        index = ds.indexOf(dataItem);\n      return index + 1;\n    },\n    async loadProjects() {\n      await projectHandler.list().then((res) => {\n        this.projects = res.data.data;\n      });\n    },\n    async loadSegment() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          this.segments = [];\n          settingsHandler\n            .getSeg()\n            .then((res) => {\n              this.showLoading = true;\n              if (res.data.statusCode === 200) {\n                this.showLoading = false;\n                this.segments = res.data.data;\n              }\n            })\n            .catch();\n          {\n            this.showLoading = false;\n          }\n        }, 10);\n      });\n    },\n    async loadLocation() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          this.locations = [];\n          locationHandler\n            .list()\n            .then((res) => {\n              this.showLoading = true;\n              if (res.data.statusCode === 200) {\n                this.showLoading = false;\n                this.locations = res.data.data;\n              }\n            })\n            .catch();\n          {\n            this.showLoading = false;\n          }\n        }, 10);\n      });\n    },\n    savePrint() {},\n    saveNew() {\n      try {\n        this.production.status = 3;\n        this.production.actionType = \"new\";\n        this.production.jRaw = this.jRaw;\n        this.production.type = \"Production\";\n        this.production.completedAt = this.completedAt;\n        this.showLoading = true;\n        this.production.moment = 1;\n        window.console.log(this.production, \"this.production\");\n        this.showLoading = true;\n        productionHandler.create(this.production);\n        this.showLoading = false;\n      } catch (e) {\n        this.showLoading = false;\n        window.console.log(e, \"error\");\n      }\n    },\n    saveClose() {},\n    removeRow() {},\n    generateNumber() {},\n    errorMessage() {},\n    addRow() {},\n    accountDropDownEditor() {},\n    cancel() {\n      window.history.go(-1);\n      return false;\n    },\n    hideSmallSideBar() {\n      this.isHideBar = !this.isHideBar;\n    },\n  },\n  watch: {\n    // call again the method if the route changes\n  },\n  activated() {\n    this.initData();\n  },\n  deactivated() {\n    this.jRaw = [];\n    this.production = {};\n  },\n  created() {\n    this.loadProjects();\n    this.loadLocation();\n    this.loadSegment();\n  },\n  async mounted() {\n    await this.initData();\n  },\n};\n</script>\n\n<style scoped>\n.small_sidebar {\n  height: 97%;\n  position: relative;\n  padding: 12px;\n}\n\n.hide_small_bar_class {\n  max-width: 0;\n  transition: 0.5s ease-in;\n  flex: 0 0 0;\n  padding: 0;\n}\n\n.hide_big_bar_class {\n  max-width: 100%;\n  transition: 0.5s ease-in;\n  flex: 0 0 100%;\n}\n\n.iconArrow {\n  right: -35px;\n  position: absolute;\n  bottom: -10px;\n}\n\n.iconArrowHide {\n  position: absolute;\n  right: -7px;\n  bottom: -10px;\n}\n\n.theme--light.v-data-table\n  > .v-data-table__wrapper\n  > table\n  > tbody\n  > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.detial_smallside_p {\n  position: absolute;\n  bottom: 10px;\n}\n@media (min-width: 1264px) {\n  .container {\n    /* max-width: 1185px; */\n    max-width: 1080px !important;\n  }\n}\n</style>\n"]}]}