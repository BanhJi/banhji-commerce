{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/DetailBudgetBreakDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/budgeting/budgets/DetailBudgetBreakDown.vue","mtime":1639364469137},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DetailBudgetBreakDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"DetailBudgetBreakDown.vue","sourceRoot":"src/views/budgeting/budgets","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <v-row>\n            <v-col sm=\"5\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('detail_budget_breakdown')}}</h3>\n                <p class=\"mb-0\">{{$t('a_detail_breakdown_of_budget_by_months')}}</p>\n            </v-col>\n        </v-row>\n        \n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"pr-0\">\n                <label class=\"mb-1\">{{$t('select_fiscal_date')}}:</label>\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                    @onChanged=\"onFiscaldateChanges\"\n                />\n            </v-col>\n     \n            <v-col sm=\"4\" cols=\"12\" class=\"pr-0\">\n                <label class=\"mb-1\">{{$t('select_budget')}}:</label>\n                <v-select class=\"mt-1\"\n                    :disabled=\"fiscalDate === null\"\n                    @change=\"onChangeBudget\"\n                    placeholder=\"Select Budget\"\n                    v-model=\"budget\"\n                    :items=\"budgets\"\n                    item-text=\"name\"\n                    item-value=\"uuid\"\n                    return-object\n                    clearable\n                    outlined />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\">\n                <!-- Reporting Language -->\n                <label class=\"mb-1\">{{$t('reporting_language')}}:</label>\n                <app-reporting-language :initLanguage=\"reportingLanguage\" @emitLanguage=\"reportingLanguage = $event\" />\n            </v-col>\n        </v-row>\n\n\n        <!-- Summary -->\n        <v-row class=\"mt-0\">\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                            <tr>\n                                <td style=\"width: 45%;font-weight: 900\">{{$t('budget_name')}}:</td>\n                                <td class=\"\">{{ budget.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"segment\") }}:</td>\n                                <td class=\"\" v-if=\"budget.segment\">{{ budget.segment.name }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{ $t(\"fiscal_year\") }}:</td>\n                                <td class=\"\" v-if=\"budget.fiscal_year\">{{ Helper.formatFiscalDate(budget.fiscal_year.start_date) }}</td>\n                            </tr>\n                            <tr>\n                                <td style=\"font-weight: 900\">{{$t('used_for_consolidation')}}</td>\n                                <td class=\"\">{{ budget.use_consolidation === 1 ? 'Yes' : 'No' }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n            <v-col class=\"pt-0\" sm=\"6\" cols=\"12\">\n                <template>\n                    <v-simple-table class=\"table_list nomal_table\">\n                        <template>\n                            <tbody>\n                               <tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_by.email\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{budget.created_by.email}}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"created_on\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td v-if=\"budget.created_date\">\n\t\t\t\t\t\t\t\t\t\t\t\t{{ Helper.dateFormat(budget.created_date) }}\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_on\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{{ budget.modified_date }}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td style=\"font-weight: 900\">{{ $t(\"last_edited_by\") }}:</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"\" v-if=\"budget.modified_by.email\">{{budget.modified_by.email}}</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                </template>\n            </v-col>\n        </v-row>\n        \n        <!-- Grid -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <kendo-datasource ref=\"budgetLineDS\"\n                        :data=\"budgetLineList\"\n                        :schema=\"schemaDefinition\"\n                        :sort=\"sortDefinition\"\n                        :group=\"groupDefinition\"\n                        :aggregate=\"aggregateDefinition\" />\n\n                    <kendo-grid id=\"budgetGrid\" class=\"custom_grid\" \n                        :data-source-ref=\"'budgetLineDS'\"\n                        :dataBound=\"dataBound\"\n                        :sortable=\"true\"\n                        :column-menu=\"false\"\n                        :reorderable=\"true\"\n                        :resizable=\"true\"\n                        :noRecords=\"true\"\n                        :groupable=\"groupable\"\n                        :columns=\"columns\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import AccountModel from \"@/scripts/model/Account.js\";\n    import SegmentModel from \"@/scripts/model/Segment.js\";\n    import BudgetModel from \"@/scripts/model/Budget.js\";\n    \n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n        },\n        data: () => ({\n            fiscalDate : null,\n            fiscalMonths : [],\n            budget : new BudgetModel(),\n            budgets : [],\n            budgetLineList : [],\n            Helper : Helper,\n            /* Kendo */\n            kendo : kendo,\n            columns : [],\n            sortDefinition : { field: \"number\", dir: \"asc\" },\n            groupable: {\n                enabled: false,\n                showFooter: true\n            },\n\t\t\tgroupDefinition : [],\n\t\t\taggregateDefinition : [\n\t\t\t\t{ field: \"balance\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"zero\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"one\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"two\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"three\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"four\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"five\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"six\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"seven\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"eight\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"nine\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"ten\", aggregate: \"sum\" },\n\t\t\t\t{ field: \"eleven\", aggregate: \"sum\" },\n\t\t\t],\n\t\t\tschemaDefinition\t: {\n\t\t\t\tmodel: { id: \"accountUUID\" }\n\t\t\t},\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n\t\t\tfieldType : 'type',\n            totalWord : 'Total',\n            // LoadingMe\n            showLoading: false,\n        }),\n        methods:{\n            async search(){\n                /* Clear */\n                this.budget = new BudgetModel();\n                this.fiscalMonths = [];\n\n                if(this.fiscalDate !== null){\n                    this.showLoading = true;\n\n                    /* Generate Months */\n                    this.fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\");\n\n                    /* Load Budget */\n                    let budgets = await this.$store.dispatch('budgets/getList'),\n                        segments = await this.$store.dispatch('segments/getList');\n\n                    let budgetList = [];\n                    budgets.forEach(value => {\n                        if(value.fiscal_year.uuid === this.fiscalDate.uuid && value.segment_uuid !== '' && value.project_uuid === ''){\n                            let budget = new BudgetModel(value);\n                            budget.segment = new SegmentModel(segments.find(i => i.id === value.segment_uuid));\n                            budgetList.push(budget);\n                        }\n                    });\n                    this.budgets = budgetList;\n\n                    this.showLoading = false;\n                }else{\n                    /* Alert Warning */\n                    this.$snotify.warning(i18n.t(\"please_select_fiscaldate\"));\n                }\n            },\n            /* On Fiscaldate Changes */\n            onFiscaldateChanges(){\n                this.search();\n            },\n            /* On Change Budget */\n            onChangeBudget (){\n                let ds = this.$refs.budgetLineDS.kendoWidget();\n                ds.data([]);\n\n                if(this.budget !== null){\n                    this.bindData();\n                }\n            },\n            /* Bind Data */\n            async bindData () {\n                let entries = [];\n\n                this.showLoading = true;\n\n                // Load Account List\n                let accounts = await this.$store.dispatch('accounting/getAccounts');\n\n                /* Gathering from budget lines */\n                this.budget.lines.forEach(value => {\n                    let entry = value,\n                        nature = 1; /* Default Naure is Dr = 1 */\n\n                    /* Set Account Information */\n                    let account = new AccountModel(accounts.find(i => i.uuid === value.account_uuid));\n                    entry.accountUUID = account.uuid;\n                    entry.name = account.name;\n                    entry.local_name = account.local_name;\n                    entry.type = account.account_type.name;\n                    entry.type_local_name = account.account_type.local_name;\n                    entry.account_type_number = account.account_type.number;\n\n                    /* Reverse Nature */\n                    if(account.account_type.nature.toLowerCase() === \"cr\"){\n                        nature = -1;\n                    }\n\n                    /* Order */\n                    if(account.account_type.number === OrderNumberPL.OtherRevenue.number){//Other Revenue\n                        entry.order = OrderNumberPL.OtherRevenue.order;\n                    }else{\n                        entry.order = account.account_type.number;\n                    }\n\n                    /* Total */\n                    entry.balance = value.amount * nature;\n                    \n                    for (let i = 0; i < 12; i++) {\n                        const element = value.monthly_amount[i];\n                        const indexName = NumberInWord[i];\n\n                        entry[indexName] = element.amount * nature;\n                    }\n                    \n                    /* Add entry */\n                    entries.push(entry);\n                });\n\n                /* Gathering from budget estimations */\n                this.budget.budget_estimations.forEach(value => {\n                    let entry = value;\n\n                    // Order\n                    if(value.account_type_number == OrderNumberPL.GrossProfit.number){// Gross Profit\n                        entry.order = OrderNumberPL.GrossProfit.order;\n                    }else if(value.account_type_number == OrderNumberPL.OtherRevenue.number){// Other Revenue\n                        entry.order = OrderNumberPL.OtherRevenue.order;\n                    }else if(value.account_type_number == OrderNumberPL.OperatingExpense.number){// Operating Expense\n                        entry.order = OrderNumberPL.OperatingExpense.order;\n                    }else if(value.account_type_number == OrderNumberPL.OperatingIncomeEBITDA.number){// Operating Income (EBITDA)\n                        entry.order = OrderNumberPL.OperatingIncomeEBITDA.order;\n                    }else if(value.account_type_number == OrderNumberPL.EarningBeforeInterestAndTaxEBIT.number){// Earning Before Interest And Tax(EBIT)\n                        entry.order = OrderNumberPL.EarningBeforeInterestAndTaxEBIT.order;\n                    }else if(value.account_type_number == OrderNumberPL.ProfitBeforeTax.number){// Profit Before Tax\n                        entry.order = OrderNumberPL.ProfitBeforeTax.order;\n                    }else if(value.account_type_number == OrderNumberPL.ProfitForThePeriod.number){// Profit For The Period\n                        entry.order = OrderNumberPL.ProfitForThePeriod.order;\n                    }else{\n                        entry.order = value.account_type_number;\n                    }\n\n                    /* Add entry */\n                    entries.push(entry);\n                });\n\n                /* BIND STATMENT */\n                this.budgetLineList = entries;\n                this.generateColumn();\n\n                this.showLoading = false;\n\t\t\t},\n            /* Databound */\n            dataBound(e) {\n                let grid = e.sender;\n\n\t\t\t\tgrid.dataSource.data().forEach(value => {\n\t\t\t\t\tif(value.account_type_number >= 100){\n\t\t\t\t\t\tlet row = grid.tbody.find(\"tr[data-uid='\" + value.uid + \"']\").prev(\".k-grouping-row\");\n\t\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t\t}\n\t\t\t\t});\n            },\n            // Generate Columns\n\t\t\tgenerateColumn () {\n                let headerAttributes = {\n                        \"class\": \"table-header-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    },\n                    attributes = {\n                        \"class\": \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\"\n                    };\n\n                /* Columns */\n\t\t\t\tlet columns = [\n\t\t\t\t\t{ \n\t\t\t\t\t\tfield: this.fieldName, \n\t\t\t\t\t\ttitle: i18n.t('account'),\n                        groupFooterTemplate: this.totalWord + \" #=value#\",\n\t\t\t\t\t\tlocked: true,\n\t\t\t\t\t\twidth:300\n\t\t\t\t\t},\n\t\t\t\t\t{ \n\t\t\t\t\t\tfield: this.fieldType, \n\t\t\t\t\t\ttitle: \"TYPE\", \n\t\t\t\t\t\thidden: true, \n\t\t\t\t\t\tgroupHeaderTemplate: this.typeGroupHeaderTmpl,\n\t\t\t\t\t\twidth:300 \n\t\t\t\t\t},\n                    { \n                        field: \"balance\",\n                        title: i18n.t('total'),\n                        format: \"{0:n}\",\n                        width:150,\n                        aggregates: \"['sum']\",\n                        groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    }\n                ];\n\n                for (let i = 0; i < 12; i++) {\n                    columns.push({ \n                        field: NumberInWord[i],\n                        title: this.fiscalMonths[i],\n                        format: \"{0:n}\",\n                        width: 150,\n                        aggregates: \"['sum']\",\n                        groupFooterTemplate: \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    })\n                }\n\n                /* Set Columns */\n                this.columns = columns;\n\t\t\t},\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                this.fieldType = \"type\";\n                this.totalWord = \"Total\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                    this.fieldType = \"type_local_name\";\n                    this.totalWord = \"សរុប\";\n                }\n                \n                // Generate Group By\n                this.generateGroupBy();\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n            /* Templates */\n            typeGroupHeaderTmpl(dataItem) {\n\t\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\t\tif(this.reportingLanguage === \"local\"){\n\t\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t\t}\n\n\t\t\t\treturn \"<span class='text-bold text-black'>\"+ name +\"</span>\";\n\t\t\t},\n\t\t\t// Generate Group By\n\t\t\tgenerateGroupBy(){\n\t\t\t\tthis.groupDefinition = {\n\t\t\t\t\tfield: this.fieldType, \n\t\t\t\t\taggregates : this.aggregateDefinition,\n\t\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n        },\n        watch : {\n            budget(){// Prevent null error\n                if(this.budget === null){\n                    this.budget = new BudgetModel();\n                }\n            },\n            reportingLanguage () {\n\t\t\t\tthis.onReportingLanguageChanges();\n            },\n        },\n        mounted () {\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Initial Grid Columns\n\t\t\t// this.generateColumn();\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"]}]}