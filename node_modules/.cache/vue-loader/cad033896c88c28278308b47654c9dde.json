{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/receipt_payment/StatementOfProfitOrLossByProject.vue?vue&type=style&index=0&id=023eb462&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/accounting/reports/receipt_payment/StatementOfProfitOrLossByProject.vue","mtime":1642155812615},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucmVwb3J0c19saXN0IHsKICB3aWR0aDogMTAwJTsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDIwcHggMjBweCA1cHg7Cn0KLnJlcG9ydF9maWx0ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjk7CiAgcGFkZGluZzogMCAyMHB4IDVweCAyMHB4OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouZHZfbXQgewogIG1hcmdpbi10b3A6IDI0cHg7Cn0KLnJlcG9ydF9leHBvcnQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDE1cHg7Cn0KLnJlcG9ydF90b3RhbCB7CiAgcGFkZGluZzogMTIuNXB4OwogIHRleHQtYWxpZ246IHJpZ2h0OwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7CiAgZm9udC13ZWlnaHQ6IDcwMDsKICBib3JkZXItdG9wOiAxcHggc29saWQgIzMzMzsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzMzMzsKfQouY3VzdG9tX2V4cGFuc2lvbgogIC52LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIKICAudi1leHBhbnNpb24tcGFuZWwtaGVhZGVyX19pY29uCiAgLnYtaWNvbiB7CiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9Ci52LWV4cGFuc2lvbi1wYW5lbCB7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2NjY2M7CiAgYm9yZGVyLXJhZGl1czogMDsKfQoudi1leHBhbnNpb24tcGFuZWw6OmJlZm9yZSB7CiAgYm94LXNoYWRvdzogbm9uZTsKfQoudi1leHBhbnNpb24tcGFuZWwtaGVhZGVyIHsKICBwYWRkaW5nOiAxNXB4Owp9Ci52LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50X193cmFwIHsKICBwYWRkaW5nOiAwIDM1cHggMTBweDsKfQpAbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHsKICAuZHZfbXQsCiAgLmR2X210OCB7CiAgICBtYXJnaW4tdG9wOiAwOwogIH0KICAucmVwb3J0c19saXN0IHsKICAgIG1hcmdpbi10b3A6IDA7CiAgfQp9Cg=="},{"version":3,"sources":["StatementOfProfitOrLossByProject.vue"],"names":[],"mappingswhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StatementOfProfitOrLossByProject.vue","sourceRoot":"src/views/accounting/reports/receipt_payment","sourcesContent":["<template>\n  <v-row>\n    <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n      <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n        <v-row class=\"mt-0\">\n          <v-col sm=\"10\" cols=\"12\" class=\"py-0\">\n            <div v-if=\"columnBy === '1'\">\n              <app-searchdate\n                :initStartDate=\"startDate\"\n                @emitStartDate=\"startDate = $event\"\n                :initEndDate=\"endDate\"\n                @emitEndDate=\"endDate = $event\"\n              />\n            </div>\n            <div v-else>\n              <app-fiscal-date-dropdownlist\n                :initFiscalDate=\"fiscalDate\"\n                @emitFiscalDate=\"fiscalDate = $event\"\n              />\n            </div>\n          </v-col>\n          <v-col sm=\"2\" cols=\"12\" class=\"py-0\">\n              <app-reporting-language\n                :initLanguage=\"reportingLanguage\"\n                @emitLanguage=\"reportingLanguage = $event\"\n              />\n          </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n          <v-col class=\"py-0\" sm=\"3\" cols=\"3\">\n            <label class=\"label\">{{ $t(\"disable_column_by\") }}</label>\n            <v-select\n              class=\"mt-1\"\n              :items=\"columnsBy\"\n              item-text=\"text\"\n              item-value=\"value\"\n              v-model=\"columnBy\"\n              clearable\n              outlined\n            />\n          </v-col>\n          <v-col class=\"py-0\" sm=\"3\" cols=\"3\">\n            <label class=\"label\">{{ $t(\"project\") }}</label>\n            <app-project-dropdownlist\n              :initProject=\"project\"\n              @emitProject=\"project = $event\"\n            />\n          </v-col>\n          <v-col sm=\"3\" cols=\"3\" class=\"pt-6\">\n            <level-coa-dropdownlist\n              :initLevelCoa=\"levelCoa\"\n              @emitLevelCoa=\"levelCoa = $event\"\n            />\n          </v-col>\n          <v-col class=\"py-1\" sm=\"1\" cols=\"3\">\n            <v-btn class=\"white--text dv_mt\" color=\"primary\" @click=\"search\">\n              <i\n                class=\"b-search\"\n                style=\"font-size: 18px; color: #fff !important\"\n              />\n            </v-btn>\n          </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n          <v-col sm=\"12\" cols=\"12\" class=\"custom_expansion\">\n            <kendo-datasource\n              ref=\"statementPLDS\"\n              :data=\"statementPLList\"\n              :schema=\"schemaDefinition\"\n              :sort=\"sortDefinition\"\n              :group=\"groupDefinition\"\n              :aggregate=\"aggregateDefinition\"\n            />\n\n            <kendo-grid\n              id=\"gridSPL\"\n              class=\"custom_grid\"\n              :data-source-ref=\"'statementPLDS'\"\n              :dataBound=\"dataBound\"\n              :change=\"onGridChanges\"\n              :selectable=\"true\"\n              :persistSelection=\"true\"\n              :sortable=\"true\"\n              :column-menu=\"true\"\n              :reorderable=\"true\"\n              :resizable=\"true\"\n              :noRecords=\"true\"\n              :toolbar=\"['excel']\"\n              :excel-file-name=\"'incomeStatement.xlsx'\"\n              :excel-filterable=\"true\"\n              :columns=\"columns\"\n            />\n          </v-col>\n        </v-row>\n        <LoadingMe\n          :isLoading=\"showLoading\"\n          :fullPage=\"false\"\n          :myLoading=\"true\"\n        />\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { dataStore } from \"@/observable/store\";\n\n/* Store */\nimport store from \"@/store\";\nconst institute = store.state.institute.institute;\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\nconst { columnsBy } = require(\"@/scripts/default_setup/DateSearch.js\");\nconst NumberInWord = require(\"@/scripts/default_setup/NumberInWord.js\");\n\nexport default {\n  components: {\n    LoadingMe: () => import(\"@/components/Loading\"),\n    \"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n    \"app-reporting-language\": () =>\n      import(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n    \"app-fiscal-date-dropdownlist\": () =>\n      import(\"@/components/kendo_templates/FiscalDateDropDownList\"),\n    \"app-project-dropdownlist\": () =>\n      import(\"@/components/dropdownlist/Project\"),\n    \"level-coa-dropdownlist\": () =>\n      import(\"@/components/dropdownlist/LevelCoa\"),\n  },\n  data: () => ({\n    // Obj\n    startDate: \"\",\n    endDate: \"\",\n    statements: [],\n    statementPLList: [],\n    project: null,\n    levelCoa: \"\", // Default primary\n    columnBy: \"1\", //Default Total\n    columnsBy: columnsBy,\n    fiscalDate: institute.fiscalDate[0],\n    fiscalDates: institute.fiscalDate,\n    fiscalMonths: Helper.generateFiscalMonths(\n      institute.fiscalDate[0].start_date,\n      institute.fiscalDate[0].end_date,\n      \"12\"\n    ),\n    Helper: Helper,\n    // Reporting Language\n    reportingLanguage: \"english\",\n    fieldName: \"name\",\n    fieldType: \"type\",\n    footerName: \"Surplus Or (Deficit)\",\n    // LodingMe\n    showLoading: false,\n    /* KENDO */\n    columns: [],\n    sortDefinition: { field: \"number\", dir: \"asc\" },\n    groupDefinition: [],\n    aggregateDefinition: [\n      { field: \"balance\", aggregate: \"sum\" },\n      { field: \"zero\", aggregate: \"sum\" },\n      { field: \"one\", aggregate: \"sum\" },\n      { field: \"two\", aggregate: \"sum\" },\n      { field: \"three\", aggregate: \"sum\" },\n      { field: \"four\", aggregate: \"sum\" },\n      { field: \"five\", aggregate: \"sum\" },\n      { field: \"six\", aggregate: \"sum\" },\n      { field: \"seven\", aggregate: \"sum\" },\n      { field: \"eight\", aggregate: \"sum\" },\n      { field: \"nine\", aggregate: \"sum\" },\n      { field: \"ten\", aggregate: \"sum\" },\n      { field: \"eleven\", aggregate: \"sum\" },\n    ],\n    schemaDefinition: {\n      model: { id: \"accountUUID\" },\n    },\n  }),\n  methods: {\n    /* KENDO */\n    /* On grid changes => link to GL */\n    onGridChanges() {\n      let grid = kendo.jQuery(\"#gridSPL\").data(\"kendoGrid\");\n      let selectedItem = grid.dataItem(grid.select());\n\n      this.$router.push({\n        path: \"general_ledger\",\n        query: {\n          account_id: selectedItem.accountUUID,\n          start_date: this.startDate,\n          end_date: this.endDate,\n        },\n      });\n    },\n    // Search journals\n    search() {\n      if (this.project !== null) {\n        let sdate = this.startDate,\n          edate = this.endDate;\n\n        // Generate Fiscal Months\n        if (this.columnBy !== \"1\") {\n          sdate = this.fiscalDate.start_date;\n          edate = this.fiscalDate.end_date;\n\n          this.fiscalMonths = Helper.generateFiscalMonths(\n            sdate,\n            edate,\n            this.columnBy\n          );\n        }\n\n        if (sdate && edate) {\n          sdate =\n            kendo.toString(new Date(sdate), \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n          edate =\n            kendo.toString(new Date(edate), \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n        } else {\n          sdate = 0;\n          edate = 0;\n        }\n\n        // Empty dataSource\n        let ds = this.$refs.statementPLDS.kendoWidget();\n        ds.data([]);\n\n        /* Generate Group By */\n        this.generateGroupBy();\n\n        // Query\n        this.showLoading = true;\n        incomeStatementHandler\n          .getByProject(\n            {\n              params: {\n                start_date: sdate,\n                end_date: edate,\n                group_by: this.columnBy,\n              },\n            },\n            this.project.id,\n            this.levelCoa\n          )\n          .then((res) => {\n            if (res) {\n              this.statements = res.data;\n              this.bindData();\n            } else {\n              this.$snotify.error(i18n.t(\"error_something_wrong\"));\n            }\n          })\n          .finally(() => {\n            // this.showLoading = false;\n          });\n      } else {\n        this.$snotify.warning(i18n.t(\"please_select_project\"));\n      }\n    },\n    bindData() {\n      let entries = [];\n      this.statements.forEach((value) => {\n        /* Receipt */\n        if (\n          value.statementGroup.toLowerCase() === \"revenue\" ||\n          value.statementGroup.toLowerCase() === \"other revenue\"\n        ) {\n          value.statementType = \"Receipt\";\n          value.order = 1000;\n\n          entries.push(value);\n        } else {\n          /* Payment */\n          if (value.account_type_number < 100) {\n            value.statementType = \"Payment\";\n            value.order = 2000;\n\n            entries.push(value);\n          }\n        }\n\n        /* Receipt */\n        if (value.account_type_number === 105) {\n          value.statementType = this.footerName;\n          value.order = 3000;\n\n          entries.push(value);\n        }\n      });\n\n      /* Bind data */\n      this.statementPLList = entries;\n\n      /* Generate Column */\n      this.generateColumn();\n\n      this.showLoading = false;\n    },\n    // Row Template\n    accountTmpl(dataItem) {\n      let name = dataItem.number;\n\n      if (this.reportingLanguage === \"local\") {\n        name += \" - \" + dataItem.local_name;\n      } else {\n        name += \" - \" + dataItem.name;\n      }\n\n      return name;\n    },\n    typeGroupHeaderTmpl(dataItem) {\n      let name = dataItem.items[0].type;\n\n      if (this.reportingLanguage === \"local\") {\n        name = dataItem.items[0].type_local_name;\n      }\n\n      return name;\n    },\n    // Generate Columns\n    generateColumn() {\n      let defaultColumns = [\n        {\n          field: this.fieldName,\n          title: i18n.t(\"account\"),\n          template: this.accountTmpl,\n          locked: true,\n          width: 300,\n        },\n        {\n          field: \"statementType\",\n          title: i18n.t(\"statement_type\"),\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          hidden: true,\n          width: 250,\n        },\n        {\n          field: this.fieldType,\n          title: i18n.t(\"type\"),\n          hidden: true,\n          groupHeaderTemplate: this.typeGroupHeaderTmpl,\n          width: 300,\n        },\n        {\n          field: \"statementGroup\",\n          title: i18n.t(\"statement_group\"),\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n        {\n          field: \"groupNature\",\n          title: i18n.t(\"nature\"),\n          hidden: true,\n          groupHeaderTemplate:\n            \"<span class='text-bold text-black'>#=value#</span>\",\n          width: 300,\n        },\n      ];\n\n      let headerAttributes = {\n          class: \"table-header-cell\",\n          style: \"text-align: right;padding-right: 35px; font-size: 14px\",\n        },\n        attributes = {\n          class: \"table-cell\",\n          style: \"text-align: right; font-size: 14px\",\n        };\n\n      switch (this.columnBy) {\n        case \"12\": // MONTH\n          for (let i = 0; i < 12; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"4\": // QUARTER\n          for (let i = 0; i < 4; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 200,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        case \"2\": // SEMI-ANNUAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 400;\n\n          for (let i = 0; i < 2; i++) {\n            defaultColumns.push({\n              field: NumberInWord[i],\n              title: this.fiscalMonths[i],\n              format: \"{0:n}\",\n              width: 300,\n              aggregates: \"['sum']\",\n              groupHeaderColumnTemplate:\n                \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n              headerAttributes: headerAttributes,\n              attributes: attributes,\n            });\n          }\n\n          this.columns = defaultColumns;\n\n          break;\n\n        default:\n          // TOTAL\n          // Expand Column [0] width\n          defaultColumns[0].width = 600;\n\n          defaultColumns.push({\n            field: \"balance\",\n            title: i18n.t(\"total\"),\n            format: \"{0:n}\",\n            width: 300,\n            aggregates: \"['sum']\",\n            groupHeaderColumnTemplate:\n              \"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n            headerAttributes: headerAttributes,\n            attributes: attributes,\n          });\n\n          this.columns = defaultColumns;\n\n          break;\n      }\n    },\n    /* Databound */\n    dataBound(e) {\n      let grid = e.sender;\n\n      grid.dataSource.data().forEach((value) => {\n        if (value.account_type_number === 105) {\n          let row = grid.tbody\n            .find(\"tr[data-uid='\" + value.uid + \"']\")\n            .prev(\".k-grouping-row\");\n          grid.collapseGroup(row);\n        }\n      });\n    },\n    // On Reporint Language Changes\n    onReportingLanguageChanges() {\n      this.fieldName = \"name\";\n      this.fieldType = \"type\";\n      this.footerName = \"Surplus Or (Deflicit)\";\n      if (this.reportingLanguage === \"local\") {\n        this.fieldName = \"local_name\";\n        this.fieldType = \"type_local_name\";\n        this.footerName = \"អតិរេក/ឱនភាព\";\n      }\n\n      // Generate Group By\n      this.generateGroupBy();\n\n      // Generate column with new language\n      this.generateColumn();\n    },\n    // Generate Group By\n    generateGroupBy() {\n      let groupDefinition = [];\n\n      /* Default group */\n      groupDefinition.push({\n        field: \"statementType\",\n        aggregates: this.aggregateDefinition,\n        compare: function (a, b) {\n          if (a.items[0].order === b.items[0].order) {\n            return 0;\n          } else if (a.items[0].order > b.items[0].order) {\n            return 1;\n          } else {\n            return -1;\n          }\n        },\n      });\n\n      /* Level Coa */\n      if (this.levelCoa !== \"\") {\n        groupDefinition.push({\n          field: this.fieldType,\n          aggregates: this.aggregateDefinition,\n        });\n      }\n\n      /* Apply Group Definition */\n      this.groupDefinition = groupDefinition;\n    },\n  },\n  watch: {\n    reportingLanguage() {\n      this.onReportingLanguageChanges();\n    },\n  },\n  computed: {\n    appType() {\n      return dataStore.productType;\n    },\n  },\n  mounted() {\n    // Generate Group By\n    this.generateGroupBy();\n\n    // Initial Grid Columns\n    this.generateColumn();\n  },\n};\n</script>\n\n<style scoped>\n.reports_list {\n  width: 100%;\n  background-color: #fff;\n  padding: 20px 20px 5px;\n}\n.report_filter {\n  background-color: #f8f8f9;\n  padding: 0 20px 5px 20px;\n  position: relative;\n}\n.dv_mt {\n  margin-top: 24px;\n}\n.report_export {\n  position: absolute;\n  top: 15px;\n}\n.report_total {\n  padding: 12.5px;\n  text-align: right;\n  text-transform: uppercase;\n  font-weight: 700;\n  border-top: 1px solid #333;\n  border-bottom: 1px solid #333;\n}\n.custom_expansion\n  .v-expansion-panel-header\n  .v-expansion-panel-header__icon\n  .v-icon {\n  display: none !important;\n}\n.v-expansion-panel {\n  border-bottom: 1px solid #cccccc;\n  border-radius: 0;\n}\n.v-expansion-panel::before {\n  box-shadow: none;\n}\n.v-expansion-panel-header {\n  padding: 15px;\n}\n.v-expansion-panel-content__wrap {\n  padding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n  .dv_mt,\n  .dv_mt8 {\n    margin-top: 0;\n  }\n  .reports_list {\n    margin-top: 0;\n  }\n}\n</style>\n"]}]}