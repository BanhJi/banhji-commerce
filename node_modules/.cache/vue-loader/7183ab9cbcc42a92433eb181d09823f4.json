{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/e_commerce/b_b/CatalogList.vue?vue&type=style&index=0&id=6850806d&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/e_commerce/b_b/CatalogList.vue","mtime":1643184311015},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mdW5jdGlvbl9mb290ZXIgewogICAgcGFkZGluZzogMTVweDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoKcCB7CiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTsKfQoKLmFjdGlvbkJ0biB7CiAgICBoZWlnaHQ6IDQ3LjJweCAhaW1wb3J0YW50Owp9CgoudGV4dF90aXAgewogICAgZm9udC1zaXplOiA5cHg7CiAgICBsaW5lLWhlaWdodDogMTBweDsKfQoKQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7Cn0K"},{"version":3,"sources":["CatalogList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"CatalogList.vue","sourceRoot":"src/views/products_services/product/product_list_catalog","sourcesContent":["<template>\n    <v-row>\n        <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n\n                <v-row class=\"\">\n                    <v-col sm=\"9\" cols=\"12\" class=\"pt-0\">\n                        <h2 class=\"mb-0 font_20\">{{ $t('catalog') }}</h2>\n                    </v-col>\n                    <v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n                        <v-btn routes link to=\"catalog\" color=\"primary\"\n                               class=\" white--text float-right text-capitalize\">\n                            {{ $t('new_catalog') }}\n                        </v-btn>\n                    </v-col>\n                </v-row>\n\n                <v-row class=\"\">\n                    <v-col sm=\"12\" cols=\"12\" class=\"pb-0\">\n                        <!-- loading -->\n                        <LoadingMe\n                            :isLoading=\"showLoading\"\n                            :fullPage=\"false\"\n                            type=\"loading\"\n                            :myLoading=\"true\"/>\n                        <kendo-datasource ref=\"dataSource\"\n                                          :data=\"catalogs\"\n                                          :schema=\"gridSchema\"/>\n                        <kendo-grid id=\"gridCatalogList\"\n                                    class=\"grid-function\"\n                                    :data-source-ref=\"'dataSource'\"\n                                    :style=\"{width: '100%'}\"\n                                    :noRecords=\"true\"\n                                    :toolbar=\"toolbarTemplate\"\n                                    :excel-export=\"excelExport\"\n                                    :excel-file-name=\"'CatalogList.xlsx'\"\n                                    :excel-filterable=\"true\"\n                                    :scrollable-virtual=\"true\">\n                            <kendo-grid-column\n                                :field=\"'images'\"\n                                :title=\"$t('image')\"\n                                :width=\"40\"\n                                :template=\"loadImage\"\n                                :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            <kendo-grid-column\n                                :field=\"'number'\"\n                                :title=\"$t('number')\"\n                                :width=\"70\"\n                                :template=\"'<span>#=number#</span>'\"\n                                :groupHeaderColumnTemplate=\"'#=value#'\"\n                                :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            <kendo-grid-column\n                                :field=\"'name'\"\n                                :attributes=\"{class:'tb_name_td'}\"\n                                :title=\"$t('name')\"\n                                :width=\"100\"\n                                :template=\"'<span>#=name#</span>'\"\n                                :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            <kendo-grid-column\n                                :field=\"'publicLink'\"\n                                :title=\"$t('public_link')\"\n                                :width=\"100\"\n                                :template=\"linkToTemplate\"\n                                :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            <kendo-grid-column\n                                :field=\"'description'\"\n                                :title=\"$t('description')\"\n                                :width=\"100\"\n                                :template=\"'<span>#=description#</span>'\"\n                                :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                            <kendo-grid-column\n                                :field=\"''\"\n                                :title=\"$t('action')\"\n                                :width=\"60\"\n                                :command=\"[{ text: $t('edit'), click: goEdit }]\"\n                                :headerAttributes=\"{style: 'text-align: left; background-color: #EDF1F5'}\"/>\n                        </kendo-grid>\n                    </v-col>\n                </v-row>\n            </v-card>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport kendo from \"@progress/kendo-ui\";\nconst $ = kendo.jQuery\nconst catalogHandler = require(\"@/scripts/catalogHandler\")\n\nimport JSZip from \"jszip\";\nimport LinkTemplate from \"@/components/kendo_templates/LinkTemplate\";\nwindow.JSZip = JSZip;\nexport default {\n    components: {\n        LoadingMe: () => import(`@/components/Loading`)\n    },\n    data: () => ({\n        showLoading: false,\n        catalogs: [],\n        imgURL: 'https://s3-ap-southeast-1.amazonaws.com/images.banhji/',\n        gridSchema: {\n            model: {\n                id: \"id\"\n            }\n        }\n    }),\n    props: {},\n    methods: {\n        linkToTemplate(data) {\n            let url = `production/${data.id}`\n            let args = {\n                text: 'Link',//data.publicLink,\n                url: url,\n                data: data,\n            }\n            return {\n                template: LinkTemplate,\n                templateArgs: args\n            }\n        },\n        loadImage(dataItem) {\n            if (dataItem.hasOwnProperty('images')) {\n                if (dataItem.images.hasOwnProperty('default')) {\n                    const url = this.imgURL + dataItem.images.default.thumb\n                    return \"<img width='50' height='50' style= 'margin: auto;display: block;' src='\" + url + \"' />\"\n                }\n            } else {\n                return ''\n            }\n        },\n        goEdit(e) {\n            e.preventDefault();\n            let grid = kendo.jQuery(\"#gridCatalogList\").data(\"kendoGrid\");\n            let dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n            this.$router.push({\n                path: 'catalog' + `/${dataItem.id}`,\n                params: {id: dataItem.id},\n                query: {type: 'edit'}\n            })\n        },\n        async loadCatalogs() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    this.showLoading = true\n                    catalogHandler.get().then(res => {\n                        this.showLoading = false\n                        this.catalogs = res\n                    })\n                }, 10);\n            })\n        },\n        callback() {\n            if (this.$route.params !== null && this.$route.params.hasOwnProperty('data')) {\n                const catalog = this.$route.params.data\n                let flag = false\n                this.catalogs.forEach(function (part, index, item) {\n                    if ((item[index].id === catalog.id)) {\n                        item[index] = catalog\n                        flag = true\n                    }\n                })\n                if (flag === false) {\n                    this.catalogs.push(catalog)\n                }\n                let dataSource = new kendo.data.DataSource({\n                    data: this.catalogs\n                });\n                let grid = $('#gridCatalogList').data(\"kendoGrid\");\n                dataSource.read();\n                grid.setDataSource(dataSource);\n            }\n        },\n        excelExport: function (e) {\n            // const pivot = this.$refs.gridTransactionDS.kendoWidget()\n            // pivot.saveAsExcel()\n            window.console.log(e.data);\n        },\n        initToolbar(that) {\n            let grid = $(\"#gridCatalogList\").data(\"kendoGrid\");\n            let gridElement = grid.element;\n            let toolbarElement = gridElement.find(\".k-grid-toolbar\");\n            toolbarElement.on(\"click\", \".k-pager-refresh\", function (e) {\n                e.preventDefault();\n                onReloadData(that);\n            });\n            toolbarElement.on(\"click\", \".k-pager-excel\", function (e) {\n                e.preventDefault();\n                onExportExcel(that);\n            });\n\n            function onReloadData(that) {\n                that.loadCatalogs();\n            }\n\n            function onExportExcel(that) {\n                that.exportToExcel();\n            }\n        },\n        exportToExcel() {\n            const grid = $(\"#gridCatalogList\").data(\"kendoGrid\")\n            grid.saveAsExcel()\n        },\n        toolbarTemplate: function () {\n            const templateHtml =\n                '<span>' +\n                '<a class=\"k-pager-excel k-link k-button excel\" title=\"Export to Excel\"> <span class=\"k-icon k-i-excel\"></span>Export to excel </a>' +\n                '</span><span>&nbsp;&nbsp;</span>' +\n                '<span style=\"position:absolute; right:5px\">' +\n                '</span>' +\n                '<span>' +\n                '<a class=\"k-pager-refresh k-link k-button reload\" title=\"Refresh\"><span class=\"k-icon k-i-reload\"></span> Refresh </a>' +\n                '</span>'\n\n            return kendo.template(templateHtml)\n        },\n    },\n    mounted: async function () {\n        await this.loadCatalogs()\n        await this.initToolbar(this)\n    },\n    computed: {},\n    watch: {\n        // '$route': 'callback'\n    },\n};\n</script>\n\n<style scoped>\n\n.function_footer {\n    padding: 15px;\n    display: inline-block;\n}\n\np {\n    color: rgba(0, 0, 0, 0.87);\n}\n\n.actionBtn {\n    height: 47.2px !important;\n}\n\n.text_tip {\n    font-size: 9px;\n    line-height: 10px;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}