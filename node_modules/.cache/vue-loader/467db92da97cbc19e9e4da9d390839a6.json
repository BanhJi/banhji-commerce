{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/budgeting/budgets/ConsolidatedBudgetPerformance.vue","mtime":1642390528849},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ConsolidatedBudgetPerformance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConsolidatedBudgetPerformance.vue","sourceRoot":"src/views/budgeting/budgets","sourcesContent":["<template>\n    <v-card color=\"white\" class=\"pl-2 no_border\" elevation=\"0\">\n        <!-- Title -->\n        <v-row>\n            <v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"text-left mb-1 font_20 line_24\">{{$t('consolidated_budget_performance_report')}}</h3>\n                <p class=\"mb-0\">{{$t('consolidated_budget_performance_dec')}}</p>\n            </v-col>\n            <v-col sm=\"3\" cols=\"12\" class=\"pb-1\">\n                <app-reporting-language \n                    :initLanguage=\"reportingLanguage\" \n                    @emitLanguage=\"reportingLanguage = $event\" \n                    @onChanged=\"onReportingLanguageChanges\" />\n            </v-col>\n        </v-row>\n\n        <!-- Search -->\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('fiscal_year')}}:</label>\n                <app-fiscal-date-dropdownlist\n                    :initFiscalDate=\"fiscalDate\"\n                    @emitFiscalDate=\"fiscalDate = $event\"\n                />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('from')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"startMonth\" \n                    @emitMonthOf=\"startMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('to')}}:</label>\n                <app-month-of-picker \n                    :initMonthOf=\"endMonth\" \n                    @emitMonthOf=\"endMonth = $event\"\n                    :initMin=\"fiscalDate.start_date\"\n                    :initMax=\"fiscalDate.end_date\" />\n            </v-col>\n        </v-row>\n        <v-row class=\"mt-0\">\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-0\">\n                <label class=\"mb-1\">{{$t('budgets')}}:</label>\n                <budget-list-item-group \n                    :initBudgets=\"selectedBudgets\"\n                    :initFiscalYear=\"fiscalDate.uuid\" \n                    @emitBudgets=\"selectedBudgets = $event\" />\n            </v-col>\n            <v-col sm=\"4\" cols=\"12\" class=\"py-0 pt-6\">\n                <v-btn\n                    class=\"white--text\"\n                    color=\"primary\"\n                    @click=\"search\"\n                >\n                    <i class=\"b-search\" style=\"font-size: 18px; color:#fff !important;\"/>\n                </v-btn>\n            </v-col>\n        </v-row>\n        \n        <!-- Grid -->\n        <v-row>\n            <v-col sm=\"12\" cols=\"12\" class=\"pt-1\">\n                <template>\n                    <treelistdatasource \n                        ref=\"statementDS\"\n                        :data=\"statementList\"\n                        :sort=\"sortDefinition\"\n                        :schema-model=\"model\" />\n\n                    <treelist \n                        ref=\"statementTreeList\"\n                        data-source-ref=\"statementDS\"\n                        :resizable=\"true\"\n                        :columns=\"columns\"\n                        :dataBound=\"onDataBound\" />\n\n                    <LoadingMe\n                        type=\"loading\"\n                        :isLoading=\"showLoading\"\n                        :myLoading=\"true\"\n                        :fullPage=\"false\" />\n                </template>\n            </v-col>\n        </v-row>\n    </v-card>\n</template>\n\n<script>\n    import kendo from '@progress/kendo-ui';\n    import {i18n} from '@/i18n';\n    import Helper from \"@/helper.js\";\n    /* Models */\n    import AccountModel from \"@/scripts/model/Account.js\";\n    import FiscalDateModel from \"@/scripts/model/FiscalDate\";\n    import StatementOfProfitOrLossModel from \"@/scripts/model/StatementOfProfitOrLoss\";\n\n    /* TreeList */\n    import { TreeList } from '@progress/kendo-treelist-vue-wrapper';\n    import { TreeListDataSource } from '@progress/kendo-datasource-vue-wrapper';\n    \n    /* Vuex */\n    import { mapState } from 'vuex';\n\n    const incomeStatementHandler = require(\"@/scripts/handler/accounting/incomeStatementHandler\");\n    const OrderNumberPL = require(\"@/scripts/default_setup/OrderNumberPL.js\");\n    const AccountTypeCode = require(\"@/scripts/default_setup/AccountTypeCode.js\");\n\n    export default {\n        components:{\n            \"LoadingMe\": () => import('@/components/Loading'),\n            \"app-fiscal-date-dropdownlist\": () => import('@/components/kendo_templates/FiscalDateDropDownList'),\n            \"app-month-of-picker\": () => import('@/components/kendo_templates/MonthOfPicker'),\n            'app-reporting-language': () => import('@/components/kendo_templates/ReportingLanguageDropDownList'),\n            'budget-list-item-group': () => import('@/components/dropdownlist/BudgetListItemGroup'),\n            'treelist': TreeList,\n            'treelistdatasource': TreeListDataSource,\n        },\n        data: () => ({\n            selectedBudgets: [],\n            segmentIds: [],\n            statements : [],\n            statementList : [],\n            startMonth: '',\n            endMonth: '',\n            minMonth : '',\n            maxMonth : '',\n            /* Fiscal Date */\n            fiscalDate: new FiscalDateModel(),\n            /* Kendo */\n            columns : [],\n            sortDefinition : [\n                { field: \"order\", dir: \"asc\" },\n                { field: \"number\", dir: \"asc\" },\n            ],\n\t\t\tmodel: {\n                id: \"uuid\",\n                expanded: true\n            },\n            // Reporting Language\n\t\t\treportingLanguage: 'english',\n\t\t\tfieldName : 'name',\n            // LoadingMe\n            showLoading: false,\n        }),\n        methods:{\n            validating(){\n                let isValid = true;\n\n                if(this.fiscalDate.uuid === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_fiscal_year\"));\n                }\n\n                if(this.startMonth === '' || this.endMonth === ''){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_from_to_month\"));\n                }\n\n                if(this.selectedBudgets.length === 0){\n                    isValid = false;\n                    this.$snotify.warning(i18n.t(\"please_select_budgets\"));\n                }\n\n                return isValid;\n            },\n            /* Search */\n            search () {\n                if(this.validating()){\n                    let endMonth = new Date(this.endMonth),\n                        lastDay = new Date(endMonth.getFullYear(), endMonth.getMonth()+1, 0);\n\n                    let sdate = kendo.toString(new Date(this.startMonth), 'yyyy-MM-dd') + 'T00:00:00.000Z',\n                        edate = kendo.toString(lastDay, 'yyyy-MM-dd') + 'T23:59:59.999Z';\n\n                    /* Segment Ids */\n                    let segmentIds = [];\n                    this.$store.state.budgets.list.forEach(value => {\n                        if(~this.selectedBudgets.indexOf(value.uuid)) {\n                            segmentIds.push(value.segment_uuid);\n                        }\n                    });\n                    /* Remove Duplicate */\n                    this.segmentIds = [...new Set(segmentIds)];\n                    \n                    // Empty datasource\n                    let ds = this.$refs.statementDS.kendoWidget();\n                    ds.data([]);\n                    \n                    // Query Income Statement\n                    this.showLoading = true;\n                    incomeStatementHandler.getBySegments(sdate, edate, this.segmentIds)\n                    .then(res => {\n                        if(res){\n                            this.statements = res;\n                            this.bindData();\n                        }else{\n                            this.$snotify.error(i18n.t(\"error_something_wrong\"));\n                        }\n                    })\n                    .finally(()=>{\n                        // this.showLoading = false;\n                    });\n                }\n\t\t\t},\n            async bindData () {\n                let g = {}, childIds = [];\n\n                /* Generate Months */\n                let fiscalMonths = Helper.generateFiscalMonths(this.fiscalDate.start_date, this.fiscalDate.end_date, \"12\", \"yyyy-MM\");\n\n                /* Month Index */\n                let startMonthIndex = fiscalMonths.indexOf(this.startMonth),\n                    endMonthIndex = fiscalMonths.indexOf(this.endMonth);\n\n                let minMonthIndex = startMonthIndex, maxMonthIndex = endMonthIndex;\n                if(startMonthIndex > endMonthIndex){\n                    minMonthIndex = endMonthIndex, maxMonthIndex = startMonthIndex;\n                }\n\n                // Load Account List\n                await this.$store.dispatch('accounting/getAccounts'); \n\n                /* Loop all budgets */\n                for (let i = 0; i < this.selectedBudgets.length; i++) {\n                    const budget = this.$store.state.budgets.list.find((item) => item.uuid === this.selectedBudgets[i]);\n\n                    /* Budget lines */\n                    budget.lines.forEach(value => {\n                        /* Get Account */\n                        let account = this.accounts.find((item) => item.uuid === value.account_uuid);\n                        \n                        /* Order */\n                        let order = account.type_code;\n                        if(account.type_code === AccountTypeCode.OTHER_REVENUE){\n                            order = OrderNumberPL[account.type_code];\n                        }\n\n                        /* GROUPING */\n                        /* Top Level Account Type */\n                        if(!g[account.type_code]){\n                            g[account.type_code] = new StatementOfProfitOrLossModel({\n                                uuid : account.type_code,\n                                number : account.type_code,\n                                name : account.account_type.name,\n                                local_name : account.account_type.local_name,\n                                order : order,\n                            });\n                        }\n                        \n                        /* Parent Level */\n                        let thisAccountParentId = \"\";\n                        if(account.hasOwnProperty(\"parent_account\")){\n                            let currentParentAccount = new AccountModel(account.parent_account), counter = 0;\n                            while (currentParentAccount.number !== \"\") {\n                                /* Get account by uuid or banhji_account_number */\n                                let accountParent = new AccountModel();\n                                if(currentParentAccount.uuid !== \"\"){/* Get by uuid */\n                                    accountParent = new AccountModel(this.accounts.find((item) => item.uuid === currentParentAccount.uuid));\n                                }else{/* Get by banhji_account_number because default data has no uuid */\n                                    if(currentParentAccount.banhji_account_number !== \"\"){\n                                        accountParent = new AccountModel(this.accounts.find((item) => item.banhji_account_number === currentParentAccount.banhji_account_number));\n                                    }\n                                }\n\n                                /* Set This Account Parent Id */\n                                if(counter === 0){\n                                    thisAccountParentId = accountParent.uuid;\n                                }\n\n                                /* Find Next Parent */\n                                let nextParent = new AccountModel();\n                                if(accountParent.hasOwnProperty(\"parent_account\")){\n                                    let parentOfAccountParent = new AccountModel(accountParent.parent_account);\n                                    if(parentOfAccountParent.number !== \"\"){\n                                        if(parentOfAccountParent.uuid !== \"\"){/* Get by uuid */\n                                            nextParent = this.accounts.find((item) => item.uuid === parentOfAccountParent.uuid);\n                                        }else{/* Get by banhji_account_number because default data has no uuid */\n                                            if(parentOfAccountParent.banhji_account_number !== \"\"){\n                                                nextParent = this.accounts.find((item) => item.banhji_account_number === parentOfAccountParent.banhji_account_number);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                /* Set Parent Id */\n                                let parentId = accountParent.type_code;\n                                if(nextParent.number !== \"\"){\n                                    parentId = nextParent.uuid;\n\n                                    /* Set next parent account */\n                                    Object.assign(currentParentAccount, nextParent);\n                                }else{\n                                    /* Set loop to end */\n                                    currentParentAccount.number = \"\";\n                                }\n\n                                /* Add Parent Level */\n                                g[accountParent.uuid] = new StatementOfProfitOrLossModel({\n                                    uuid : accountParent.uuid,\n                                    number : accountParent.number,\n                                    name : accountParent.name,\n                                    local_name : accountParent.local_name,\n                                    parentId : parentId,\n                                    account : accountParent,\n                                    order : order,\n                                });\n\n                                /* Increase Counter By 1 */\n                                counter++;\n                            }/* End While Loop */\n                        }\n\n                        /* Child Level */\n                        if(!g[account.uuid]){\n                            g[account.uuid] = new StatementOfProfitOrLossModel({\n                                uuid : account.uuid,\n                                number : account.number,\n                                name : account.name,\n                                local_name : account.local_name,\n                                account : account,\n                                order : order,\n                            });\n                        }\n\n                        /* Budget Amount */\n                        let budgetAmount = 0;\n                        for (let j = 0; j < 12; j++) {\n                            if(j >= minMonthIndex && j <= maxMonthIndex){\n                                let nature = 1;\n                                if(account.account_type.nature.toLowerCase() === \"cr\"){\n                                    nature = -1;\n                                }\n                                budgetAmount += kendo.parseFloat(value.monthly_amount[j].amount) * nature;\n                            }\n                        }\n\n                        /* Set Parent Id Or Self Parent */\n                        let childId = account.uuid;\n                        if(thisAccountParentId !== \"\"){/* Child Level */\n                            g[account.uuid].parentId = thisAccountParentId;\n                            g[account.uuid].budgetAmount = budgetAmount;\n                        }else{/* Child As Parent */\n                            g[account.uuid].parentId = account.type_code; /* Self As Parent */\n\n                            if(budgetAmount !== 0){\n                                childId = account.number;\n\n                                /* Self As Child With Balance */\n                                if(!g[account.number]){\n                                    g[account.number] = new StatementOfProfitOrLossModel({\n                                        uuid : account.number,\n                                        number : account.number,\n                                        name : account.name,\n                                        local_name : account.local_name,\n                                        parentId : account.uuid,\n                                        account : account,\n                                        budgetAmount : budgetAmount,\n                                        order : order,\n                                    });\n                                }\n                            }\n                        }\n\n                        /* Child Id */\n                        childIds.push(childId);\n                    });\n                }\n\n                /* ACTUAL */\n                /* Define Segments */\n                for (let key in g){\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        g[key][\"s\"+i] = 0;\n                    }\n                }\n                /* Sum Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    this.statements[i].forEach(value => {\n                        if(g[value.accountUUID]){\n                            g[value.accountUUID][\"s\"+i] += kendo.parseFloat(value.balance);\n                        }\n                        \n                        /* Other Groups */\n                        if(value.account_type_number >= 100 && value.account_type_number <= 105){\n                            g[value.account_type_number] = new StatementOfProfitOrLossModel({\n                                uuid: value.account_type_number,\n                                name: value.name,\n                                local_name: value.local_name,\n                                order: OrderNumberPL[value.account_type_number],\n                            });\n                        }\n                    });\n                }\n                \n                /* Parse Object Array */\n                let entries = Object.values(g);\n                \n                /* Parent aggregate sum */\n                for (let i = 0; i < entries.length; i++) {\n                    let entry = entries[i];\n                    \n                    if(~childIds.indexOf(entry.uuid)){\n                        let parentId = entry.parentId;\n                        while(parentId !== null){\n                            if(parentId){\n                                let parent = entries.find((item) => item.uuid === parentId);\n                                if(parent){\n                                    parent.budgetAmount += entry.budgetAmount;\n\n                                    /* Define Segments */\n                                    for (let j = 0; j < this.segmentIds.length; j++) {\n                                        parent[\"s\"+j] += entry[\"s\"+j];\n                                    }\n\n                                    /* Set new parent id */\n                                    parentId = parent.parentId;\n                                }else{\n                                    /* Set loop to end */\n                                    parentId = null;\n                                }\n                            }else{\n                                /* Set loop to end */\n                                parentId = null;\n                            }\n                        }\n                    }\n                }\n\n                /* Other Groups */\n                /* Gross Profit */\n                let revenue = this.getEntry(entries, AccountTypeCode.REVENUE),\n                    costOfSale = this.getEntry(entries, AccountTypeCode.COGS),\n                    grossProfit = this.getEntry(entries, AccountTypeCode.GROSS_PROFIT);\n\n                /* EBITDA */\n                let salaryBenefit = this.getEntry(entries, AccountTypeCode.SALARY_BENEFIT),\n                    saleMarketing = this.getEntry(entries, AccountTypeCode.SALE_MARKETING),\n                    researchProductDevelopment = this.getEntry(entries, AccountTypeCode.RESEARCH_PRODUCT_DEVELOPMENT),\n                    legalProfessionalFee = this.getEntry(entries, AccountTypeCode.LEGAL_PROFESSIONAL_FEE),\n                    generalAdminExpenses = this.getEntry(entries, AccountTypeCode.GENERAL_ADMIN_EXPENSE),\n                    operatingExpenses = this.getEntry(entries, AccountTypeCode.OPERATING_EXPENSE),\n                    otherRevenue = this.getEntry(entries, AccountTypeCode.OTHER_REVENUE),\n                    operatingIncomeEBITDA = this.getEntry(entries, AccountTypeCode.OPERATING_INCOME_EBITDA);\n\n                /* EBIT */\n                let depreciation = this.getEntry(entries, AccountTypeCode.DEPRECIATION),\n                    otherExpenses = this.getEntry(entries, AccountTypeCode.OTHER_EXPENSE),\n                    earningBeforeInterestAndTaxEBIT = this.getEntry(entries, AccountTypeCode.EARNING_BEFORE_INTEREST_AND_TAX_EBIT);\n\n                /* Profit Before Tax */\n                let financingCost = this.getEntry(entries, AccountTypeCode.FINANCING_COST),\n                    profitBeforeTax = this.getEntry(entries, AccountTypeCode.PROFIT_BEFORE_TAX);\n\n                /* Profit For The Period */\n                let taxRelatedExpenses = this.getEntry(entries, AccountTypeCode.TAX),\n                    profitForThePeriod = this.getEntry(entries, AccountTypeCode.PROFIT_FOR_THE_PERIOD);\n                    \n                /* Calculate Budget Amount */\n                grossProfit.budgetAmount = revenue.budgetAmount - costOfSale.budgetAmount;\n                operatingExpenses.budgetAmount = salaryBenefit.budgetAmount + saleMarketing.budgetAmount + researchProductDevelopment.budgetAmount + legalProfessionalFee.budgetAmount + generalAdminExpenses.budgetAmount;\n                operatingIncomeEBITDA.budgetAmount = (grossProfit.budgetAmount + otherRevenue.budgetAmount) - operatingExpenses.budgetAmount;\n                earningBeforeInterestAndTaxEBIT.budgetAmount = operatingIncomeEBITDA.budgetAmount - depreciation.budgetAmount - otherExpenses.budgetAmount;\n                profitBeforeTax.budgetAmount = earningBeforeInterestAndTaxEBIT.budgetAmount - financingCost.budgetAmount;\n                profitForThePeriod.budgetAmount = profitBeforeTax.budgetAmount - taxRelatedExpenses.budgetAmount;\n\n                /* Calculate Segment Amount */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    grossProfit[\"s\"+i] = revenue[\"s\"+i] - costOfSale[\"s\"+i];\n                    operatingExpenses[\"s\"+i] = salaryBenefit[\"s\"+i] + saleMarketing[\"s\"+i] + researchProductDevelopment[\"s\"+i] + legalProfessionalFee[\"s\"+i] + generalAdminExpenses[\"s\"+i];\n                    operatingIncomeEBITDA[\"s\"+i] = (grossProfit[\"s\"+i] + otherRevenue[\"s\"+i]) - operatingExpenses[\"s\"+i];\n                    earningBeforeInterestAndTaxEBIT[\"s\"+i] = operatingIncomeEBITDA[\"s\"+i] - depreciation[\"s\"+i] - otherExpenses[\"s\"+i];\n                    profitBeforeTax[\"s\"+i] = earningBeforeInterestAndTaxEBIT[\"s\"+i] - financingCost[\"s\"+i];\n                    profitForThePeriod[\"s\"+i] = profitBeforeTax[\"s\"+i] - taxRelatedExpenses[\"s\"+i];\n                }\n\n                /* Find Percentage */\n                entries.forEach(value => {\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        value[\"p\"+i] = this.findPercentage(value[\"s\"+i], value.budgetAmount);\n                    }\n                });\n                \n                /* BIND STATMENT */\n                this.statementList = entries;\n                \n                this.generateColumn();\n\n                this.showLoading = false;\n\t\t\t},\n            getEntry(entries, id){\n                let entry = entries.find(i=>i.uuid === id);\n\n                if(!entry){\n                    entry = new StatementOfProfitOrLossModel();\n                    for (let i = 0; i < this.segmentIds.length; i++) {\n                        entry[\"s\"+i] = 0;\n                    }\n                }\n\n                return entry;\n            },\n            findPercentage (value1, value2) {\n                let result = 0;\n                if(value2 !== 0){\n                    result = value1 / value2;\n                }\n\n                return result;\n            },\n            /* On databound */\n            onDataBound (e) {\n                var headers = e.sender.thead.children();\n                for (var i = 0; i < headers.length; i++) {\n                    var th = kendo.jQuery(headers[i]);\n                    th.css(\"font-weight\", \"bold\");\n                    th.css(\"text-align\", \"center\");\n                }\n\n                var rows = e.sender.tbody.children();\n                for (var j = 0; j < rows.length; j++) {\n                    var row = kendo.jQuery(rows[j]);\n                    var dataItem = e.sender.dataItem(row);\n                    \n                    /* Amount align right */\n                    row.css(\"text-align\", \"right\");\n\n                    /* Parent in bold */\n                    if(dataItem.get(\"hasChildren\") || dataItem.uuid >= 100){\n                        row.css(\"font-weight\", \"bold\");\n                    }\n                }\n            },\n            // Generate Columns\n\t\t\tgenerateColumn() {\n                let headerAttributes = {\n                        class: \"table-header-cell\",\n                        style: \"text-align: center;padding-right: 35px; font-size: 14px\",\n                    },\n                    attributes = {\n                        class: \"table-cell\",\n                        style: \"text-align: right; font-size: 14px\",\n                    };\n\n                let columns = [\n                    {\n                        field: this.fieldName,\n                        title: i18n.t(\"account\"),\n                        template: this.nameTmpl,\n                        locked: true,\n                        width: 450,\n                    },\n                    {\n                        field: \"budgetAmount\",\n                        title: i18n.t(\"budget\"),\n                        format: \"{0:n}\",\n                        width: 200,\n                        headerAttributes: headerAttributes,\n                        attributes: attributes,\n                    }\n                ];\n\n                /* Set Column Segments */\n                for (let i = 0; i < this.segmentIds.length; i++) {\n                    /* Segment */\n                    let segment = this.$store.state.segments.list.find(\n                        (item) => item.id === this.segmentIds[i]\n                    );\n\n                    columns.push({\n                        title: segment.name,\n                        headerAttributes: headerAttributes,\n                        columns:[\n                            {\n                                field: \"s\" + i,\n                                title: i18n.t(\"actual_amount\"),\n                                format: \"{0:n}\",\n                                width: 200,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            },\n                            {\n                                field: \"p\" + i,\n                                title: \"%\",\n                                format: \"{0:p}\",\n                                width: 100,\n                                headerAttributes: headerAttributes,\n                                attributes: attributes,\n                            }\n                        ]\n                    });\n                }\n\n                this.columns = columns;\n            },\n            nameTmpl(dataItem){\n                /* Name in language */\n                let name = dataItem.name;\n                if(this.reportingLanguage === \"local\"){\n                    name = dataItem.local_name;\n                }\n\n                /* Define result */\n                let result = `<span>${dataItem.number} - ${name}</span>`;\n\n                /* Top Level */\n                if(dataItem.parentId === null){\n                    result = `<span style='font-weight: bolder;'>${name}</span>`;\n                }\n\n                /* Parent Level */\n                if(dataItem.hasChildren && dataItem.number.length > 3){\n                    result = `<span style='font-weight: bolder;'>${dataItem.number} - ${name}</span>`;\n                }\n\n                return result;\n            },\n\t\t\t// On Reporint Language Changes\n\t\t\tonReportingLanguageChanges () {\n                this.fieldName = \"name\";\n                if(this.reportingLanguage === \"local\"){\n                    this.fieldName = \"local_name\";\n                }\n\n                // Generate column with new language\n                this.generateColumn();\n\t\t\t},\n        },\n        computed: mapState({\n            accounts: state => state.accounting.accounts\n        }),\n        mounted () {\n\t\t},\n    };\n</script>\n\n<style scoped>\n    .theme--light.v-data-table {\n        background-color: transparent !important;\n    }\n\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple1_table.theme--light,\n    .v-data-table > .v-data-table__wrapper > table > tbody > tr:first-child > td {\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-left: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .theme--light.v-data-table.simple1_table > .v-data-table__wrapper > table > thead > tr:last-child > th:last-child{\n        border-right: none !important;\n    }\n\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n        background-color: transparent !important;\n    }\n\n    .border-bottom {\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n\n    .font-small {\n        font-size: 12px;\n        line-height: 15px;\n    }\n\n    .font-26 {\n        font-size: 26px !important;\n    }\n    .v-data-table.simple_table.theme--light{\n        border-top: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th{\n        border-bottom: none !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th{\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: thin solid rgba(0, 0, 0, 0.12) !important;\n    }\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:last-child,\n    .theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr > td:last-child{\n        border-right: none !important;\n    }\n\n\n    .v-data-table.table_list > .v-data-table__wrapper > table > tbody > tr > td {\n        height: 32px !important;\n        border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n        border-right: none !important;\n    }\n    .v-data-table.table_list.theme--light > .v-data-table__wrapper > table > tbody > tr:first-child > td{\n        border-top: none !important;\n    }\n\n    @media (max-width: 576px) {\n\n    }\n</style>"]}]}