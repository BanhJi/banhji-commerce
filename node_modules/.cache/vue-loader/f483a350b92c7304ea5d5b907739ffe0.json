{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Adjustment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/payroll/payroll_run/Adjustment.vue","mtime":1639966363945},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Adjustment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Adjustment.vue","sourceRoot":"src/views/payroll/payroll_run","sourcesContent":["<template>\n    <v-row>\n        <v-col cols=\"12\" class=\"pt-0\">\n            <v-row>\n                <v-col sm=\"4\" cols=\"12\">\n                    <h3>{{$t('payroll_adjustment')}}</h3>\n                </v-col>\n            </v-row>\n        </v-col>\n        <v-col cols=\"12\">\n            <kendo-datasource ref=\"dataSourceAdjus\"\n                :data=\"adjustmentList\"\n                :change=\"onChanges\"/>\n                <kendo-grid id=\"gridAdjus\" class=\"grid-function\"\n                    :data-source-ref=\"'dataSourceAdjus'\"\n                    :editable=\"true\"\n                    :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                    :field=\"'no'\"\n                    :title=\"$t('no')\"\n                    :template=\"rowNumberTmpl\"\n                    :width=\"80\"\n                    :column-menu=\"false\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5;', class: 'text-center'\t}\"\n                    :attributes=\"{style: 'text-align: center'}\"/>\n                <kendo-grid-column\n                    :field=\"'employee'\"\n                    :width=\"250\"\n                    :title=\"$t('employee_name')\"\n                    :template=\"'<span>#= employee.name#</span>'\"\n                    :editor=\"employeeDropDownEditor\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <kendo-grid-column\n                    :field=\"'payrollComponent'\"\n                    :width=\"220\"\n                    :title=\"$t('payroll_component')\"\n                    :template=\"'<span>#= payrollComponent.name#</span>'\"\n                    :editor=\"payrollComponentDropDownEditor\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"/>\n                <!-- <kendo-grid-column\n                    :field=\"'segment'\"\n                    :title=\"$t('segment')\"\n                    :width=\"150\"\n                    :template=\"'<span>#=segment.name#</span>'\"\n                    :editor=\"segmentDropDownEditor\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/> -->\n                <kendo-grid-column\n                    :field=\"'currency'\"\n                    :title=\"$t('currency')\"\n                    :width=\"200\"\n                    :editable=\"() => {return false;}\"\n                    :template=\"'<span>#=currency.code# - #=currency.name#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'amount'\"\n                    :title=\"$t('amount')\"\n                    :template=\"'<span>#= kendo.toString(amount,`n2`)#</span>'\"\n                    :headerAttributes=\"{\n                        style: 'background-color: #EDF1F5'\n                    }\"\n                    :attributes=\"{\n                        style: 'text-align: right;'\n                    }\"/>\n                 <kendo-grid-column\n                    :width=\"100\"\n                    :command=\"{ iconClass: 'k-icon k-i-trash', text: ' ', click: removeRow, class: 'btn-plus' }\"\n                    :title=\"$t('action')\"\n                    :headerAttributes=\"{style: 'text-align: center; background-color: #EDF1F5'}\"\n                    :attributes=\"{style: 'text-align: center'}\"/>\n            </kendo-grid>\n            <v-btn color=\"primary\"\n                    class=\"float-left rounded-0 white--text mt-3\"\n                    @click=\"addRow\">\n                <v-icon size=\"\" class=\"ma-1\">mdi-plus</v-icon>\n            </v-btn>\n        </v-col>\n        <LoadingMe :isLoading=\"showLoading\" :fullPage=\"true\" :myLoading=\"true\"  type=\"loading\"/>\n    </v-row>\n</template>\n<script>\n    import kendo from \"@progress/kendo-ui\"\n    import PayrollList from \"@/scripts/model/PayrollList\"\n    import PayrollRun from \"@/scripts/model/PayrollRun\";\n    import Adjustment from \"@/scripts/model/Adjustment\"\n    const settingsHandler = require(\"@/scripts/settingsHandler\")\n    const payrollHandler = require(\"@/scripts/payrollHandler\")\n    const employeeHandler = require(\"@/scripts/employeeHandler\")\n    const payrollListModel = new PayrollList({})\n    const adjustmentModel = new Adjustment({})\n    const $ = require(\"jquery\")\n    const cookieJS = require(\"@/cookie.js\");\n    const cookie = cookieJS.getCookie();\n\n    export default {\n        props:['propAdjustment'],\n        data: () =>({\n            journal_date: \"\",\n            dialogm: false,\n            pyrollList: [],\n            showLoading: false,\n            payrollList: payrollListModel,\n            adjustment: adjustmentModel,\n            adjustmentList: [],\n            segments: [],\n            loggedUser: {\n                id: cookie.creator,\n                name: cookie.email\n            },\n            record: {}\n        }),\n        components: {\n            LoadingMe: () => import(`@/components/Loading`)\n        },\n        methods:{\n            loadPayrollList(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true;\n                        payrollHandler.getPayroll(this.$route.params.id).then(res => {\n                            this.showLoading = true;\n                            if(res.data.statusCode === 200){\n                                const resultPay = res.data.data[0]\n                                if(resultPay.step >= 2){\n                                    this.loadPayrollItem(resultPay)\n                                }\n                            }\n                        })\n                    }, 300);\n                })\n            },\n            loadPayrollItem(result){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        payrollHandler.getPayrollItem(result.id).then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                let resutl_item = res.data.data\n                                this.showLoading = false\n                                this.loadPayrolls = resutl_item\n                                this.payrolls   = result\n                                if(result.adjustment.length > 0){\n                                    this.adjustmentList = result.adjustment\n                                }else{\n                                    let ds = this.$refs.dataSourceAdjus.kendoWidget();\n                                    this.adjustmentList = ds.data([])\n                                    this.addRow()\n                                    this.calculateAdjust()\n                                }\n                                this.loadSuccess(res.data.statusCode)\n                                this.showLoading = false;\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadSegment() {\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.segments = []\n                        settingsHandler.getSeg().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.segments = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            rowNumberTmpl(dataItem) {\n                var ds = this.$refs.dataSourceAdjus.kendoWidget(),\n                    index = ds.indexOf(dataItem);\n                return index + 1;\n            },\n            addRow() {\n                let ds = this.$refs.dataSourceAdjus.kendoWidget(),\n                    total = ds.total();\n                ds.insert(total,{\n                    payrollComponent: {\n                        name: '-- Select --',\n                    },\n                    employee: {\n                        name: '-- Select --',\n                    },\n                    amount: 0,\n                    segment: {\n                        name: '-- Select --',\n                    },\n                    currency:  {\n                        code: '',\n                        name: '- Select --'\n                    }\n                });\n            },\n            removeRow(e) {\n                e.preventDefault();\n                const grid = kendo.jQuery(\"#gridAdjus\").data(\"kendoGrid\"),\n                    dataSource = grid.dataSource,\n                    dataItem = grid.dataItem($(e.currentTarget).closest(\"tr\"));\n                if (dataSource.total() > 1) {\n                    dataSource.remove(dataItem);\n                }\n            },\n            onChanges(e){\n                this.loadEmployee()   \n                this.loadPayrollComponent() \n                this.loadSegment() \n                if (e.field === \"employee\") {\n                    let dataItem = e.items[0]\n                    let params = {\n                        status: 1,\n                        employeeId: dataItem.employee.employeeId\n                    }\n                   this.loadRecord(params, dataItem)\n                }   \n            },\n            employeeDropDownEditor(container, options){\n                kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.employee,\n                    })\n                })\n            },\n            payrollComponentDropDownEditor(container, options){\n                kendo.jQuery('<input name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: true,\n                    autoWidth: true,\n                    height: 400,\n                    filter: \"contains\",\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.payrollComponent,\n                    })\n                })\n            },\n            segmentDropDownEditor(container, options){\n                kendo.jQuery('<input required name=\"' + options.field + '\"/>')\n                .appendTo(container)\n                .kendoDropDownList({\n                    autoBind: false,\n                    autoWidth: true,\n                    height: 400,\n                    dataTextField: \"name\",\n                    dataValueField: \"name\",\n                    template: \"<span>#=name#</span>\",\n                    optionLabel: \"--- Select ---\",\n                    dataSource: new kendo.data.DataSource({\n                        data: this.segments,\n                    })\n                })\n            },\n            async loadEmployee(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.employee = []\n                        employeeHandler.center().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                this.employee = res.data.data\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            async loadPayrollComponent(){\n                new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved')\n                        this.payrollComponent = []\n                        payrollHandler.getComponent().then(res => {\n                            this.showLoading = true\n                            if (res.data.statusCode === 200) {\n                                this.showLoading = false\n                                const types = ['deduction','benefit','gross_salary']\n                                this.payrollComponent =  res.data.data.filter(m => {\n                                    const exist = types.filter(n=> n === m.compoType.id)\n                                        if(exist.length > 0){\n                                            return m\n                                        }\n                                    }\n                                )\n                            }\n                        }).catch()\n                        {\n                            this.showLoading = false\n                        }\n                    }, 300)\n                })\n            },\n            calculateAdjust(){\n                let payrollList = this.loadPayrolls;\n                for (const pa of payrollList){\n                    if(pa.benefit){\n                        pa.benefit.forEach(i=>{\n                            if(i.amount > 0){\n                                this.adjustmentList.push({\n                                    employee:                   {\n                                        // address:                pa.employee.address,\n                                        // bank:                   pa.employee.bank,\n                                        // bankAccount:            pa.employee.bankAccount,\n                                        // country:                pa.employee.country,\n                                        // dob:                    pa.employee.dob,\n                                        // email:                  pa.employee.email,\n                                        employeeId:             pa.employee.employeeId,\n                                        // employeeType:           pa.employee.employeeType,\n                                        // firstName:              pa.employee.firstName,\n                                        // firstNameLocale:        pa.employee.firstNameLocale,\n                                        // gender:                 pa.employee.gender,\n                                        id:                     pa.employee.id,\n                                        // identityId:             pa.employee.identityId,\n                                        // identityType:           pa.employee.identityType,\n                                        // image:                  pa.employee.image,\n                                        // lastName:               pa.employee.lastName,\n                                        // lastNameLocale:         pa.employee.lastNameLocale,\n                                        // maritalStatus:          pa.employee.maritalStatus,\n                                        // nationality:            pa.employee.nationality,\n                                        // natureEmployee:         pa.employee.natureEmployee,\n                                        // noOfChildren:           pa.employee.noOfChildren,\n                                        // paymentMethod:          pa.employee.paymentMethod,\n                                        // paymentPeriod:          pa.employee.paymentPeriod,\n                                        // payrollLiabilitie:      pa.employee.payrollLiabilitie,\n                                        // phone:                  pa.employee.phone,\n                                        // salaryAcc:              pa.employee.salaryAcc,\n                                        // salaryAdvanceAcc:       pa.employee.salaryAdvanceAcc,\n                                        // spouseGender:           pa.employee.spouseGender,\n                                        // spouseName:             pa.employee.spouseName,\n                                        // spouseNatureEmployee:   pa.employee.spouseNatureEmployee,\n                                        // status:                 pa.employee.status,\n                                        // workingStatus:          pa.employee.workingStatus,\n                                        name:                   pa.employee.employeeId + ' - ' +  pa.employee.firstName +' '+ pa.employee.lastName,\n                                    },\n                                    payrollComponent:           i.component ? i.component: {},\n                                    currency:                   pa.currency || {},\n                                    amount:                     i.amount ? i.amount: 0,\n                                    // segment:                    i.segment ? i.segment: {}\n                                })\n                            }\n                        })\n                    }\n                }\n            },\n            saveAdjust(){\n                let ds = this.$refs.dataSourceAdjus.kendoWidget();\n                let ds1 = ds.data()\n                let dataSource = ds1.map(index=>{\n                    return {\n                        amount:             index.amount,\n                        employee:           index.employee,\n                        payrollComponent:   index.payrollComponent,\n                        currency:           index.currency\n                        // segment:            index.segment,\n                    }\n                })\n                let payrollList = this.loadPayrolls;\n                let helper = {};\n                let result = dataSource.reduce(function(index, value) {\n                    if(value.employee.id){\n                        let key = value.payrollComponent.compoType.name +'-'+value.employee.employeeId ;\n                        if(!helper[key]) {\n                            helper[key] = Object.assign({}, value); // create a copy of o\n                            index.push(helper[key]);\n                        } else {\n                            helper[key].amount += parseFloat(value.amount);\n                            helper[key].conponentType = value.payrollComponent.compoType.name;\n                        }\n                    }\n                    return index\n                }, []);\n                let payList = [];\n                for (const pa of payrollList){\n                    let benefit = 0\n                    let deduction2 = 0;\n                    let salaryAdd = 0;\n                    result.forEach(function(r){\n                        if(r.payrollComponent.name === \"Deduction\" && r.employee.id == pa.employeeUuid){\n                            deduction2 = parseFloat(r.amount);\n                        }else if(r.payrollComponent.name === \"Benefits\" && r.employee.id == pa.employeeUuid){\n                           benefit = parseFloat(r.amount)\n                        }else if(r.payrollComponent.compoType.id === \"gross_salary\" && r.employee.id == pa.employeeUuid){\n                            salaryAdd = parseFloat(r.amount)\n                        }\n                    })\n                    payList.push( new PayrollList({\n                        employeeUuid:               pa.employeeUuid,\n                        deduction:                  0,\n                        deduction2:                 deduction2,\n                        bank:                       pa.bank, \n                        currency:                   pa.currency ? pa.currency: {},\n                        totalBenefit:               benefit,\n                        employeeName:               pa.employeeName,\n                        employeeId:                 pa.employeeId,\n                        gender:                     pa.gender,\n                        natureEmployee:             pa.natureEmployee,\n                        natureContract:             pa.natureContract,\n                        paymentMethod:              pa.paymentMethod,\n                        payrollLiabilitie:          pa.payrollLiabilitie,\n                        location:                   pa.location,\n                        overTimeHoliday:            pa.overTimeHoliday,\n                        overTimeWeekend:            pa.overTimeWeekend,\n                        overTimeNight:              pa.overTimeNight,\n                        paidHours:                  pa.paidHours,\n                        position:                   pa.position,\n                        segment:                    pa.segment,\n                        salary:                     parseFloat(pa.salary1) + salaryAdd,\n                        salary1:                    pa.salary1,\n                        salary2:                    parseFloat(pa.salary1) + salaryAdd,\n                        salaryType:                 pa.salaryType,\n                        workDay:                    pa.workDay,\n                        workTime:                   pa.workTime, \n                        spouseNatureEmployee:       pa.spouseNatureEmployee,\n                        workingStatus:              pa.workingStatus,\n                        spouseGender:               pa.spouseGender,\n                        noOfChildren:               pa.noOfChildren\n                    }))\n                }\n                this.payList = payList\n                let payrolls = this.payrolls\n                new Promise(resolve => {\n                    setTimeout(() => {\n                    resolve('resolved');\n                        let data = new PayrollRun({\n                            id:                   this.$route.params.id,\n                            monthOf:              payrolls.monthOf,\n                            date:                 payrolls.date,\n                            created:              payrolls.created,\n                            totalEmployee:        payrolls.totalEmployee,\n                            number:               payrolls.number,\n                            lastNumber:           payrolls.lastNumber,\n                            abbr:                 payrolls.abbr,\n                            referenceNumber:      payrolls.referenceNumber,\n                            payNumber:            payrolls.payNumber,\n                            type:                 payrolls.type,\n                            currency:             payrolls.currency,\n                            exchangeRate:         payrolls.exchangeRate,\n                            location:             payrolls.location,\n                            adjustment:           dataSource,\n                            payrollList:          this.payList,\n                            payrollList1:         payrolls.payrollList1,\n                            payrollList2:         this.payList,\n                            step:                 3,\n                            department:           payrolls.department || '',\n                            natureContract:       payrolls.natureContract || '',\n                            employeeGroup:        payrolls.employeeGroup || '',\n                            loggedUser:           this.loggedUser\n                        });\n                        this.showLoading = true\n                        payrollHandler.createPayroll(data).then(response => {\n                            this.showLoading = true\n                            if (response.data.statusCode === 201) {\n                                this.showLoading = false\n                                this.$snotify.success('Success')\n                                this.loadSuccess(response.data.statusCode)\n                            }\n                        }).catch(e => {\n                            this.$snotify.error('Something went wrong')\n                            this.errors.push(e)\n                        })\n                    }, 300);\n                })\n            },\n            loadSuccess(data){\n                this.$emit('headline',data)\n            },\n            async goBack(){\n                window.history.go(-1)\n            },\n            loadRecord(params, dataItem){\n                 new Promise(resolve => {\n                    setTimeout(() => {\n                        resolve('resolved');\n                        this.showLoading = true\n                        employeeHandler.getRecord(params).then(res => {\n                            if(res.data.statusCode == 200){\n                                this.showLoading = false\n                                let result = res.data.data\n                                if(result.length > 0){\n                                    this.record = res.data.data[0].currency\n                                    dataItem.set('currency', this.record)\n                                }\n                            }\n                        })\n\n                    }, 300);\n                })\n            }\n        },\n        mounted: async function (){\n            await this.addRow()\n            await this.loadPayrollList()\n            await this.loadSegment()\n        },\n        watch: {\n            propAdjustment(){\n                if (this.propAdjustment !== undefined) {\n                    this.loadPayrollList()\n                }\n            }\n        },\n        computed:{\n    \n        }\n    }\n</script>\n<style scoped>\n    .grayBg{\n        background-color: #F8F8F9;\n    }\n    .my_table_darkv .theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr > th {\n        color: rgba(0, 0, 0, 0.6);\n        background: #222a35;\n        color: #fff !important;\n    }"]}]}