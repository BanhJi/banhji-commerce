{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/StatementOfProfitOrLossBySegments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/reports/receipt_payment/StatementOfProfitOrLossBySegments.vue","mtime":1640595536784},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StatementOfProfitOrLossBySegments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"StatementOfProfitOrLossBySegments.vue","sourceRoot":"src/views/accounting/reports/receipt_payment","sourcesContent":["<template>\n\t<v-row>\n\t\t<v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\" >\n\t\t\t<v-card color=\"white\" class=\"pa-3 no_border \"  elevation=\"0\">\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col sm=\"9\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<app-searchdate\n\t\t\t\t\t\t\t:initStartDate=\"startDate\"\n\t\t\t\t\t\t\t@emitStartDate=\"startDate = $event\"\n\t\t\t\t\t\t\t:initEndDate=\"endDate\"\n\t\t\t\t\t\t\t@emitEndDate=\"endDate = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<v-row class=\"mt-0\">\n\t\t\t\t\t<v-col class=\"py-0\" sm=\"3\" cols=\"12\">\n\t\t\t\t\t\t<label class=\"label\">{{ $t(\"segment\") }}</label>\n\t\t\t\t\t\t<app-segment-list-item-group\n\t\t\t\t\t\t\t:initSegment=\"selectedSegmentIds\"\n\t\t\t\t\t\t\t@emitSegment=\"selectedSegmentIds = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col class=\"py-0\" sm=\"3\" cols=\"12\">\n\t\t\t\t\t\t<label class=\"label\">{{\n\t\t\t\t\t\t\t$t(\"level_chart_of_account\")\n\t\t\t\t\t\t}}</label>\n\t\t\t\t\t\t<level-coa-dropdownlist\n\t\t\t\t\t\t\t:initLevelCoa=\"levelCoa\"\n\t\t\t\t\t\t\t@emitLevelCoa=\"levelCoa = $event\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col sm=\"3\" cols=\"12\" class=\"py-0\">\n\t\t\t\t\t\t<div class=\"report_expor\">\n\t\t\t\t\t\t\t<label class=\"mb-1\">{{ $t(\"reporting_language\") }}:</label>\n\t\t\t\t\t\t\t<app-reporting-language\n\t\t\t\t\t\t\t\t:initLanguage=\"reportingLanguage\"\n\t\t\t\t\t\t\t\t@emitLanguage=\"reportingLanguage = $event\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</v-col>\n\t\t\t\t\t<v-col class=\"py-0\" sm=\"3\" cols=\"12\">\n\t\t\t\t\t\t<v-btn class=\"white--text dv_mt\" color=\"primary\" @click=\"search\">\n\t\t\t\t\t\t\t{{ $t(\"run_report\") }}\n\t\t\t\t\t\t</v-btn>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<v-row>\n\t\t\t\t\t<v-col sm=\"12\" cols=\"12\" class=\"custom_expansion py-0\">\n\t\t\t\t\t\t<kendo-datasource\n\t\t\t\t\t\t\tref=\"statementPLDS\"\n\t\t\t\t\t\t\t:data=\"statementPLList\"\n\t\t\t\t\t\t\t:schema=\"schemaDefinition\"\n\t\t\t\t\t\t\t:sort=\"sortDefinition\"\n\t\t\t\t\t\t\t:group=\"groupDefinition\"\n\t\t\t\t\t\t\t:aggregate=\"aggregateDefinition\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<kendo-grid\n\t\t\t\t\t\t\tid=\"gridSPL\"\n\t\t\t\t\t\t\tclass=\"custom_grid\"\n\t\t\t\t\t\t\t:data-source-ref=\"'statementPLDS'\"\n\t\t\t\t\t\t\t:dataBound=\"dataBound\"\n\t\t\t\t\t\t\t:change=\"onGridChanges\"\n\t\t\t\t\t\t\t:selectable=\"true\"\n\t\t\t\t\t\t\t:persistSelection=\"true\"\n\t\t\t\t\t\t\t:sortable=\"true\"\n\t\t\t\t\t\t\t:column-menu=\"true\"\n\t\t\t\t\t\t\t:reorderable=\"true\"\n\t\t\t\t\t\t\t:resizable=\"true\"\n\t\t\t\t\t\t\t:noRecords=\"true\"\n\t\t\t\t\t\t\t:toolbar=\"['excel']\"\n\t\t\t\t\t\t\t:excel-file-name=\"'incomeStatement.xlsx'\"\n\t\t\t\t\t\t\t:excel-filterable=\"true\"\n\t\t\t\t\t\t\t:columns=\"columns\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</v-col>\n\t\t\t\t</v-row>\n\t\t\t\t<LoadingMe\n\t\t\t\t\t:isLoading=\"showLoading\"\n\t\t\t\t\t:fullPage=\"false\"\n\t\t\t\t\t:myLoading=\"true\"\n\t\t\t\t/>\n\t\t\t</v-card>\n\t\t</v-col>\n\t</v-row>\n</template>\n\n<script>\nimport kendo from \"@progress/kendo-ui\";\nimport { i18n } from \"@/i18n\";\nimport Helper from \"@/helper.js\";\nimport { mapState } from \"vuex\";\nimport { dataStore } from \"@/observable/store\";\n\nconst { incomeStatementHandler } = require(\"@/scripts/AppHandlers\");\n\nexport default {\n\tcomponents: {\n\t\tLoadingMe: () => import(\"@/components/Loading\"),\n\t\t\"app-searchdate\": () => import(\"@/components/custom_templates/SearchDate\"),\n\t\t\"app-reporting-language\": () =>\n\t\t\timport(\"@/components/kendo_templates/ReportingLanguageDropDownList\"),\n\t\t\"app-segment-list-item-group\": () =>\n\t\t\timport(\"@/components/dropdownlist/SegmentListItemGroup\"),\n\t\t\"level-coa-dropdownlist\": () =>\n\t\t\timport(\"@/components/dropdownlist/LevelCoa\"),\n\t},\n\tdata: () => ({\n\t\t// Obj\n\t\tstartDate: \"\",\n\t\tendDate: \"\",\n\t\tlevelCoa: \"\",// Default primary\n\t\tstatements: [],\n\t\tstatementPLList: [],\n\t\tselectedSegmentIds: [],\n\t\tHelper: Helper,\n\t\t// Reporting Language\n\t\treportingLanguage: \"english\",\n\t\tfieldName: \"name\",\n\t\tfieldType: \"type\",\n\t\tfooterName: \"Surplus Or (Deficit)\",\n\t\t// LodingMe\n\t\tshowLoading: false,\n\t\t/* KENDO */\n\t\tcolumns: [],\n\t\tsortDefinition: { field: \"number\", dir: \"asc\" },\n\t\tgroupDefinition: [],\n\t\taggregateDefinition: [],\n\t\tschemaDefinition: {\n\t\t\tmodel: { id: \"accountUUID\" },\n\t\t},\n\t}),\n\tmethods: {\n\t\tasync initialize() {\n\t\t\t// Call List\n\t\t\tawait this.$store.dispatch(\"segments/getList\");\n\t\t},\n\t\t/* KENDO */\n\t\t/* On grid changes => link to GL */\n\t\tonGridChanges() {\n\t\t\tlet grid = kendo.jQuery(\"#gridSPL\").data(\"kendoGrid\");\n\t\t\tlet selectedSegmentIds = grid.dataItem(grid.select());\n\n\t\t\tthis.$router.push({\n\t\t\t\tpath: \"general_ledger\",\n\t\t\t\tquery: {\n\t\t\t\t\taccount_id: selectedSegmentIds.accountUUID,\n\t\t\t\t\tstart_date: this.startDate,\n\t\t\t\t\tend_date: this.endDate,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t// Search journals\n\t\tsearch() {\n\t\t\tif (this.selectedSegmentIds.length > 0) {\n\t\t\t\tlet sdate = new Date(this.startDate),\n\t\t\t\t\tedate = new Date(this.endDate);\n\n\t\t\t\tif (sdate && edate) {\n\t\t\t\t\tsdate = kendo.toString(sdate, \"yyyy-MM-dd\") + \"T00:00:00.000Z\";\n\t\t\t\t\tedate = kendo.toString(edate, \"yyyy-MM-dd\") + \"T23:59:59.999Z\";\n\t\t\t\t} else {\n\t\t\t\t\tsdate = 0;\n\t\t\t\t\tedate = 0;\n\t\t\t\t}\n\n\t\t\t\t// Empty dataSource\n\t\t\t\tlet ds = this.$refs.statementPLDS.kendoWidget();\n\t\t\t\tds.data([]);\n\n\t\t\t\t/* Generate Group By */\n\t\t\t\tthis.generateGroupBy();\n\n\t\t\t\t// Query\n\t\t\t\tthis.showLoading = true;\n\t\t\t\tincomeStatementHandler\n\t\t\t\t\t.getBySegments(sdate, edate, this.selectedSegmentIds, this.levelCoa)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\tthis.statements = res;\n\t\t\t\t\t\t\tthis.bindData();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.$snotify.error(i18n.t(\"error_something_wrong\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t// this.showLoading = false;\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$snotify.warning(i18n.t(\"please_select_segments\"));\n\t\t\t}\n\t\t},\n\t\t/* Bind Data */\n\t\tasync bindData() {\n\t\t\tlet g = {};\n\n\t\t\tfor (let i = 0; i < this.selectedSegmentIds.length; i++) {\n\t\t\t\tthis.statements[i].forEach((value) => {\n\t\t\t\t\tlet hasEntry = false;\n\n\t\t\t\t\t/* Receipt */\n\t\t\t\t\tif(value.statementGroup.toLowerCase() === \"revenue\" || value.statementGroup.toLowerCase() === \"other revenue\"){\n\t\t\t\t\t\tvalue.statementType = \"Receipt\";\n\t\t\t\t\t\tvalue.order = 1000;\n\n\t\t\t\t\t\thasEntry = true;\n\t\t\t\t\t}else{/* Payment */\n\t\t\t\t\t\tif(value.account_type_number < 100){\n\t\t\t\t\t\t\tvalue.statementType = \"Payment\";\n\t\t\t\t\t\t\tvalue.order = 2000;\n\n\t\t\t\t\t\t\thasEntry = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Receipt */\n\t\t\t\t\tif(value.account_type_number === 105){\n\t\t\t\t\t\tvalue.statementType = this.footerName;\n\t\t\t\t\t\tvalue.order = 3000;\n\n\t\t\t\t\t\thasEntry = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(hasEntry){\n\t\t\t\t\t\t/* Grouping */\n\t\t\t\t\t\tlet groupName = String(value.accountUUID) + String(value.account_type_number);\n\t\t\t\t\t\tif (g[groupName]) {\n\t\t\t\t\t\t\tg[groupName][\"s\" + i] = value.balance;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tg[groupName] = value;\n\n\t\t\t\t\t\t\t/* Add all segments to columns */\n\t\t\t\t\t\t\tfor (let j = 0; j < this.selectedSegmentIds.length; j++) {\n\t\t\t\t\t\t\t\tg[groupName][\"s\" + j] = 0;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tg[groupName][\"s\" + i] = value.balance;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.statementPLList = Object.values(g);\n\t\t\tthis.generateColumn();\n\n\t\t\tthis.showLoading = false;\n\t\t},\n\t\t// Row Template\n\t\taccountTmpl(dataItem) {\n\t\t\tlet name = dataItem.number;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname += \" - \" + dataItem.local_name;\n\t\t\t} else {\n\t\t\t\tname += \" - \" + dataItem.name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\ttypeGroupHeaderTmpl(dataItem) {\n\t\t\tlet name = dataItem.items[0].type;\n\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tname = dataItem.items[0].type_local_name;\n\t\t\t}\n\n\t\t\treturn name;\n\t\t},\n\t\t// Generate Columns\n\t\tgenerateColumn() {\n\t\t\tlet columns = [\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldName,\n\t\t\t\t\ttitle: i18n.t(\"account\"),\n\t\t\t\t\ttemplate: this.accountTmpl,\n\t\t\t\t\tlocked: true,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"statementType\",\n\t\t\t\t\ttitle: i18n.t(\"statement_type\"),\n\t\t\t\t\tgroupHeaderTemplate: \"<span class='text-bold text-black'>#=value#</span>\",\n\t\t\t\t\thidden: true,\n\t\t\t\t\twidth: 250,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: this.fieldType,\n\t\t\t\t\ttitle: i18n.t(\"type\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate: this.typeGroupHeaderTmpl,\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"statementGroup\",\n\t\t\t\t\ttitle: i18n.t(\"statement_group\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"<span class='text-bold text-black'>#=value#</span>\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfield: \"groupNature\",\n\t\t\t\t\ttitle: i18n.t(\"nature\"),\n\t\t\t\t\thidden: true,\n\t\t\t\t\tgroupHeaderTemplate:\n\t\t\t\t\t\t\"<span class='text-bold text-black'>#=value#</span>\",\n\t\t\t\t\twidth: 300,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tlet headerAttributes = {\n\t\t\t\t\tclass: \"table-header-cell\",\n\t\t\t\t\tstyle: \"text-align: right;padding-right: 35px; font-size: 14px\",\n\t\t\t\t},\n\t\t\t\tattributes = {\n\t\t\t\t\tclass: \"table-cell\",\n\t\t\t\t\tstyle: \"text-align: right; font-size: 14px\",\n\t\t\t\t};\n\n\t\t\t/* Set Column Segments */\n\t\t\tfor (let i = 0; i < this.selectedSegmentIds.length; i++) {\n\t\t\t\t/* Segment */\n\t\t\t\tlet segment = this.segments.find(\n\t\t\t\t\t(item) => item.id === this.selectedSegmentIds[i]\n\t\t\t\t);\n\n\t\t\t\t/* Column Segment */\n\t\t\t\tcolumns.push({\n\t\t\t\t\tfield: \"s\" + i,\n\t\t\t\t\ttitle: segment.name,\n\t\t\t\t\tformat: \"{0:n}\",\n\t\t\t\t\twidth: 200,\n\t\t\t\t\taggregates: \"['sum']\",\n\t\t\t\t\tgroupHeaderColumnTemplate:\n\t\t\t\t\t\t\"<div class='text-right text-bold text-black'>#=kendo.toString(sum, 'n')#</div>\",\n\t\t\t\t\theaderAttributes: headerAttributes,\n\t\t\t\t\tattributes: attributes,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.columns = columns;\n\t\t},\n\t\t/* Databound */\n\t\tdataBound(e) {\n\t\t\tlet grid = e.sender;\n\n\t\t\tgrid.dataSource.data().forEach((value) => {\n\t\t\t\tif (value.account_type_number === 105) {\n\t\t\t\t\tlet row = grid.tbody\n\t\t\t\t\t\t.find(\"tr[data-uid='\" + value.uid + \"']\")\n\t\t\t\t\t\t.prev(\".k-grouping-row\");\n\t\t\t\t\tgrid.collapseGroup(row);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// On Reporint Language Changes\n\t\tonReportingLanguageChanges() {\n\t\t\tthis.fieldName = \"name\";\n\t\t\tthis.fieldType = \"type\";\n\t\t\tif (this.reportingLanguage === \"local\") {\n\t\t\t\tthis.fieldName = \"local_name\";\n\t\t\t\tthis.fieldType = \"type_local_name\";\n\t\t\t}\n\n\t\t\t// Generate Group By\n\t\t\tthis.generateGroupBy();\n\n\t\t\t// Generate column with new language\n\t\t\tthis.generateColumn();\n\t\t},\n\t\t// Generate Group By\n\t\tgenerateGroupBy() {\n\t\t\t/* Aggregate Defintion */\n\t\t\tlet aggregateDefinition = [];\n\t\t\tfor (let i = 0; i < 50; i++) {\n\t\t\t\taggregateDefinition.push({ field: \"s\" + i, aggregate: \"sum\" });\n\t\t\t}\n\t\t\tthis.aggregateDefinition = aggregateDefinition;\n\n\t\t\t/* Group By */\n\t\t\tlet groupDefinition = [];\n\t\t\t\n\t\t\t/* Default group */\n\t\t\tgroupDefinition.push({\n\t\t\t\tfield: \"statementType\",\n\t\t\t\taggregates: this.aggregateDefinition,\n\t\t\t\tcompare: function(a, b) {\n\t\t\t\t\tif (a.items[0].order === b.items[0].order) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t} else if (a.items[0].order > b.items[0].order) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t\t\n\t\t\t/* Level Coa */\n\t\t\tif(this.levelCoa !== \"\"){\n\t\t\t\tgroupDefinition.push({ field: this.fieldType, aggregates: this.aggregateDefinition });\n\t\t\t}\n\n\t\t\t/* Apply Group Definition */\n\t\t\tthis.groupDefinition = groupDefinition;\n\t\t},\n\t},\n\twatch: {\n\t\treportingLanguage() {\n\t\t\tthis.onReportingLanguageChanges();\n\t\t},\n\t},\n\tcomputed: mapState({\n\t\tsegments: (state) => state.segments.list,\n\t\tappType() {\n\t\t\treturn dataStore.productType;\n\t\t},\n\t}),\n\tcreated() {\n\t\tthis.initialize();\n\t},\n\tmounted() {\n\t\t// Generate Group By\n\t\tthis.generateGroupBy();\n\n\t\t// Initial Grid Columns\n\t\tthis.generateColumn();\n\t},\n};\n</script>\n\n<style scoped>\n.reports_list {\n\twidth: 100%;\n\tbackground-color: #fff;\n\tpadding: 20px 20px 5px;\n}\n.report_filter {\n\tbackground-color: #f8f8f9;\n\tpadding: 0 20px 5px 20px;\n\tposition: relative;\n}\n.dv_mt {\n\tmargin-top: 24px;\n}\n.report_export {\n\tposition: absolute;\n\ttop: 15px;\n}\n.report_total {\n\tpadding: 12.5px;\n\ttext-align: right;\n\ttext-transform: uppercase;\n\tfont-weight: 700;\n\tborder-top: 1px solid #333;\n\tborder-bottom: 1px solid #333;\n}\n.custom_expansion\n\t.v-expansion-panel-header\n\t.v-expansion-panel-header__icon\n\t.v-icon {\n\tdisplay: none !important;\n}\n.v-expansion-panel {\n\tborder-bottom: 1px solid #cccccc;\n\tborder-radius: 0;\n}\n.v-expansion-panel::before {\n\tbox-shadow: none;\n}\n.v-expansion-panel-header {\n\tpadding: 15px;\n}\n.v-expansion-panel-content__wrap {\n\tpadding: 0 35px 10px;\n}\n@media (max-width: 576px) {\n\t.dv_mt,\n\t.dv_mt8 {\n\t\tmargin-top: 0;\n\t}\n\t.reports_list {\n\t\tmargin-top: 0;\n\t}\n}\n</style>\n"]}]}