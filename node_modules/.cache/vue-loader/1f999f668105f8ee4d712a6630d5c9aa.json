{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/Donor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/components/dropdownlist/Donor.vue","mtime":1638499442946},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdEb25vckRyb3BEb3duTGlzdCcsCiAgICBwcm9wczogewogICAgICAgIGluaXREb25vcjogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgfSwKICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRvbm9yIDogbnVsbCwKICAgICAgICAgICAgbG9hZGluZyA6IGZhbHNlLAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgYXN5bmMgaW5pdGlhbGl6ZSAoKSB7CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBDYWxsIExpc3QKICAgICAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2Rvbm9ycy9nZXRMaXN0JykKCiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgaW5pdGlhbERhdGEoKXsKICAgICAgICAgICAgdGhpcy5kb25vciA9IHRoaXMuaW5pdERvbm9yOwogICAgICAgIH0sCiAgICAgICAgZW1pdERvbm9yKCkgewogICAgICAgICAgICB0aGlzLiRlbWl0KCdlbWl0RG9ub3InLCB0aGlzLmRvbm9yKTsKICAgICAgICB9LAogICAgICAgIG9uQ2hhbmdlZCgpIHsKICAgICAgICAgICAgdGhpcy4kZW1pdCgnb25DaGFuZ2VkJyk7CiAgICAgICAgfSwKICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGluaXREb25vcjogImluaXRpYWxEYXRhIgogICAgfSwKICAgIGNvbXB1dGVkOiBtYXBTdGF0ZSh7CiAgICAgICAgZG9ub3JzOiBzdGF0ZSA9PiBzdGF0ZS5kb25vcnMubGlzdAogICAgfSksCiAgICBjcmVhdGVkKCkgewogICAgICAgIC8qIEluaXRpYWxpemUgKi8KICAgICAgICB0aGlzLmluaXRpYWxpemUoKTsKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIC8qIEluaXRpYWwgRGF0YSAqLwogICAgICAgIHRoaXMuaW5pdGlhbERhdGEoKTsKICAgIH0KfQo="},{"version":3,"sources":["Donor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Donor.vue","sourceRoot":"src/components/dropdownlist","sourcesContent":["<template>\n    <v-autocomplete\n        class=\"mt-1\"\n        :loading=\"loading\"\n        placeholder=\"Search Donor\"\n        @change=\"emitDonor(), onChanged()\"\n        v-model=\"donor\"\n        :items=\"donors\"\n        item-text=\"name\"\n        item-value=\"id\"\n        hide-no-data\n        hide-selected\n        return-object\n        clearable\n        outlined\n    >\n        <template slot=\"selection\" slot-scope=\"{ item }\">\n            {{ item.number }} - {{ item.name }}\n        </template>\n        <template slot=\"item\" slot-scope=\"{ item }\">\n            {{ item.number }} - {{ item.name }}\n        </template>\n    </v-autocomplete>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n    name: 'DonorDropDownList',\n    props: {\n        initDonor: {\n            type: Object,\n        },\n    },\n    data() {\n        return {\n            donor : null,\n            loading : false,\n        }\n    },\n    methods: {\n        async initialize () {\n            this.loading = true;\n            \n            // Call List\n            await this.$store.dispatch('donors/getList')\n\n            this.loading = false;\n        },\n        initialData(){\n            this.donor = this.initDonor;\n        },\n        emitDonor() {\n            this.$emit('emitDonor', this.donor);\n        },\n        onChanged() {\n            this.$emit('onChanged');\n        },\n    },\n    watch: {\n        initDonor: \"initialData\"\n    },\n    computed: mapState({\n        donors: state => state.donors.list\n    }),\n    created() {\n        /* Initialize */\n        this.initialize();\n    },\n    mounted() {\n        /* Initial Data */\n        this.initialData();\n    }\n}\n</script>"]}]}