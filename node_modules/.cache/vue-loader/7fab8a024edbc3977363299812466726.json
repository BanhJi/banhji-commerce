{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/projects/project_information/Attachment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/src/views/services_projects/projects/project_information/Attachment.vue","mtime":1638499443309},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-commerce/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IGJpbGxpbmdIYW5kbGVyID0gcmVxdWlyZSgiQC9zY3JpcHRzL2ludm9pY2UvaGFuZGxlci9iaWxsaW5nSGFuZGxlciIpCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUHJvamVjdEF0dGFjaG1lbnQiLAogIHByb3BzOiBbJ3Byb2plY3QnXSwKICBkYXRhOiAoKSA9PiAoewogICAgc2hvd0xvYWRpbmdBdGNoOiBmYWxzZSwKICAgIHNob3dMb2FkaW5nOiBmYWxzZSwKICAgIGF0dGFjaG1lbnRzOiBbXSwKICAgIGZpbGVzOiBbXSwKICAgIHJ1bGVzOiBbCiAgICAgIGZpbGVzID0+ICFmaWxlcyB8fCAhZmlsZXMuc29tZShmaWxlID0+IGZpbGUuc2l6ZSA+IDUgKiAxMDI0ICogMTAyNCkgfHwgJ0F2YXRhciBzaXplIHNob3VsZCBiZSBsZXNzIHRoYW4gNSBNQiEnCiAgICBdLAogICAgYXR0YWNobWVudExpc3Q6IFtdLAogICAgaW1nRmlsZTogJycsCiAgICBzcmM6ICcnLAogICAgZmlsZV86IHt9LAogICAgZmlsZURlc2M6ICcnLAogICAgZmlsZVNpemU6IDAsCiAgICBmaWxlVHlwZTogJycsCiAgICBmaWxlTmFtZTogJycKICB9KSwKICBjb21wb25lbnRzOiB7CiAgICBMb2FkaW5nTWU6ICgpID0+IGltcG9ydChgQC9jb21wb25lbnRzL0xvYWRpbmdgKSwKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ5dGVUb01CKGRhdGFJdGVtKSB7CiAgICAgIGNvbnN0IEZpbGVTaXplID0gZGF0YUl0ZW0uc2l6ZSB8fCAwIC8vIGluIE1pQgogICAgICBjb25zdCBtYXJrZXIgPSAxMDI0OyAvLyBDaGFuZ2UgdG8gMTAwMCBpZiByZXF1aXJlZAogICAgICBjb25zdCBkZWNpbWFsID0gMzsgLy8gQ2hhbmdlIGFzIHJlcXVpcmVkCiAgICAgIGNvbnN0IGtpbG9CeXRlcyA9IG1hcmtlcjsgLy8gT25lIEtpbG9ieXRlIGlzIDEwMjQgYnl0ZXMKICAgICAgY29uc3QgbWVnYUJ5dGVzID0gbWFya2VyICogbWFya2VyOyAvLyBPbmUgTUIgaXMgMTAyNCBLQgogICAgICBjb25zdCBnaWdhQnl0ZXMgPSBtYXJrZXIgKiBtYXJrZXIgKiBtYXJrZXI7IC8vIE9uZSBHQiBpcyAxMDI0IE1CCiAgICAgIC8vIGNvbnN0IHRlcmFCeXRlcyA9IG1hcmtlciAqIG1hcmtlciAqIG1hcmtlciAqIG1hcmtlcjsgLy8gT25lIFRCIGlzIDEwMjQgR0IKCiAgICAgIC8vIHJldHVybiBieXRlcyBpZiBsZXNzIHRoYW4gYSBLQgogICAgICBpZiAoRmlsZVNpemUgPCBraWxvQnl0ZXMpIHsKICAgICAgICByZXR1cm4gRmlsZVNpemUgKyAiIEJ5dGVzIjsKICAgICAgfQogICAgICAvLyByZXR1cm4gS0IgaWYgbGVzcyB0aGFuIGEgTUIKICAgICAgZWxzZSBpZiAoRmlsZVNpemUgPCBtZWdhQnl0ZXMpIHsKICAgICAgICByZXR1cm4gKChGaWxlU2l6ZSAvIGtpbG9CeXRlcykudG9GaXhlZChkZWNpbWFsKSArICIgS0IiKTsKICAgICAgfQogICAgICAvLyByZXR1cm4gTUIgaWYgbGVzcyB0aGFuIGEgR0IKICAgICAgZWxzZSBpZiAoRmlsZVNpemUgPCBnaWdhQnl0ZXMpIHsKICAgICAgICByZXR1cm4gKChGaWxlU2l6ZSAvIG1lZ2FCeXRlcykudG9GaXhlZChkZWNpbWFsKSArICIgTUIiKTsKICAgICAgfQogICAgICAvLyByZXR1cm4gR0IgaWYgbGVzcyB0aGFuIGEgVEIKICAgICAgZWxzZSB7CiAgICAgICAgcmV0dXJuICgoRmlsZVNpemUgLyBnaWdhQnl0ZXMpLnRvRml4ZWQoZGVjaW1hbCkgKyAiIEdCIik7CiAgICAgIH0KCiAgICAgIC8qIHZhciBGaWxlU2l6ZSA9IGZpbGUuZmlsZXNbMF0uc2l6ZSAvIDEwMjQgLyAxMDI0OyAvLyBpbiBNaUIKICAgICAgaWYgKEZpbGVTaXplID4gMikgewogICAgICAgICAgYWxlcnQoJ0ZpbGUgc2l6ZSBleGNlZWRzIDIgTWlCJyk7CiAgICAgICAgIC8vICQoZmlsZSkudmFsKCcnKTsgLy9mb3IgY2xlYXJpbmcgd2l0aCBKcXVlcnkKICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgYWxlcnQoJ0ZpbGUgc2l6ZScgKyBGaWxlU2l6ZSk7CiAgICAgIH0gKi8KICAgIH0sCiAgICBvbkZpbGVDaGFuZ2UoZSkgewogICAgICBpZiAoZSkgewogICAgICAgIHRoaXMuZmlsZURlc2MgPSBlLm5hbWUKICAgICAgICB0aGlzLmZpbGVOYW1lID0gZS5uYW1lCiAgICAgICAgdGhpcy5maWxlU2l6ZSA9IGUuc2l6ZQogICAgICAgIHRoaXMuZmlsZVR5cGUgPSBlLnR5cGUKICAgICAgICBsZXQgaW5wdXQgPSB0aGlzLmZpbGVzCiAgICAgICAgLy8gRW5zdXJlIHRoYXQgeW91IGhhdmUgYSBmaWxlIGJlZm9yZSBhdHRlbXB0aW5nIHRvIHJlYWQgaXQKICAgICAgICBpZiAoaW5wdXQpIHsKICAgICAgICAgIGxldCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpCiAgICAgICAgICAvLyBEZWZpbmUgYSBjYWxsYmFjayBmdW5jdGlvbiB0byBydW4sIHdoZW4gRmlsZVJlYWRlciBmaW5pc2hlcyBpdHMgam9iCiAgICAgICAgICByZWFkZXIub25sb2FkZW5kID0gKGUpID0+IHsKICAgICAgICAgICAgLy8gTm90ZTogYXJyb3cgZnVuY3Rpb24gdXNlZCBoZXJlLCBzbyB0aGF0ICJ0aGlzLmltYWdlRGF0YSIgcmVmZXJzIHRvIHRoZSBpbWFnZURhdGEgb2YgVnVlIGNvbXBvbmVudAogICAgICAgICAgICAvLyBSZWFkIGltYWdlIGFzIGJhc2U2NCBhbmQgc2V0IHRvIGltYWdlRGF0YQogICAgICAgICAgICB0aGlzLmltZ0ZpbGUgPSBlLnRhcmdldC5yZXN1bHQKICAgICAgICAgIH0KICAgICAgICAgIC8vIFN0YXJ0IHRoZSByZWFkZXIgam9iIC0gcmVhZCBmaWxlIGFzIGEgZGF0YSB1cmwgKGJhc2U2NCBmb3JtYXQpCiAgICAgICAgICByZWFkZXIucmVhZEFzQmluYXJ5U3RyaW5nKGlucHV0KQogICAgICAgICAgdGhpcy5zcmMgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGlucHV0KQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGFzeW5jIHVwbG9hZEZpbGUoKSB7CiAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKTsKICAgICAgICAgIGlmICh0aGlzLmltZ0ZpbGUgfHwgdGhpcy5wcm9qZWN0KSB7CiAgICAgICAgICAgIGNvbnN0IGlkID0gdGhpcy5wcm9qZWN0LmlkIHx8ICcnCiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSB0aGlzLnByb2plY3QubmFtZSB8fCAnJwogICAgICAgICAgICBsZXQgZGF0YSA9IHsKICAgICAgICAgICAgICBmaWxlOiB0aGlzLmltZ0ZpbGUsCiAgICAgICAgICAgICAgaW5mbzogewogICAgICAgICAgICAgICAgbmFtZTogdGhpcy5maWxlTmFtZSwKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmZpbGVEZXNjLAogICAgICAgICAgICAgICAgc2l6ZTogdGhpcy5maWxlU2l6ZSwKICAgICAgICAgICAgICAgIHR5cGU6IHRoaXMuZmlsZVR5cGUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHR5cGU6ICdQcm9qZWN0JywKICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgbmFtZTogbmFtZQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmdBdGNoID0gdHJ1ZQogICAgICAgICAgICBiaWxsaW5nSGFuZGxlci5hdHRhY2htZW50KGRhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICBpZiAocmVzLmRhdGEuc3RhdHVzQ29kZSA9PT0gMjAxKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nQXRjaCA9IGZhbHNlCiAgICAgICAgICAgICAgICB0aGlzLmltZ0ZpbGUgPSBudWxsCiAgICAgICAgICAgICAgICB0aGlzLnNyYyA9ICcnCiAgICAgICAgICAgICAgICB0aGlzLmZpbGVEZXNjID0gJycKICAgICAgICAgICAgICAgIHRoaXMuZmlsZU5hbWUgPSAnJwogICAgICAgICAgICAgICAgdGhpcy5maWxlU2l6ZSA9IDAKICAgICAgICAgICAgICAgIHRoaXMuZmlsZVR5cGUgPSAnJwogICAgICAgICAgICAgICAgdGhpcy4kc25vdGlmeS5zdWNjZXNzKCdTdWNjZXNzJykKICAgICAgICAgICAgICAgIHRoaXMubG9hZEF0dGFjaG1lbnQoKQogICAgICAgICAgICAgICAgLy8gdGhpcy50eG5MaXN0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShyZXMuZGF0YS5kYXRhKSkKICAgICAgICAgICAgICAgIC8vIHdpbmRvdy5jb25zb2xlLmxvZygndHJhbnNhY3Rpb25zJywgdGhpcy50eG5MaXN0KQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmdBdGNoID0gZmFsc2UKICAgICAgICAgICAgdGhpcy4kc25vdGlmeS5lcnJvcignUGxlYXNlIGJyb3dzZSB0byB1cGxvYWQgaW1hZ2UnKQogICAgICAgICAgfQogICAgICAgIH0sIDEwKQogICAgICB9KQogICAgfSwKICAgIGZpbGVVcmwoZGF0YUl0ZW0pIHsKICAgICAgaWYgKGRhdGFJdGVtLmZpbGVVcmwpIHsKICAgICAgICByZXR1cm4gYDxhIHRhcmdldD0iX2JsYW5rIiBzdHlsZT0iY29sb3I6I0VEMUEzQSAhaW1wb3J0YW50IiBocmVmPSIke2RhdGFJdGVtLmZpbGVVcmx9Ij48c3Bhbj5PcGVuPC9zcGFuPjwvYT5gCiAgICAgIH0KICAgICAgcmV0dXJuIGBgCiAgICB9LAogICAgYXN5bmMgbG9hZEF0dGFjaG1lbnQoKSB7CiAgICAgIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgcmVzb2x2ZSgncmVzb2x2ZWQnKQogICAgICAgICAgaWYgKHRoaXMucHJvamVjdC5oYXNPd25Qcm9wZXJ0eSgnaWQnKSkgewogICAgICAgICAgICB0aGlzLnNob3dMb2FkaW5nQXRjaCA9IHRydWUKICAgICAgICAgICAgY29uc3Qgc3RyRmlsdGVyID0gJz9pZD0nICsgdGhpcy5wcm9qZWN0LmlkCiAgICAgICAgICAgIGJpbGxpbmdIYW5kbGVyLmF0dGFjaG1lbnRMaXN0KHN0ckZpbHRlcikudGhlbihyZXMgPT4gewogICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5zdGF0dXNDb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd0xvYWRpbmdBdGNoID0gZmFsc2UKICAgICAgICAgICAgICAgIHRoaXMuYXR0YWNobWVudExpc3QgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgfQoKICAgICAgICB9LCAxMCkKICAgICAgfSkKICAgIH0sCiAgfSwKICB3YXRjaDogewogICAgJ3Byb2plY3QnOiAnbG9hZEF0dGFjaG1lbnQnCiAgfSwKfQo="},{"version":3,"sources":["Attachment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Attachment.vue","sourceRoot":"src/views/services_projects/projects/project_information","sourcesContent":["<template>\n  <v-row class=\"grayBg\">\n    <v-col sm=\"12\" cols=\"12\" class=\"\">\n      <v-card outlined color=\"white\" class=\"pa-3\">\n        <v-row class=\"\">\n          <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n            <p class=\"mb-2\">{{ $t('file_type') }} [PDF, JPG, JPEG, TIFF,\n              PNG, GIF] - 5MB</p>\n            <template>\n              <v-file-input\n                  v-model=\"files\"\n                  @change=\"onFileChange\"\n                  accept=\"image/jpg, image/jpeg, application/pdf\"\n                  :placeholder=\"$t('attachments')\"\n                  single\n                  prepend-icon=\"mdi-paperclip\">\n                <template v-slot:selection=\"{ text }\">\n                  <v-chip\n                      small\n                      label\n                      color=\"primary\"\n                  >\n                    {{ text }}\n                  </v-chip>\n                </template>\n              </v-file-input>\n              <v-text-field\n                  v-model=\"fileDesc\"\n                  outlined\n                  :placeholder=\"$t('description')\"\n                  clearable/>\n            </template>\n            <v-btn color=\"primary\" class=\"text-capitalize white--text\" @click=\"uploadFile\">\n              <v-icon size=\"15\" class=\"mr-2\">fa-check</v-icon>\n              {{ $t('upload') }}\n            </v-btn>\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoadingAtch\"\n                  :fullPage=\"false\"\n                  type=\"loading\"\n                  :myLoading=\"true\">\n              </LoadingMe>\n              <kendo-datasource ref=\"attachmentDS\"\n                                :data=\"attachmentList\"/>\n              <kendo-grid id=\"gridAttachment\" class=\"grid-function\"\n                          :data-source-ref=\"'attachmentDS'\"\n                          :editable=\"false\"\n                          :scrollable-virtual=\"true\">\n                <kendo-grid-column\n                    :field=\"''\"\n                    :title=\"$t('open')\"\n                    :width=\"70\"\n                    :template=\"fileUrl\"\n                    :attributes=\"{style: 'text-align: center'}\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'fileName'\"\n                    :title=\"$t('file_name')\"\n                    :width=\"250\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'description'\"\n                    :title=\"$t('description')\"\n                    :width=\"250\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5' }\"/>\n                <kendo-grid-column\n                    :field=\"'fileType'\"\n                    :title=\"$t('file_type')\"\n                    :width=\"150\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n                <kendo-grid-column\n                    :field=\"'size'\"\n                    :title=\"$t('size')\"\n                    :width=\"150\"\n                    :template=\"byteToMB\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n                <kendo-grid-column\n                    :field=\"'createdAt'\"\n                    :title=\"$t('date')\"\n                    :width=\"120\"\n                    :template=\"'<span>#= kendo.toString(new Date(createdAt), dateFormat)#</span>'\"\n                    :headerAttributes=\"{ style: 'background-color: #EDF1F5, color: green !important' }\"/>\n              </kendo-grid>\n            </template>\n          </v-col>\n        </v-row>\n      </v-card>\n    </v-col>\n  </v-row>\n</template>\n<script>\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\")\nexport default {\n  name: \"ProjectAttachment\",\n  props: ['project'],\n  data: () => ({\n    showLoadingAtch: false,\n    showLoading: false,\n    attachments: [],\n    files: [],\n    rules: [\n      files => !files || !files.some(file => file.size > 5 * 1024 * 1024) || 'Avatar size should be less than 5 MB!'\n    ],\n    attachmentList: [],\n    imgFile: '',\n    src: '',\n    file_: {},\n    fileDesc: '',\n    fileSize: 0,\n    fileType: '',\n    fileName: ''\n  }),\n  components: {\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  methods: {\n    byteToMB(dataItem) {\n      const FileSize = dataItem.size || 0 // in MiB\n      const marker = 1024; // Change to 1000 if required\n      const decimal = 3; // Change as required\n      const kiloBytes = marker; // One Kilobyte is 1024 bytes\n      const megaBytes = marker * marker; // One MB is 1024 KB\n      const gigaBytes = marker * marker * marker; // One GB is 1024 MB\n      // const teraBytes = marker * marker * marker * marker; // One TB is 1024 GB\n\n      // return bytes if less than a KB\n      if (FileSize < kiloBytes) {\n        return FileSize + \" Bytes\";\n      }\n      // return KB if less than a MB\n      else if (FileSize < megaBytes) {\n        return ((FileSize / kiloBytes).toFixed(decimal) + \" KB\");\n      }\n      // return MB if less than a GB\n      else if (FileSize < gigaBytes) {\n        return ((FileSize / megaBytes).toFixed(decimal) + \" MB\");\n      }\n      // return GB if less than a TB\n      else {\n        return ((FileSize / gigaBytes).toFixed(decimal) + \" GB\");\n      }\n\n      /* var FileSize = file.files[0].size / 1024 / 1024; // in MiB\n      if (FileSize > 2) {\n          alert('File size exceeds 2 MiB');\n         // $(file).val(''); //for clearing with Jquery\n      } else {\n                  alert('File size' + FileSize);\n      } */\n    },\n    onFileChange(e) {\n      if (e) {\n        this.fileDesc = e.name\n        this.fileName = e.name\n        this.fileSize = e.size\n        this.fileType = e.type\n        let input = this.files\n        // Ensure that you have a file before attempting to read it\n        if (input) {\n          let reader = new FileReader()\n          // Define a callback function to run, when FileReader finishes its job\n          reader.onloadend = (e) => {\n            // Note: arrow function used here, so that \"this.imageData\" refers to the imageData of Vue component\n            // Read image as base64 and set to imageData\n            this.imgFile = e.target.result\n          }\n          // Start the reader job - read file as a data url (base64 format)\n          reader.readAsBinaryString(input)\n          this.src = URL.createObjectURL(input)\n        }\n      }\n    },\n    async uploadFile() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved');\n          if (this.imgFile || this.project) {\n            const id = this.project.id || ''\n            const name = this.project.name || ''\n            let data = {\n              file: this.imgFile,\n              info: {\n                name: this.fileName,\n                description: this.fileDesc,\n                size: this.fileSize,\n                type: this.fileType\n              },\n              type: 'Project',\n              id: id,\n              name: name\n            }\n            this.showLoadingAtch = true\n            billingHandler.attachment(data).then(res => {\n              if (res.data.statusCode === 201) {\n                this.showLoadingAtch = false\n                this.imgFile = null\n                this.src = ''\n                this.fileDesc = ''\n                this.fileName = ''\n                this.fileSize = 0\n                this.fileType = ''\n                this.$snotify.success('Success')\n                this.loadAttachment()\n                // this.txnList = JSON.parse(JSON.stringify(res.data.data))\n                // window.console.log('transactions', this.txnList)\n              }\n            })\n          } else {\n            this.showLoadingAtch = false\n            this.$snotify.error('Please browse to upload image')\n          }\n        }, 10)\n      })\n    },\n    fileUrl(dataItem) {\n      if (dataItem.fileUrl) {\n        return `<a target=\"_blank\" style=\"color:#ED1A3A !important\" href=\"${dataItem.fileUrl}\"><span>Open</span></a>`\n      }\n      return ``\n    },\n    async loadAttachment() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          if (this.project.hasOwnProperty('id')) {\n            this.showLoadingAtch = true\n            const strFilter = '?id=' + this.project.id\n            billingHandler.attachmentList(strFilter).then(res => {\n              if (res.data.statusCode === 200) {\n                this.showLoadingAtch = false\n                this.attachmentList = res.data.data\n              }\n            })\n          }\n\n        }, 10)\n      })\n    },\n  },\n  watch: {\n    'project': 'loadAttachment'\n  },\n}\n</script>\n<style scoped>\n</style>"]}]}