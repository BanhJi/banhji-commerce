{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/suppliers/Insight.vue?vue&type=style&index=0&id=0947eae6&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/suppliers/Insight.vue","mtime":1638499443342},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50Owp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICBoZWlnaHQ6IDMycHggIWltcG9ydGFudDsKICBib3JkZXItYm90dG9tOiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlCj4gLnYtZGF0YS10YWJsZV9fd3JhcHBlcgo+IHRhYmxlCj4gdGJvZHkKPiB0cjpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpOm5vdCgudi1kYXRhLXRhYmxlX19lbXB0eS13cmFwcGVyKSB7CiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDsKfQoKLmstY2hhcnQgewogIGhlaWdodDogMTYwcHg7Cn0KCi52LWRhdGEtdGFibGUuYmlnLXRoID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICBoZWlnaHQ6IDUwcHggIWltcG9ydGFudDsKfQoKLndpdGhfNTAgewogIHdpZHRoOiA1MCU7Cn0KCkBtZWRpYSAobWF4LXdpZHRoOiA1NzZweCkgewp9Cg=="},{"version":3,"sources":["Insight.vue"],"names":[],"mappingsy0BA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"Insight.vue","sourceRoot":"src/views/suppliers","sourcesContent":["<template>\n  <v-row class=\"\">\n    <v-col sm=\"12\" cols=\"12\" class=\"pb-0 pt-4\">\n      <v-row>\n        <v-col sm=\"4\" class=\"py-0 pr-md-2\" cols=\"12\">\n          <div class=\"d-flex\">\n          <v-card\n              outlined\n              dense\n              color=\"primary\"\n              class=\"pa-2 mb-4 no_border flex-1 niradei_bold\"\n              min-height=\"62px\"\n          >\n            <v-row>\n              <h6 class=\"col-sm-12 col-md-5 font_34 white--text\">{{ dueThisWeekPExpense }}</h6>\n              <h4\n                  class=\"flex_right py-0 text-right white--text white--text col-sm-12 col-md-7 font_16 text-uppercase\"\n              >\n                <span  class=\"float-right\">{{\n                    $t(\"to_pay_the_week\")\n                  }}</span>\n              </h4>\n\n            </v-row>\n          </v-card>\n          <v-btn style=\"height:62px !important;\" color=\"primary\" class=\"ml-1\">\n              <v-icon @click=\"loadData\" size=\"30\" color=\"white\"\n                >mdi-reload</v-icon\n              >\n            </v-btn>\n          </div>\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 no_border\"\n              min-height=\"268\"\n              color=\"grayBg\"\n          >\n            <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"amount_to_pay\") }}</h3>\n            <p class=\"mb-0\">\n              {{ $t(\"as_of_today\") }}\n            </p>\n            <h2\n                class=\"primary--text mb-0 pa-0 niradei_black mb-0 col-sm-12 text-right\"\n            >\n              {{ amountToPayBalance }}\n            </h2>\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoadingAmountToPay\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"\n                  :type=\"'loading'\">\n              </LoadingMe>\n              <v-simple-table class=\"mb-3\">\n                <template>\n                  <tbody>\n                  <tr v-for=\"item in amountToPay\" :key=\"item.name\">\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ item.name }} {{ $t(item.locale) }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ numberFormat(item.value, item.decimalFormat) }}\n                        </span>\n                    </td>\n                  </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </template>\n            <v-row>\n              <v-col sm=\"6\" class=\"pr-0 py-0\">\n                <v-btn\n                    to=\"\"\n                    class=\"font_16 text-capitalize rounded-0 white--text\"\n                    color=\"primary\"\n                >\n                  + {{ $t(\"payment\") }}\n                </v-btn>\n              </v-col>\n              <v-col sm=\"6\" class=\"pl-0 pb-0 text-right\">\n                <router-link\n                    to=\"\"\n                    class=\"mb-0 niradei_bold font_16 primary--text text-right\"\n                >{{ $t(\"view_report\") }}\n                </router-link>\n              </v-col>\n            </v-row>\n          </v-card>\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 mt-4 no_border\"\n              min-height=\"268\"\n              color=\"grayBg\"\n          >\n            <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"total_vendors\") }}</h3>\n            <p class=\"mb-0\">\n              {{ $t(\"as_of_today\") }}\n            </p>\n            <h2\n                class=\"primary--text mb-0 pa-0 niradei_black mb-0 col-sm-12 text-right\"\n            >\n              {{ vendorAsOfCount }}\n            </h2>\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoadingTotalVendor\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"\n                  :type=\"'loading'\">\n              </LoadingMe>\n              <v-simple-table class=\"mb-3\">\n                <template>\n                  <tbody>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"new\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ newVendor }}\n                        </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"overdue\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ overDueThisWeeks }}\n                        </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"inactive\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ inActive }}\n                        </span>\n                    </td>\n                  </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </template>\n            <v-row>\n              <v-col sm=\"6\" class=\"pr-0 py-0\">\n                <v-btn\n                    to=\"\"\n                    class=\"font_16 text-capitalize rounded-0 white--text\"\n                    color=\"primary\"\n                >\n                  + {{ $t(\"new\") }}\n                </v-btn>\n              </v-col>\n              <v-col sm=\"6\" class=\"pl-0 pb-0 text-right\">\n                <router-link\n                    to=\"\"\n                    class=\"mb-0 niradei_bold font_16 primary--text text-right\"\n                >{{ $t(\"view_report\") }}\n                </router-link>\n              </v-col>\n            </v-row>\n          </v-card>\n        </v-col>\n        <v-col sm=\"4\" class=\"py-md-0 px-md-2\" cols=\"12\">\n          <v-card\n              outlined\n              dense\n              color=\"third\"\n              class=\"pa-2 mb-4 no_border niradei_bold \"\n              min-height=\"52px\">\n            <v-row>\n              <h6 class=\"white--text col-sm-12 col-md-5 font_34\">{{ overCreditLimit }}</h6>\n              <h4\n                  class=\"text-right flex_right col-md-7 white--text col-sm-12 py-0 font_16 text-uppercase\">\n                {{ $t(\"over_credit_limit\") }}\n              </h4>\n            </v-row>\n          </v-card>\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 no_border\"\n              min-height=\"268\"\n              color=\"grayBg\"\n          >\n            <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"total_purchase\") }}</h3>\n            <p class=\"mb-0\">\n              {{ $t(\"from_the_beginning_year\") }}\n            </p>\n            <h2 class=\"primary--text mb-0 pa-0 niradei_black mb-0 col-sm-12 text-right\">\n              {{ numberFormat(purchaseBalance, decimalFormat) }}\n            </h2>\n            <template>\n              <LoadingMe\n                  :isLoading=\"showLoadingPurchase\"\n                  :fullPage=\"false\"\n                  :myLoading=\"true\"\n                  :type=\"'loading'\">\n              </LoadingMe>\n              <v-simple-table class=\"mb-3\">\n                <template>\n                  <tbody>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"vendors\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ purchaseVendors }}\n                        </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"value_per_purchase\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                         {{ numberFormat(purchaseValuePerBill, decimalFormat) }}\n                        </span>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td class=\"text-left pl-0\">\n                        <span class=\"niradei_medium font_14 grey--text\">\n                          {{ $t(\"bills\") }}\n                        </span>\n                    </td>\n                    <td class=\"text-right pr-0\">\n                        <span class=\"niradei_heavy font_18 dark_grey\">\n                          {{ bills }}\n                        </span>\n                    </td>\n                  </tr>\n                  </tbody>\n                </template>\n              </v-simple-table>\n            </template>\n            <v-row>\n              <v-col sm=\"6\" class=\"pr-0 py-0\">\n                <v-btn\n                    to=\"\"\n                    class=\"font_16 text-capitalize rounded-0 white--text\"\n                    color=\"primary\"\n                >\n                  + {{ $t(\"purchase\") }}\n                </v-btn>\n              </v-col>\n              <v-col sm=\"6\" class=\"pl-0 pb-0 text-right\">\n                <router-link\n                    to=\"\"\n                    class=\"mb-0 niradei_bold font_16 primary--text text-right\"\n                >{{ $t(\"view_report\") }}\n                </router-link>\n              </v-col>\n            </v-row>\n          </v-card>\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 mt-4 no_border\"\n              min-height=\"268\"\n              color=\"grayBg\">\n            <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"3_ways_matching\") }}</h3>\n            <p>\n              {{ $t(\"from_the_beginning_year\") }}\n            </p>\n            <LoadingMe\n                :isLoading=\"showLoading3WayMatching\"\n                :fullPage=\"false\"\n                :myLoading=\"true\"\n                :type=\"'loading'\">\n            </LoadingMe>\n            <chart\n                :title-text=\"''\"\n                :chartArea=\"chartAreaChart1\"\n                :legend-visible=\"false\"\n                :series-defaults-type=\"'column'\"\n                :series=\"series\"\n                :category-axis=\"categoryAxis\"\n                :value-axis=\"valueAxis\"\n                :tooltip=\"tooltip1\"\n                :theme=\"'sass'\">\n            </chart>\n          </v-card>\n        </v-col>\n        <v-col class=\"py-0 pl-md-2\" sm=\"4\" cols=\"12\">\n          <v-card\n              outlined\n              dense\n              color=\"grayBg\"\n              class=\"pa-4 no_border\"\n              min-height=\"347px\"\n          >\n            <v-row>\n              <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"purchase_purchase_order\") }}</h3>\n                <p class=\"mb-7\">{{ $t(\"from_the_beginning_year\") }}</p>\n              </v-col>\n            </v-row>\n            <LoadingMe\n                :isLoading=\"showLoadingGraph\"\n                :fullPage=\"false\"\n                :myLoading=\"true\"\n                :type=\"'loading'\"/>\n            <chart\n                ref=\"chart\"\n                :legend-position=\"'bottom'\"\n                :legend-visible=\"false\"\n                :tooltip=\"tooltip\"\n                :series=\"seriesLine\"\n                :chartArea=\"chartArea\"\n                :category-axis-categories=\"categories_line\"\n                :value-axis=\"valueAxis_line\"\n                :theme=\"'sass'\"\n            />\n          </v-card>\n          <v-card\n              outlined\n              dense\n              class=\"pa-4 mt-4 no_border\"\n              min-height=\"268px\"\n              color=\"grayBg\"\n          >\n            <h3 class=\"font_20\" :class=\"{'line_34':this.$i18n.locale=='kh'}\">{{ $t(\"vendors_analysis\") }}</h3>\n            <p class=\"mb-0\">\n              {{ $t(\"from_the_beginning_year\") }}\n            </p>\n            <v-row>\n              <v-col sm=\"12\" cols=\"12\" class=\"pr-1 pb-0\">\n                <LoadingMe\n                    :isLoading=\"showLoadingVendorAnalysis\"\n                    :fullPage=\"false\"\n                    :myLoading=\"true\"\n                    :type=\"'loading'\">\n                </LoadingMe>\n                <template>\n                  <v-simple-table class=\"mb-3\">\n                    <template>\n                      <tbody>\n                      <tr>\n                        <td class=\"text-left pl-0 py-1 with_50\">\n                            <span class=\"niradei_medium font_14 grey--text\">\n                              {{ $t(\"payment_term\") }}\n                            </span>\n                        </td>\n                        <td class=\"text-right pr-0\">\n                            <span class=\"niradei_heavy font_18 dark_grey\">\n                              {{ mostTermUsed }}\n                            </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left with_50 pl-0\">\n                            <span class=\"niradei_medium font_14 grey--text\">\n                              {{ $t(\"average_purchase_per_vendor\") }}\n                            </span>\n                        </td>\n                        <td class=\"text-right pr-0\">\n                            <span class=\"niradei_heavy font_18 dark_grey\">\n                              {{ numberFormat(avgRevenuePerVendor, decimalFormat) }}\n                            </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left with_50 pl-0\">\n                            <span class=\"niradei_medium font_14 grey--text\">\n                              {{ $t(\"purchase_order_to_bill_ratio\") }}\n                            </span>\n                        </td>\n                        <td class=\"text-right pr-0\">\n                            <span class=\"niradei_heavy font_18 dark_grey\">\n                             {{ numberFormatNoCurrency(purchaseOrderToPurchaseRatio, decimalFormat) }} %\n                            </span>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left  with_50 pl-0\">\n                            <span class=\"niradei_medium font_14 grey--text\">\n                              {{ $t(\"payable_purchase_ratio_vendor\") }}\n                            </span>\n                        </td>\n                        <td class=\"text-right pr-0\">\n                            <span class=\"niradei_heavy font_18 dark_grey\">\n                              {{ numberFormatNoCurrency(payableToPurchaseRatio, decimalFormat) }} %\n                            </span>\n                        </td>\n                      </tr>\n                      </tbody>\n                    </template>\n                  </v-simple-table>\n                </template>\n              </v-col>\n              <!-- <v-col sm=\"6\" cols=\"12\" class=\"pl-0 pt-0 pb-0\">\n                <chart\n                  ref=\"chart\"\n                  :legend-visible=\"false\"\n                  :series-defaults-labels-visible=\"false\"\n                  :series=\"series_chart\"\n                  :tooltip-template=\"tooltipTemplate\"\n                  :chartArea=\"chartAreaChart\"\n                  :tooltip-visible=\"true\"\n                  :height=\"100\"\n                  :theme=\"'sass'\"\n                />\n              </v-col> -->\n            </v-row>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {Chart} from \"@progress/kendo-charts-vue-wrapper\";\nimport {i18n} from \"@/i18n\";\nimport kendo from \"@progress/kendo-ui\";\nimport dashboardHandler from \"@/scripts/dashboard/customer/handler/dashboardHandler\";\n\nconst billingHandler = require(\"@/scripts/invoice/handler/billingHandler\");\nexport default {\n  components: {\n    chart: Chart,\n    LoadingMe: () => import(`@/components/Loading`),\n  },\n  data: () => ({\n    tooltip: {\n      visible: true,\n      template: \"#= series.name #: #= kendo.toString(value, `n2`) #\",\n    },\n    // line chart\n    seriesLine: [\n      {\n        type: \"line\",\n        name: i18n.t('purchase'),\n        data: [0, 0, 0, 0, 0, 0],\n        color: \"#4d4848\",\n      },\n      {\n        type: \"line\",\n        name: i18n.t('purchase_order'),\n        data: [0, 0, 0, 0, 0, 0],\n        color: \"#c80000\",\n      },\n    ],\n    categories_line: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n    chartArea: {\n      background: \"transparent\",\n      height: 230,\n    },\n    valueAxis_line: [\n      {\n        max: 10,\n        // visible: false,\n        labels: {\n          format: \"{0}\",\n        },\n      },\n    ],\n    // pie chart\n    labelTemplate: \"#= category # #= value #%\",\n    tooltipTemplate: \"#= category # : #= value #%\",\n    chartAreaChart: {\n      background: \"transparent\",\n      height: 190,\n    },\n    series_chart: [\n      {\n        type: \"pie\",\n        startAngle: 180,\n        data: [\n          {\n            category: i18n.t(\"credit_card\"),\n            value: 22,\n            color: \"#c80000\",\n          },\n          {\n            category: i18n.t(\"working_capital\"),\n            value: 45,\n            color: \"#f44336\",\n          },\n          {\n            category: i18n.t(\"investment\"),\n            value: 11,\n            color: \"#d85604\",\n          },\n          {\n            category: i18n.t(\"overdraft\"),\n            value: 22,\n            color: \"#e88d14\",\n          },\n        ],\n      },\n    ],\n    // bar chart\n    chartAreaChart1: {\n      background: \"transparent\",\n      height: 170,\n    },\n    series: [\n      {\n        name: \"Total Visits\",\n        field: \"value\",\n        colorField: \"chartColor\",\n        data: [\n          {value: \"100\", chartColor: \"#c80000\"},\n          {value: \"70\", chartColor: \"#f44336\"},\n          {value: \"50\", chartColor: \"#d85604\"},\n        ],\n        //     '100', '70', '50'],\n        // color: ['#00b050','#92d050','#212a35'],\n        border: {\n          width: 0,\n        },\n      },\n    ],\n    valueAxis: [\n      {\n        max: 100,\n        line: {\n          visible: false,\n        },\n        minorGridLines: {\n          visible: false,\n        },\n      },\n    ],\n    categoryAxis: {\n      categories: [i18n.t(\"order\"), i18n.t(\"purchase\"), i18n.t(\"receipt\")],\n      majorGridLines: {\n        visible: false,\n      },\n    },\n    tooltip1: {\n      visible: true,\n      template: \"#= series.name #: #= kendo.toString(value, `n2`) #\",\n    },\n    asOf: new Date().toISOString().substr(0, 10),\n    vendorAsOfCount: 0,\n    overDueThisWeeks: 0,\n    inActive: 0,\n    newVendor: 0,\n    amountToPayBalance: 0,\n    amountToPay: [],\n\n\n    showLoadingPurchase: false,\n    showLoadingAmountToPay: false,\n    showLoadingTotalVendor: false,\n    showLoadingVendorAnalysis: false,\n    showLoadingGraph: false,\n    showLoading3WayMatching: false,\n\n    mostTermUsed: '',\n    avgRevenuePerVendor: '',\n    purchaseOrderToPurchaseRatio: '',\n    payableToPurchaseRatio: '',\n\n    decimalFormat: 'n2',\n    purchaseBalance: 0,\n    purchaseVendors: 0,\n    bills: 0,\n    purchaseValuePerBill: 0,\n    baseCurrency: '',\n\n    dueThisWeekPExpense: 0,\n    overCreditLimit: 0,\n  }),\n  methods: {\n    numberFormat(value, format) {\n      return  kendo.toString(value, format)\n    },\n    numberFormatNoCurrency(value, format) {\n      return kendo.toString(value, format)\n    },\n    async dashboardReceivableOverviewVendor() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          this.showLoadingTotalVendor = true\n          billingHandler\n              .dashboardReceivableOverviewVendor(strFilter)\n              .then((res) => {\n                if (res.data.statusCode === 200) {\n                  this.showLoadingTotalVendor = false\n                  const response = res.data.data;\n                  this.vendorAsOfCount = response.vendorAsOfCount;\n                  this.overDueThisWeeks = response.overDueThisWeeks;\n                  this.newVendor = response.newVendor;\n                } else {\n                  this.showLoadingTotalVendor = false\n                }\n              });\n        }, 10);\n      });\n    },\n    async loadAmountToPay() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf + \"&type=amount_to_pay\";\n          this.showLoadingAmountToPay = true\n          billingHandler.wcpPableOverviewList(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingAmountToPay = false\n              const response = res.data.data[0];\n              this.amountToPay = response.lines;\n              // this.decimalFormat = response.decimalFormat\n              // this.lastUpdated = response.lastUpdatedAt\n              // const paymentTerm = response.paymentTermUsed\n              // this.mostPaymentTermUsed = paymentTerm.name\n              this.amountToPayBalance = this.numberFormat(\n                  response.openBalance,\n                  response.decimalFormat\n              );\n              // this.showLoading = false\n            } else {\n              this.showLoadingAmountToPay = false\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardPurchase() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          let strFilter = ''\n          strFilter = '?asOf=' + this.asOf\n          this.showLoadingPurchase = true\n          dashboardHandler.vendorTotalPurchase(strFilter).then(res => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingPurchase = false\n              const response = res.data.data\n              this.purchaseBalance = response.exchangeSubtotal || 0\n              this.purchaseVendors = response.vendors || 0\n              this.bills = response.bills || 0\n              this.purchaseValuePerBill = response.valuePerBill || 0\n              this.decimalFormat = response.decimalFormat\n              this.baseCurrency = response.baseCurrency || ''\n            } else {\n              this.showLoadingPurchase = false\n            }\n          })\n        }, 10)\n      })\n    },\n    async dashboardSalePaymentGraph() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          let strFilter = ''\n          strFilter = '?asOf=' + this.asOf\n          this.showLoadingGraph = true\n          dashboardHandler.vendorPurchaseNPurchaseOrder(strFilter).then(res => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingGraph = false\n              const response = res.data.data\n              const purchaseX = response.purchaseNExpense || []\n              const purchaseOrder = response.purchaseOrder || []\n              const maxAxe = response.max || 0\n              const axeLength = (parseInt(maxAxe).toString().length - 1)\n              const axeIncre = parseInt('1' + String(1).padStart(axeLength, '0'))\n              window.console.log(axeIncre, '-', axeLength)\n              this.seriesLine = [\n                {\n                  type: \"line\",\n                  name: i18n.t(\"purchase\"),\n                  data: purchaseX,\n                  color: \"#4d4848\",\n                },\n                {\n                  type: \"line\",\n                  name: i18n.t(\"purchase_order\"),\n                  data: purchaseOrder,\n                  color: \"#c80000\",\n                },\n              ]\n              this.valueAxis_line = [\n                {\n                  max: maxAxe + axeIncre,\n                  labels: {\n                    format: \"{0}\",\n                  }\n                }\n              ]\n            } else {\n              this.showLoadingGraph = false\n            }\n          })\n        }, 10)\n      })\n    },\n    async dashboardVendorAnalysis() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          let strFilter = ''\n          strFilter = '?asOf=' + this.asOf\n          this.showLoadingVendorAnalysis = true\n          dashboardHandler.vendorPurchaseAnalysis(strFilter).then(res => {\n            if (res.data.statusCode === 200) {\n              this.showLoadingVendorAnalysis = false\n              const response = res.data.data\n              const topTerm = response.topTermUsed || {}\n              this.mostTermUsed = topTerm.name || ''\n              this.avgRevenuePerVendor = response.averageRevenue || 0\n              this.purchaseOrderToPurchaseRatio = response.purchaseOrderToPurchaseRatio || 0\n              this.payableToPurchaseRatio = response.payableToPurchaseRatio || 0\n            } else {\n              this.showLoadingVendorAnalysis = false\n            }\n          })\n        }, 10)\n      })\n    },\n    async dashboard3WayMatching() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          let strFilter = ''\n          strFilter = '?asOf=' + this.asOf\n          this.showLoading3WayMatching = true\n          dashboardHandler.vendor3WayMatching(strFilter).then(res => {\n            if (res.data.statusCode === 200) {\n              this.showLoading3WayMatching = false\n              const response = res.data.data\n              const maxAxe = response.maxValue || 0\n              const axeLength = (parseInt(maxAxe).toString().length - 1)\n              const axeIncre = parseInt('1' + String(1).padStart(axeLength, '0'))\n              this.series = [\n                {\n                  name: \"Total\",\n                  field: \"value\",\n                  colorField: \"chartColor\",\n                  data: response.series || [],\n                  border: {\n                    width: 0,\n                  }\n                }\n              ]\n              this.valueAxis = [\n                {\n                  max: (response.maxValue || 0) + axeIncre,\n                  line: {\n                    visible: false,\n                  },\n                  minorGridLines: {\n                    visible: false,\n                  },\n                  labels: {\n                    visible: true,\n                    font: \"10px\",\n                  },\n                },\n              ]\n            } else {\n              this.showLoading3WayMatching = false\n            }\n          })\n        }, 10)\n      })\n    },\n    async dashboardReceivableOverview() {\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(\"resolved\");\n          let strFilter = \"\";\n          strFilter = \"?asOf=\" + this.asOf;\n          billingHandler.dashboardReceivableOverview(strFilter).then((res) => {\n            if (res.data.statusCode === 200) {\n              const response = res.data.data;\n              this.dueThisWeekPExpense = response.dueThisWeekPExpense;\n            }\n          });\n        }, 10);\n      });\n    },\n    async dashboardPurchaseOverCreditLimit() {\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve('resolved')\n          let strFilter = ''\n          strFilter = '?asOf=' + this.asOf\n          dashboardHandler.vendorOverCreditLimit(strFilter).then(res => {\n            if (res.data.statusCode === 200) {\n              const response = res.data.data\n              this.overCreditLimit = response.overCreditLimit || 0\n            }\n          })\n        }, 10)\n      })\n    },\n    async loadData(){\n      await this.loadAmountToPay();\n      await this.dashboardReceivableOverviewVendor();\n      await this.dashboardPurchase();\n      await this.dashboardSalePaymentGraph();\n      await this.dashboardVendorAnalysis();\n      await this.dashboard3WayMatching();\n      await this.dashboardReceivableOverview();\n      await this.dashboardReceivableOverview();\n    }\n  },\n  mounted: async function () {\n    await this.loadAmountToPay();\n    await this.dashboardReceivableOverviewVendor();\n    await this.dashboardPurchase();\n    await this.dashboardSalePaymentGraph();\n    await this.dashboardVendorAnalysis();\n    await this.dashboard3WayMatching();\n    await this.dashboardReceivableOverview();\n    await this.dashboardReceivableOverview();\n  },\n  computed: {},\n};\n</script>\n<style scoped>\n.theme--light.v-data-table {\n  background-color: transparent !important;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 32px !important;\n  border-bottom: thin solid rgba(0, 0, 0, 0.12);\n}\n\n.theme--light.v-data-table\n> .v-data-table__wrapper\n> table\n> tbody\n> tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n  background-color: transparent !important;\n}\n\n.k-chart {\n  height: 160px;\n}\n\n.v-data-table.big-th > .v-data-table__wrapper > table > tbody > tr > td {\n  height: 50px !important;\n}\n\n.with_50 {\n  width: 50%;\n}\n\n@media (max-width: 576px) {\n}\n</style>\n"]}]}