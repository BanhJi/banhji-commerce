{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/TaxCredit.vue?vue&type=style&index=0&id=66ddf474&scoped=true&lang=css&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/compliance/monthly_tax/TaxCredit.vue","mtime":1638499443159},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7Cn0KCi50aGVtZS0tbGlnaHQudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ci5wcmltYXJ5OmhvdmVyOm5vdCgudi1kYXRhLXRhYmxlX19leHBhbmRlZF9fY29udGVudCk6bm90KC52LWRhdGEtdGFibGVfX2VtcHR5LXdyYXBwZXIpIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM5MmQwNTAgIWltcG9ydGFudDsKfQoKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0aGVhZCA+IHRyOmxhc3QtY2hpbGQgPiB0aCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBib3JkZXItYm90dG9tOiB0aGluIHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMik7CiAgICBoZWlnaHQ6IDM3cHggIWltcG9ydGFudDsKICAgIGNvbG9yOiAjMDAwOwp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50OwogICAgYm9yZGVyLXRvcDogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwogICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50Owp9CgoudGhlbWUtLWxpZ2h0LnYtZGF0YS10YWJsZSA+IC52LWRhdGEtdGFibGVfX3dyYXBwZXIgPiB0YWJsZSA+IHRib2R5ID4gdHI6bm90KDpsYXN0LWNoaWxkKSA+IHRkOm5vdCgudi1kYXRhLXRhYmxlX19tb2JpbGUtcm93KSwKLnRoZW1lLS1saWdodC52LWRhdGEtdGFibGUgPiAudi1kYXRhLXRhYmxlX193cmFwcGVyID4gdGFibGUgPiB0Ym9keSA+IHRyOm5vdCg6bGFzdC1jaGlsZCkgPiB0aDpub3QoLnYtZGF0YS10YWJsZV9fbW9iaWxlLXJvdykgewogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCAjZGRkOwp9Cgoudi1kYXRhLXRhYmxlID4gLnYtZGF0YS10YWJsZV9fd3JhcHBlciA+IHRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHsKICAgIGhlaWdodDogMzJweCAhaW1wb3J0YW50OwogICAgYm9yZGVyLWJvdHRvbTogdGhpbiBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpICFpbXBvcnRhbnQ7Cn0KCi5ib3JkZXJfdG9wIHsKICAgIGJvcmRlci10b3A6IHRoaW4gc29saWQgI2ZmZiAhaW1wb3J0YW50Owp9Cgoudi1hcHBsaWNhdGlvbiAucHJpbWFyeSwKLnYtYXBwbGljYXRpb24gLnRoaXJkIHsKICAgIGJvcmRlci1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9CgoudmF0IHsKICAgIGNvbG9yOiAjZmZmOwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBmb250LWZhbWlseTogJ05pcmFkZWktQm9sZCcsIHNlcmlmICFpbXBvcnRhbnQ7Cn0KCi5hbW91bnQgewogICAgdGV4dC1hbGlnbjogcmlnaHQgIWltcG9ydGFudDsKfQoKLmhlYWQtc3VtbWFyeSB7CiAgICB0ZXh0LWFsaWduOiByaWdodCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["TaxCredit.vue"],"names":[],"mappingsfile":"TaxCredit.vue","sourceRoot":"src/views/compliance/monthly_tax","sourcesContent":["<template>\n    <v-row class=\"\">\n        <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"pt-0\">\n                    <v-row>\n                        <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                            <h2 class=\"mb-0 font_20\">{{ $t('monthly_tax_balance') }}</h2>\n                            <p class=\"mb-0\">{{ $t('for_the_month_of') }}: <span class=\"text-bold\">{{\n                                    monthFormat(date)\n                                }}</span></p>\n                        </v-col>\n                        <v-col :sm=\"isValid ? 4 : 6\" cols=\"12\" class=\"py-0 d-flex justify-end hide_form_alert\">\n                            <div class=\"d-flex\">\n                                <month-picker :initialMonth=\"date\" @emitMonth=\"date = $event\"/>\n                                <v-btn class=\"ma-1 ml-2\" color=\"primary white--text text-capitalize\"\n                                       @click=\"onSearch\">\n                                    {{ $t('view') }}\n                                </v-btn>\n                            </div>\n                        </v-col>\n                        <v-col v-if=\"isValid\" sm=\"2\" cols=\"12\" class=\"py-1\">\n                            <v-btn @click=\"dialog = true\" class=\"float-right capitalize white--text\" color=\"primary\">\n                                {{ $t('add_new') }}\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-col>\n            </v-row>\n            <v-row class=\"\">\n                <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                    <v-simple-table class=\"nomal_table\">\n                        <template v-slot:default>\n                            <thead>\n                            <tr>\n                                <th class=\"text-bold text-uppercase \">{{ $t('description') }}</th>\n                                <th class=\"text-bold text-uppercase \">{{ $t('code') }}</th>\n                                <th class=\"text-bold text-uppercase\">{{ $t('amount') }}</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            <tr>\n                                <td class=\"text-bold text-uppercase\">{{ $t('prepayment_of_tax_on_income_ppi') }}</td>\n                                <td></td>\n                                <td></td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">{{ $t('prepayment_of_tax_on_income') }}</td>\n                                <td></td>\n                                <td>{{ numberFormat(totalAmountNet) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"\">{{ $t('credit_carried_last_month') }}</td>\n                                <td></td>\n                                <td>{{ numberFormat(oldBalancePpi.balance) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"third vat\">{{ $t('ppl_be_paid') }}</td>\n                                <td class=\"third vat\"></td>\n                                <td class=\"third vat\">{{ numberFormat(balancePpi.balance) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-bold text-uppercase\">{{ $t('value_added_tax_vat') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\"></td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('tax_credit_from_last_month') }}</td>\n                                <td class=\"\">{{ oldBalanceVat.code }}</td>\n                                <td class=\"\">{{ numberFormat(oldBalanceVat.balanceCredit) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('current_month_input_tax') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ numberFormat(totalAmountP) }}</td>\n                            </tr>\n                            <tr>\n                                <td>{{ $t('current_month_output_tax') }}</td>\n                                <td class=\"\"></td>\n                                <td class=\"\">{{ numberFormat(totalAmountS) }}</td>\n                            </tr>\n                            <tr v-if=\"balanceVat.balancePayment > 0\">\n                                <td class=\"third vat\">{{ $t('vat_to_paid') }}</td>\n                                <td class=\"third vat\"></td>\n                                <td class=\"third vat\">{{ numberFormat(balanceVat.balancePayment) }}</td>\n                            </tr>\n                            <tr v-if=\"balanceVat.balanceCredit > 0\">\n                                <td class=\"third vat border_top\">{{ $t('credit_forward') }}</td>\n                                <td class=\"thrid vat border_top\"></td>\n                                <td class=\"third vat border_top\">{{ numberFormat(balanceVat.balanceCredit) }}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"third vat border_top\">{{ $t('vat_refund') }}</td>\n                                <td class=\"third vat border_top\"></td>\n                                <td class=\"third vat border_top\">{{ numberFormat(vatRefund) }}</td>\n                            </tr>\n                            </tbody>\n                        </template>\n                    </v-simple-table>\n                    <LoadingMe\n                        :isLoading=\"showLoading\"\n                        :fullPage=\"false\"\n                        :myLoading=\"true\"\n                    />\n                </v-col>\n                <v-col cols=\"12\">\n                    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n                        <v-card>\n                            <div class=\"modal_header\">\n                                <v-card-title>{{ $t(\"add_tax_credit\") }}</v-card-title>\n                                <v-icon @click=\"onClose\">close</v-icon>\n                            </div>\n                            <v-card-text class=\"modal_text_content\"  >\n                                <v-row>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"month_of\") }}</label>\n                                        <month-picker :initial-month=\"monthOf\" @emitMonth=\"monthOf = $event\"/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                        <label class=\"label\">{{ $t(\"ppi\") }}</label>\n                                        <v-text-field type=\"number\" v-model=\"amountPPI\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label\">{{ $t(\"code\") }}</label>\n                                        <v-text-field v-model=\"codeVat\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                    <v-col sm=\"6\" cols=\"12\" class=\"py-0\">\n                                        <label class=\"label\">{{ $t(\"vat\") }}</label>\n                                        <v-text-field type=\"number\" v-model=\"amountVat\" class=\"mt-1\" outlined/>\n                                    </v-col>\n                                </v-row>\n                            </v-card-text>\n                   \n                            <v-card-actions class=\"modal_footer d-flex justify-space-between\">\n                                <v-btn @click=\"onClose\" color=\"primary\"  outlined class=\"black--text capitalize\">{{ $t(\"cancel\") }}</v-btn>\n                                <v-btn @click=\"onCreate\" color=\"primary\" class=\"white--text capitalize\"\n                                >{{ $t(\"save_close\") }}\n                                </v-btn>\n                            </v-card-actions>\n                        </v-card>\n                    </v-dialog>\n                </v-col>\n            </v-row>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from \"@/components/Loading\";\nimport kendo from \"@progress/kendo-ui\";\n\nconst monthlyReturnHandler = require(\"@/scripts/compliance/handler/monthlyReturnHandler\")\nconst saleHandler = require(\"@/scripts/compliance/handler/saleHandler\")\nconst purchaseHandler = require(\"@/scripts/compliance/handler/purchaseHandler\")\nexport default {\n    data: () => ({\n        showLoading: false,\n        date: new Date().toISOString().substr(0, 7),\n        sales: [],\n        purchases: [],\n        dialog: false,\n        monthOf: '',\n        amountPPI: '',\n        codeVat: '',\n        amountVat: '',\n        ppi: {},\n        vat: {},\n        balanceVat: {},\n        balancePpi: {},\n        oldBalancePpi: {},\n        oldBalanceVat: {},\n        totalAmountNet: 0,\n        totalAmountP: 0,\n        totalAmountS: 0,\n        vatRefund: 0,\n    }),\n    props: {},\n    methods: {\n        onClose() {\n            this.monthOf = ''\n            this.amountVat = ''\n            this.amountPPI = ''\n            this.dialog = false\n        },\n        async onloadSale() {\n            new Promise(resolve => {\n                setTimeout(async () => {\n                    resolve('resolved');\n                    await saleHandler.getByMonth(this.date).then(async res => {\n                        this.sales = res.data.data\n                        await this.onCalculate()\n                        await this.onCalculateTax()\n                    })\n                }, 100)\n            })\n        },\n        async onloadPurchase() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    purchaseHandler.getByMonth(this.date).then(async res => {\n                        this.purchases = res.data.data\n                        await this.onCalculate()\n                    })\n                }, 100)\n            })\n\n        },\n        async onCalculate() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountP = 0,\n                        amountS = 0\n                    if (this.purchases.length > 0) {\n                        window.console.log('123')\n                        for (let i = 0; i < this.purchases.length; i++) {\n                            amountP += this.purchases[i].totalVAT\n                        }\n                        window.console.log(this.totalAmountP, 'P')\n                    }\n                    this.totalAmountP = amountP\n                    if (this.sales.length > 0) {\n                        window.console.log('987')\n                        for (let i = 0; i < this.sales.length; i++) {\n                            amountS += this.sales[i].totalVAT\n                        }\n                        window.console.log(this.totalAmountS, 'S')\n                    }\n                    this.totalAmountS = amountS\n                }, 100)\n            })\n        },\n        async onloadPPI() {\n            await monthlyReturnHandler.getPpi().then(res => {\n                this.ppi = res.data.data[0]\n            })\n        },\n        async onloadVat() {\n            await monthlyReturnHandler.getVat().then(res => {\n                this.vat = res.data.data[0]\n            })\n        },\n        async onCalculateTax() {\n            new Promise(resolve => {\n                setTimeout(() => {\n                    resolve('resolved');\n                    let amountS = 0\n                    for (let i = 0; i < this.sales.length; i++) {\n                        amountS += this.sales[i].totalAmountInclusive\n                            + this.sales[i].totalSpecificTax\n                            + this.sales[i].totalPubTax\n                            + this.sales[i].totalAccomTax\n                            + this.sales[i].totalAmountNetVat\n                    }\n                    this.totalAmountNet = amountS * 0.01\n                }, 200)\n            })\n        },\n        async getBalancePPI() {\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.ppi.id\n            const monthly = new Date(this.date).setMonth(new Date(this.date).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            await monthlyReturnHandler.getBalance(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.oldBalancePpi = res.data.data[0]\n                } else {\n                    this.oldBalancePpi = {\n                        txnBalance: 0,\n                        balance: 0,\n                    }\n                }\n            })\n            await monthlyReturnHandler.getBalance(id, this.date, 'monthly').then(res => {\n                if (res.data.data.length) {\n                    this.balancePpi = res.data.data[0]\n                } else {\n                    this.balancePpi = {\n                        txnBalance: 0,\n                        balance: 0,\n                    }\n                }\n            })\n        },\n        async getBalanceVat() {\n            const addZero = (num, places) => String(num).padStart(places, '0')\n            const id = this.vat.id\n            const monthly = new Date(this.date).setMonth(new Date(this.date).getMonth())\n            const monthOf = new Date(monthly).getFullYear() + '-' + addZero(new Date(monthly).getMonth(), 2)\n            await monthlyReturnHandler.getBalanceVat(id, monthOf, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.oldBalanceVat = res.data.data[0]\n                } else {\n                    this.oldBalanceVat = {\n                        balanceCredit: 0,\n                        balancePayment: 0,\n                    }\n                }\n            })\n\n            await monthlyReturnHandler.getBalanceVat(id, this.date, 'monthly').then(res => {\n                if (res.data.data.length > 0) {\n                    this.balanceVat = res.data.data[0]\n                } else {\n                    this.balanceVat = {\n                        balanceCredit: 0,\n                        balancePayment: 0,\n                    }\n                }\n            })\n        },\n        async onCreate() {\n            this.showLoading = true\n            const dataPPI = {\n                amount: this.amountPPI,\n                monthOf: this.monthOf,\n                type: 'ppi monthly',\n                isDefault: true,\n                date: new Date().toJSON()\n            }\n            await monthlyReturnHandler.addTxnPPI(dataPPI, this.monthOf, 'monthly').then(res => {\n                window.console.log(res)\n            })\n            const dataVat = {\n                credit: this.amountVat,\n                payment: 0,\n                code: this.codeVat,\n                monthOf: this.monthOf,\n                type: 'vat monthly',\n                isDefault: true,\n                date: new Date().toJSON()\n            }\n            await monthlyReturnHandler.addTxnVAT(dataVat, this.monthOf, 'monthly').then(res => {\n                window.console.log(res)\n            })\n            this.showLoading = false\n            this.onClose()\n        },\n        async onSearch() {\n            this.showLoading = true\n            await this.onloadPurchase()\n            await this.onloadSale()\n            await this.getBalancePPI()\n            await this.getBalanceVat()\n            this.showLoading = false\n        },\n        monthFormat(date) {\n            if (date !== 'All Monthly') {\n                return kendo.toString(new Date(date), `MMMM yyyy`)\n            } else {\n                return date\n            }\n        },\n        numberFormat(value) {\n            // window.console.log(this.saleFormContent.decimal,'nimol')\n            return kendo.toString(value, `n2`)\n        },\n    },\n    async mounted() {\n        await this.onloadVat()\n        await this.onloadPPI()\n        await this.onloadSale()\n        await this.onloadPurchase()\n        await this.getBalancePPI()\n        await this.getBalanceVat()\n    },\n    async created() {\n\n    },\n    computed: {\n        isValid() {\n            return !this.balanceVat.isDefault && !this.balanceVat.isDefault;\n        }\n    },\n    components: {\n        'LoadingMe': LoadingMe,\n        'month-picker': () => import('@/components/custom_templates/MonthPicker')\n    },\n};\n</script>\n<style scoped>\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: transparent !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr.primary:hover:not(.v-data-table__expanded__content):not(.v-data-table__empty-wrapper) {\n    background-color: #92d050 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > thead > tr:last-child > th {\n    font-size: 14px;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12);\n    height: 37px !important;\n    color: #000;\n}\n\n.theme--light.v-data-table {\n    background-color: transparent !important;\n    border-top: thin solid #ddd;\n    border-bottom: thin solid #ddd;\n    border-radius: 0 !important;\n}\n\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > td:not(.v-data-table__mobile-row),\n.theme--light.v-data-table > .v-data-table__wrapper > table > tbody > tr:not(:last-child) > th:not(.v-data-table__mobile-row) {\n    border-bottom: thin solid #ddd;\n}\n\n.v-data-table > .v-data-table__wrapper > table > tbody > tr > td {\n    height: 32px !important;\n    border-bottom: thin solid rgba(0, 0, 0, 0.12) !important;\n}\n\n.border_top {\n    border-top: thin solid #fff !important;\n}\n\n.v-application .primary,\n.v-application .third {\n    border-color: #fff !important;\n}\n\n.vat {\n    color: #fff;\n    font-weight: bold;\n    font-family: 'Niradei-Bold', serif !important;\n}\n\n.amount {\n    text-align: right !important;\n}\n\n.head-summary {\n    text-align: right !important;\n}\n</style>\n"]}]}