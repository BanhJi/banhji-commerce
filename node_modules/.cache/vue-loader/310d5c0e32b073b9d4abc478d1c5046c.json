{"remainingRequest":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/task/TaskTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/src/views/accounting/task/TaskTypes.vue","mtime":1638499443116},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macos/Desktop/banhji-0.2/banhji-accounting-web-module/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMb2FkaW5nTWUgZnJvbSAnQC9jb21wb25lbnRzL0xvYWRpbmcnCmltcG9ydCBUYXNrVHlwZSBmcm9tICJAL3NjcmlwdHMvbW9kZWwvVGFza1R5cGUiOwpjb25zdCB0YXNrSGFuZGxlciA9IHJlcXVpcmUoIkAvc2NyaXB0cy90YXNrSGFuZGxlciIpCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICIiLAogICAgY29tcG9uZW50czogewogICAgICAgIExvYWRpbmdNZSwKICAgICAgICAvLyAnYXBwLWRhdGVwaWNrZXInOiBEYXRlUGlja2VyQ29tcG9uZW50LAogICAgICAgIC8vIEJhbmtDb25uZWN0aW9uLAogICAgfSwKICAgIGRhdGE6ICgpID0+ICh7CiAgICAgICAgc3RhcnRfZGF0ZTogIiIsCiAgICAgICAgZGlhbG9nTTogIiIsCiAgICAgICAgZW5kX2RhdGU6ICIiLAogICAgICAgIGRhdGVTb3J0ZXJzOiBbJ1RvZGF5JywgJ1RoaXMgV2VlaycsICdUaGlzIE1vbnRoJywgJ1RoaXMgWWVhciddLAogICAgICAgIGpvdXJuYWxfZW50cmllczogW10sCiAgICAgICAgLy8gTG9hZGluZ01lCiAgICAgICAgY29tcGVsZXRMb2FkaW5nOiBmYWxzZSwKICAgICAgICBpc0xvYWRlZDogZmFsc2UsCiAgICAgICAgdGFza1R5cGU6IG5ldyBUYXNrVHlwZSh7fSksCiAgICAgICAgdGFza1R5cGVzOiBbXSwKICAgICAgICB0YXNrQ2F0ZWdvcmllczogW10sCiAgICB9KSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyBvbmxvYWREaWFsb2coKSB7CiAgICAgICAgICAgIGF3YWl0IHRoaXMubG9hZFRhc2tDYXRlZ29yeSgpCiAgICAgICAgICAgIHRoaXMuZGlhbG9nTSA9IHRydWUKICAgICAgICB9LAogICAgICAgIGFzeW5jIHNhdmVUYXNrVHlwZSgpIHsKICAgICAgICAgICAgdGhpcy50YXNrVHlwZS50eXBlcyA9ICd0eXBlJwogICAgICAgICAgICBhd2FpdCB0YXNrSGFuZGxlci5zYXZlVGFza1R5cGUodGhpcy50YXNrVHlwZSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmxvYWRUYXNrVHlwZSgpCiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ00gPSBmYWxzZQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgYXN5bmMgbG9hZFRhc2tUeXBlKCkgewogICAgICAgICAgICBhd2FpdCB0YXNrSGFuZGxlci5nZXRBbGxUYXNrVHlwZSgpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMudGFza1R5cGVzID0gcmVzCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBhc3luYyBsb2FkVGFza0NhdGVnb3J5KCkgewogICAgICAgICAgICBhd2FpdCB0YXNrSGFuZGxlci5nZXRBbGxUYXNrQ2F0ZWdvcnkoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnRhc2tDYXRlZ29yaWVzID0gcmVzCiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKICAgIGFzeW5jIG1vdW50ZWQoKSB7CiAgICAgICAgYXdhaXQgdGhpcy5sb2FkVGFza1R5cGUoKQogICAgfSwKICAgIGNvbXB1dGVkOiB7fSwKfTsK"},{"version":3,"sources":["TaskTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskTypes.vue","sourceRoot":"src/views/accounting/task","sourcesContent":["<template>\n    <v-row>\n          <v-col sm=\"12\" cols=\"12\" class=\"grayBg px-6\">\n            <v-card color=\"white\" class=\"pa-3 no_border\" elevation=\"0\">\n                <v-row>\n                    <v-col sm=\"9\" cols=\"12\" class=\"pt-0\">\n                        <h2 class=\"mb-0 font_20\">{{ $t('task_types') }}</h2>\n                        <p class=\"mb-0\">{{ $t('task_types_desc') }}</p>\n                    </v-col>\n                    <v-col sm=\"3\" cols=\"12\" class=\"\">\n                        <v-btn @click=\"onloadDialog\" color=\"primary\"\n                               class=\"white--text float-right text-capitalize\">\n                            {{ $t('new_type') }}\n                        </v-btn>\n                    </v-col>\n                </v-row>\n\n                <!-- loading -->\n                <LoadingMe\n                    :isLoading=\"compeletLoading\"\n                    :fullPage=\"false\"\n                    :myLoading=\"true\">\n\n                </LoadingMe>\n\n                <v-row>\n                    <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                        <template>\n                            <v-simple-table class=\"attachment_table\">\n                                <template v-slot:default>\n                                    <thead>\n                                    <tr>\n                                        <th>{{ $t('name') }}</th>\n                                        <th>{{ $t('task_categories') }}</th>\n                                        <th>{{ $t('description') }}</th>\n                                        <th>{{ $t('action') }}</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    <tr v-for=\"tt in taskTypes\" v-bind:key=\"tt.id\">\n                                        <td class=\"text-bold\">{{ tt.name }}</td>\n                                        <td>{{ tt.category.name }}</td>\n                                        <td>{{ tt.description }}</td>\n                                        <td class=\"text-center\">\n\n                                        </td>\n                                    </tr>\n                                    </tbody>\n                                </template>\n                            </v-simple-table>\n                        </template>\n                    </v-col>\n                </v-row>\n            </v-card>\n            <v-dialog v-model=\"dialogM\" max-width=\"500px\">\n                <v-card>\n                    <div class=\"modal_header\">\n                        <v-card-title>{{ $t(\"task_types\") }}</v-card-title>\n                        <v-icon @click=\"dialogM = false\">close</v-icon>\n                    </div>\n                    <v-card-text class=\"modal_text_content\" >\n                        <v-row>\n                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                <label class=\"label\">{{ $t(\"name\") }}</label>\n                                <v-text-field v-model=\"taskType.name\" class=\"mt-1\" outlined placeholder=\"\"/>\n                            </v-col>\n                            <v-col sm=\"6\" cols=\"12\" class=\"pb-0\">\n                                <label class=\"label\">{{ $t(\"task_categories\") }}</label>\n                                <v-select :items=\"taskCategories\" return-object item-text=\"name\" item-value=\"id\" v-model=\"taskType.category\" class=\"mt-1\" outlined placeholder=\"\"/>\n                            </v-col>\n                            <v-col sm=\"12\" cols=\"12\" class=\"py-0\">\n                                <label class=\"label\">{{ $t(\"description\") }}</label>\n                                <v-textarea v-model=\"taskType.description\" class=\"mt-1\" no-resize height=\"100px\" outlined rows=\"3\"/>\n                            </v-col>\n                        </v-row>\n                    </v-card-text>\n                    <v-card-actions class=\"modal_footer d-flex justify-space-between\">\n                        <v-btn @click=\"dialogM = false\" outlined color=\"primary\" class=\"black--text capitalize\">{{ $t(\"cancel\") }}</v-btn>\n                        <v-btn @click=\"saveTaskType\" color=\"primary\" class=\"whit--text capitalize\"\n                        >{{ $t(\"save_close\") }}\n                        </v-btn>\n                    </v-card-actions>\n                </v-card>\n            </v-dialog>\n        </v-col>\n    </v-row>\n</template>\n<script>\nimport LoadingMe from '@/components/Loading'\nimport TaskType from \"@/scripts/model/TaskType\";\nconst taskHandler = require(\"@/scripts/taskHandler\")\nexport default {\n    name: \"\",\n    components: {\n        LoadingMe,\n        // 'app-datepicker': DatePickerComponent,\n        // BankConnection,\n    },\n    data: () => ({\n        start_date: \"\",\n        dialogM: \"\",\n        end_date: \"\",\n        dateSorters: ['Today', 'This Week', 'This Month', 'This Year'],\n        journal_entries: [],\n        // LoadingMe\n        compeletLoading: false,\n        isLoaded: false,\n        taskType: new TaskType({}),\n        taskTypes: [],\n        taskCategories: [],\n    }),\n    methods: {\n        async onloadDialog() {\n            await this.loadTaskCategory()\n            this.dialogM = true\n        },\n        async saveTaskType() {\n            this.taskType.types = 'type'\n            await taskHandler.saveTaskType(this.taskType).then(() => {\n                this.loadTaskType()\n                this.dialogM = false\n            })\n        },\n        async loadTaskType() {\n            await taskHandler.getAllTaskType().then(res => {\n                this.taskTypes = res\n            })\n        },\n        async loadTaskCategory() {\n            await taskHandler.getAllTaskCategory().then(res => {\n                this.taskCategories = res\n            })\n        }\n    },\n    async mounted() {\n        await this.loadTaskType()\n    },\n    computed: {},\n};\n</script>\n<style scoped>\n</style>\n"]}]}